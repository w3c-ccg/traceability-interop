{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f32e0ce4-c7e9-4b7d-9f13-618afb09e8ac",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0edbd21e-6e1d-4a23-863d-763e29db6f87",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4ce3c56-1450-43ee-8c53-e5caff179eec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35bd6863-7ee7-4281-8e39-6e3d5b9f6aea"
                }
              }
            ]
          },
          {
            "id": "f819506f-847c-4ba6-ab69-3cd5bc11d651",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3a0da671-296d-47ba-89e8-b016fee68b8d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d1ebc7f-b14e-43cd-9ad0-3a4da53c22fd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "41fd7fef-1ca2-45df-84bc-5f92078f5614",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3d46db39-5e82-46bc-beb1-e279b000034b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20c73526-dae2-4dab-a8fb-bc8ac61b8ca7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28475142-53a9-4e6c-b8e9-1a63916b230e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abe6dcc1-3db0-41a6-97a1-6f2d149b94c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "346ff832-507b-407b-950f-0b6ca944e2f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5bad0e7-a3ef-49f2-8c68-29bf3547cd1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aac2f76e-84d6-43a9-834d-191000892266",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "223a0b7e-9760-4ab3-9f0a-3838e712879f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "087bc83e-6ae1-48f6-a224-7bd85308f2ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9d78d2c4-97ea-4392-8667-c579d27eae22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0ef4f66-665b-4d2d-8c4c-208e62e83d57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00bcbfae-ac73-45ae-a0d1-0ab81c66fe47"
            }
          }
        ]
      },
      {
        "id": "d1f3de6a-e423-46d9-a53f-b3c3c5f687b4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fe8997c2-3e1a-4dba-bd44-7f707fd313d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ffb7b69-db05-4e9a-bcd3-72ff71cf4ab5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bbc28abc-0151-496f-9afc-013f8e5a4e69",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67091ad1-96ed-4271-9040-6615d1ddd836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fa73f21-c767-4f4e-a5f6-9d1d0de50988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa25f60-844a-4e2e-9c98-f6fafb018b31",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ba3e4d-b18b-44ca-9ac4-8e4d305b66ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c7eb0ff-5c2c-4f23-b9a8-205f29e8a272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c43a36-1400-461e-9f57-9df66c2de5d0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd25de8-1dbe-4e7a-a46a-50ae3986e54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7755859-c6e0-49a5-85fa-05aa4310f944"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "482afc72-3163-4aaf-8d56-a23fdb6b4357",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae2060c2-fadb-45bc-aeb8-15598932594a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19c3c26-e703-451b-a550-87297b0b2b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34b0af44-6644-49f8-abc2-3e630dc7f76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda76913-4393-43f0-b17c-6f862bc6d4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29fe858-f66b-4858-85a2-206f50e58ac7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e9ad1f3-8a88-4d09-84c8-036614844ed3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0654d38c-f82d-4dec-86c2-419d2abc8313",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2a96e25-67b0-4262-883d-b5953912015f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "28a58f24-4f62-4d6f-921a-17efc5ed7aac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "656c84a8-5135-474c-8808-d7f765ff81d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "744995ec-ffe6-4d1d-8fa3-26ba578ff298"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97390ef3-ec35-4ca8-89cf-bd1fc66c3b42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e129336-5922-47c9-8304-974737711198"
            }
          }
        ]
      },
      {
        "id": "14266204-0d18-4dbe-8b7c-500e44428a3b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "32e1af12-a677-46b5-9f84-7952e34007bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "545832b0-0358-4f2d-ad82-e990e45574d3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d10c7ce0-69ac-47d7-93cf-f8084ec6f425",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d068a073-cd46-480c-9631-5b8e43e8e2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080c19b9-62aa-45b2-8f31-8c23950212e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b905fcdf-627a-46dd-85cf-05cd74558f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c5f0eeb-d60b-4b2c-b267-634f03542dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e5d2d0-f5e6-41dc-b1a7-76198d429b62",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec33819-fd41-4555-abaa-8d6b55e67304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbd31ee-204e-4cb1-944f-4e1a90fc9b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095de3f9-0c8b-49f4-b146-641b575fdb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69132a19-aa02-461d-a51a-6136499c27d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad11662-94db-4252-84d9-232e0ffca643",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaf34a0-86fc-4de6-9163-830f65227fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4a5f09-1e13-41aa-ada8-884420dc9177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28523de9-4cab-4929-9788-533b24b10d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0030274-6f01-437f-beae-0c623166c76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2c5a60-1e03-49e1-b8eb-612241b5ccca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d017bf-a814-436b-a846-e2a83532be10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebc6f60-5648-444c-a4e6-075d97bb0397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff184ff0-52bb-42a5-aebc-eddac3d43acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5113da8-bde5-44ac-bbf7-acaa7448b2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac561f2e-fd1d-4b8b-b631-4dd17d82c6dd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2aac80-0aef-4f6d-91a5-eddf1c92e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0555fa-9e81-43c8-b4df-fbf511e95ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9ef5e2-79a1-4b9f-b002-bf5c5db1eb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ef6043-30fd-4cd7-9565-35cbed834a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbbf3d7-6265-416f-8441-9a7550a328f3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8b1757-198e-4463-8e11-3de47feac238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e03028-b592-4d0f-bb75-f648ae67e6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a36b37-b2db-48e4-ab0d-8c27461a9844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae68e87-4d65-4b8f-8a38-e0f486799342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d91d18-e4fb-41ae-b8cf-a5976b665c1b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbc3e81-ca06-462b-8fed-1303016d979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10762eaa-65a2-4e2f-afdc-9bd5d51aaaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1636e137-fccc-4c9f-b3e3-a3a79c626007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "450ea703-1ce8-4dd3-b5ba-5c482ba07af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d248dd08-06d4-4ed1-8900-3098e0c3c698",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329eace8-8911-4308-8898-85e45f655b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b548948-2b23-4df8-ab71-80cc5ab7590f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2833441-dc5a-4383-ace8-07decec87a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34e3cbbb-fd14-438c-8401-bc140f2bde81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b04a3-9a2a-47ad-a844-b7b7dd72f886",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435bc7f4-93fa-4cac-b66d-1243c31737a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e4313f-e31f-4d4b-8bae-60d5df296dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585381cb-5909-4ffe-9b59-83074de0356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "347062c7-fb19-443d-9004-bc9dfd0024e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f781d-206f-481d-b14e-05917513e204",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b8d515-15d1-45a3-a46d-b4547a8937e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6bc0c5-6a91-43bd-9237-a28906ce612f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af799e-a273-4ea0-a071-6e505343fbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67019adf-4318-4c8a-8d54-c511ab9fe0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d3c785-f09e-4a55-a833-b4ba8ed509bc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e630cdb-9a25-499c-9fb2-a717c7a90660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9c256a-36ed-4bb2-b6a3-ee7910490f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d27730f-f36b-45e9-a7b6-acb371cbeb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51129c44-131e-4a61-befa-b88ae7b92661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff6b909-b23a-4466-acf2-179cb0e95419",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3475262f-0b4e-447f-9e46-15ad62afb86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2717393-7823-4e15-9bbb-cde6f9387821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6298eb7-123d-450f-8cd9-510289c11557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe356c92-05f9-4ac8-9443-53cd4feaf74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6845c234-929e-4959-bea2-11aa52995c82",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d000c9cc-c36d-4e5c-8fec-357cbf75af6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96077978-1945-4584-bb8e-394372865475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8c476e-10ec-4c18-9296-5e5dbb9c1951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a303f4-6d90-4692-83e6-102e77482275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f36e60e-8eac-4e48-96d5-d5604dc25a88",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390f4b1a-2077-485d-8851-4ef1fa8ec72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d118fbcb-47ce-496c-b25e-ef558bdf8491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5da6758-0ed6-4bbd-ab83-0e0ba29ee234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86cd72a5-adf4-47dd-903a-7c901b19bff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d35d97c-8820-4594-ac17-b7f373388ead",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd66f38-a8aa-46c6-8e6f-828e75d366a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cbf6df-9dbb-4bcf-bf90-23d0c19e2e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063dc604-f62e-463e-8235-751073c334c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c329fd-522e-474a-a736-eed7b1a148d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68248de-6585-4d27-ba06-2f11a0a1c650",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a29914-3d8f-481d-b374-7bd138c610cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a76e0b2-8be0-49c2-bc05-efef71a3fad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4955a5-c393-4e6f-b0dc-728aa24ce727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92e16761-5e51-4b0f-9204-11fb36f47042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a36066d-58d4-4eef-8b98-5d91cdb47edf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b9e8b0-bcda-4455-86a5-55d7d8420b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a4dc6e-dc80-45fb-a9ed-e181fc3461c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f725d0-f742-49ec-a5b6-ba64840a8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc69428e-54df-455f-97fb-7e01d79c8e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cd4e1e-d2c6-4d7f-8339-b3c3a0232a32",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4e445b-d46e-493a-8c36-86dcd1f3a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b19790a-d2b1-4638-a147-d036710ecaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49e15a3-d631-4be0-a944-f11ab6b2c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea422be-d721-4118-86d5-0191a67ba1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6905a84e-ffae-424f-a90f-d5a1f3d64bd8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416bcef0-380b-4a8b-93f4-fe894e724594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6692f5-4e78-4297-a082-fd0fa67e6d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a53c746-0aa2-4ad0-b440-1f8eddebfbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f311a6-3d6d-4aa6-ac0b-4345f4ebda8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88560c8a-bd6b-4b3a-be01-cbe4415b3de8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20f47b-b089-4eb4-9b81-6eccfaa84dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b72782-1777-4271-9c59-a89a06f5974e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0167d00e-d67d-4503-9b5f-e01e0765a871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10dc388c-960a-4c70-b0d5-ac57e6cd7d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7195219-cdae-4fb7-a9a0-17cff0d0a71c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b119144-7a99-4e67-9213-5b4621339cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0da02b-a9ae-46be-9e76-d96f1bb206d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ba2135-8098-4070-9122-36e1fe86f2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbbca57-0b9e-40d2-a5c0-5ffad72cc338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837643e5-3730-46fe-88c4-48e8b7f1b2e8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eca6bf8-4f99-4e05-bca5-129c3bbf650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04913132-edd4-4bdf-b245-ddf4ad71560f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f11ba31-b7c3-4e80-b6ad-daf323ff4b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edaebc8d-e3a9-42b4-b384-666b706e42bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536be7b8-929a-44b7-83f9-facd0e16a128",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302ebfa-cf97-4c0c-a239-bfa1ffeb1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa6e6fc-67d3-44fa-b1dd-637cb9ecdcde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bf16c-318b-405c-a700-d9016def139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd155c2-fadb-4b15-b98b-14c01ab82f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d98b19-deff-4d54-b570-4f7bf78b6754",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9960ec3f-81f5-4d09-9432-4a43a2c96ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fbc601-5700-485f-a07a-3bf951d91d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd797016-1300-49f3-877d-7a6aa401e12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7493ab70-ca80-478c-92a6-dcbf7ca8160f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9edde1-5322-4633-a713-d1607c8565f8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c1b334-d3fe-4fd6-a51c-7defeada8e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a4e0ce-6e2d-4297-8a03-7a7c61367c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ac16a9-f5ee-43e6-ab4f-96ebd0f6cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bfeb53-8af6-4983-945e-dd3b56a15e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796f53c4-47fb-438f-ab85-3b71eee54d7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52531521-90b1-4b54-95e5-461705f8538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f10c76-bf27-44ce-ba81-69ba65befd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6279f522-0d05-4a89-a634-e5180ac611c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fedf75d-0c23-4cad-8014-74e58f2d6e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6870a9e5-69ec-4b4a-a944-c7b6e9f3797f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267b5775-e6d6-4596-add3-fb1f5cc85ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49458310-65c4-46c2-ad9a-23ef0d90ffaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b83cdc-b302-4aaf-bb2b-8a0deac188bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03bd363-2ce9-4d1d-a9c0-12f5460a5891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26879778-3dc4-4399-ab4a-e3f3aac3c0dc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f0d538-56c8-4803-a28b-4e0829622e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e880b1-9e68-4b44-9642-633ed4006d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88625ef1-e51c-412a-9bcd-2dfd8ff16142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa11e78c-bb1f-4baf-9701-3571e4f5d03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545e2136-2b87-4ca3-8e5c-cdc73710c5dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8d739f-83c1-4d33-b413-e96e006becef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae344f1-d0b9-4a9d-bd57-a20d86eb5cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0259a9-197f-42be-9d51-35fd26eb1bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d995916a-433d-486a-9665-3e7e99780d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d911d8bc-0ff9-496d-84fc-08fff3034d04",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2a35fb-e8bc-493a-b16e-3184cd8f0977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20c439a-6cbb-4fe1-9a69-833fd2b0fe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56375de-2ba1-46c7-b7f0-bf00102adacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "359a7bac-cb8e-4ffa-9d59-f43e56653028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd28b8b8-84d6-4cc4-8d78-a4cc21f809e9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48423a91-0915-4aaf-9b7c-b8e82aac6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cddf1d-6a05-414d-947b-623f17e79cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd5147-d77c-4f60-925b-143cd5ff7135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f36059-c946-4e63-bfa8-5c9005391ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b8732c-976e-45be-8352-6e473cec3a0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af21bf98-3f2b-4bf9-9cf3-978930c268c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f835055f-8cc1-4db7-bd1a-36c533d032ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73896983-a65d-42d9-b01a-45b1fae5478f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "240d2b27-7fd5-4b12-a5da-fdb34f4497af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed9c812-a061-4c5d-82cd-52053d23085f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760e30a5-d059-4188-bb26-deb10c5722cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335c53e4-4571-457a-86a0-adde2a858f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedf9a91-be9b-4938-aea2-f1002661c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf781033-7f12-45e8-8fa4-bb874eb82c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb96ec-e88b-4ad8-8990-e80a76921873",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d8d6f0-d97f-4cd4-8e76-b2cbb3707cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9aafcf-25d9-4acf-ae6a-6e4903031018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b257912d-5911-4a79-8f75-0819d92de8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76494d9e-3f28-4214-bb2a-d48c15349121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac75cb52-bbbf-458a-ba8d-5bc4e58eb736",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ea7be-60ab-4e9c-ba79-e8ac6709fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2805d0fb-57af-4d8d-80ea-88c49076f2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e951de18-0de4-45cc-a1f9-7899d19d7b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2800d150-a388-455a-b71d-a66647cbd53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76928219-2f5d-4b4c-80d9-f03c50668ce0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e121a8e6-894b-475a-9324-1452bc0d908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f78bf3d8-cd82-48af-ab3d-b76bb32f3e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dddf59a-b54c-4ac9-8969-3f83f8ffa6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfea4b25-15bb-46f7-ace9-efbe356283c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f37c68-a89c-49d2-8a67-8eb8c9363a77",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607046c4-ca2a-4ae5-83e7-41983ff59fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c413c943-ddb5-42ef-8182-466ad49613f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067aca35-98aa-4304-81cb-aa445e370136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f58aad1-809f-49cc-a86c-e3a8a5a52a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7988f98-2c9c-4670-9792-35e0c96391b8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934e561-a882-4d0f-8e90-c047b2f08ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e24ea46-2282-4e4c-97d3-77bfac7a0248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d5ca5a-f47b-4161-a956-6764cf520610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4571b458-2f19-40eb-aff9-ef248682b559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1cd246-b498-411e-86fb-f36681689f29",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a1a0c2-4c5f-484f-9eeb-a630fe1f1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3029e8f9-4847-4801-82a8-a52b0179f4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fbf8f7-d1b2-422f-a9b8-558046ec1b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a3a42-2934-4f65-a760-1e56cc0be593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ef1ac7-de92-4045-8935-f1d9f09c1d38",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eacd69e-e01b-42b7-b462-8ce4baaee95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feae80af-1c1d-4f5c-98ee-db618391a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e9eee5-3b1b-4d3c-b7c7-2e65a8a5d847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ef97a-2379-4c28-b8a7-94cd877d2811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5728ae9f-e75d-4a18-b350-d589f2754c59",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ae6778-1806-49a8-9e3c-002bf084c19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83a1d55-91e2-4de9-8465-f06ecf18e2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a7318c-7c0b-4bb9-b77f-024d0fc6379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f54f2cd8-102c-4235-afd6-aba2f5f1aa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b352962-25d6-4546-978c-c63688d61ca8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1a5d11-9dca-421f-a5b8-8d307163d270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64a25da-1e84-45cb-a519-2daefde46d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a965f0-5ee1-4b59-9fe2-8bd01ca4c7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a9307abc-a219-4702-a96d-e0610b2c7fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7930fc32-8219-4500-8370-6fa0cb4e038e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23c3cb-3e0e-4545-aa40-91c52f613470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d0aab6-d28e-445f-9829-170a8308e111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a521a769-e0f7-444c-b09d-bc5c923a6692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "810e92c8-2c45-4ca3-9999-933471359c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d6742e-3b60-45f4-9f89-7bc7c9aa280b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcb791c-b3ab-4065-9895-f75ae460061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde50648-9f5c-465c-82a8-0b2eadca12fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23abe7d4-3bfa-4ba0-ac04-e3498162addc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "086d1b59-e7ff-4e6c-9164-01244fdcaff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e8d4f-1d19-4f56-b0c5-4409fe3f4166",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bf66c1-675d-4b19-83fa-e5fa8cb482cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c803d9f-27e7-42b7-ac5b-f79a166f2bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa9d7d2-83f6-4da6-bc0c-fe71f0be4646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6a776a-c50b-4e88-a0dc-8598c350f0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dc8d3c-2fed-488d-a875-3f1c68df1a0d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5d4a3d-4239-48d3-a5cf-8dbb35f6822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898dce7c-a98f-48c9-a2ce-a4f21f3c238e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038106f1-9946-40c2-bfc0-3aeedbc94d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a1f918-dc7c-461f-bd49-ac482fb209c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe9d740-c43b-4e2c-96bd-ea5b01bf4760",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d614ef-f1d3-4527-b7fe-003a45d4020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2994c17-050b-4774-b698-5710953e1015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf51616d-e647-46cc-a054-249e2ec5c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04785e38-88c3-48f9-ad3e-2d9dd5426f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b0dfca-0c46-4f39-855a-bfbd7e599ac3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea163f4b-a88f-4c20-ab8a-e6a3409cfdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7744958-d1e3-42b9-a2d7-924019b67243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4385fc5a-76e8-4884-8113-af53ebccaf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de78e05-689a-47bc-b032-b949d3101cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f958f3d9-1107-434e-9b2c-e5bada3d4cc4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb785c43-bc64-42f2-83f7-779a639355f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428deb67-30c0-4c74-a917-9999a2fb8042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f039663a-adf6-4237-a46f-ac7e6131436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db60d21-7c7c-464d-a945-57f729a06d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ff7368-dd49-45da-ab88-3961c68454c7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b2c422-c6fc-4976-b2f5-76a93f2bba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3619c5c3-2e47-4a43-8ec3-b3269629470c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a062ee5-95c9-47a9-85c3-c7b15a7100f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73628c50-2572-4941-8d63-9ec0171c533b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69cf269-fc61-4309-851c-37da2b8a6952",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7459d6a-5ed2-4e2b-973f-16b81b839e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bddd08-eee8-4483-8734-da97c64eec3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c8383c-4601-4bf2-adf8-7593b2b9bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d211ece-285a-4248-a3c1-e6deb84deea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edb2fc9-d232-4507-aada-d318a6692288",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6d531e-d1c1-4121-b5b8-18020a90c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afec576-e1ea-4663-ab5a-f994108e65c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09702974-2085-4339-a3e7-c0ee65729ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e72b52f-4222-4e87-8f9b-b7dcce055aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b05b3b0-96b4-4b2b-8ead-b6e8d0c7c539",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ceee92-22b4-41ee-b9c6-2c0b597297b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2dc85e-cd58-46a2-973a-12e992cfe1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22173a08-8ba9-4389-af6a-b971640031c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7169a7ea-c416-4a1d-bb74-df499b587431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c258a6-55fd-42f9-95bd-5a4fb79cbc80",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb16f5d-42b2-4ff3-9890-f44186c5c6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa20f84-ad4e-4b56-8459-fb1962744d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a7dd78-0270-44e1-8537-67e298d8bca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0157fbe-fc20-426a-b8ca-9054d1a24426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef9edbc-22be-4f36-809b-371415ba86f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56a347e-9efc-4ef9-97c4-a79bab08e157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9b1db2-2115-430a-af85-f1928780d55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c467d5-bcac-447e-a5ee-9ed599f22bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc14ff57-9cbf-4256-84f0-512d67754e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb83238-1ed5-4fcb-aae3-0c542626a0ac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45bed63-7713-45f4-968e-12dec9b24a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079428be-5102-4c5d-a571-70991ee39b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dd9d8f-4d3b-4e4b-850a-c74e6a450442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f5117da4-2477-49dc-82ce-8401208f4664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2ddbbe-8265-42a1-9969-d43e9dc5bc35",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad84ebd-f4c8-4218-8149-366669551011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677f90dc-c1ac-464f-b0ec-4d534aa9ff78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9295807-6199-4ce6-afca-71e64acb38ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4875bde1-32b5-49c0-b825-f610c264de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6366c13f-a31c-4bad-8666-97ece753ee94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d6583-eeb2-4f58-825d-ae0a29b368dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2d808b-14fc-41b4-8a6d-4ec9375c78fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a745bf-e3ed-4b88-a542-db58088e4816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "937bedc9-f230-4dae-9bc2-595b4a0ce792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81170d06-b1d1-49bb-b796-618fabc26bce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dbd26a-b530-4c9d-a89e-67fdc05822de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f885019d-4a65-4113-80a0-9cf838c2d8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeac7a6-5b2b-4b7b-be26-77369a487d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bff1d943-f5a5-41e4-bd22-d6e82446b1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebffa359-d763-4895-b285-9c6e5ac16797",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3517615-ee58-4a74-aeb0-d2cd4c6b4704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af8018a-a637-45ec-9eff-24257145fec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef8b74b-863f-4bbb-950b-e1717a7241c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad824172-0976-427c-a8bc-3c66ee4c5233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50033dda-bce4-4de0-a6c2-e30b11bf4408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b320b2-431d-40f9-b084-50a01d73c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c215b1d1-29e8-4f5a-873d-70cb2d5707e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae5daf-05e6-4453-90f6-37882601d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1807e8d2-1582-4a25-b511-da99e07abdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df51b31-5a42-4690-8863-8a350b7af776",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a4da3d-c3c1-4da4-b9e7-5b4fa059e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa88b3c-76c0-4ca9-bd55-e01a0add1dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0402d1e6-2ea5-4dc0-ba2f-f81fa971ca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e529b431-d8c9-47bf-951f-f3bf57f197f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a3d7d8-e85e-4561-a979-0e7019bcfd6e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f8f990-cd3d-46d2-94a7-e9ea4c475b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b93ba68-efd2-42dd-9c6d-daa205fb9c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e15008-30fe-4cb9-bc30-af6060ab4f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6535973d-45a6-4ebc-84af-3e1d5b987575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50de8b66-adee-4947-87a3-8706e7fe6bad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b436b06c-5614-4dd1-a89d-d906d4aa6eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e56b15d-99f4-4989-816a-268647e9fce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10ad32-46fb-4f57-aca4-219016952609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bffa4a5a-3fa5-4ccb-87b5-c7850da4f5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f00d90-eba6-439d-824b-9dbdd915cdb7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec13f21c-369a-46e7-8ded-8e7f34e38f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610506c8-91c8-4ce4-b4f0-86974be8df42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a416c1-4330-4eac-bd4b-fa89b42ed851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83af1002-b56a-4f4d-9fed-a7ce728e27be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10403d05-1733-48b9-9201-8a11a3f18a33",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ed4b31-ae85-48ad-a864-42d310bbee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3f587f-bb23-449a-a288-a29361f5f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9d04b1-b80f-40fb-8616-3116ab90f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a39722f4-f197-4f27-bc89-bfea6036c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba14dbf-d596-480f-8ce0-6027c4fac9d6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f933988e-e7ac-4978-897a-4b68ac1377de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338c0bc2-05fd-4827-9079-066abfa6d23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c6dfb8-3118-40c3-af24-5a72b37b821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a46d21cd-43e9-4d3f-9782-da8c57b82a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb13a248-7513-4d70-885c-bfb8ccd07fe9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea326d93-006f-4a7a-8254-387bde3716d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181f6e63-57c5-4c45-a013-b2eee141a31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f27c44-e69f-4a0e-8fa3-7188000f5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e8cd3f-ec57-4540-b482-2290da3451a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f82e2f-7ee2-4004-8bf9-a9e25f41f4c8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37700216-8c2c-4afe-ac51-94f7edc8a2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648c291c-e58e-4ada-8067-53713ef46780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837fdbbc-812b-49fe-882a-a81019e13b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4d1ac9-ba71-4d1d-b140-ea0ce3e4da1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa3cae-c225-48d3-9957-13343b542108",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c37f7-a48d-4e6c-b1c6-ebdb84a7c1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e94e19-edae-4ae9-9e87-8b4cf1a11a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65285455-543a-4146-8894-c5eac2c69e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e73d12a3-de90-48d7-8ad1-f1e03d911145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d9d3d-6c69-433a-95ad-dbf5daea778e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c1618c-fa43-442c-9f32-42e1b9c4716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478704ba-d11c-4b10-924c-d585a982eec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1107bb3-936a-4a94-bb77-a87a283690bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19692a8a-cddf-43f7-9769-def8ab2ec8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7f0f12-3a8f-48d1-b38c-e776aefd0270",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df46228-a7e4-45a3-9d8c-d4da90fb871b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b02f08-6374-482b-b914-1868c133edb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a916c8-95ef-418d-b3b1-df3918aedb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10f6afde-2cdf-458c-a408-fd8583362b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edab4d02-3948-4762-83d4-95fbe08afb28",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbb3b58-786d-4b0e-927c-9452430e19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac1fa02-cc2f-424f-b6b6-70e6f2e5e6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d793baf3-f4a7-4018-84a3-3ff950936e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "496749da-1f02-4077-a534-c04957582e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39327894-568c-4193-be96-51a0508c80eb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acb5185-3e9d-4047-b1f2-8a63c877579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423cf1d3-32bf-45ef-9339-fb9c76e32251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e869c5a-0b00-4869-a7c1-93a79dd2a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f5a9ee-d4c4-40c9-96d5-0ce9a3ecf76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d9e694-4ff3-4fa2-b946-e2e4020aae43",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4816a-7715-446b-b7cd-4575c2431e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06789f7-50de-4a42-ba44-666af3339d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26007ca6-9304-4120-8fad-bad91be4f347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5c3058-d950-4ff7-86fb-2c1038075f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310c95fd-c13d-45dc-ac27-8b014f78404a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48d56be-c192-4f3c-9f29-ce9d3e54a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175ed6a2-7d5a-48bc-8d41-8c944adf8570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61faf95-a4bc-40b4-8375-da9eeca3d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "939a741f-d861-4f0d-aac9-eddb338688f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91178ab2-daa4-4221-b66a-e0a830c42c63",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861b2bac-86bd-4e82-8c56-52e9681dc880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d456d24c-fa50-435b-a789-f1935177edf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8464ca5-4bc1-474a-acb8-d3e25dce2945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a4c655-e545-4fbc-b05a-4525a9c222c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0b2d9d-5f27-4252-a172-1337813e1f44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea5c1c7-dd4a-4979-a3f2-1327d402a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98603228-26ab-4d98-a067-11b3baf55179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca158ded-c448-46af-90f9-ea3a40defc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81110b7e-91a5-42fa-895f-805eddc2ea3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769d0797-8798-467a-84eb-4116417e33c3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97badc8-5429-4daa-a1b0-e489fdc99fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0dcf09-fcd3-4a8a-8fa8-d84c0636533f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdb5daf-1fd8-454c-b799-096925ef3a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf312f4-7cbd-4ac8-a2c4-235955223b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0800ef3f-746c-469a-9746-993443791728",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f104fac-2a69-4451-b3dc-8ae1184cacf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c00939-2b20-4bd2-93e6-bd3d46c6470e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92291393-f8da-4abe-a43a-2bb5eac4081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83569fd4-92e4-49f7-a986-2c05a43c8613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d7e946-18a4-44d8-829a-dd69badc8fe4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2d7b39-b5d8-4847-bccd-437cb95ca1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6adf9e8-c412-4ea4-a043-5345867324f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71a10a8-41c2-4493-9bbb-f3a3e805557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2dc6b5-19b2-400d-b6d5-f8db0f3be6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92a807-67d9-4eb7-bb74-1bf4f84c7568",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f2165a-9298-43b8-9e67-ea42855e5707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34a48f3-31ae-4429-96b1-ea6fc09497d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2bf976e-3e6c-4fa3-a8ef-d81d7e517aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ae5119-236e-417a-8d8f-c688fa80090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95390cfa-95f3-4647-b3fc-85cc2a291621",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464ac30f-69c7-4e4e-8eec-a7b076b57aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dde568-4ffa-4e76-a477-efbd6423610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8abd2e-1a0c-434f-afad-6ee4343c0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e5fbd3-e21a-44d0-81e5-7516ec831d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ae37ba-1e64-4fde-ac16-29baafb031cb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837856a0-8d50-4fc7-88a4-1d29e8934968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5cf4a6-7045-4cb8-a365-8add233d33c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d5ef93-445b-43e3-9a83-d74701ecc15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "932a0648-00cf-4cca-bc8b-0b75ce56b50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d6498e-b97a-4a2d-a89f-e7b7b83625ef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa5b6d-9f7c-4f65-ad03-85b79a90d7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c5176a-e8a3-4f11-af94-a14a1a6ee66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee08d26-71be-418c-b3af-989b04d27962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7498d-098f-45ca-a381-c80f752bfd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a7b7f-5ae1-4914-8796-6a4499bf5d6c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3375eb9-38fd-4027-984c-dbef3103ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d312975-4f92-4780-8823-83c26a4aaad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdf809c-0121-40a4-b31a-292cc0de22f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5e5ade-e908-4951-a483-500a2393cdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e04b34-c7ca-4714-bf0f-c431d1cff245",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5335ab5-7637-41ce-b9ec-eb44667fa7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a4c9c8-e97d-46a4-bc04-56664f75f6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2383be-9d78-4d7e-90ea-4f48515b9ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0ab3b5-ecc8-4666-97d8-c5055e1ac74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6280f923-cfe8-4e63-91db-6af3368c5505",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699e3446-b515-4274-a989-a8fc20bb6365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667c19d8-cbeb-45b3-9eeb-aa4f3dc398bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0ba115-812e-4fb6-9aca-1f415f2c7b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a131b0-6fa4-4107-868d-7ecae842f0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383b55a7-f0ac-4d57-88bc-1ca4a430ee05",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d65c10-ed1c-4f38-b2b4-c3aa8324db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f26cb0a-50ee-424d-beef-0dd8fd4d97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9dacd-61b2-46f5-b19c-5201228127c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d71e909b-0521-4b8c-8bbe-478ace1d0c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c21b41e-ed15-4181-81b6-ede58f538e8d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d399e12-9b91-4e64-ad17-f5c63c93fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa62f03-24bd-45d9-869c-af87513e282e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04679af0-b133-456b-86ac-75c3c70cb05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "349735a9-a176-438f-8b91-25c02e9e5baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9570b2-3494-4327-9df3-ab96fedcbcd7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61898dc5-c2ad-4d55-9949-9412932315d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5b74a5-5fcf-4dc7-a073-e8a3a683c116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3521b8-ca26-4d92-836e-e358913a0881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c781bdf1-993c-4720-930c-35e02beb8a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0125ea4d-0d13-45ce-a655-5d3e9f8e2e7c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ae9e26-b371-4247-9c8c-5d391835924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ada7ed56-b920-41bb-aa0f-752cb368475f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443302f1-01fc-4602-bac8-5a1947d08314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4c6acb-20c4-4086-b6a7-2ab3ef5ef322"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bff0a40-5212-4aa3-a8c2-88f6d3236826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1454b04f-77fc-4ebe-b8da-794490c9dd0d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc01ef6-413d-472c-a67b-4d6e4f5b1339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88b5bd4c-c113-4d84-9bf2-dba10f1787ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8a1999-ede5-4e31-afe9-4a4b504c927d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fba1868-29e3-425e-9d5e-c9f69ff776da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df59e55-118f-4882-b64d-e43c381761c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89c5e588-e7fc-4d7b-ba76-62264a1dadf5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a1f1249-eda7-43d4-a25c-21908713b56d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56db3aa2-a034-4c63-ba63-81ebfae4d68e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4dbc5480-0890-416b-a788-2f1ce5b96136",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "942ff8e3-084d-4194-9fb3-69290c85adf3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c86a842-70c8-438a-be85-de9be3a76231",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4b2b557-3763-4a59-9574-1dc304108f86"
                }
              }
            ]
          },
          {
            "id": "790f5903-1f7c-4539-abec-dde9ee7addd2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "665e75a5-f238-461e-831b-f3af2a07fb62",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "67da92ff-6593-4c9b-9648-c9bcd1cff7e2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895c39ad-6c91-48ad-86e0-2efea60734f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34ae8dad-4faa-4aab-8892-2f31c83a27e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76043924-c5f3-4419-b906-5df53862a2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e57f561-97ac-482a-b5f0-75805c3b70f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "297fef20-a272-486f-aa30-6fa87f7881d0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97a2682-2e99-491d-90e6-ba33d5eda7a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdfec9dc-5630-4fb9-9b00-621dcc0a58ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1815821c-8291-45a3-98c3-a68c016bd774",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2375dce2-c725-409c-acf6-83f4c66bbdab"
                    }
                  }
                ]
              },
              {
                "id": "647c83e3-159b-4523-be72-5b5ca3c6e911",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "424cf8e7-2310-47c2-92fc-58edd9f1c7f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d1bcf59-90f6-43e6-ac70-fa035bf9cb03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6571bd7b-20f7-4131-99c1-c825425d42b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6d56529-3cc8-467b-bbb3-63a34915aadd"
                    }
                  }
                ]
              },
              {
                "id": "e771f94a-2f11-497e-8d0a-ff6e648248f7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de44dcdb-39e6-4e1e-98de-8d1070d6e3e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0376a81d-046f-4bbc-9363-e100ed58ee3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b19a2ee-dc1d-4932-8f17-39bb234e8409",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5213347e-a5d7-4994-97be-25de10142817"
                    }
                  }
                ]
              },
              {
                "id": "38e8f04f-d781-46a0-a7bd-21cde69fa709",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98218b10-69b3-4cf4-932c-577cf3f37c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39fa5c05-fe42-4b0a-8dbd-85a30eb1fa26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "863b42a2-928a-46ac-afcc-26b22afe9bb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e1c374b1-b51e-44f1-9a0c-a4c88645b051"
                    }
                  }
                ]
              },
              {
                "id": "74c9125f-9418-4003-b202-ed1aed5c5403",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b6c2b4-a49f-4950-8142-078bf3100104",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5977208d-24c3-491c-9623-4907440122c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9317a23a-3e26-446e-95f9-2801bba11007",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "51cfdbe7-adb7-4c4b-b730-965681f35d85"
                    }
                  }
                ]
              },
              {
                "id": "0313ad6d-3665-4ad7-bab7-866399cb7c26",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be0c6ca-9f8f-4354-8c31-71f544ce89f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df1870ce-88fc-42e7-abb0-6576f0fa9415"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fbf7e9a-60b2-471c-b933-d0ec749746f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c2efd119-1669-4b41-90c9-61ce55973204"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2d2ca9a-20c0-44a5-b0dd-ac4ce64cb90a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e46d238d-d54c-4e89-b426-7f5c4fe500c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08655f75-fb8a-4b87-90e8-d0c49f0d6464",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cef873a-3518-4a2b-a6cd-d2a05f807a7c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced2540f-e0c8-401e-b7e7-eef7e2f693ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80b1d5e3-0031-499f-9732-63ac1babe899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "854e8e7f-01b9-4a84-a88b-88eae306619c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3ec095d-84b5-49fa-8efe-25df02d189ac"
            }
          }
        ]
      },
      {
        "id": "ee1c3000-7a95-4075-8525-afd85266fcf9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "98e14e0d-1ad9-4be5-9496-51148f154f61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8df9840-8c64-4e4f-b155-0c749ab59f68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c81ae9b-05ec-41c3-8ac2-025275891740",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55b0ff-8980-4d0f-8a9c-475164a8dfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963ef632-d45f-4630-9999-7c8c6090a318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5b9701-914e-42f7-90e1-97da76e9e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "74bd084d-98d7-4822-8448-f123f2af489d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceacd2c-5687-477e-b19d-eccc5463b0c8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16514705-f688-413d-a2ed-7af2d44313ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdca9d11-dacb-4a93-b3f6-bda56f474198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbb9a0e-8a3f-40ae-ab7b-c447b085e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb950672-8a9b-43cf-9c52-63367a87ddb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3ce48c-bcaf-4d9f-a354-ceed9125813a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fb7676-9690-4cba-9528-1abdf680ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d68fa0-93f3-4f0b-bb84-9e19657ae6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8285627d-1157-4959-8112-ce9aa14ec714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3f06f6-92f0-48d6-8227-e7b9a1bbbfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271ef01-c84c-43fa-8e0d-9b9ecdd529df",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2deb1c-9e47-44fc-ac6d-518df46a19fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36723e65-a2e7-4578-8812-7678c8740ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e278ab2f-8bc2-4dfa-a54d-b11251d2689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "866db3b0-8459-4b3e-9f29-4b5430014f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3f1fa-12e8-4535-81d5-d1f92f9e0428",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ebd632-6627-4fc1-9bb9-6d2c9591d589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6356f3d3-d726-489b-ba90-8bc58e7211fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dcf5fe-7b8e-48ee-9bab-be512847885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb86d391-f7ca-45b7-a8aa-d5d160fd6439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51917598-9ecd-4f04-8d68-3d32371fa6cd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4c8712-edbf-4f00-8c4c-1bd6e31ba48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435853e0-073c-44d9-96f0-8ac0f0ed4195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d385a876-06fb-408d-a4eb-dcbd755cb3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8164e9b8-8956-4c57-8481-1f0c64c3e774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96c352e-c002-4e70-895a-222bdeed993b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40764e74-cdfb-4b2b-b113-1340fb8e4ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57943bab-72f1-4b65-80a0-81c72a5bc714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b10d7c-562b-441a-b8f1-a205e53aa2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae2eb14-0131-41e6-a3b4-19d68376cfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3729ff6f-5f1c-4b99-aba2-f0cad1e7f113",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0708af-1fe4-4c8e-9c40-a8e648cff971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f50a97-9d93-4c21-9706-b4d81902ac32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac2f750-ba19-4776-b77c-15f70bbffdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "847afae4-f30f-47f1-b27b-28df3339fe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd170b1-45c2-4979-8da1-bff7c9ccc86e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ff251e-146a-42d3-806f-e116ccb279c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f726bd-971e-4f9f-9f35-81c04f7c75cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724045eb-c081-4844-814e-9ec6e0f09879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a049009-db23-488e-bb94-a43248243749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1490d455-e68e-4f73-bdcf-b1995ea0a86a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b449026-6127-4df1-a8e6-4ed27c18b2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9723fa-34d5-40fc-af01-8a299a8484b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a20510-04f0-43ff-959f-00799d27c33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "874fe5e8-86a9-4ee4-9ecd-cc451cdd5748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa161b3e-9d4b-47b0-af84-43fcb6583d8d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67390d37-6604-4038-8f0b-5eeb403235e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49bb91a-9f6c-4cff-bc0c-43e30c10677f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c7d5b-ac96-4018-a207-a7925c9e94af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ee26f5-4c0a-4594-8be0-10c9560f40b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f7865d-9ba0-4fa8-beee-12ca25bcc808",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd282dd-39b3-4f2a-a851-7159c11dbd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ecd115-816d-4921-b08a-92519754cbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cae844a-c510-4505-8024-3fa1ce2c41b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfbe75f-ded1-4fda-a45c-b8ee0a751517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e31f78-c72b-4c3a-84dd-20413d5756bf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5696502-d342-4485-a77b-0192c7bbe6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2183a032-b9f8-44a9-b2c6-b07d2d7ae9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e40166-68cd-466c-8d5b-2f9bd49c9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39bd20b-1a15-4eca-a658-57ad52cb9beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d290fe-7376-4ea6-860e-76627fb8d10a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ab6eb0-97bf-4fbc-a539-f9024396332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea72e08f-edc8-4d51-a632-da6e08d0a91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f9b376-78ab-4e21-8d70-eb83cb93ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22a1538-087c-4bb0-bbaa-8138021245d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce398401-3ae2-4ba4-abd0-6ca370c34791",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8ee2b0-1ad5-46c1-a4a8-1cf34b8f5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b79d4ce-2902-4312-a572-6690156388e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196f485f-c225-459c-b289-32b4b6476f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c45ca5f-3e9d-4b65-89a7-263f561c8f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d4666b-9ada-40e4-a20a-4774bd23ed31",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc56843-3e64-48bc-a48d-e0913bda813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aa89ff-99b3-428b-bf01-8f29534dd430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb15d71f-6da6-488f-b51d-4c3f468b0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e70e416-6239-4061-b0bd-a816f611009e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0662d993-3710-4903-8d3c-70c522aea3bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca9bd3b-9b60-4054-bce1-4b4178c326e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2d560a-9242-4fe8-8ef9-fd29087d88cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46079c6-aa63-4902-a3e4-c8ed30354b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f4c128-09bd-4826-8f7e-bfaa9dd5d792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca39103-86af-4198-9b9d-a55bdc5e2958",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e92d84-6d25-4842-86d9-93e295bde5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a66b2e-7377-4a1f-817d-94c7605abd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e51ae0-87fd-46a8-91b8-5be9f516b88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b311193a-27d8-420d-8b23-f4df3a5818d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca5418-3dc4-4223-b542-a367702b1988",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4514c-696d-40d0-9f7c-e3b2e3cd2751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beff5d55-7ca7-401c-a48a-7cae6c5a3ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747d38a-63bf-4bc8-bbef-67791fed768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640887c0-1c0c-40c6-8966-e6a4283f72bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eafbdc-69df-4bf7-a2a1-f6695167307a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5d57d-5e70-47c6-96bf-5806487b9a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63694f9-2308-4868-abcc-98b832e49c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cda13a6-07b7-418e-b1e9-8965b159143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b462b01-d55a-439f-95c1-da72199f0dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bda5a59-5fef-46b2-94c8-9cac3b158e7b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd9b34e-caeb-453d-8018-8d033aea6081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512178dc-1ce5-4c69-929c-5cb00e9c73ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204174b6-1ec1-4aa8-9989-69c3df7e837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251267cf-1a77-4c61-a6fc-66e3fc9f2798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aadc554-5e91-49ac-8181-e248982dead7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77985dba-0978-4d23-ba5b-6f5a008080ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda65b66-64e4-4090-82b6-cb3d5d7e254a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36a795d-b18e-4321-a962-14e73b83ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "422439a2-24b4-4ef8-ac48-aa84be0075b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08063455-0071-441f-9ac1-1b1df1241a50",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8ee432-00df-4114-9d9e-64364b073b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49a38af-7c31-4509-b76c-8b9468b5feba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf46bae0-5129-41eb-8bf4-ea8e2fd88e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab84208-c92e-453c-b70d-b97df2abd55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12664a84-8ff9-4434-8d3e-a599bb387dcc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8451077f-dba8-4cca-8911-d0228ade1afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c715d84-2605-4503-a5a2-6bb220c972c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad2f4a0-ce81-4748-b888-28491805dae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc98e95-0b6e-4586-b68b-61d4a0f549a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e96d9c-e8fa-47be-a2da-137e01f1d77d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88c2356-7665-437a-ad1a-ea3346e3020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5764de9-c42e-4233-9b73-522f0e980c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a388433-b36c-4e8a-81b0-c83b1db524d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea95dd63-ee44-4a4c-87b9-f7a2cd9e1c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e959037-6db3-4a8c-9670-bbb7c6a0f5c1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498bc309-e58d-4f8b-90aa-b447b3740c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05eeff4-fe72-4e89-9a73-1e8059a17aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fba2ed-42b9-476e-a962-68130d4aa57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d10494-0f60-4c85-a5e5-92e0d04acec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2eeb4b-2fa2-465a-b9ba-58c19cee6fc1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b8d5dd-b4cf-445a-8659-c96e0c57e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647a7317-54f7-46a0-bc4c-0b74e2ca2b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c489a-3596-4492-a52e-a668cd7df6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7728c4-4d7b-4373-a2a2-764cdba087bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddc40a5-60b3-41bd-9f68-ea24799ddec3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da71d498-2d94-434d-98d3-a2f009f743a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498901c2-d204-416a-b1b5-87a051ae0ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdeb554-d956-44a0-80fd-5bea26afb27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db08ed7-96ac-42e5-93f3-966670801075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abaf142-2f03-4e41-aefa-45957e738246",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a9809-45c2-44db-b0f7-be4a3b62d205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5bd621-c48c-4054-b53a-809335d68a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6350d8-f43d-4b1d-9697-602efa882e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e55d96-4d94-4232-a45d-49944e0c472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e000b2d-b24c-402c-aafa-da6a9d3c4d81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78707178-861d-410a-a6b6-4dfe2b2dbc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade78556-f32e-426f-a0af-7b9cdece9aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeeb8ce-d73c-48c7-b2e0-74bc2e56529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0208f51f-9efc-4a1d-abff-4017ffb4dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b0b29-fee5-448b-90a4-160bf0de0b89",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d691cae-407c-4162-bf06-b8df1b80e88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d95c427-875a-4b13-a8a6-326260e97c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44390f66-03a2-4cd4-98a5-a48a8daf302b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91bc28e-2d53-4cf3-aec0-8f76e4cf9fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca47537-c643-4834-8760-543df0641592",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822318d8-b2ce-453e-9136-a8335c96e524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6752371-8d12-4d38-b8a6-181636def13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0a3a0b-5b4e-4297-818f-cf6c2ca56dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3dd541-45c4-4e22-9b39-a8907518bc69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d360984f-a58b-4860-b3e4-8d1647588df5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b83d1c80-73b6-47df-8f0b-ae529119cc5d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cc2deb-ee7f-4028-91a6-872208f4f759",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6c07d4-44c9-43a8-a9ad-91a057e81592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a53a5a7-260b-4364-885f-35473b7ffe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd136e91-b8e0-4375-bf16-37433b6d1b7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd52d634-7ac9-485a-b1ff-2300bba751ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb73c9a-b935-40bd-abcd-a3246ab174ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79edca39-3c3a-4632-88ad-9b058317439d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7325bb4f-760c-4f3c-aff0-a3ddcd20a650"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6f6534f-917e-494d-ae40-b07276d4fd36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2e238fe-ff7d-4286-a06f-1bbb3536ea68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f45b25f6-cb72-49da-97a7-c8dccf9d904c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ec5e639-d21b-4c58-94e3-d6631cfd31ea"
            }
          }
        ]
      },
      {
        "id": "72b15e69-4ba9-4e59-8355-6d85b48a4245",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6a61989a-152d-47ea-801c-af56d441b915",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0db9191c-5eeb-4a4c-9c65-4553ec9114ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2cfbf31d-30bd-438f-8369-31ae3037390c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caa9cc7-4695-4f62-890d-b227f8b74d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c93483b-70c8-459a-b121-0f744ff33621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0020d23-c0ea-498f-8c1b-eb8d3b9bd4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab049d81-785c-48fa-be55-82d0d5e68fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44773ebe-e8be-478c-b49e-4190acb5a20a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af0084c-0fdc-4fd4-abf0-c10395c6185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1547a76-cd8f-48cb-ac3a-5460d8199c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87681030-e323-4d3d-8e3e-9c5fef2c6342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e4c910-70d6-4638-868c-1f2dc64ee0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafc8356-6a92-4965-90c7-be59c6e7cdca",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abfccdf-3902-4cf4-b0d1-419c3fa61856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36538ce3-9574-4ea2-b116-e46508a23ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2cdafb-e3c9-4b04-97f5-3434b3c1ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a522571e-3cab-4bca-ae43-8e72cd14f6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beafa639-61a9-42f5-8396-6a0200cf26da",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ffdfb3-aeb4-4825-a48a-7e0a24063123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90efafef-6e8e-4f79-861a-b83a82e1f388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7575977-cd11-4ecf-9948-d266437a9466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "113dcc1b-58fc-4a22-8b40-4a7ffdc3770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10aa3a4-9ac5-4c8e-b35c-e4a76c888e23",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683cf4f7-563c-49d7-969f-374646e524d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88772811-8e99-4b1d-bd30-91e326eba022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f4a11f-34d5-4ba7-8666-30ba806634ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c307de1-2894-44b5-a4c3-e9b758016860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df876ab-4646-4da4-918b-8ed27d22eee5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d4305f-cf69-4547-9d5a-d9d0950ee02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf42f276-2b31-45af-9544-128ea2498792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da56d6c8-acc1-4de7-aa49-c352365f1fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "683a5672-3149-45b6-93ba-9bbc47077d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bdc6c5-c07d-4b26-bb85-f9296229807e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c0907d-6c72-4537-849f-c78d09ddd9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3621820-ed17-4658-9aef-3f0ddc434642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b5239a-e49e-4364-adb8-41e290b19aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab60ba9c-fd50-4082-875b-8358e4bca054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4576ba67-e1c9-4c90-931d-0b06d46e24b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cea59d-7b08-496e-89dd-e64c13177e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f49596-bb56-4c6c-b4fa-a4386e45399b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4914d16a-e6b8-4204-96bc-2e980597a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae965215-8323-40e6-80d4-386d0bd6273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ff5b0-3731-41d3-aea4-0be57b7f30f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9099325-2579-41ef-9da5-bb95882b9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b9c4be-e612-4876-b854-c514e3c0aab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0461bc-cede-4ad4-acbc-36a47df5f7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cc2735-bc4d-4d56-a778-bbce62eb289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d305323d-8ae8-42db-80d5-c590513a6dd5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee66988-8c73-40e8-996d-a4162adb8085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd7516b-2689-4e74-a1ba-ca9795c19b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4439b52-463f-4a6f-96d8-5b0de4eaf358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "597b1fa4-ea0e-41bd-aac7-8cd8c3d7b941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc8c4e2-dda4-4b49-b8b9-9609481df329",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc528a-ed1e-47c7-b733-1a3de9ade26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3aedf1-4739-41d2-a762-7e19a9d0204e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa8bbd5-475f-472a-8939-7e1066b7a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "86bd094f-3bf2-4619-9ca3-bce3cc71ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce8e516-61f8-49dc-b954-cc17589bea4b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b4a93-dfa0-4128-ac3a-55a786e1db43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fba453-6d38-43fd-ac0b-688659e68004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea8e600-3c2f-4350-898a-5c7cc6cb431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5be46544-d979-4bf4-beeb-80fb3b6b8cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1301577-7f54-484c-ab35-1db04b0a7935",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35218def-2249-44bc-a225-5b085385be72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a699238-a399-4657-84cc-bd86ea99dba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a464ed2-bb49-4298-b36a-0fd5b957a35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1584ac9d-8cd1-4a20-91fb-4e26bd7c0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d1ca27-9654-4504-b1a5-7e37ce8fedf1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41539793-cd33-499d-bb6c-8629959463f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0d40dc-22c9-4a5c-93e6-f5e9d7a03e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36306c4f-2a03-4779-9896-3e7ec9e40813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d0c90b-8556-4503-a527-8bea3ee868a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7080e21e-5f5a-4cc0-99d0-20d4d16309b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74398100-aeae-440f-90e1-ac826e41728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5daf8d-ba49-4ea6-95b6-68e41dd32367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3501185-155f-42b3-9f43-575a33b3d203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92268fb-bc58-4432-9807-1acfbd9e0a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361b30a3-88e0-4f7b-af73-cd81da592f40",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9cc9ec-d405-4297-8b9a-ba8ead71e8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c200991-94b1-41b9-8938-06ef7c01590a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d69d1a9-b468-4313-b33b-af289ae5cfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "180e9eba-31c8-4b79-8697-cead8a92105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a2b307-379c-43a1-8353-39b2eab67b08",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ece13f-47ed-4a86-8d8c-7b0a9d6a8d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97156c7b-7eae-41b8-83d7-d77789beea8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0418505-081b-4707-845b-7713a206d0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2706f2-e0da-4415-a3da-0c98dc31d1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05744579-cd85-484e-8163-adfcb0f94f35",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014f7995-8201-4827-80df-907f27fb826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379edb74-eaa3-47a6-a11c-391ee953e714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5601e161-5819-44ff-8c46-b98b4fde9300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a85aec-72f3-4a3a-8b7b-92ce596d4ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49969890-55f8-4b2e-9895-0e0cb9d3915a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ec3a2f-c254-4488-b424-0393f99ff7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78456433-5fda-4423-b3d9-133b9579cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce2f1d9-90f4-4e55-87d4-134449a399a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "643cae83-e279-4ed2-bd3a-7fc30e01d80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220a517d-3d1c-433f-ae7b-90dbacadc347",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbfa698-74ed-48fe-b626-33e509a37e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c19115-c09b-42e2-861c-273525746aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d2d3a2-5932-4479-9293-5da047b480dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0035020-e04d-4013-b40f-bbdba95dce7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cce737-9fd7-4672-b032-72873c1bc2e6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee75b9d8-3514-4383-9599-efddfe462cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392a4e05-856c-4a6c-9dce-153fc7d44cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6660a6-e8b9-42c6-a971-31532d534b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ba7ee1-4c6b-473a-9d69-2b0a56f5608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a00935-7b2b-418f-9027-f82986119cd7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f20530-6469-4c30-99a5-e7398cd0c2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f79d575-7af8-4a4e-9d76-05eb6d584435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e85f834-0c60-47df-8f46-f5d1f59bdee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ffff7a-4dbe-423b-9133-bdc062f66563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bee527-0cf8-40ba-925b-220d2f21a589",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee51bb9-eb28-45c9-bb8b-ae7ec9bb3052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6099ac-dd7e-421f-a7cb-4b39e284e76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ecf62e-99ad-46f0-b2a0-1a45e5334191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32ecb86-2d8f-4242-b10c-721b88470a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c8d5ef-0968-41b7-b675-c1b44a7e4dbb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b35ed3-68bc-4274-a742-596d3191d8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f4787f-bfb2-4695-9c80-342140ded768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd24ed9-dab1-4b13-ba1f-98b4368545a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3ca406-5ea3-4b5a-bf6f-5e428e3d8f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50d31af-e65e-423b-a77b-eab3e32f1faf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec13c9b-810b-4689-95d9-c6a96214f156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc41c7c0-de9f-43f3-844d-0127ed1ac687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351303ba-a956-4466-a059-03a42a3c27fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0e19e-a297-401b-b4af-fd92fc3f8c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e4f2af-a50f-496f-b6bb-1f1971adc97f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177e7ea8-a0ab-486e-b6f9-9ce4169d1839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feddec74-bc01-4b39-9814-9faf11d41310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f61a68-6fd4-47e3-b4f2-0fe829b89ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea661f2-398e-406d-ad9f-e10ed2e0221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857664ed-ef75-49ab-bf21-412bd43d1b7d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e77a52-2665-4662-87ac-30cf9668631a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6508f05-491c-4d2a-b5f9-d80640b15b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c87152c-6d68-42ae-8134-5022e81e3e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbce18e-fea8-4444-a808-41cabdb7d9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296b1273-9d8f-49da-bb6c-b4c7ce429acc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237d966-de18-4452-be82-9e5642424312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515fdc62-c6f9-4fbc-964e-f13830cb0eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0787f6d-5941-4d82-b5ee-65d716d98d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0eb7ab-6cf9-48a9-94a5-3ad35ee8bfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10498f19-dea2-4b4d-9d9f-f436f9c75761",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef38e2a0-5170-4a0e-aba4-ffc6771340ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6754d1ad-581a-4a0c-86c9-69f12a673603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f08ff0d-4b37-4383-a6b1-cacf2e22f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce38abc-3c1b-487e-9f34-bbc6eae29294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42b25a2-f5b6-4327-8db6-702153c14079",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6e2c5e-5c1b-4eae-820a-b8f09fc395eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a603dac8-73b8-44d9-9dda-8e621bfc8682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6fcd94-517a-48e6-bfbb-547865c6eec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078fd9ae-97d7-42d1-8665-02fad4ea7d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e8012e-bdd3-4e40-8377-42150f5184e0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9a4dfa-887f-4789-8dad-63a6459087ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c13ba6-e698-4458-b7e8-ebf9ad0347d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d9fa27-27a4-49c1-90fc-7f97de320eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0627d7-0cf7-4af0-a554-2476a0cabc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53faecf-638f-4396-aa55-279292ce8806",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa252c8-8117-4093-8236-a9249ff162ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8632d88-074d-445e-89f8-6a2cccf0f9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70038e66-ba7f-43fa-a07e-59f92ed77b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4905da-9305-4ac1-aa6a-1b8369c946fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c7c388-35be-4e40-9f4e-566090354521",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eecb81f-56ce-4fe8-a587-c1b51a748941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18012c6-3e33-48f6-b053-23b5afb2a12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eab4a4-2b16-4e67-9f4b-37853729a5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6445305-bd82-43da-9ab8-346ea52758b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e171aa5-a16c-45c8-81a2-6a79fbd3ac7c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965fbd6-9f64-4597-ba05-1c168fee759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c96e6d0-d967-456b-af0e-942d0dda4160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de14bdc4-f868-4ed6-a3d7-05362b043129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f1bb1f-2a19-4a63-9bb2-ecf11c816c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2d313f-2dbe-47a4-9c80-e1a32afdfe31",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7c5e43-08c5-419c-8cc9-723383f33d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484b3ea8-f00a-4875-87fc-f491b049746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f511d9f-008a-44ac-b375-3f61fb50f021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fa46bd-569d-4515-af10-35172146b0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f612ec8-6ee2-4584-8f5d-497130c7eceb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d572b67-7dfa-48b9-85b5-59d8eb2d8e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a99e7b-b7c8-483b-bc2a-2e0415c42703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ce6d38-4e77-4b98-97b9-cd84524d29d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf136663-70cf-4c46-b000-9595d0d7e979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddbf65c-eac4-4d21-ae91-632c4757e7b1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa86dfd6-8626-48b9-9e32-98f6cf567287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecc7a87-a2c6-48db-b028-87e73287e2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb35275d-51a1-461b-ac54-de6c07532c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85b5ed8-e506-4333-ba25-decefd71789f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2dcb63e8-7174-495b-903e-ab02e7d81303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c8c5a1b-2fc4-463f-8c79-a2153701212d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07da6a3-c621-4a8d-b19a-a9e1168c2636",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3ef0fa-b107-4314-8344-465734330457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c396f5-d268-4b63-99bf-0df176ebdf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5858efb-fac5-401c-b084-7cfc45eb39f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2122219-6dd1-4adf-8c3f-daefa402013a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26f84bbc-80cf-43c8-b142-24623a3dfe14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1fc64a3-6b8d-46cb-8fa5-09ab5f669f24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4f4a89a-002f-434d-b730-899be586c191"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99193653-2d77-4fe0-92fc-849f7f57c900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ef3e53e-5eeb-4ac5-b441-c40eda8da648"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b47e9a5-609c-4aa9-a7de-ea19b3eb404f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ff13e19-a243-4516-9665-bb99ad93eb18"
            }
          }
        ]
      },
      {
        "id": "6150bd8e-04db-4569-a6f8-c35e9cb3aea7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c64d27c3-6ab7-4c87-aa29-a0127441e84e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9cf7f4a-4b3c-451f-b9ee-5fe08d35164d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "838ae0d7-c46d-47c5-a80e-e1351a911084",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213e3038-f049-4763-8daf-5468f28cd4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a93a13-b42e-41dd-8292-9c9859d485b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333c7d75-9d4a-47fd-8c74-c65fc1665c7e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c184d83-a397-44a2-a0fb-2c0e86e81755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a134763-6357-4094-9557-ee67a6319a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedae7a1-4881-453d-8f45-562273d1f4a7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c66c63-7902-4473-88d8-ce22bc77455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822f3d30-a451-4429-b36e-0807da359cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ed9476-0482-4777-a878-00eed7357139",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e0b4b2-ed7e-4d3a-baff-4fb73f8c214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed4960b-7286-4ac5-bc83-f353efc52a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4374bfe7-7ccc-412c-9d00-bbc35eab9024",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60949508-aad9-45e4-a242-7ba0ad674ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151ba5e0-c9c3-4f10-af64-1f877242df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548e5e1b-05cf-47ea-894e-e7b2043b8e9a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4851f7ae-35d8-4355-8cc0-9e6871236027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca51148e-ad3c-4e6f-beec-e05d271f3442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d5594b-37e0-4341-9010-45d19eeaca50",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d141d7-0e47-4f05-b4ea-2628f2f437eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae34562-0b16-44da-a05d-dc47ea6c0798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299c038e-2a97-4927-89cd-226729d4c64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86cd87b-b3b4-42f8-ab6f-d795e4dfd9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a81829-5905-4944-bf55-101c97850f88",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ffc07b-f32f-45b4-ba8b-a78d5ebcf3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3be620d-d006-4a5c-933a-763d0633f04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411cb17c-5961-499c-b334-d0e6a3e7b8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ece3e5e-310b-4ae3-b0a5-d0d1132ee637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba9c51-4e69-4bf7-9fa7-2dab2222a361",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0bfedb-c8ed-4c00-a496-e2a7e9145f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99460fc2-5f0a-411e-9427-083003caeb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b06a68-7bdd-4ece-af15-418b98745ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3794c003-052f-4113-a2e0-af27dcff5cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17159bd8-e142-4b4b-807a-7e8e8661e360",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da35e86-b72d-4a81-8f5f-b23922e2960a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53766a3b-b086-4097-9aea-1c84bdd938bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb8b187-d39d-4b94-8b86-a6c9ef1b2c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc82aa3f-7136-42dc-800e-0e3f8aa179d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb30473e-94ff-4d16-b599-4b902c7e8329",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f516fd-5239-47dd-9474-5cdb7e009e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2ca6a8-cbe7-4b7e-9a77-21690c4a8411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6003e8e8-77e8-4462-93fe-9d5fa8692c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503bfd64-1c56-412c-a9f8-422cec1667e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c70af07-2af6-4242-8d42-ce6891616195",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95448feb-a820-42b8-b800-8f7a60c3384f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e69a548-93eb-45d2-bb80-4f53c3fade77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e8fb25-b65e-4bcf-89b1-b3672c193188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f7aca7-12f2-4bc0-bdd9-9783d52b6781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630b1415-9163-4c7b-a64b-5bf6220de01d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc06cc-b64c-4fbf-b806-c83ae243945c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "228eaae6-8c14-48be-b4ee-a13f74aed13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f765a521-11f1-4063-8966-dcaed34e02ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f239ede9-2bd4-45e9-b9ce-aee64ac4a773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80baabeb-1c06-42c2-8564-3b81fb748548",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776125d4-a5d5-4167-8121-a7173c856ee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ab3465-ce05-476c-921c-5e8abf5ae0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144266c6-bafc-44ff-94af-425600aaba8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a2b371-9897-4319-955c-bbf28e1cafe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9e74c4-9b01-41bb-b701-6b7f27193cb3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72cdc6d-942a-4e52-bb4d-90d5f285cbff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03dc1674-8174-4395-be4f-145bb0450fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6354518-19fd-4c37-9de7-5b07b3b59286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a504cbfb-28bb-456c-b40f-2841315a0d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6995073-1ab3-4874-923e-cc2cee216228",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532513ff-4a98-44d6-a4c7-0fdee8fafe10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17711cd7-5171-45b4-bb6d-8f280078317f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ffe5e8-f735-4b39-a768-f0678099b825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b0b214-8abc-4461-82b2-22a3156f005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c25c2c5-59bb-48a7-937f-416fce695f2f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4ed32e-faa1-43f1-9200-102ea7ba5b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff65307-3384-43b1-a505-e1ea3ddf60a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd0b25c-7081-40bf-8f46-a70db319cfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a8bc3d-b973-4b12-a0f5-a3900eb0e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d6663-6d1c-49e7-908e-69ecc8862234",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23fbcc2-e6e0-486f-91eb-7438576c397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3848de1a-7a05-4a9f-9bd1-4fd9b6667bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66da1b9f-1baf-4988-9d16-fce48b99a35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb1eb74-2faa-44aa-8d2a-04f309bfcdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ef2eec-4e40-4880-9b85-6f0be4312c00",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544438aa-624e-428e-82c9-2dfa33e34863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8265319e-a1fa-4bdd-867c-2e8472c8b056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9106ce-0c83-4920-89be-18026852a51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b6ccbf-0e09-423d-bed3-9d2853405fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f05ab-4a2a-4135-b1ed-c3679cfe5a95",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7cb6dc-28d4-40dd-951b-30d7dacc420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5449858d-9e27-4458-9021-05da70d4209e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de18a2c1-a059-43bf-a718-f159c693bc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497158b4-ac9c-4c0f-8b87-366165d59fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4785dec9-0cc1-455e-8da3-3433a96128a3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0212f5-6dca-4e8e-8507-76e30a50dae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73484e3f-168f-414b-8726-f2295ffdb810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940c2e6b-5069-4b16-ada4-178687bbee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0caf537-c2e4-424f-bcea-23711b3e3f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b8ab73-93a5-4bd3-8f4c-1ec5cb7f320a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa7dde2-013e-4a44-8552-77122a9ea139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fa5355-b2a1-47d3-8dc1-c1d3d1683726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579d08e1-4a8b-4c84-9f87-e50014f99595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c201dee-99bd-4a31-98ae-5fcf3fdffa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a298bd-ae04-4d5b-a267-d56565bf489b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826afb77-fcdd-46c4-bae6-4285a8a3b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b304c9ee-53bc-44dd-b357-4efea9076a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48206f34-0a49-4784-9a1d-ddd600cd711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899540ad-edb1-43e4-82c9-37a212385ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e509aa4-96c0-4846-955e-b5e53f8278e1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536102aa-17b7-4fce-babb-386eda0fc3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a386fa3f-8733-433b-999a-a2a008abc1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2530df9f-04bc-447e-b488-c756c4cfa973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c0e8cb-6283-4f23-9221-d98978dd2215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36ad07-1772-4121-a6ba-13d6b9df97f3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4993f21-bb66-488c-b0cc-267c00a96c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fac7e2e0-5b47-40df-851d-e9b2ccede4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a80f84-05e9-4cf0-8d20-e5c038b13583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd623a05-9f09-4df4-acef-76b34335b544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbf005e-78c1-489d-8ed4-65cfd55bfda1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59adcff-1f3c-41bf-9108-3f5a07094b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b422caf1-dd98-46cd-b0ad-4a2420cbcc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af380869-bbfe-484f-b886-b67596a758a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdab4722-37ec-4cb7-88da-90e81aa8193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e9863-4c75-40c2-89f3-b1363d74be49",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ace5ee-add3-43b7-8450-8c37a4afac33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9973fdfa-d44b-4404-9af0-8f889af5252e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21638fc-d8a0-4547-a70e-65d4bd9a30d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16229505-8286-43a6-bc9f-7d51f49e900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa52ae3b-0486-400c-8f88-0a9db50935f1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c0e34f-3a59-4136-bccd-fb7c6c736b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49afdc5-66d3-4e8e-916f-7d5da63a643c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7abf7ee-5200-43cc-9690-bba0cbe690d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a400632b-03d8-4822-9fd9-21c581f6e958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b8a0d-bb8f-4477-96ce-2b3eb3bdb391",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801c0f4f-42dd-4651-9e5c-c836b5329bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b49005-ffa5-4e44-b4b2-1f4d62b09ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1487556e-3093-4e99-be0a-0747fb650ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ce9037-e89d-4b70-a97f-02ae9f2bde56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0eeb682-38d9-499a-a12e-fb1606d06806",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61c9c4c-0058-424a-acf7-67a462958cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0920dec-c570-4d3a-b25e-83714d27d226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90686ac9-5e4f-46b2-ba19-5a564568c3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bedefc06-cf45-4975-8b85-b0d2c8266392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deb6255-17bc-4838-a10d-93188c2b2b57",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4cbdf5-894e-4813-b5dc-c860cc861238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1556b31-ff7e-45b1-848a-37c52f19953d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a17b3e6-ce7e-4dec-9049-9958a9531f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b594f87a-7c6e-4c38-bcf2-fb75eb9c41a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d819f6-08e9-4bbd-9040-d51ca4ffbc2f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82715ec3-126b-48b3-87b6-27bb9b734a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05b7853-1bd8-4fe1-bac3-6d531d03da7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03b7a8e-1799-40bd-8b5e-268c3d5d63d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141f61b2-b077-4742-9c53-dcca518c6686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90b260e-9532-46ad-bd86-e438ae4bda6f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fe0e09-0c3f-4f32-9fef-103227f5c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3865b9-9409-47fe-a824-0988a6b8fef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975c544-e58b-4581-b92d-9650a6be1d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9c4659-a91d-437e-9b8e-3d29fd657ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c799fcbd-805c-490c-8f9c-734d0f097c3e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7378680c-78c4-42cc-96c8-59bd5a9b7ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a246faf9-cf0a-49d6-8f1c-7e2e957dc0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0ae538-930d-4ff5-b9a2-5010aa2aa8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98a18c7-1298-4068-bd90-a1272e73f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffa6f05-e8ab-48cf-b854-6fafa19c8cfa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0bf63b-25f3-432c-a7b8-e37b1c0a0198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae33ab7-0dcd-4324-ac50-5e27cc932ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e19e4-6d0a-4437-8acb-a04067828e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd714b6b-9656-4dfb-bf27-e8a3b5baf8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af228847-0364-4644-b8b7-4250d4908357",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531b1e94-bcef-4fd1-976e-5ff236ced622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9087207f-45e8-471e-8b37-ed19beb60aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4e058-882d-4fd8-aff1-6b768d08a421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fabed86-7606-4544-aecb-9c3a9cd5d0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24529602-6e47-40b7-816a-996cd86dafd4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dad85f-6b9e-4c1b-872d-0bcf0b4ddec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c637ae1-2208-4347-b2ce-b795bf8b139a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eb5b11-c88e-46fc-b64c-059dcd78a8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df3fdf1-ab0b-4618-ace5-4d18ab977f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95632501-3d4b-4f6a-aa74-88e99c0f6a8a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f449068-db4b-49e7-8ade-97c13c3a7dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7eeddb-40ca-4ec6-bd08-512190b5bb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7accf5b-a780-44f8-a5f9-0796048109ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6f5534-ff5e-4a43-8612-445f46339d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0462f112-74c9-4cab-92f7-0b4de8d16545",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b823ac-a3e3-441e-90e8-e2b3c56ecac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97180cf-ce48-4a39-a7ab-b4217c45fbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14f0b9b-fddb-4815-9ae9-6008e72cf962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27548784-d6b0-4968-8fa5-6f44bb9b9a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab76d4-9a9d-4ecd-8473-8ab54b0b0b10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf0232-ded5-4c18-a3ae-ebdda940f1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a351e4-8699-4310-b5c8-9f4981c3edb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df72b401-a1e5-4756-af7a-3e8f18eeff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a8ef32-71e1-45ce-998d-698c756447cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6750cd92-1441-40cd-b673-a94b6f05ad12",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5266647-b555-46a6-9816-a8c62ada16d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100862f2-0617-45a9-b54b-a83024e139cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa29c28e-3053-4337-ad76-7e4eea9cb781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a326f3c5-c03b-4d45-b4c4-fec7a09ab485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7258f9f4-565e-4eeb-b022-9e95ca9ec895",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb4e1ce-6f50-4987-90f6-ca44ddbec2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540bf9ff-eed1-4d2c-92d1-e061a1fbe2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9577fbf4-40d7-496c-9fee-39939ee83527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6ada3d-285a-48f9-aa98-3fb2d1d51820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb0dca3-0d63-4b14-8399-ad43a6b2eb87",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd2cebf-8451-4cf5-a0ff-991f39189c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff89316f-386f-4a08-a352-0705c97857f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b4cc6-0fec-4a74-92bd-bc0c287c6e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce5a61e-a27d-41b0-9b43-5b07ecf664c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af5ad17-d77f-4f3a-867a-a04df09f540d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2562b-91e8-46e5-8d31-52bad2502d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba623e88-f13c-48ec-afc5-8dee48d53af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26542149-0508-4be8-ae94-b9219730dd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ec44de-7306-4a6d-9a2d-a94ed1c29704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e943991b-e1ab-42ae-821e-c29d300bef84",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18586fd-f45c-473b-8f8b-0d6344d8bdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8580c51-e027-4c28-89c8-4ddc3263f038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd224e9b-4ed2-434d-b273-11e4dc66bb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8543816b-97f1-4f54-bb7a-968967fe73ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e43b7f-af79-41b7-ad39-b684a8c9f7af",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afba84ba-5b5d-4d9c-b0df-d3c5c1ad1c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4656b273-069f-4a24-8414-619d6ad2f7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4d6084-6744-47af-ac0a-f047d60624de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fd44ec-6692-4cae-9a94-7a3ac2c6e96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ff4bd6-6e44-4708-890a-7b67f3eb8a72",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad35d892-2dcc-4d30-b45f-26164a42ecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff6b48b-dd42-44fc-b772-d972630ab083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da01e550-1245-44aa-8d63-b300b7f53df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf146423-c55d-4c5d-a65d-e110af0f0a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40734df-7af9-4b62-8cf0-a64bd5cecc37",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d45b57e-37a4-46a5-a130-af9da9856941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646f3264-2e1a-4759-91a9-76a8627f219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465133a5-c497-447b-9093-6cfb91ec7a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3c6581-9aa1-4122-8710-44aac6bcebc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e22f48-bfb9-467d-8e05-58093ee5dd76",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e383be-6595-48c5-878b-99588e010de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b31e2fb-b9b4-4ecb-b1e4-c9594693e3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d1d5be-1c82-42ba-988a-0fcc0a341eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b8e78d-df77-491c-9c92-6387aaba8107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10297b3d-a7f9-43cb-a585-95823635f26e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e93b42-b63a-4397-84d5-01a1b682a57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9111f6-a6ce-42a6-ada8-1f850efdc464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ebd894-aaef-4178-86cb-feec95935f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f22de85-dc7d-4fa9-90f1-bb735bbc8f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad49471-ea05-4db9-8f23-96da7cd940ff",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a136ab94-242c-492c-b5d5-1fd2651c615f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6186c98-262b-4249-9bc9-8a1aeb71a284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7aa6de-a429-4c60-a9d6-1f7023233525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0feeac37-04d5-4557-a1d6-c0a1efeda4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e24a79-5ce6-40f4-ac1e-16e2c9629cf2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1501c8be-dbed-40c7-b293-baad157bbc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b33b43-d693-4572-9959-81152929d63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d0ea5f-8f84-4f79-b36a-c6c969d78575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e52ffe4-1df7-4d0e-87dd-94db15b24c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b407d-0d59-4e6c-a0d5-370b65d05b98",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a78351-915c-44db-b1f1-c913e73c51d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f376a5c1-683e-4938-901d-f087f90c186c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b05a23c-55ee-4de8-b960-cb6e5b1cc5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7bb25b-15b4-4b6f-9a1d-41506e98bb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1257578f-5966-4688-a013-abe41dbc97ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38125ee8-286e-4e63-9023-9081d6530852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731554e0-09a5-4440-a907-054265a27df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777414b0-e218-47f3-ade7-e6b4d8bb6a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70963bb4-d73a-4389-8d19-cc46d57b0dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f5fea7-7fff-4e39-b094-c3e028afcdf2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084049ad-c655-4598-8523-f48d23b7d44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d0eed4-ba2d-4dd3-b2db-7e498b58cf60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb952700-18e8-4ce4-b220-c5ea5a34639d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a40c73-8b4e-4392-87a7-fa1d09850215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fffcf3-22c0-4487-82d7-a6b719bd7e21",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2a381-a260-4873-9442-6fa239a292cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7902392d-c6dc-42bd-bce0-0860a7e49044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0651190-1a25-4860-9373-4c6fe07781f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043a475d-3dc4-4e41-9c11-68017ad0a5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632fe757-b9f1-4473-8256-5c92c9f28328",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d331a81-67a5-4370-9f95-989ce128e2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d285a4-b329-4811-9808-6165e9a492eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7982ee51-a77d-465b-a21e-8b5881303fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b40c466-2672-4f42-97a7-bf51735f3a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18d068c-d1ed-4c73-9c01-dcc87709a611",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a84aad-a38a-47d2-9ec2-7985f9263835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c5f23c-6ba8-4bf9-874d-9c8d4bbf33c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e47ae-69b1-43df-b59f-a38e47eee973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a432a3-d321-4ff2-a10d-ba84a119ac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858bfdf5-9cb9-4e2f-b78c-6bec7671c73f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9153f65b-4ea2-4dae-8906-126e992c5251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31b7d6e-fb5f-4f81-bb73-13df448e025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6cf296-3124-4bb3-a89b-98226b1ccf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1844e66e-0132-4be9-9a15-8d38a3175b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f4adf3-71dd-42ef-b5a9-e08a323e0f9d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f757f8b-261e-4329-8bc7-0a1c77df2029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d97380e-4f61-4993-ada2-767941841375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2856d39-8e86-4a68-a457-7b5997799282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4fecb4-7c03-486a-9cec-ae9ceb131308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fba57b-74c9-4919-abc5-4a1bb0d110c4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba58c4-93a8-47b8-b8a3-6e9baeda2cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7deba9-e890-4d99-9c28-0811e3bc3431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc239dc8-150f-4b7d-8c32-3c3f953369de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b083f83e-8183-45aa-a4be-6cc30e3ed3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62db419b-4194-4a65-bb76-abcc7e01bdde",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87adc77-d6d5-4229-81e8-2da33abc4756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ae71f1-6710-47c6-8c1f-f357377a7821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c86b9d6-0259-4b1d-a960-64f99c3a7536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51727d3-8d2c-4441-8b06-6319dd577fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16badf78-ea86-485d-ab69-36ccd494a80d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16afa93-590d-475d-8b6d-79578a891c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f472df-1c2f-4229-b2ae-2c419077af4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386e8d61-3454-40e6-8f50-1761057d1bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1516b4d-fbe6-4395-a961-68118caad227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d633dfef-fdcc-4f98-9eb4-8865951a63ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ad01d-47d9-4976-ade5-8f544efc9c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a72351a-9448-4004-b576-86d8e217e94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eddf31f-40d1-4372-80a7-f49323763a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107d27e5-5099-49ed-87d3-b947acdc3d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6cd754-aa4b-407b-9104-f34bfbcf5762",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515a1270-2306-401e-b050-cf8a832a47c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a2c43d-c34c-4013-a267-efde10757568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c193bbe-ed1c-40f1-a276-248f58db14b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd078c5-f2c7-4c8f-a8b5-2b417df00d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e0423c-768b-41b8-a61a-db76969a20fd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f9e15-cbb7-492d-b77d-098e28239832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b520576-627f-4486-a410-4050d849ce73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba300b8-5300-47f0-a40d-73f61d35ee8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30905272-dc93-461b-9917-1ee1b54b5cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7a6a74-a06e-4bda-a3e0-74b5c60a4543",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe9e5a6-5ad7-45e6-9426-db5fb84bbc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85937364-b813-4ae4-aca1-1855b10441b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4d613f-6ddf-4892-a4ae-6655a13a7a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e102f318-1b75-44c8-b362-0b4ae4b583d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50bfa97-d9ef-431d-8c51-d323b07f112d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518fd8e7-03c0-403a-901e-f6b818bd7c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de83fa3-2c2e-468a-b1ba-4edba77e4f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1d1a1-194b-42c8-a5ff-3ed4bf3423c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373c940e-26c6-4a6f-ac49-70c59bb41ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f26449-0a7d-43b2-a24d-52ae88f16f21",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef0eced-562e-42e3-a702-f7940395cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc97f926-ad35-498e-bd7a-9bd58e306533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b6345a-dadc-4a56-865c-d25954bbb603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5438209-d750-46fe-ba38-16e5b552cbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177ea1c3-a235-42e4-b2ea-85caeafc0316",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e95fad-636b-4a02-ae59-803971686b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "026a4ce0-4af4-45c0-a2c6-cec3cb395995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85edfefc-6e11-4873-b8ca-0bf0fd9528bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f804c4-277c-4fc6-bde6-413837651c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4268d81-d9f0-4c15-a238-6dd47f20d29d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92512f3-3f9e-4d38-a4ac-03309cd6dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae523443-0b57-4869-8b92-11742c57df20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44911cf4-a087-472f-909e-64e7f187b6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bbab52-cba4-4c91-b3f4-bb5c7edc483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d590424c-cbb2-45b5-b9d8-0d5624617683",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685dc388-5933-4c64-b749-1aae1b6654f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990067e9-8fca-42f9-ba49-3724a4e397fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4231c5dc-c362-46bb-9b8f-8f2e9821e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eec01f6-0154-4bcf-9f39-e65992866002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0f71fc-9173-4d42-818e-f4e2102e501c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2e14f0-d48d-45d4-8af1-0f32cd5db04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9917cca4-660f-461a-8c10-27ef83d9505e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137c8816-4c28-4427-a06b-3e4f9e332aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83e66cd-58d5-4de2-b286-f3c52ff9ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409526a2-c360-4103-81f2-7805d530de6f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ddd35-b823-4a87-aa70-7d6fdc60257f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332425da-842b-4665-8581-beae4e6525f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d1beb1-c7ca-442e-8949-844680663d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8116f874-cb98-4b6d-b3b9-d351c41d88ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c60af0-6f33-4705-b470-64a84abc11b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1d9463-7720-431c-b204-483a9823c196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46125a91-543f-4fa6-9e12-90a5e2d6ae8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94e72da-3e85-4ba4-9583-b9a10df7dfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc916b09-0086-46cb-ab62-1409186798eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88528ce9-505f-4326-9d93-8250815d5f76",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbef155-b4fc-4a65-ae65-a513306505e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63474d01-06c7-47e7-a62f-eebde0745422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b63f497-07e7-4c90-9d0b-bca2c16d0335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0c281b-eed1-4545-bdc0-1fef2a3959b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ba48f-0cf7-415c-83d7-85b27a9521ca",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09703431-a546-4621-9c7f-c524a132db08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "828eecfe-70d2-48f2-a5e3-7cd1d5ec928f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bd1d0b-6659-4433-90bc-c17c95e7f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb3aa8a-4b84-4b76-9a18-02cbfc6757b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445417fb-16ed-4b62-92ee-4033bc7915c3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534da58d-d2da-47e4-b87b-2f3d419c3b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb77668d-8c47-4b7a-858d-4f6d04887d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb4086b-ba79-4ef1-bb23-b45a2e93ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23f55ed-f1bd-45f0-8bcb-d7f2e40cbad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f1b572-f5b0-4f0f-8577-54c058591197",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a35907-c98b-4fea-b342-fafa0c657bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcb3309-d0f2-4334-b6e3-0c3438981caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a32da19-5da3-4852-a608-70a869c63ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd301a0-d7f8-4940-ac08-c8d805a10864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59609c0f-ed49-42d9-9ec8-dfcdb27a8afa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5619bd55-0cdf-4e86-aec8-811f652d8d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cda001-bff3-43d3-8064-a0d33cfd0a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d376cfa7-02a9-4ee0-9271-ba179a8cc32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b3ab9e-d2cf-4e9d-9628-78f5263b0c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cbbef0-1b48-4305-8956-af5455355811",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2b3f5b-aaa7-435b-82d1-90555def4f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e282bbb3-daeb-4fb1-aebd-3eca89a4dbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b97ba-1021-48bf-8e34-ecc36b34e378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1eac12-d3a9-4977-95e8-a02056296c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec276050-e629-4ca7-8613-a04130f5225f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1434b2ab-fe60-4ef0-a6d0-0fae098633b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04986bb2-fc02-4809-bfcb-d89cf2a3de1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a949526e-6cdc-424c-a2eb-d4249b04b6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d585a6b5-79e6-4b49-8d32-a5d2877380d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eddefd6-080c-4292-aba4-bf0ee33d36e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f16ab39-e44f-4819-a2d7-b9f9c30ba172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d313d4de-df42-404d-ba5b-d9dcb404a255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a889e4b0-f14f-4e5f-bb0d-2d769037868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f49254-bb63-47f7-bcdf-8a69ff842411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0449925c-8cca-4963-9818-688882485447",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d284db3-219f-4eb4-9b4c-94e6a4e1ef36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3989eff5-5ad2-4635-a49b-bd0cff0c595e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c30fd-baf1-423f-9688-b63fe759848a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da07f24d-ec8e-43b3-913c-1ac7f9784ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14de14d7-28d2-4ee4-9ef5-5e6aa8508205",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135f5e6b-89fe-4042-9be0-f61768388fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee0da645-afd7-43e9-92b3-8f4a9bd57e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c205fbdb-dac5-4585-b9b0-aa960754ca69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c4d552-3067-4b60-9a97-d2eb8c756169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b36dc-8746-40a4-ace5-c2427d2b829a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f4710-50b2-4825-8971-c92d08eba9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5aba10-4809-4a60-aaa6-d17f2f13eadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2c3697-753a-4c6e-86d0-7d1d8e648b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a979ad5-6e36-4130-980d-942dc598f02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97ada12-38a0-463f-a522-60bf6a4ca236",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31f57b7-1b1e-4e90-8248-6fc73cb81c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6c8529-a137-4ea7-9fd7-92fd51876c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4f5ef4-0a05-40ae-8000-1a8fde6dc3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668196ef-d938-402c-a9c3-f968711d0045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6c1a5-86dd-4f01-8508-c6f8d6ad67d8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423cc622-f9ee-464b-9e6a-3df4977ae7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7b2e8b-9145-43aa-a30a-12e82efacd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e633158-31df-4548-9a3f-0b14a03826af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b382a1ed-5554-4d10-8261-ba76e2f235a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25dfebb-7764-4931-9d11-ba32cc54ebbf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a8600d-ce44-4d48-b2cd-057ca1720330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb57d9d-c020-4303-a616-0d81549c93c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64469e4-6358-4a03-8bee-1705db39dd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbb3bf9-6cfe-478b-bbb9-0de1b62b8c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039f0f25-8f2c-448e-bf8b-f5235cc7ebdb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc20edf6-4930-4bef-9f67-1c2da8eb9166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59c3780-a061-487b-9f97-06bae3c9fefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe6f7fe-f3ec-42ab-a86c-935d524754d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d5c14e-9c92-4091-b1e3-3d952e0dba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a61a868-7afb-4996-bec0-57a3288b9a33",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df123d-2633-49ae-b7db-fde9c71c6114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf1ccfc-8e86-40eb-9fff-fcd9c0ccc219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a144ad1-d2f8-4dc7-ba47-14806187616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac80798-ed2b-4362-80eb-07763c48ddbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa61e04f-5316-4b6e-b5c1-bd30e00a3fd0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfda04b-fe74-4673-b8f3-d04e5461a337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c694e45-cb9e-4a9c-8fcc-527d96f9da20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bc98c9-5e77-49ae-94af-a5fcf9d0e703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98133fc6-98d7-4c31-b4ee-a1a8979a6784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1061c3-c8c2-4ddf-8f7a-de8d140a43c5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e637aa68-8e1f-4a81-bf31-1d37e9fa73da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db165e1-078d-4f81-8bca-4e5ae184a89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305d73e6-8998-4df3-83de-5870695718bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c586d8-02b3-47f2-ad48-1110ea5d3f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3517ce-f76c-4057-a003-b5490f3b4886",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e93887c-bbb8-4db6-996c-f71da0dc8487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f238807c-31f3-4fe6-a0fb-02451bbe0efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5771718-e30d-461a-bea9-b23635cc2df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f94fc34-caff-4cfc-87dd-83906ae851f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69aa8c5-6535-45a0-9ba9-64fe0398b995",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8124a74d-4a7b-4447-9112-eb7aef5e879f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96dba2b2-9c99-4627-858f-8513805255be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ccf7c-6f77-4ea6-a78c-90cfbf39c20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49983d01-b469-411a-a529-dd4f5021d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e1c505-58aa-4dbc-928f-e90900586934",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a13fde-c22d-412b-a6a5-8d8cacb53e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4c171d-6015-4c6c-8f2d-16bf72979c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65c1051-9855-4d59-ba11-63bc6fc0d521",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2704e6b1-48b2-4dbb-b57a-8da57c59b948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f484b00-0ecc-4be7-9aca-d76737110c27",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aab919-8332-468b-83f6-feadda6cd7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867a7087-c064-42a6-83aa-171c42f31577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75364eb-bcb6-43ee-9b56-5ed4494ff624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a9b434-f6fc-4bb9-aa0e-3cc0d8e9141f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58da1f92-c307-49a3-8b2f-ebea099bba37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2380db9d-c29c-462f-946c-331b412f6163"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72b837e-e1da-43b6-ab4a-97de8d121658",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3894b32a-386b-4c40-b141-246a1664fc5e"
                    }
                  }
                ]
              },
              {
                "id": "65d601e0-07ab-45f4-a44a-e157708d51c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dad040d7-b0a3-45f8-ac0f-21835c72918c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5335a03-fd15-4ec1-8f75-77ed6527a4df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9a391cb-74d6-4552-b811-388ed65be7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4318bb-c186-4619-82ff-4c11700b8aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1ff03c7-feda-4f1c-8b08-1ac06a045b9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a7aa373-3d20-4fc5-b863-5c6676cca57e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d773814a-b78d-4488-9f0d-d8b2130ed5d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc430b1f-fd77-4828-853c-54f73e92377c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "267c9bbe-25d1-467c-b710-866e8c662540"
                    }
                  }
                ]
              },
              {
                "id": "a004e0dc-362d-4f6b-b0a5-30f5b0b0521e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d958cc4-0632-478e-8f99-4f3dabce94ce",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e4982-a571-4b96-95d1-7a51bd61c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f3dbd03b-e6ed-4f4d-aa11-b695ec07feeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5958869b-ddaf-4d3e-8372-3246cc87c86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a114a9-2044-47bf-b2da-9450625f8a28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad1771db-16d1-461b-8ba5-4d5329d2850a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d796dbce-69c1-48e1-8b3c-66a3f0fec79e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b90c878-9f2d-4e87-a9c3-6ad6a30dbc17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61db51db-9c7a-4af5-8edc-d66b3113bce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cfa33d6-38ac-4370-9f4f-4e6e66db1a51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "937d1ed6-b3d5-4340-b8fe-8994d1b03332"
                    }
                  }
                ]
              },
              {
                "id": "70294a60-159e-449c-b1a3-5cdaf0c7c84f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b6fd025-79f8-41ff-8198-594affb204b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94236fa2-f461-43d9-bf07-def8c70e2b57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87b96b3b-babc-4752-877f-b0a25d724475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f0d3d9d-d3e7-4562-8d09-bf56d6fceeb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51e7d0c7-26f1-4f5b-9557-457c3eb81d57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f18dd144-7aae-4740-9de3-1cbacb61426d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94008d80-c77f-48d9-8566-aefe651845e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18f9bee8-4228-447f-9609-a3c8e367d591"
            }
          }
        ]
      },
      {
        "id": "2c7a46ef-ed24-42b2-adcb-6719cabc9431",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "05950645-9497-49be-9cd0-227f8025439b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48eb3b46-3242-4c56-bf28-1ca45698f913",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b0df35a-ef17-41e5-bc16-be42e9a78187",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1a52a8-354d-4062-ba3c-f039b1885df3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7d348de7-d3c3-40de-937c-2f84f733b83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f793605c-9bd3-49c0-a520-206580ce0b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "190f5cd8-f1b9-45e2-8fef-f329ed9ad0b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da8ac003-633f-4a50-98cf-00e96115df10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856f2158-5232-4454-b1fb-d330eeceea9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49055548-2035-4ebf-a748-7a9dd1eb4868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bef95279-cc69-4b7c-9bbf-0e46b894f7f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eee64f4-f4b8-4f2e-8cd0-fd94327f5104",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "35bd2966-efac-4cb7-ae31-d68aa2a1f522"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2ffe643-298e-40dc-bcc4-5de5935d2cf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad5654e8-7785-4b56-b221-96ecc6bf34dd"
            }
          }
        ]
      },
      {
        "id": "72a677f9-0460-44f4-a40a-4dd3f1d0f6a3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f81ad71-071f-41e0-add4-435c9d3d319f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a91b2e46-da0e-4784-a9eb-3aca09cbdf35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d46f641-c1a4-4222-9765-6d361d2b7aa1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367fcc8d-3143-4041-b10d-43af94858a2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a04b7095-78be-42bc-91b9-50972da2631a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd968c4-1893-4ef3-8cd0-bb4bf88de94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77428241-f506-4baf-8665-87d37bff85b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3c6843-a998-41bd-80ae-2d82ad35560e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb907b97-cdf7-4e5d-b17b-9dd4d60a27af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df0b8824-e725-4c8a-bf83-d03b348e5d9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0dae3e7-db91-4b04-8101-3a11cc44fcdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d63e2997-9a44-457c-9234-22ca6312b055",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1df1e736-5df4-4485-ab14-aea558af4044"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8e2a090-6a53-41ee-88b4-ef61e129cb5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91c5f145-5329-4a4f-9cb9-13c72fd0bba6"
            }
          }
        ]
      },
      {
        "id": "57084fe2-1dc4-4473-b266-5dde19ec7781",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7102a8d-f42a-46d0-99cd-74fd5c3cb24f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b925cd52-b537-4dcf-bba3-9cf2aa28e560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ead379f-cf96-4612-b14e-47e0b29b0ed2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1221923d-ecff-4502-a913-717e0d16e889",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf1a618-3e04-435e-908f-0dbf24b953ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94235793-7429-411b-bd04-84c6464daeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae5dde1-ef01-4486-9ad0-0052ed9470ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4f74adf-eae2-4d40-9113-b99543f77fba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b03b8e41-7c6a-48c7-9975-4231aa0b8dc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0340a1a2-0177-4cb6-a766-51e11e202145",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acc002ce-13de-474f-af6a-969f86d028e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f9fe60d-ca49-49d0-8544-1ddb77c96e21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51039309-a4a0-49ee-ad80-22a08ebae8e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbf13916-4045-4db0-a7ea-c186eed2db58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80c03d72-8ac9-4afb-b09f-a4f5940f3867"
            }
          }
        ]
      },
      {
        "id": "5886c682-78f2-430f-9dcc-6cbd93773974",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a07cdf6a-44c2-43c2-9781-32d99a40231c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b46c687-60e6-4062-80ff-dc25f1e400c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d47f193e-7d64-4774-953e-d09a92c7ec2c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3605a5a-ea6a-4a47-b4b0-6639b21dca31",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bf0524e-99f4-44ce-92a3-4af11bb0dc09",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 236.0070175438595,
      "responseMin": 11,
      "responseMax": 8865,
      "responseSd": 1103.64220935344,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699922072102,
      "completed": 1699922153851
    },
    "executions": [
      {
        "id": "0edbd21e-6e1d-4a23-863d-763e29db6f87",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0887973d-8be3-4fc8-ba98-65de1e59cb31",
          "httpRequestId": "53cb962f-316a-4c4b-9c73-0418c9f03e2c"
        },
        "item": {
          "id": "0edbd21e-6e1d-4a23-863d-763e29db6f87",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21da463c-bf08-43fe-932b-12354c5dbbef",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "f819506f-847c-4ba6-ab69-3cd5bc11d651",
        "cursor": {
          "ref": "3187de57-230c-4688-b815-c67978e870d7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "002c5e48-91bb-435c-b9c5-1faa438b2b95"
        },
        "item": {
          "id": "f819506f-847c-4ba6-ab69-3cd5bc11d651",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65fda12f-f28d-4b5e-98a0-8deb3be55fc2",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "20c73526-dae2-4dab-a8fb-bc8ac61b8ca7",
        "cursor": {
          "ref": "2afbdc95-5ef3-446e-8ac0-736084ff8ca0",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1d851648-6f51-4a13-bed9-32c558ddcb85"
        },
        "item": {
          "id": "20c73526-dae2-4dab-a8fb-bc8ac61b8ca7",
          "name": "did_json"
        },
        "response": {
          "id": "d1c5fd27-d507-4e19-8209-782cc8981770",
          "status": "OK",
          "code": 200,
          "responseTime": 1449,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc28abc-0151-496f-9afc-013f8e5a4e69",
        "cursor": {
          "ref": "f7692c98-f9de-4073-ad2a-672c196c0257",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83d44ab7-3f22-41d6-9e83-816d9c836213"
        },
        "item": {
          "id": "bbc28abc-0151-496f-9afc-013f8e5a4e69",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b2b50ec-88e8-402e-942e-2305cfac2600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc28abc-0151-496f-9afc-013f8e5a4e69",
        "cursor": {
          "ref": "f7692c98-f9de-4073-ad2a-672c196c0257",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "83d44ab7-3f22-41d6-9e83-816d9c836213"
        },
        "item": {
          "id": "bbc28abc-0151-496f-9afc-013f8e5a4e69",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b2b50ec-88e8-402e-942e-2305cfac2600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa25f60-844a-4e2e-9c98-f6fafb018b31",
        "cursor": {
          "ref": "5e2b936d-65fd-41b8-98d7-f043ad166cd4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e9761efc-7f53-4284-8f21-916b3fdfe0dc"
        },
        "item": {
          "id": "4aa25f60-844a-4e2e-9c98-f6fafb018b31",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "598c84d1-a993-4319-9891-d2f499e04ca7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 157,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c43a36-1400-461e-9f57-9df66c2de5d0",
        "cursor": {
          "ref": "a9406970-da4a-48e7-9e54-20c868db8984",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0959ce8f-9d6a-436f-a0bb-d556c18fd1b0"
        },
        "item": {
          "id": "c4c43a36-1400-461e-9f57-9df66c2de5d0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "335c0f15-efec-472b-b25d-1e58bcb39444",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2060c2-fadb-45bc-aeb8-15598932594a",
        "cursor": {
          "ref": "4baced29-5a84-4285-9482-23e1ab2a996a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ac06d119-716e-401c-88b8-d0cd8d05e0f5"
        },
        "item": {
          "id": "ae2060c2-fadb-45bc-aeb8-15598932594a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6239d9a5-9471-49f7-b65e-9354196148a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0654d38c-f82d-4dec-86c2-419d2abc8313",
        "cursor": {
          "ref": "507fe7ee-f2a2-4f15-a61a-52fd6842feaa",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "085e1a88-627b-414b-a9ad-e6824fe3e055"
        },
        "item": {
          "id": "0654d38c-f82d-4dec-86c2-419d2abc8313",
          "name": "identifiers"
        },
        "response": {
          "id": "3bd40dbd-877c-45f4-a62e-fd8fb72bc191",
          "status": "OK",
          "code": 200,
          "responseTime": 1236,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10c7ce0-69ac-47d7-93cf-f8084ec6f425",
        "cursor": {
          "ref": "5bd8ae4f-78b5-47f5-ae04-fa3db1a6a353",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a877ebcd-fb63-4174-bb36-0bdd254a591e"
        },
        "item": {
          "id": "d10c7ce0-69ac-47d7-93cf-f8084ec6f425",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "073620e7-012d-4110-a9fa-9f064827550f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e5d2d0-f5e6-41dc-b1a7-76198d429b62",
        "cursor": {
          "ref": "320330be-f2fc-4a09-96c7-63da1949000c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "060c9048-b08e-478a-ab0c-e1eb93d3df05"
        },
        "item": {
          "id": "f3e5d2d0-f5e6-41dc-b1a7-76198d429b62",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "da78ceaa-30b5-406f-ac6a-6d3e5e10fb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad11662-94db-4252-84d9-232e0ffca643",
        "cursor": {
          "ref": "c6dfa87d-dffc-4a82-abda-83148bab9a91",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ef488a9c-c16e-4dd8-8eaa-9fa3e72fd428"
        },
        "item": {
          "id": "cad11662-94db-4252-84d9-232e0ffca643",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2eefc4d9-5442-4e02-ba24-b4bcd6da4ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2c5a60-1e03-49e1-b8eb-612241b5ccca",
        "cursor": {
          "ref": "c4bfce45-aefa-49a1-892d-d74a42f66e5b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "82765db9-9dc4-4cdc-b384-4fd467a2783a"
        },
        "item": {
          "id": "db2c5a60-1e03-49e1-b8eb-612241b5ccca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f227ab3a-0631-461c-a6f8-5db64d53aec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac561f2e-fd1d-4b8b-b631-4dd17d82c6dd",
        "cursor": {
          "ref": "604f065e-80a5-4a11-b357-7e7cf77ec901",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1f9d632f-0c21-4dd1-a0a3-348e32d85ce5"
        },
        "item": {
          "id": "ac561f2e-fd1d-4b8b-b631-4dd17d82c6dd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b53343af-d3ae-4d52-847e-7bdf446cc545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbbf3d7-6265-416f-8441-9a7550a328f3",
        "cursor": {
          "ref": "1599c2e2-bbe0-4723-b607-39cc5683ad6a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "06519227-db12-49fe-9c50-448cef5cc1d8"
        },
        "item": {
          "id": "2fbbf3d7-6265-416f-8441-9a7550a328f3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e5a17c5c-e913-473d-bd0d-547c725536b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d91d18-e4fb-41ae-b8cf-a5976b665c1b",
        "cursor": {
          "ref": "9b4346e0-fc63-45a7-bf0b-5f6964b37979",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "30c73d89-29b0-450f-92dc-86e92f236476"
        },
        "item": {
          "id": "35d91d18-e4fb-41ae-b8cf-a5976b665c1b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7c3746e9-c822-4981-b77a-c2c647f6d411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d248dd08-06d4-4ed1-8900-3098e0c3c698",
        "cursor": {
          "ref": "4c148fe4-ced6-406d-b573-6bf1abfd64af",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d8e2ad8-ed47-489a-80b4-c747532db220"
        },
        "item": {
          "id": "d248dd08-06d4-4ed1-8900-3098e0c3c698",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "17b5a95b-8f5c-4259-a47e-dcf608a91ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b04a3-9a2a-47ad-a844-b7b7dd72f886",
        "cursor": {
          "ref": "6a76b8c5-f62c-4a10-9586-ddef11832cd1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57e2039a-8658-4e23-8575-83173d65d74b"
        },
        "item": {
          "id": "7e7b04a3-9a2a-47ad-a844-b7b7dd72f886",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d85954a9-3611-4735-accf-d2ba943af79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f781d-206f-481d-b14e-05917513e204",
        "cursor": {
          "ref": "5d316082-77b1-4b3f-b6bd-819cc8436043",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7fac6d78-832a-4a46-971e-15d46b67a075"
        },
        "item": {
          "id": "ae5f781d-206f-481d-b14e-05917513e204",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05c11beb-ab89-4093-a03c-b96f311736f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d3c785-f09e-4a55-a833-b4ba8ed509bc",
        "cursor": {
          "ref": "ee6dd30e-d8f1-4a44-9a91-5c7f3e951fa2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e95f7d94-f25c-4665-8c0b-75b11bffd386"
        },
        "item": {
          "id": "20d3c785-f09e-4a55-a833-b4ba8ed509bc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "32868a9a-54f0-4ff5-b73a-a7c17a3957e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff6b909-b23a-4466-acf2-179cb0e95419",
        "cursor": {
          "ref": "4885166e-d65d-49a3-a894-381d5262243b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a13ab4d4-dc07-4925-b049-9fad7156e5df"
        },
        "item": {
          "id": "bff6b909-b23a-4466-acf2-179cb0e95419",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91a58741-0ae9-415e-935c-807ac0241057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6845c234-929e-4959-bea2-11aa52995c82",
        "cursor": {
          "ref": "30d7cb7a-2a3c-484b-8105-29feb73e56a4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "08a2c3f0-03a1-4b3c-8bcf-624402161b80"
        },
        "item": {
          "id": "6845c234-929e-4959-bea2-11aa52995c82",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c60d552a-d994-4af6-8d63-e0163214961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f36e60e-8eac-4e48-96d5-d5604dc25a88",
        "cursor": {
          "ref": "81d095df-a12d-429d-a5f9-267252671adf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ca7823f9-f7f4-4094-8afc-57e5b2439c03"
        },
        "item": {
          "id": "9f36e60e-8eac-4e48-96d5-d5604dc25a88",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5341415b-8d34-4fd4-ab1c-a8e7647d78f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d35d97c-8820-4594-ac17-b7f373388ead",
        "cursor": {
          "ref": "0fc8bca0-4498-4a8e-a9fe-bde44731737a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e433f7c7-543b-465e-863d-b38dd0684fef"
        },
        "item": {
          "id": "0d35d97c-8820-4594-ac17-b7f373388ead",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c4dda7d6-ede9-4333-8786-be00b54be898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68248de-6585-4d27-ba06-2f11a0a1c650",
        "cursor": {
          "ref": "86212e8c-1eae-4cae-b76e-42edf0d30a1c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "03cd78b0-b088-4a95-bee8-6bf668452d37"
        },
        "item": {
          "id": "e68248de-6585-4d27-ba06-2f11a0a1c650",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47f814b2-ca3c-44af-a436-d853d07e3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a36066d-58d4-4eef-8b98-5d91cdb47edf",
        "cursor": {
          "ref": "abea3203-8201-4c91-8753-6fa8237b61a6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18992b50-10a5-4a1a-a91b-b75ca1560348"
        },
        "item": {
          "id": "2a36066d-58d4-4eef-8b98-5d91cdb47edf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df8697e4-55d9-4f12-83ff-57fe1e19ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cd4e1e-d2c6-4d7f-8339-b3c3a0232a32",
        "cursor": {
          "ref": "dc735ab0-055c-4c8c-b2bf-fe4e745d9f14",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2da2f18f-6dc9-4de3-b682-0566fe8240e7"
        },
        "item": {
          "id": "71cd4e1e-d2c6-4d7f-8339-b3c3a0232a32",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "30014366-bdf6-4904-a9eb-ea5108da39b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6905a84e-ffae-424f-a90f-d5a1f3d64bd8",
        "cursor": {
          "ref": "3c0acce4-767e-48a4-a8d7-0da80457db83",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8b5fbb2d-2687-4645-aeaa-1c198c6dead5"
        },
        "item": {
          "id": "6905a84e-ffae-424f-a90f-d5a1f3d64bd8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36f85f0e-e465-49b9-be67-1ab635752a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88560c8a-bd6b-4b3a-be01-cbe4415b3de8",
        "cursor": {
          "ref": "d5dee63c-48bd-45e4-aaeb-5061e0f19808",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f88d67ad-68fc-4387-8725-f8b2238380d9"
        },
        "item": {
          "id": "88560c8a-bd6b-4b3a-be01-cbe4415b3de8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9f96796-87ac-4bfa-86e7-d165898051b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7195219-cdae-4fb7-a9a0-17cff0d0a71c",
        "cursor": {
          "ref": "6c54afec-4e99-40a7-b611-485ddd04a332",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47a471b9-5791-4174-aee0-0be131078d65"
        },
        "item": {
          "id": "a7195219-cdae-4fb7-a9a0-17cff0d0a71c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "89e13559-0831-4c83-b4e6-2743a0943928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837643e5-3730-46fe-88c4-48e8b7f1b2e8",
        "cursor": {
          "ref": "08b49008-b972-4c58-9ff1-68055bdb9444",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a4549671-96f1-4f43-b52a-913203a552ea"
        },
        "item": {
          "id": "837643e5-3730-46fe-88c4-48e8b7f1b2e8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9c11a1dd-8078-41ed-a4cc-be1e097b8873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536be7b8-929a-44b7-83f9-facd0e16a128",
        "cursor": {
          "ref": "5c27f4ab-57be-45e8-b421-d245e3eb47fc",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9370bdec-ef4a-4461-aa4e-e6334462940f"
        },
        "item": {
          "id": "536be7b8-929a-44b7-83f9-facd0e16a128",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c294d7e2-27d5-49bf-9006-6c2a909b7913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d98b19-deff-4d54-b570-4f7bf78b6754",
        "cursor": {
          "ref": "cbd50e85-2077-494b-bb48-edc21f862833",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "265dc6d2-90ae-45e2-9a18-b51a75e5230d"
        },
        "item": {
          "id": "78d98b19-deff-4d54-b570-4f7bf78b6754",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1165b9c1-fb7f-48f9-8519-88da214308a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9edde1-5322-4633-a713-d1607c8565f8",
        "cursor": {
          "ref": "97b471de-ee4d-458b-85f5-b3701a063d78",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c18bbe06-08bf-4d53-8b71-376430618d43"
        },
        "item": {
          "id": "1b9edde1-5322-4633-a713-d1607c8565f8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "634ffa74-1934-476e-be63-8717a21150dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796f53c4-47fb-438f-ab85-3b71eee54d7f",
        "cursor": {
          "ref": "50623635-5463-43d6-9139-464b644b0957",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "97144d13-b4b1-4144-8b9d-191753e1d6d4"
        },
        "item": {
          "id": "796f53c4-47fb-438f-ab85-3b71eee54d7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "709dc792-e394-4e7d-aa8b-f9a2179cca0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6870a9e5-69ec-4b4a-a944-c7b6e9f3797f",
        "cursor": {
          "ref": "9a671b49-6a7b-490c-a45e-41a2e1cbef44",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f42eafb9-2c6c-49e7-8de5-3a079d369f67"
        },
        "item": {
          "id": "6870a9e5-69ec-4b4a-a944-c7b6e9f3797f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "310445b1-20d3-4fd1-942a-d7fc5adf35a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26879778-3dc4-4399-ab4a-e3f3aac3c0dc",
        "cursor": {
          "ref": "ddd0a662-8c5f-42b0-8fab-dc186e0b5901",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7448eb0b-08c4-47e2-83b5-9d1f71fb9b22"
        },
        "item": {
          "id": "26879778-3dc4-4399-ab4a-e3f3aac3c0dc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "49995105-e4fc-44c0-ab45-d9bac4404370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545e2136-2b87-4ca3-8e5c-cdc73710c5dd",
        "cursor": {
          "ref": "2d29f4d1-57c9-41a5-88d9-05c177a51c20",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2e5237a-4f70-4a63-8a36-e825d2e84ee9"
        },
        "item": {
          "id": "545e2136-2b87-4ca3-8e5c-cdc73710c5dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d0f2c3de-4771-43e8-833b-ce0718214296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d911d8bc-0ff9-496d-84fc-08fff3034d04",
        "cursor": {
          "ref": "4afcfc5b-0477-41b2-a2d0-b2a870fc3ad9",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d43d7200-7fec-4635-a5cc-67cc64c17ae7"
        },
        "item": {
          "id": "d911d8bc-0ff9-496d-84fc-08fff3034d04",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "555409ac-82ac-4733-86f3-a4a2bb110ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd28b8b8-84d6-4cc4-8d78-a4cc21f809e9",
        "cursor": {
          "ref": "fdb35050-c1d0-4ead-9ead-6868f8f7cf4d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf8335ca-187d-47cf-b63a-92ab07a1cd43"
        },
        "item": {
          "id": "cd28b8b8-84d6-4cc4-8d78-a4cc21f809e9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c37cf3be-3afe-448e-b286-078f8c8d5ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b8732c-976e-45be-8352-6e473cec3a0d",
        "cursor": {
          "ref": "5faee9e0-2d1d-4c95-b9ca-6f94096765d0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a1feebba-ba9c-46c4-9db7-54cf69977d90"
        },
        "item": {
          "id": "43b8732c-976e-45be-8352-6e473cec3a0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6a6d8063-9c27-4f4e-8b99-fede472ffb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed9c812-a061-4c5d-82cd-52053d23085f",
        "cursor": {
          "ref": "bb37b540-17d3-4a6b-9b86-fa14ca458bc5",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d289c46-6425-4781-92a8-be2d4eff7440"
        },
        "item": {
          "id": "aed9c812-a061-4c5d-82cd-52053d23085f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2035c1b3-b0f7-4538-b0f7-45ffe94d4f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb96ec-e88b-4ad8-8990-e80a76921873",
        "cursor": {
          "ref": "b40f7059-c271-4d7b-888f-f85b32eb1af2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "491281eb-85cb-4a91-97fd-65de1b49ad9e"
        },
        "item": {
          "id": "c1bb96ec-e88b-4ad8-8990-e80a76921873",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a7e783c9-86ee-41f7-9315-33a8030b2563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac75cb52-bbbf-458a-ba8d-5bc4e58eb736",
        "cursor": {
          "ref": "ed91ada2-c5a5-49a4-aade-1e8c74bb5e3f",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7fc8ba02-474f-4de1-9da0-c13363c273c1"
        },
        "item": {
          "id": "ac75cb52-bbbf-458a-ba8d-5bc4e58eb736",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1b5622e5-0ae4-4040-a193-091e0d1bc840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76928219-2f5d-4b4c-80d9-f03c50668ce0",
        "cursor": {
          "ref": "1804b2b8-5c2d-4664-af36-0890e4ae3b68",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0b22018c-cf15-47c0-9f6c-ad1f8de8a879"
        },
        "item": {
          "id": "76928219-2f5d-4b4c-80d9-f03c50668ce0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "75de8d33-80f0-4d80-a3cb-e85c3da5cc8c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1499,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f37c68-a89c-49d2-8a67-8eb8c9363a77",
        "cursor": {
          "ref": "51e42146-85ce-430c-bdbb-a9a0fe833b8e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "476c3660-50d9-45fb-ac43-7eab4a4806d8"
        },
        "item": {
          "id": "94f37c68-a89c-49d2-8a67-8eb8c9363a77",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0bcd5f81-8b44-4bea-8b43-28ea62edb8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7988f98-2c9c-4670-9792-35e0c96391b8",
        "cursor": {
          "ref": "45b5ad87-36ba-4e51-b5b5-96b98ac9ecc1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "969de161-2858-4f10-9c51-589116a9241f"
        },
        "item": {
          "id": "d7988f98-2c9c-4670-9792-35e0c96391b8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "49004539-74fc-448e-a235-9de07e0a596f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1cd246-b498-411e-86fb-f36681689f29",
        "cursor": {
          "ref": "d63bf356-c4b3-46de-b4fb-c3e814a3579d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ab103cf2-4fcb-4ed1-9f72-47e3025729c3"
        },
        "item": {
          "id": "cb1cd246-b498-411e-86fb-f36681689f29",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "447bf427-6df3-4306-adc6-c449281e5b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ef1ac7-de92-4045-8935-f1d9f09c1d38",
        "cursor": {
          "ref": "3b3fc793-14d4-4efc-91c3-700270f0c41b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "19c37cd0-be35-4160-bcd9-d60d06d01134"
        },
        "item": {
          "id": "d1ef1ac7-de92-4045-8935-f1d9f09c1d38",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc0b43b2-d2a0-4098-802e-1634e1f2ecd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5728ae9f-e75d-4a18-b350-d589f2754c59",
        "cursor": {
          "ref": "787d7cd3-15f0-4500-8593-f9b35a4f10b6",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d5df68ce-ea95-499b-9621-860f3cbddc15"
        },
        "item": {
          "id": "5728ae9f-e75d-4a18-b350-d589f2754c59",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b84934b6-6d57-4d0e-8f8d-90339000ad05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b352962-25d6-4546-978c-c63688d61ca8",
        "cursor": {
          "ref": "0b11a71a-553c-440f-8a6c-509cbcc6887c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1a594ce-1efe-4f8f-943c-d8d5d8857a2a"
        },
        "item": {
          "id": "6b352962-25d6-4546-978c-c63688d61ca8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "586d814f-dbd6-46c2-bf25-5061c7e86496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7930fc32-8219-4500-8370-6fa0cb4e038e",
        "cursor": {
          "ref": "042e14fb-fa63-435d-a99b-c1349c3bc3e3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "008f6ac3-6b77-4787-a872-01e7fb922dd6"
        },
        "item": {
          "id": "7930fc32-8219-4500-8370-6fa0cb4e038e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba435fa0-8af9-41bb-8c10-b6072e9b674f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1541,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d6742e-3b60-45f4-9f89-7bc7c9aa280b",
        "cursor": {
          "ref": "b0a9778b-c66c-44e9-a83f-da91e09cbeba",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f925ddbc-1c68-4606-bf81-e06b09efd95b"
        },
        "item": {
          "id": "c5d6742e-3b60-45f4-9f89-7bc7c9aa280b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "947e5b23-462e-4843-948f-44e13f003126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e8d4f-1d19-4f56-b0c5-4409fe3f4166",
        "cursor": {
          "ref": "c9341bc8-8491-4c9e-b2c1-2cf409301ed5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4171f53b-1db5-49ab-9c36-27d1e3b2a7ba"
        },
        "item": {
          "id": "3e0e8d4f-1d19-4f56-b0c5-4409fe3f4166",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5e8e40aa-7271-4350-a9b8-752bb36717d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dc8d3c-2fed-488d-a875-3f1c68df1a0d",
        "cursor": {
          "ref": "9facd22d-2e61-40ce-9a7e-66b08e80e685",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "01d92ba6-6dee-41f1-818b-34c7351852dc"
        },
        "item": {
          "id": "67dc8d3c-2fed-488d-a875-3f1c68df1a0d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ba297b0-dfc1-4edf-a930-a839d9b21d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe9d740-c43b-4e2c-96bd-ea5b01bf4760",
        "cursor": {
          "ref": "8acb34d4-85a7-4267-9921-0de04c852cf8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d2fcfad3-a3ee-4711-ac0e-b17152bdd7e1"
        },
        "item": {
          "id": "9fe9d740-c43b-4e2c-96bd-ea5b01bf4760",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aa1603f2-a46a-4f88-896d-9b71470d0f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b0dfca-0c46-4f39-855a-bfbd7e599ac3",
        "cursor": {
          "ref": "113e1af5-26d9-4638-9fb7-8d862e89f986",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a867261b-24f0-4f1d-877f-50c71af8f925"
        },
        "item": {
          "id": "e9b0dfca-0c46-4f39-855a-bfbd7e599ac3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "22ccb1b3-acbc-4dd8-9223-2f33674a2cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f958f3d9-1107-434e-9b2c-e5bada3d4cc4",
        "cursor": {
          "ref": "51647041-ef7b-44b3-ab89-74114b45ee9f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa0b65bb-6014-4347-ab39-3bc1de291139"
        },
        "item": {
          "id": "f958f3d9-1107-434e-9b2c-e5bada3d4cc4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ce1615cf-210a-4911-ac59-18a311c6cb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ff7368-dd49-45da-ab88-3961c68454c7",
        "cursor": {
          "ref": "54bc9fa3-2d6d-4b31-b54d-777cabfbaaa2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6d8bbb6f-b46c-4a4f-83ce-7ba501bfa00f"
        },
        "item": {
          "id": "43ff7368-dd49-45da-ab88-3961c68454c7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b3f9aa0f-81a3-4255-ab2d-fbf8cee19717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69cf269-fc61-4309-851c-37da2b8a6952",
        "cursor": {
          "ref": "e87eb1e1-aaa0-4a2d-bdb2-c5b1ead32ecf",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cc463f3e-ca92-4cf9-9dca-7216be9e74fc"
        },
        "item": {
          "id": "f69cf269-fc61-4309-851c-37da2b8a6952",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a47cdcb8-e60f-4668-a26b-f3d058e42b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edb2fc9-d232-4507-aada-d318a6692288",
        "cursor": {
          "ref": "877ed839-3465-46e1-bfdf-8d76a4054521",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b1eb2a31-88f7-468c-876e-faed855329e5"
        },
        "item": {
          "id": "8edb2fc9-d232-4507-aada-d318a6692288",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b1d1a24f-b1dc-4f20-8863-16167bd66177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b05b3b0-96b4-4b2b-8ead-b6e8d0c7c539",
        "cursor": {
          "ref": "bef2a5c8-e8a6-4f0e-b61c-2de67d89d903",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea3f8b31-3288-479c-8829-02273c270789"
        },
        "item": {
          "id": "2b05b3b0-96b4-4b2b-8ead-b6e8d0c7c539",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "61866f8a-a21c-45b7-8e39-6f67884c166d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c258a6-55fd-42f9-95bd-5a4fb79cbc80",
        "cursor": {
          "ref": "5e4f27cf-7abd-4cef-b4e4-a587b0658d99",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6d71f70-4348-46ee-808a-996d3a2ff196"
        },
        "item": {
          "id": "09c258a6-55fd-42f9-95bd-5a4fb79cbc80",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d829c7b4-39e7-4d47-b7ab-5a0d5fd9bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef9edbc-22be-4f36-809b-371415ba86f8",
        "cursor": {
          "ref": "54b6a7e4-12f2-4167-ba8d-296637c1d81f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "035bde17-af3d-466d-aeeb-7ff37e4b9d12"
        },
        "item": {
          "id": "bef9edbc-22be-4f36-809b-371415ba86f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1b9b2751-cc95-4c67-a5b9-d76021ef9272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb83238-1ed5-4fcb-aae3-0c542626a0ac",
        "cursor": {
          "ref": "dd15a49f-ee84-4cdc-b2fa-4dcab76e2220",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8cf28824-3f85-44d4-a5c3-2e22c13ad7bb"
        },
        "item": {
          "id": "9bb83238-1ed5-4fcb-aae3-0c542626a0ac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "480feb33-6fe7-44da-97d7-d34c54206419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2ddbbe-8265-42a1-9969-d43e9dc5bc35",
        "cursor": {
          "ref": "bf53edc4-b583-4e1a-8a14-2e77862b312a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "202cd716-6369-4fd8-a0e7-29d191e5fb63"
        },
        "item": {
          "id": "5c2ddbbe-8265-42a1-9969-d43e9dc5bc35",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bcfe6224-7cff-4021-ad05-1cada5e6ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6366c13f-a31c-4bad-8666-97ece753ee94",
        "cursor": {
          "ref": "fa231f79-02e5-4b53-9600-a2337f65e55f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2f9b312d-73a3-40ef-954d-ffd512c8e035"
        },
        "item": {
          "id": "6366c13f-a31c-4bad-8666-97ece753ee94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8870e98a-0bcf-4be8-a9a0-9a05238a02e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81170d06-b1d1-49bb-b796-618fabc26bce",
        "cursor": {
          "ref": "3e05b8df-15f5-4927-87de-907cd8151744",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8a2a1e0c-0974-4157-8f7a-5f810c9d6f6d"
        },
        "item": {
          "id": "81170d06-b1d1-49bb-b796-618fabc26bce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "81e749dd-1e55-4e21-9a0a-622910fce258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebffa359-d763-4895-b285-9c6e5ac16797",
        "cursor": {
          "ref": "1a742617-adc2-4517-bc25-453da6d05848",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "917f993f-eb45-4746-adce-dd008c15724f"
        },
        "item": {
          "id": "ebffa359-d763-4895-b285-9c6e5ac16797",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "afa493ab-7d4d-4f68-a5e3-6572ed83fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50033dda-bce4-4de0-a6c2-e30b11bf4408",
        "cursor": {
          "ref": "e31807db-57e8-4b54-aea8-4eaca214b2af",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d6c7689c-79ac-4bd7-95f2-13252996fac4"
        },
        "item": {
          "id": "50033dda-bce4-4de0-a6c2-e30b11bf4408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c616bf60-38ac-4dd1-b499-de2f8e7ade0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df51b31-5a42-4690-8863-8a350b7af776",
        "cursor": {
          "ref": "77dd48b3-b115-4894-9c35-d961af871414",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "22d1b913-7d88-46a0-a768-6b049ab9ac91"
        },
        "item": {
          "id": "7df51b31-5a42-4690-8863-8a350b7af776",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af71486c-da7a-416c-91f3-90d15f6637a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a3d7d8-e85e-4561-a979-0e7019bcfd6e",
        "cursor": {
          "ref": "105f0963-a475-4160-bf63-0cdcbd9729ce",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5d3d2fcf-d52e-4c40-80fc-58c8c5c8c3f0"
        },
        "item": {
          "id": "22a3d7d8-e85e-4561-a979-0e7019bcfd6e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "059fca66-a36d-4c29-89a5-92f3eeb01f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50de8b66-adee-4947-87a3-8706e7fe6bad",
        "cursor": {
          "ref": "ddd73ad3-c948-4aff-981f-7889097a334e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ef6e1b0b-1f0d-4fb0-94c1-04d57e6544fb"
        },
        "item": {
          "id": "50de8b66-adee-4947-87a3-8706e7fe6bad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "306c1321-b797-4e5d-a31b-b1222b38e79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f00d90-eba6-439d-824b-9dbdd915cdb7",
        "cursor": {
          "ref": "141aa4ae-1cd0-4ed2-8648-b315f9e72bc0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ca1de013-c805-4c13-a15e-48abd6266d9b"
        },
        "item": {
          "id": "b0f00d90-eba6-439d-824b-9dbdd915cdb7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e11fbe40-66f9-40a8-ad4a-b31e2598156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10403d05-1733-48b9-9201-8a11a3f18a33",
        "cursor": {
          "ref": "e7c79f58-1d41-473e-8327-7cd6410c22ba",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8806b599-645a-4324-87ed-77bb5a72db7e"
        },
        "item": {
          "id": "10403d05-1733-48b9-9201-8a11a3f18a33",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff09a670-40a8-4f6d-a21d-9eca1c7629d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba14dbf-d596-480f-8ce0-6027c4fac9d6",
        "cursor": {
          "ref": "b6f66a2b-440b-4f87-8f3c-240017a5d3be",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d3016c29-031c-42df-a2e5-be11b7b7f817"
        },
        "item": {
          "id": "4ba14dbf-d596-480f-8ce0-6027c4fac9d6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c4316ef0-f138-438b-aefe-2298a54beae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb13a248-7513-4d70-885c-bfb8ccd07fe9",
        "cursor": {
          "ref": "18ac177c-546a-43fe-8731-da3f71ebfd5f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ef277919-8c4e-465f-a195-aa068760cf1e"
        },
        "item": {
          "id": "bb13a248-7513-4d70-885c-bfb8ccd07fe9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "697a5fea-a4a7-4702-bc7e-2a514f7a5562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f82e2f-7ee2-4004-8bf9-a9e25f41f4c8",
        "cursor": {
          "ref": "d34a52be-b7ae-45ed-bfe4-15627552a1f2",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dee05bde-fe86-4f43-9e0a-2ad52675cc2d"
        },
        "item": {
          "id": "a3f82e2f-7ee2-4004-8bf9-a9e25f41f4c8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bcdd93d1-4668-4389-9295-38cc4b5389c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa3cae-c225-48d3-9957-13343b542108",
        "cursor": {
          "ref": "79593c7a-88aa-4075-aec2-b2e9f9ad8ac3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d0f95191-0165-48ca-bd2f-73120e7b76e9"
        },
        "item": {
          "id": "baaa3cae-c225-48d3-9957-13343b542108",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "84af5346-76de-4629-9665-1c9ae506375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d9d3d-6c69-433a-95ad-dbf5daea778e",
        "cursor": {
          "ref": "9a764ef0-d4cc-4e0e-a58a-5850ad3e9cf0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "42c58f77-5b9b-425c-bf19-16d582d2d8e4"
        },
        "item": {
          "id": "042d9d3d-6c69-433a-95ad-dbf5daea778e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8bf8f107-be69-4b21-8f96-3504e59b4870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7f0f12-3a8f-48d1-b38c-e776aefd0270",
        "cursor": {
          "ref": "262c37d2-99b1-4752-9322-6d8eced6e058",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a0205af-a25b-4d26-9d98-e14559d40d64"
        },
        "item": {
          "id": "5e7f0f12-3a8f-48d1-b38c-e776aefd0270",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ecbdbd6a-5b9c-45b1-8b34-b659a80e92ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edab4d02-3948-4762-83d4-95fbe08afb28",
        "cursor": {
          "ref": "a6e80397-9ba1-43b0-a1ce-2bb9a5f7b385",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5d0410ea-c9e1-4541-93ef-a96c049d678a"
        },
        "item": {
          "id": "edab4d02-3948-4762-83d4-95fbe08afb28",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3ba10650-9916-4707-b7c4-1e6a53bafacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39327894-568c-4193-be96-51a0508c80eb",
        "cursor": {
          "ref": "dbc44a00-ee7f-479f-9926-6201587dc922",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "04479583-9185-458b-b10b-be9f2aa191bb"
        },
        "item": {
          "id": "39327894-568c-4193-be96-51a0508c80eb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "50ece677-07d3-4a12-aedc-a248814e2348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d9e694-4ff3-4fa2-b946-e2e4020aae43",
        "cursor": {
          "ref": "e0dfbdac-b7f6-4b34-bac1-a500f0f502a9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "130c9533-af7c-464c-9a5d-65067e35e439"
        },
        "item": {
          "id": "a7d9e694-4ff3-4fa2-b946-e2e4020aae43",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "39e25a02-df15-4044-9a10-0dd8d044ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c95fd-c13d-45dc-ac27-8b014f78404a",
        "cursor": {
          "ref": "f495ef45-746d-41ba-8649-688737ccb73d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "129efebe-cbed-42e4-a036-6b3759d13ee9"
        },
        "item": {
          "id": "310c95fd-c13d-45dc-ac27-8b014f78404a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1b6cc310-38af-41c7-b06a-4daed644bd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91178ab2-daa4-4221-b66a-e0a830c42c63",
        "cursor": {
          "ref": "4540cf01-2a6f-4fc7-9688-c2192527ded4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff2e7ce8-0ba3-482d-8182-11bcdf86eaeb"
        },
        "item": {
          "id": "91178ab2-daa4-4221-b66a-e0a830c42c63",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1380a441-6515-41d7-a24d-4162adfd9667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0b2d9d-5f27-4252-a172-1337813e1f44",
        "cursor": {
          "ref": "9762f939-3d7d-4848-8c86-926a57fd48f6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "40e722c3-92d6-4be7-a664-cecdac00dbb4"
        },
        "item": {
          "id": "8b0b2d9d-5f27-4252-a172-1337813e1f44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "73c6d164-0193-4b7f-aba7-578a4bdfe454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769d0797-8798-467a-84eb-4116417e33c3",
        "cursor": {
          "ref": "610d29f2-162a-48bf-9db4-478b2d508972",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fdec7930-7522-45da-9b67-c14e1cc927c2"
        },
        "item": {
          "id": "769d0797-8798-467a-84eb-4116417e33c3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4e632ba0-7565-42a5-a75f-9f489175e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0800ef3f-746c-469a-9746-993443791728",
        "cursor": {
          "ref": "df68a9b8-29ce-4c14-a88d-5b15052a2d86",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f92e86dc-0d31-4ab9-9bf0-f77f530e250a"
        },
        "item": {
          "id": "0800ef3f-746c-469a-9746-993443791728",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "73b40eaa-92a6-46a9-bb4a-13fef2ff2701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d7e946-18a4-44d8-829a-dd69badc8fe4",
        "cursor": {
          "ref": "a611df99-463e-4004-b7bc-e299a25ff32d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b058fdd0-19bd-446e-8215-f252020c17db"
        },
        "item": {
          "id": "d6d7e946-18a4-44d8-829a-dd69badc8fe4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c696c4e6-9abd-4b36-aeec-5bcc04cc1f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92a807-67d9-4eb7-bb74-1bf4f84c7568",
        "cursor": {
          "ref": "27fdaf06-60d6-4099-aef6-cf233b4cec8e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "80f55113-9a1a-4133-8538-6c52639466fc"
        },
        "item": {
          "id": "ab92a807-67d9-4eb7-bb74-1bf4f84c7568",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "93241a10-a84c-4eb5-a3f6-dd0491840969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95390cfa-95f3-4647-b3fc-85cc2a291621",
        "cursor": {
          "ref": "76b8ef52-9e96-4825-8556-ac84cb7a5a36",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06eeb5a5-a624-4c90-87f1-e5f9d34fa602"
        },
        "item": {
          "id": "95390cfa-95f3-4647-b3fc-85cc2a291621",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "983f4ef8-6057-48de-9775-2f61fcb7c9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ae37ba-1e64-4fde-ac16-29baafb031cb",
        "cursor": {
          "ref": "08ec573a-9797-48fb-8639-7270afb509ac",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e5ea0e88-46d4-4022-bf59-58bab91c2f68"
        },
        "item": {
          "id": "e9ae37ba-1e64-4fde-ac16-29baafb031cb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1be56f3f-d66a-4c1a-a631-5a2920134d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d6498e-b97a-4a2d-a89f-e7b7b83625ef",
        "cursor": {
          "ref": "63b88f9e-2b62-435f-8c35-e624390b43a2",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0dc7d3b8-c64b-44ff-a973-60eb5f8eef32"
        },
        "item": {
          "id": "88d6498e-b97a-4a2d-a89f-e7b7b83625ef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "89ad213a-2924-4010-ac13-b85f39d72c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a7b7f-5ae1-4914-8796-6a4499bf5d6c",
        "cursor": {
          "ref": "96bd59d0-63bf-4234-a81c-af3cd4995793",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9d9f1f5d-77d7-4daf-85bd-f9442873ce09"
        },
        "item": {
          "id": "b36a7b7f-5ae1-4914-8796-6a4499bf5d6c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "41252582-2606-4213-abe0-78e80b02db2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e04b34-c7ca-4714-bf0f-c431d1cff245",
        "cursor": {
          "ref": "c0d4a932-5f97-45f1-a25c-54fd1db66bfa",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3feacbce-691f-42cf-b834-65c8ef0f79cd"
        },
        "item": {
          "id": "b3e04b34-c7ca-4714-bf0f-c431d1cff245",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b701eb8b-1152-46e9-987a-d9e47cf5b5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6280f923-cfe8-4e63-91db-6af3368c5505",
        "cursor": {
          "ref": "ea276f1c-b68f-4325-98ff-ca569438915f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "67b7c9b2-844f-4510-993c-135a5fb23553"
        },
        "item": {
          "id": "6280f923-cfe8-4e63-91db-6af3368c5505",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8f30628d-d9b8-451f-8e45-3939c3a22467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383b55a7-f0ac-4d57-88bc-1ca4a430ee05",
        "cursor": {
          "ref": "88557455-0399-4913-a3aa-b60a1256a0b5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "425fb6f3-2129-46e7-a336-f79054c13220"
        },
        "item": {
          "id": "383b55a7-f0ac-4d57-88bc-1ca4a430ee05",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4071db84-d10b-41c0-a0e8-2ee3ffa21d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c21b41e-ed15-4181-81b6-ede58f538e8d",
        "cursor": {
          "ref": "d1559611-c506-474b-a49f-832b35cf8596",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "60d2449d-6ba2-4ed0-bed3-93c70eabb811"
        },
        "item": {
          "id": "3c21b41e-ed15-4181-81b6-ede58f538e8d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ca3eb8c3-bddf-4920-be4b-4bfdb7c442dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9570b2-3494-4327-9df3-ab96fedcbcd7",
        "cursor": {
          "ref": "a1befbaf-2892-48e8-ae98-712368111fc3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4cf8df13-9318-4c0e-82ed-eb1f8151473f"
        },
        "item": {
          "id": "bd9570b2-3494-4327-9df3-ab96fedcbcd7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "76ce7200-5b1a-494f-9a85-3315366a98d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0125ea4d-0d13-45ce-a655-5d3e9f8e2e7c",
        "cursor": {
          "ref": "bbb21b2b-e228-4926-9b2c-c56a3b40e9a8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe5cf065-d639-47cf-b0f6-25a432b4687d"
        },
        "item": {
          "id": "0125ea4d-0d13-45ce-a655-5d3e9f8e2e7c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8eae8a67-3307-49f9-966c-2b8969216449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1454b04f-77fc-4ebe-b8da-794490c9dd0d",
        "cursor": {
          "ref": "535e835f-0e39-490d-be30-ee83e74f472d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ff6dbf9c-eb3c-440b-88ec-44093d65fc76"
        },
        "item": {
          "id": "1454b04f-77fc-4ebe-b8da-794490c9dd0d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a29d7898-7a20-4fa9-b203-67bec764c6e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da92ff-6593-4c9b-9648-c9bcd1cff7e2",
        "cursor": {
          "ref": "eb2fa342-f5a3-4843-a2b1-3140fef52895",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "56cae15b-97fb-4f4b-8d74-8a9fa75082de"
        },
        "item": {
          "id": "67da92ff-6593-4c9b-9648-c9bcd1cff7e2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ffc5f820-c00e-4d37-a6a1-d21a1ebe3a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "297fef20-a272-486f-aa30-6fa87f7881d0",
        "cursor": {
          "ref": "83c2c1ee-fffa-4add-b390-9fb70a622af9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7ec34e34-5f65-4bcb-a71f-c3aa65754161"
        },
        "item": {
          "id": "297fef20-a272-486f-aa30-6fa87f7881d0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "42438383-3599-4d82-82a3-8f7abe650812",
          "status": "Created",
          "code": 201,
          "responseTime": 8495,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c83e3-159b-4523-be72-5b5ca3c6e911",
        "cursor": {
          "ref": "fc9575ca-532e-4f74-997a-425ddb8fe896",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b6837c64-2d76-47b4-9dfe-1ddd20e9c41b"
        },
        "item": {
          "id": "647c83e3-159b-4523-be72-5b5ca3c6e911",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d1677098-f2bf-4aa9-87f9-0a09b39f778b",
          "status": "Created",
          "code": 201,
          "responseTime": 8865,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e771f94a-2f11-497e-8d0a-ff6e648248f7",
        "cursor": {
          "ref": "1a923856-513f-441a-82b5-feefdf98775b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "37aa60dc-7e15-4318-bac8-5e4ede28032c"
        },
        "item": {
          "id": "e771f94a-2f11-497e-8d0a-ff6e648248f7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c64082f8-4a01-4bec-bb97-9c351d41fc2e",
          "status": "Created",
          "code": 201,
          "responseTime": 7929,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e8f04f-d781-46a0-a7bd-21cde69fa709",
        "cursor": {
          "ref": "0dd8de44-a058-4f0f-853a-2680877676e6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "16306f3c-f831-4b50-a7c3-ddaedb8eb342"
        },
        "item": {
          "id": "38e8f04f-d781-46a0-a7bd-21cde69fa709",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "393123a1-2517-41f4-bd33-2fa51a34be18",
          "status": "Created",
          "code": 201,
          "responseTime": 8038,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c9125f-9418-4003-b202-ed1aed5c5403",
        "cursor": {
          "ref": "7ed17e1f-39b8-41dd-a247-a196a2fe2221",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bf0940b0-35d2-403d-b3af-c17c8991a4a5"
        },
        "item": {
          "id": "74c9125f-9418-4003-b202-ed1aed5c5403",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0c7d6945-061f-4ac7-82ed-417fe3b6b496",
          "status": "Created",
          "code": 201,
          "responseTime": 8415,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0313ad6d-3665-4ad7-bab7-866399cb7c26",
        "cursor": {
          "ref": "37b9f83d-2369-4dfc-9abe-bb57bb26331d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "db82536b-6e37-4896-b565-42c813b73d5a"
        },
        "item": {
          "id": "0313ad6d-3665-4ad7-bab7-866399cb7c26",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ded260aa-5bfd-4ee8-a9c1-c4ef24f6b7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9c81ae9b-05ec-41c3-8ac2-025275891740",
        "cursor": {
          "ref": "342c5e14-6a17-40aa-93f7-b240e201ea37",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bec05a6c-d59c-485e-8788-a99fa12890f6"
        },
        "item": {
          "id": "9c81ae9b-05ec-41c3-8ac2-025275891740",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2160199c-df2f-4d74-81b5-ecf7c248e381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceacd2c-5687-477e-b19d-eccc5463b0c8",
        "cursor": {
          "ref": "27d94fb1-f892-4b43-91ff-60b478e54c48",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3a29f3c-4694-42ad-aa0b-09bb4526a61c"
        },
        "item": {
          "id": "9ceacd2c-5687-477e-b19d-eccc5463b0c8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c897e0ac-2c5e-4e59-ab75-9b42ac2b70be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3ce48c-bcaf-4d9f-a354-ceed9125813a",
        "cursor": {
          "ref": "6e6241f5-b626-4022-a487-4a0e8927ec9f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4402b556-0d5a-4c84-bebc-37602219e679"
        },
        "item": {
          "id": "1a3ce48c-bcaf-4d9f-a354-ceed9125813a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b3b90883-3d34-4463-b7c5-e09e414ad3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2271ef01-c84c-43fa-8e0d-9b9ecdd529df",
        "cursor": {
          "ref": "eef90310-bb67-40cd-9b06-8b837c19abcf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de0830b6-ee05-48ea-bcb1-71495008819b"
        },
        "item": {
          "id": "2271ef01-c84c-43fa-8e0d-9b9ecdd529df",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7b73b8ea-eb29-4096-a7d3-0d2aa03ec038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3f1fa-12e8-4535-81d5-d1f92f9e0428",
        "cursor": {
          "ref": "5e6fd8a4-c7c0-42e3-95a4-87764ccd05f3",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4f59c352-8514-4fb5-a5ff-3f181311d4b7"
        },
        "item": {
          "id": "88b3f1fa-12e8-4535-81d5-d1f92f9e0428",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8940c3f-4d8f-4f17-bd9e-258c03cb28a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51917598-9ecd-4f04-8d68-3d32371fa6cd",
        "cursor": {
          "ref": "d123ee36-4b6e-4ce7-b5b1-b8f2a90981f6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5a19fa1-9d33-4c1e-a4e3-2b010125cc97"
        },
        "item": {
          "id": "51917598-9ecd-4f04-8d68-3d32371fa6cd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8e793a50-731a-4a07-a5c4-b0cb373c641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96c352e-c002-4e70-895a-222bdeed993b",
        "cursor": {
          "ref": "cd77ff06-50b2-4b11-bdc8-9c2f6b01cc04",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eaa21d8d-9e0a-4e88-a96e-3827c9dad088"
        },
        "item": {
          "id": "a96c352e-c002-4e70-895a-222bdeed993b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc0f1cbd-7ca4-483d-a06d-890f51032183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3729ff6f-5f1c-4b99-aba2-f0cad1e7f113",
        "cursor": {
          "ref": "507cea1a-0173-4320-94fe-43c0f60281fd",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "259f39f4-b709-4766-ae23-22a42c0bd39b"
        },
        "item": {
          "id": "3729ff6f-5f1c-4b99-aba2-f0cad1e7f113",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c667c9b2-79ad-4281-956b-4978d9ea11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd170b1-45c2-4979-8da1-bff7c9ccc86e",
        "cursor": {
          "ref": "395fbc67-9048-4b6d-8dcd-313505ee8f96",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1108bd71-73b4-49b6-9adf-e6e0f4efdfe0"
        },
        "item": {
          "id": "dcd170b1-45c2-4979-8da1-bff7c9ccc86e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a808e065-8b23-423f-916e-dac5c22abbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1490d455-e68e-4f73-bdcf-b1995ea0a86a",
        "cursor": {
          "ref": "f74b62c2-0b08-4652-86f8-b4b44fb4488c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "78c2a918-1ade-461b-ace0-00c0851fac26"
        },
        "item": {
          "id": "1490d455-e68e-4f73-bdcf-b1995ea0a86a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1f0a9c17-20aa-4b7e-b6c9-f283361f0e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa161b3e-9d4b-47b0-af84-43fcb6583d8d",
        "cursor": {
          "ref": "be411c77-652d-4495-8a54-b40a7645d35a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f57718c0-e8a6-4a60-a927-d08486d373ee"
        },
        "item": {
          "id": "fa161b3e-9d4b-47b0-af84-43fcb6583d8d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "14853062-8a26-4155-80e1-497c30c34f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f7865d-9ba0-4fa8-beee-12ca25bcc808",
        "cursor": {
          "ref": "db45e453-0759-4859-b903-02c4f851f684",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "70d36016-cb47-4d1a-a9e6-6dc3d9f9e549"
        },
        "item": {
          "id": "f7f7865d-9ba0-4fa8-beee-12ca25bcc808",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a866d02e-4800-4ee2-ba2b-dfcc0741eb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e31f78-c72b-4c3a-84dd-20413d5756bf",
        "cursor": {
          "ref": "130ac895-5b60-4933-98f9-6e1f5256aad4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1bff72e2-f3f5-4870-ad6b-149cdcc96787"
        },
        "item": {
          "id": "c2e31f78-c72b-4c3a-84dd-20413d5756bf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ea7e121-7129-4778-807f-8f4f3f3a4e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d290fe-7376-4ea6-860e-76627fb8d10a",
        "cursor": {
          "ref": "3046d476-38d1-4b77-844e-9565a2f6aaf3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e87c95f7-a969-4c0e-aa21-7d1c0522f9e8"
        },
        "item": {
          "id": "20d290fe-7376-4ea6-860e-76627fb8d10a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b91b6ded-557c-4d0f-be2a-e52d07a843d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce398401-3ae2-4ba4-abd0-6ca370c34791",
        "cursor": {
          "ref": "3a206035-fdd4-41a1-9757-37777866e725",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b0d23836-d6b6-406e-a1a9-fafe73ebde38"
        },
        "item": {
          "id": "ce398401-3ae2-4ba4-abd0-6ca370c34791",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96b6a53f-b759-4ea4-9f61-78c79c12f08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d4666b-9ada-40e4-a20a-4774bd23ed31",
        "cursor": {
          "ref": "968894d1-9ece-486b-988d-b5d3421f3222",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5f136ba6-35b4-4d22-a2d2-8ae7ddbee7a0"
        },
        "item": {
          "id": "f7d4666b-9ada-40e4-a20a-4774bd23ed31",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eba82dfc-7211-458a-a910-f367fc17530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0662d993-3710-4903-8d3c-70c522aea3bd",
        "cursor": {
          "ref": "76a4f86d-572d-4a34-9297-1369f7b43739",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "71896dfc-d9a6-4aaf-8f0e-08447e0f456c"
        },
        "item": {
          "id": "0662d993-3710-4903-8d3c-70c522aea3bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d95d75c-cca7-42d2-bb23-db99ad8de751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca39103-86af-4198-9b9d-a55bdc5e2958",
        "cursor": {
          "ref": "6e82a700-4e2d-4d6e-bd13-e889edd6702d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d7595254-a24b-4079-93b5-b4c74501e2a6"
        },
        "item": {
          "id": "8ca39103-86af-4198-9b9d-a55bdc5e2958",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "67b983e5-6760-40e5-9690-83e3143db154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca5418-3dc4-4223-b542-a367702b1988",
        "cursor": {
          "ref": "330a17f2-df45-40b3-8212-13b38188a1e6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "18d2829d-f557-48c3-9791-1cc39a34fd5e"
        },
        "item": {
          "id": "53ca5418-3dc4-4223-b542-a367702b1988",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d4d509e1-da67-45b0-9387-88f8dc5612e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eafbdc-69df-4bf7-a2a1-f6695167307a",
        "cursor": {
          "ref": "036e9fd9-e962-424f-b290-271c16a23bb8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4a5af5c1-994e-421d-983c-32642d0ffa96"
        },
        "item": {
          "id": "08eafbdc-69df-4bf7-a2a1-f6695167307a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "52ca43d1-2004-4b34-ad7a-7cd861b423cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bda5a59-5fef-46b2-94c8-9cac3b158e7b",
        "cursor": {
          "ref": "e4754cca-0cb7-4762-8957-d6415d13eccd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2676c09f-4fe6-4bd8-933f-298232fa32d4"
        },
        "item": {
          "id": "3bda5a59-5fef-46b2-94c8-9cac3b158e7b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b9c32599-43f1-4692-ad6a-bb8cad401504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aadc554-5e91-49ac-8181-e248982dead7",
        "cursor": {
          "ref": "bc59a3fd-30f8-420b-a204-4e05ad3d29a9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "870f7b41-f2db-4d3a-bca0-9ce217ccb23a"
        },
        "item": {
          "id": "1aadc554-5e91-49ac-8181-e248982dead7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1a88712b-a87f-40f7-bc70-983d2af116c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08063455-0071-441f-9ac1-1b1df1241a50",
        "cursor": {
          "ref": "e19f1571-3f8a-4701-9b94-a23bcadc01b7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e2604cc9-77d1-452c-b5b2-6f52c6da104e"
        },
        "item": {
          "id": "08063455-0071-441f-9ac1-1b1df1241a50",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "461c1f8c-ef15-4619-ae28-c65905bc1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12664a84-8ff9-4434-8d3e-a599bb387dcc",
        "cursor": {
          "ref": "5376c5b3-5f36-4d17-8ced-c703e4b5769b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1def52de-d08b-4bbd-8bf0-e57785ab1e87"
        },
        "item": {
          "id": "12664a84-8ff9-4434-8d3e-a599bb387dcc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ede12a4b-1c36-4265-a2fa-c677b7b192da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e96d9c-e8fa-47be-a2da-137e01f1d77d",
        "cursor": {
          "ref": "3c49575d-1d4f-48d8-b6f5-8e4e94ed602d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc4561bd-ea24-403a-be0c-27dadbfa8190"
        },
        "item": {
          "id": "76e96d9c-e8fa-47be-a2da-137e01f1d77d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f22a3b10-e0af-4b57-96fa-f086cde4b347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e959037-6db3-4a8c-9670-bbb7c6a0f5c1",
        "cursor": {
          "ref": "2541aa55-b6e3-4087-ae77-20f4ad3747b5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "043571a2-c4c2-48f8-be4d-bd0573030364"
        },
        "item": {
          "id": "8e959037-6db3-4a8c-9670-bbb7c6a0f5c1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "21ff6634-c967-4cc7-9237-06dedf1f2331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2eeb4b-2fa2-465a-b9ba-58c19cee6fc1",
        "cursor": {
          "ref": "1cbfa3f3-a3c3-4d59-a1d1-f88c9ad2f09c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "27ac0922-d2be-46ae-8270-19f8ea54e56c"
        },
        "item": {
          "id": "5e2eeb4b-2fa2-465a-b9ba-58c19cee6fc1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d6a6ec30-55fb-4883-859e-7887cd17d910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddc40a5-60b3-41bd-9f68-ea24799ddec3",
        "cursor": {
          "ref": "34bae8ef-ba04-4e19-bb2b-443439afe5f3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d7167291-940d-427f-a79e-0fc1f74d234d"
        },
        "item": {
          "id": "bddc40a5-60b3-41bd-9f68-ea24799ddec3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91155a86-4edd-48f4-8e32-cd6217d404f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abaf142-2f03-4e41-aefa-45957e738246",
        "cursor": {
          "ref": "85e27c02-ff8d-4823-a089-c5461dacc7cb",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "798c9814-efb4-4cb6-a010-b4e8b482c736"
        },
        "item": {
          "id": "6abaf142-2f03-4e41-aefa-45957e738246",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cfb3704c-ad80-4130-af2c-34dbc4b8b3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e000b2d-b24c-402c-aafa-da6a9d3c4d81",
        "cursor": {
          "ref": "a9d6b572-2991-47a9-84fa-121afdcdb6bc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bdd9d614-b3cc-4133-919b-c4299de6ad46"
        },
        "item": {
          "id": "8e000b2d-b24c-402c-aafa-da6a9d3c4d81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5749fa9c-ad9f-49bc-a30b-78837476dcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b0b29-fee5-448b-90a4-160bf0de0b89",
        "cursor": {
          "ref": "c4198b97-1758-42b5-bea2-94e163721136",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e6646e3b-703b-4700-af19-66157b8c444f"
        },
        "item": {
          "id": "441b0b29-fee5-448b-90a4-160bf0de0b89",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f318595-b954-4d54-a1eb-bd5ae4d0533a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca47537-c643-4834-8760-543df0641592",
        "cursor": {
          "ref": "f6ece664-4f81-48cc-994b-f3a0ffc56fe5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cb3d3a30-6814-41a5-ad3e-96efd45eae9d"
        },
        "item": {
          "id": "aca47537-c643-4834-8760-543df0641592",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d3889781-9063-48ef-bdff-c31af7389ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83d1c80-73b6-47df-8f0b-ae529119cc5d",
        "cursor": {
          "ref": "4af3e311-cb8a-4a5d-8e77-eb2e92aa987d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "098739c0-b750-4c6e-a8b3-ef6328630d11"
        },
        "item": {
          "id": "b83d1c80-73b6-47df-8f0b-ae529119cc5d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f86603a-6dca-4e36-84a1-3eb4f156c512",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfbf31d-30bd-438f-8369-31ae3037390c",
        "cursor": {
          "ref": "1349039f-9d55-452d-95a1-025c409a9b13",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0b9913b1-6345-40e2-b3a6-dd213120de4f"
        },
        "item": {
          "id": "2cfbf31d-30bd-438f-8369-31ae3037390c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fc9bbc4-a227-48c0-8f24-2a9c856a732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44773ebe-e8be-478c-b49e-4190acb5a20a",
        "cursor": {
          "ref": "9f64d72e-8b5b-4dee-8efc-e5557c194dcb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "44675863-d4ad-4c5f-803a-a7e465cb7ace"
        },
        "item": {
          "id": "44773ebe-e8be-478c-b49e-4190acb5a20a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "409649fd-fe69-4c69-94c9-cafdc3022026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafc8356-6a92-4965-90c7-be59c6e7cdca",
        "cursor": {
          "ref": "645f4a86-14e0-4ae7-91cb-1733038dbc96",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "548c055a-6c9d-40a0-813a-5e7144afe979"
        },
        "item": {
          "id": "cafc8356-6a92-4965-90c7-be59c6e7cdca",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "41684349-0414-4664-91da-91236af1c466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beafa639-61a9-42f5-8396-6a0200cf26da",
        "cursor": {
          "ref": "73bd4337-a9a6-4170-995a-cf2239ed5549",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e70b44a0-a7dd-4412-97dc-e5eed769bc93"
        },
        "item": {
          "id": "beafa639-61a9-42f5-8396-6a0200cf26da",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "84b50b3e-8b50-44f9-b166-80a8ccf48a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10aa3a4-9ac5-4c8e-b35c-e4a76c888e23",
        "cursor": {
          "ref": "892d4dd6-10ea-4f2f-934d-609c92ca6d8b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac38cf61-388a-4aed-9f58-a9c3cb886a7d"
        },
        "item": {
          "id": "c10aa3a4-9ac5-4c8e-b35c-e4a76c888e23",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "094a4f67-3d2c-4b91-8894-70934705381f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df876ab-4646-4da4-918b-8ed27d22eee5",
        "cursor": {
          "ref": "8ba87451-df7d-40fc-8cc6-5c423f16e166",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "962df0d5-e745-465e-9e0d-d2c36d944471"
        },
        "item": {
          "id": "8df876ab-4646-4da4-918b-8ed27d22eee5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "86074def-a9c2-4e80-8c01-a0a87e7eb424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bdc6c5-c07d-4b26-bb85-f9296229807e",
        "cursor": {
          "ref": "12a76549-fe9e-4fd9-b98d-7a1200389b4c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b6febf07-df9b-4589-a80c-1c96278f5a8f"
        },
        "item": {
          "id": "44bdc6c5-c07d-4b26-bb85-f9296229807e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2dacf86-a223-4ce1-b715-9b92819825e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4576ba67-e1c9-4c90-931d-0b06d46e24b3",
        "cursor": {
          "ref": "2dd71543-bc15-4235-b25d-d2c4a747feb9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95d12549-6804-4896-b1d3-db6d93750377"
        },
        "item": {
          "id": "4576ba67-e1c9-4c90-931d-0b06d46e24b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8863c6de-701b-45ff-8647-9aa762c46e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ff5b0-3731-41d3-aea4-0be57b7f30f1",
        "cursor": {
          "ref": "2c9ee6c4-f7cf-4afc-ab0e-c8c373bdb681",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "67bb65ce-4007-4aa3-8af8-b8432e4ae056"
        },
        "item": {
          "id": "b98ff5b0-3731-41d3-aea4-0be57b7f30f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "31f22c4b-8fe2-41b4-ad95-5497709b688e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d305323d-8ae8-42db-80d5-c590513a6dd5",
        "cursor": {
          "ref": "441ad217-77f3-4bb5-a2c2-ff745b846e83",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6f4079cc-db29-4945-8bae-d0a1385b5583"
        },
        "item": {
          "id": "d305323d-8ae8-42db-80d5-c590513a6dd5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b1bdec04-4393-4a1b-ac2e-90de60cd422b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc8c4e2-dda4-4b49-b8b9-9609481df329",
        "cursor": {
          "ref": "302c38ec-dc81-4f7a-803c-a4563928c0ba",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2ae36119-ebe8-49d4-aeec-51ccd8a05abf"
        },
        "item": {
          "id": "4bc8c4e2-dda4-4b49-b8b9-9609481df329",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "abe03de0-1595-45fb-9fed-53941f8d103d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce8e516-61f8-49dc-b954-cc17589bea4b",
        "cursor": {
          "ref": "85df4cd9-9966-40e7-99ec-a83a17fcfa1e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6f6ce905-e979-442b-aa27-9ca089681453"
        },
        "item": {
          "id": "4ce8e516-61f8-49dc-b954-cc17589bea4b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1a7ee82-6a75-4fbf-a920-0efe25c88721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1301577-7f54-484c-ab35-1db04b0a7935",
        "cursor": {
          "ref": "44b72b99-9119-42ad-844e-f6821d65b1d8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f792b868-852b-4bfb-82dc-522e96ab7afb"
        },
        "item": {
          "id": "a1301577-7f54-484c-ab35-1db04b0a7935",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ca9c7b28-a657-4784-8d4d-487696ba8972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d1ca27-9654-4504-b1a5-7e37ce8fedf1",
        "cursor": {
          "ref": "73d350db-c248-40dc-b67c-b9d082f56044",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "68f66a70-6aab-4331-af03-61f1897f228d"
        },
        "item": {
          "id": "b6d1ca27-9654-4504-b1a5-7e37ce8fedf1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "da024a47-5dc8-4bb5-8f5c-ac0c4b8e72cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7080e21e-5f5a-4cc0-99d0-20d4d16309b6",
        "cursor": {
          "ref": "597e0660-17f9-4be3-80e6-37e2e0f53cff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d307382d-c36f-4ace-b09c-92e9c4d7ba23"
        },
        "item": {
          "id": "7080e21e-5f5a-4cc0-99d0-20d4d16309b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d6ad2a71-89c6-4ac5-a0e7-32f50d5e3a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361b30a3-88e0-4f7b-af73-cd81da592f40",
        "cursor": {
          "ref": "2408f0ee-bf2a-4239-a743-db3ec4dcd32d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e68db9a1-dc8d-446e-bbec-726c4b43b103"
        },
        "item": {
          "id": "361b30a3-88e0-4f7b-af73-cd81da592f40",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5e3c3e54-588b-4521-9d65-d5f260ef5381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a2b307-379c-43a1-8353-39b2eab67b08",
        "cursor": {
          "ref": "9027d203-9096-490e-b34a-958f60a476f0",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8c1c8526-7594-409a-9786-2cafeac48c9c"
        },
        "item": {
          "id": "d3a2b307-379c-43a1-8353-39b2eab67b08",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "554a8ad0-5e2f-4163-b459-6fd73a95c942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05744579-cd85-484e-8163-adfcb0f94f35",
        "cursor": {
          "ref": "64b112c1-4889-49c5-8105-400ea6666529",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "881c437a-e6dc-45e2-93af-a00e140e241a"
        },
        "item": {
          "id": "05744579-cd85-484e-8163-adfcb0f94f35",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "911869f9-d688-4e04-a9f9-f785dcc477ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49969890-55f8-4b2e-9895-0e0cb9d3915a",
        "cursor": {
          "ref": "c44f70f3-e501-42bc-920d-84065ecbf39f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e88f78ff-c826-4f98-bbfb-8bc09724b3c4"
        },
        "item": {
          "id": "49969890-55f8-4b2e-9895-0e0cb9d3915a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "32204aae-c30c-4e66-b697-5253e1155ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220a517d-3d1c-433f-ae7b-90dbacadc347",
        "cursor": {
          "ref": "fb492c25-2e0a-4df7-8163-d11d3e05186e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1de236a3-7cf8-4ce4-a73b-740434aab57a"
        },
        "item": {
          "id": "220a517d-3d1c-433f-ae7b-90dbacadc347",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f3acfa2-9501-4546-93bf-48df0320c1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cce737-9fd7-4672-b032-72873c1bc2e6",
        "cursor": {
          "ref": "f590658f-e1a9-48f5-9444-33f21e3fd574",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "200fdf82-3f3e-4be2-9643-3066ca8c62bd"
        },
        "item": {
          "id": "48cce737-9fd7-4672-b032-72873c1bc2e6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4b7c58d-87ff-45da-85bd-7be73e651290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a00935-7b2b-418f-9027-f82986119cd7",
        "cursor": {
          "ref": "6e1085ac-11e1-4642-bb2f-b14df35a1c80",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ed7d9077-74d5-4af0-a073-094e61a760cb"
        },
        "item": {
          "id": "d6a00935-7b2b-418f-9027-f82986119cd7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b8e06b1-35cd-4956-9493-8be2c22421d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bee527-0cf8-40ba-925b-220d2f21a589",
        "cursor": {
          "ref": "6a454371-0446-402b-9fea-5445216e2fcd",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7ea9bde8-567d-4222-ba3d-d7c2e0d8be36"
        },
        "item": {
          "id": "80bee527-0cf8-40ba-925b-220d2f21a589",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb0f17cd-9ac8-4474-9095-eebd5e5f08c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c8d5ef-0968-41b7-b675-c1b44a7e4dbb",
        "cursor": {
          "ref": "9712bef4-ec51-45bf-a4dd-41871cf2a2dd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d6c415c7-0f71-4aea-8658-6f9d3ac10773"
        },
        "item": {
          "id": "d7c8d5ef-0968-41b7-b675-c1b44a7e4dbb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "393245aa-ee6b-4e9a-9c4d-166baea636d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50d31af-e65e-423b-a77b-eab3e32f1faf",
        "cursor": {
          "ref": "b61468f3-889f-4150-8c43-c45089a6aab2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "afba59fa-3517-4f44-a7f3-0ec5a2ea9b47"
        },
        "item": {
          "id": "c50d31af-e65e-423b-a77b-eab3e32f1faf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "93ce1d52-9236-45f5-bd72-61b16a47837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e4f2af-a50f-496f-b6bb-1f1971adc97f",
        "cursor": {
          "ref": "29b44494-3239-4aef-9305-c5f55078b971",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "693da892-c29b-4d33-9ce7-5ff3eae1cfd9"
        },
        "item": {
          "id": "85e4f2af-a50f-496f-b6bb-1f1971adc97f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "371277c1-d38c-434a-ba01-e8b0b2ae50b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857664ed-ef75-49ab-bf21-412bd43d1b7d",
        "cursor": {
          "ref": "e6edaf8a-ac41-46d3-acda-4bd749527ed4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a4928bf7-3f4f-4cf9-b1bb-703e18487673"
        },
        "item": {
          "id": "857664ed-ef75-49ab-bf21-412bd43d1b7d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9337174-d1ef-4744-9d7d-09cc7ee31dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296b1273-9d8f-49da-bb6c-b4c7ce429acc",
        "cursor": {
          "ref": "df87ff04-efcc-45f6-a8ed-ea5c6458ff70",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "046e3ca6-90b7-406d-b9c8-f590dd85bb9d"
        },
        "item": {
          "id": "296b1273-9d8f-49da-bb6c-b4c7ce429acc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f57fea3b-e1c7-42d1-8417-c7061b9af0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10498f19-dea2-4b4d-9d9f-f436f9c75761",
        "cursor": {
          "ref": "ff514a8b-07a0-43d2-8499-cc7aa600eab1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ebf1ab11-4b02-40a1-bd89-cd567ad99890"
        },
        "item": {
          "id": "10498f19-dea2-4b4d-9d9f-f436f9c75761",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5b8f6c7-12bc-4261-b14d-31b5da746081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42b25a2-f5b6-4327-8db6-702153c14079",
        "cursor": {
          "ref": "689ad5d6-802d-47b6-bd48-0a5a149e82fb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c57d3f12-314f-4ae0-a753-6a14c3d01a4f"
        },
        "item": {
          "id": "e42b25a2-f5b6-4327-8db6-702153c14079",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23f8502f-866b-4b3f-aa5b-787285fdfe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e8012e-bdd3-4e40-8377-42150f5184e0",
        "cursor": {
          "ref": "f49210af-e773-4460-bccd-f051dfe46b6a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5e48a7b8-fc6a-492e-b4ba-70daf3ee22d0"
        },
        "item": {
          "id": "21e8012e-bdd3-4e40-8377-42150f5184e0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c83f93c-4f68-438f-a6c6-6028b8fae510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53faecf-638f-4396-aa55-279292ce8806",
        "cursor": {
          "ref": "7dae793e-ddba-442a-b06c-37b9710d7b1c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "745c8634-7d5f-4297-ab8e-a52b77fa8011"
        },
        "item": {
          "id": "a53faecf-638f-4396-aa55-279292ce8806",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "180f2b11-0240-4970-bb6e-3efe70a1a5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c7c388-35be-4e40-9f4e-566090354521",
        "cursor": {
          "ref": "45e95010-bf23-4390-965f-7822d5b08af7",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5db4c283-c9d7-4b46-abea-365d2f314aa1"
        },
        "item": {
          "id": "f0c7c388-35be-4e40-9f4e-566090354521",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e23a91a0-e3d1-4f12-91be-d63d0d17aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e171aa5-a16c-45c8-81a2-6a79fbd3ac7c",
        "cursor": {
          "ref": "826822e2-2c71-492f-99a6-038a4e029c17",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a355b5be-5111-4eea-8a35-8420eb9b67a5"
        },
        "item": {
          "id": "9e171aa5-a16c-45c8-81a2-6a79fbd3ac7c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8678c54b-a5b9-4d77-93d4-e94c4610e4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d313f-2dbe-47a4-9c80-e1a32afdfe31",
        "cursor": {
          "ref": "0b456190-3a53-476c-9221-61e47a37dfec",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9733f9e1-33be-4bf6-8153-53c93a6f222b"
        },
        "item": {
          "id": "bf2d313f-2dbe-47a4-9c80-e1a32afdfe31",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7693727a-a838-4ad2-ac16-d424593dc319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f612ec8-6ee2-4584-8f5d-497130c7eceb",
        "cursor": {
          "ref": "96f7a5e9-fee9-4b1f-ab7b-062161b67304",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fa8726b1-d41f-4763-bfc4-fed6c0476f08"
        },
        "item": {
          "id": "1f612ec8-6ee2-4584-8f5d-497130c7eceb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a8897548-bb17-4efa-87f6-f4b2a4ca3c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddbf65c-eac4-4d21-ae91-632c4757e7b1",
        "cursor": {
          "ref": "fe210efb-5f38-4231-b8b1-963fa5571255",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a2d28024-8cbd-4843-8057-ad6716be29e8"
        },
        "item": {
          "id": "eddbf65c-eac4-4d21-ae91-632c4757e7b1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "594d3605-c9aa-4af5-b4f4-f209139326bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8c5a1b-2fc4-463f-8c79-a2153701212d",
        "cursor": {
          "ref": "b7e39641-df7c-4b3e-9d3f-c380cc5ff713",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "454c07ff-29ff-4524-97c3-6c904a76e020"
        },
        "item": {
          "id": "4c8c5a1b-2fc4-463f-8c79-a2153701212d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "abd11a9a-166a-4fa0-b3d4-999844ea9f88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ae0d7-c46d-47c5-a80e-e1351a911084",
        "cursor": {
          "ref": "5efa3a66-3eed-46e4-a62d-5a68fdbf647b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f4c56447-c7b9-4624-83c4-326fb968ea15"
        },
        "item": {
          "id": "838ae0d7-c46d-47c5-a80e-e1351a911084",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7b9ec2bb-8c02-4ed6-b34b-a30b75f6e8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333c7d75-9d4a-47fd-8c74-c65fc1665c7e",
        "cursor": {
          "ref": "647d02d2-6cd6-40b1-9597-f556d55e4611",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cbe338f9-6a74-4766-9103-6cacc15b2d5d"
        },
        "item": {
          "id": "333c7d75-9d4a-47fd-8c74-c65fc1665c7e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "214bbc1b-e4ac-4284-9534-8d358a0f9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedae7a1-4881-453d-8f45-562273d1f4a7",
        "cursor": {
          "ref": "167d592f-8072-4293-a631-bfb0098ee5e0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aee0df7e-3a27-42b5-b746-037feb28b0b3"
        },
        "item": {
          "id": "dedae7a1-4881-453d-8f45-562273d1f4a7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "65209753-c817-4719-bb75-2ce471df38ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ed9476-0482-4777-a878-00eed7357139",
        "cursor": {
          "ref": "0def97c6-3881-45a1-8d8b-621203120cd1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b852519d-6e25-4fea-8547-658bcd4d13ac"
        },
        "item": {
          "id": "63ed9476-0482-4777-a878-00eed7357139",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "09b5a960-41dd-4192-baa1-b5bab4129972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4374bfe7-7ccc-412c-9d00-bbc35eab9024",
        "cursor": {
          "ref": "f5830946-6749-46dc-a031-75f9d7bca905",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3262f5ee-040d-4f1b-ae78-91afecd3da5f"
        },
        "item": {
          "id": "4374bfe7-7ccc-412c-9d00-bbc35eab9024",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2f7e82e0-62ba-4871-b22c-207472d5d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548e5e1b-05cf-47ea-894e-e7b2043b8e9a",
        "cursor": {
          "ref": "e61f4b61-0d2b-4ad6-a59a-b06199e973a7",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c524512-9fdd-46fb-83b5-2215c58a0825"
        },
        "item": {
          "id": "548e5e1b-05cf-47ea-894e-e7b2043b8e9a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "99582bec-1b78-4116-8624-6993b2a7e1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d5594b-37e0-4341-9010-45d19eeaca50",
        "cursor": {
          "ref": "bb02247a-6040-4e2b-8675-42352120d3dc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5d253bf8-39e5-403a-ae57-8c6ae7b52781"
        },
        "item": {
          "id": "b1d5594b-37e0-4341-9010-45d19eeaca50",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "363f6a45-4210-4182-840d-253d9ccd85fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a81829-5905-4944-bf55-101c97850f88",
        "cursor": {
          "ref": "6e01d2c6-9fc7-4618-9ebc-1e69a03a54ce",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d1089c73-0c46-4d3d-bcf3-a9eeb72c4fdb"
        },
        "item": {
          "id": "76a81829-5905-4944-bf55-101c97850f88",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ef207b04-a53d-4924-bd63-53e2f255c203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba9c51-4e69-4bf7-9fa7-2dab2222a361",
        "cursor": {
          "ref": "99ebc475-6fb3-4a95-8322-628567654cbc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cffa42bd-0bd8-495a-93a1-ef10d5c18fd9"
        },
        "item": {
          "id": "2eba9c51-4e69-4bf7-9fa7-2dab2222a361",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9a7fcb6d-4a69-4ac5-84d3-934778876f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17159bd8-e142-4b4b-807a-7e8e8661e360",
        "cursor": {
          "ref": "e81ef096-d937-4565-909b-a31b8f28b1de",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "39e5cf3e-1138-4e3e-af35-669eab38ef0e"
        },
        "item": {
          "id": "17159bd8-e142-4b4b-807a-7e8e8661e360",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "935a6369-7418-4c97-a886-882c121acee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb30473e-94ff-4d16-b599-4b902c7e8329",
        "cursor": {
          "ref": "0619b724-dbdd-4b3a-9b36-638754e10596",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5dc3ec1-281a-445c-bea8-ec2341701e6f"
        },
        "item": {
          "id": "cb30473e-94ff-4d16-b599-4b902c7e8329",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "05a3a84c-17d7-4d00-b719-88cf648dc8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c70af07-2af6-4242-8d42-ce6891616195",
        "cursor": {
          "ref": "39a1fd86-2213-42f5-9f60-13b2878cb577",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0a7173a9-6986-4557-8fdd-0625e2858350"
        },
        "item": {
          "id": "5c70af07-2af6-4242-8d42-ce6891616195",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a36bfefa-17f2-4be4-85c5-8a5e33ed2c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b1415-9163-4c7b-a64b-5bf6220de01d",
        "cursor": {
          "ref": "8caf11bc-e5a6-446e-8459-a00792967e2a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "098c177a-1c51-40d2-bbe1-17db5471e64e"
        },
        "item": {
          "id": "630b1415-9163-4c7b-a64b-5bf6220de01d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53ce3e47-62af-4649-a7f8-742994d3381c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80baabeb-1c06-42c2-8564-3b81fb748548",
        "cursor": {
          "ref": "03bc3a92-ad89-433e-a94a-752dbd8ceabf",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1e04bfe6-133e-45a9-96b8-2420b7c9ea43"
        },
        "item": {
          "id": "80baabeb-1c06-42c2-8564-3b81fb748548",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2820f1f8-eb13-44a6-8fce-460bde93270a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9e74c4-9b01-41bb-b701-6b7f27193cb3",
        "cursor": {
          "ref": "e30af7a2-5abb-404a-a0db-44b65f7e1812",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "658eee8f-b53b-488f-ac4b-d644fbc867fa"
        },
        "item": {
          "id": "fe9e74c4-9b01-41bb-b701-6b7f27193cb3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2b15dfef-0238-4a8d-a871-9a7e1680ed0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6995073-1ab3-4874-923e-cc2cee216228",
        "cursor": {
          "ref": "5164a582-92bf-4d2a-a65f-ff050269b4e8",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a513e923-e19e-4a74-87d8-31593f60cfbb"
        },
        "item": {
          "id": "f6995073-1ab3-4874-923e-cc2cee216228",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15a64a85-26b8-4a8d-9c04-bda88eae1d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c25c2c5-59bb-48a7-937f-416fce695f2f",
        "cursor": {
          "ref": "99a1d073-7276-45f1-a553-e82aba0803ea",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a631604c-32ac-4e8a-8f74-88eada81c2ba"
        },
        "item": {
          "id": "3c25c2c5-59bb-48a7-937f-416fce695f2f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d4cb02c7-6ece-43d5-b789-9694184ce6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d6663-6d1c-49e7-908e-69ecc8862234",
        "cursor": {
          "ref": "c0ddac6d-4f4b-4bb8-92f3-40dc0c4e36f0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e5087956-e0e6-49e3-b314-32040e39a25f"
        },
        "item": {
          "id": "b88d6663-6d1c-49e7-908e-69ecc8862234",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d4555e58-425c-4d6b-aedb-c3789214c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ef2eec-4e40-4880-9b85-6f0be4312c00",
        "cursor": {
          "ref": "48a4f2d0-96bb-44f7-bdb9-2eab27eca0b2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b7c0f55e-3b5c-41a2-8eb9-9b7ff7049e9e"
        },
        "item": {
          "id": "86ef2eec-4e40-4880-9b85-6f0be4312c00",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "266094f3-04bb-4f1e-9cab-6f356fe8e78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f05ab-4a2a-4135-b1ed-c3679cfe5a95",
        "cursor": {
          "ref": "ab79c9d1-62e8-4644-8eb9-55381e87548f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d11fdc2f-eada-4e25-98b5-837a214540c5"
        },
        "item": {
          "id": "f29f05ab-4a2a-4135-b1ed-c3679cfe5a95",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d595fdc-74e6-450c-b6a8-2c923f3e20bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4785dec9-0cc1-455e-8da3-3433a96128a3",
        "cursor": {
          "ref": "b9ec8ca4-f9fd-411c-8b0c-4d0c1e616c63",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "37531cd4-d2f3-4865-9bf7-8c681f058a53"
        },
        "item": {
          "id": "4785dec9-0cc1-455e-8da3-3433a96128a3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ac2d138d-04e6-400b-a291-21da18aeb450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b8ab73-93a5-4bd3-8f4c-1ec5cb7f320a",
        "cursor": {
          "ref": "2fc6e1b6-e0be-43f2-ad6d-7b679d575fad",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "30934789-17a0-46f9-92a8-eca649fdb6e4"
        },
        "item": {
          "id": "32b8ab73-93a5-4bd3-8f4c-1ec5cb7f320a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cf0be4a5-dc91-4274-be1d-275c047926bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a298bd-ae04-4d5b-a267-d56565bf489b",
        "cursor": {
          "ref": "d23f41d9-4f4d-4c2d-a52e-49923b916ab3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "492105cd-ea96-4cf5-a33e-940b604bc354"
        },
        "item": {
          "id": "a3a298bd-ae04-4d5b-a267-d56565bf489b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7c15f9ad-05c6-4f72-ab2b-5b7677798f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e509aa4-96c0-4846-955e-b5e53f8278e1",
        "cursor": {
          "ref": "1c96ff22-82c4-48eb-b399-36f5c758570c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "781e5f15-7758-4260-b013-451d62673e91"
        },
        "item": {
          "id": "9e509aa4-96c0-4846-955e-b5e53f8278e1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6466a114-edb3-4368-82a4-bce463d6a88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36ad07-1772-4121-a6ba-13d6b9df97f3",
        "cursor": {
          "ref": "f1f641e8-a40d-4b38-918d-fc389d9d414f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4e9f59e9-54f7-4555-867c-13c3143ecead"
        },
        "item": {
          "id": "ed36ad07-1772-4121-a6ba-13d6b9df97f3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3af6c273-9966-4c07-8534-23b869220a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbf005e-78c1-489d-8ed4-65cfd55bfda1",
        "cursor": {
          "ref": "96332a61-aef6-449e-abdd-f600b07119fe",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "59a1b959-b27f-498e-93df-50f862bad336"
        },
        "item": {
          "id": "2fbf005e-78c1-489d-8ed4-65cfd55bfda1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1601c300-f886-4317-af8c-b3adbda76139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e9863-4c75-40c2-89f3-b1363d74be49",
        "cursor": {
          "ref": "8f5187b9-14ef-4b00-b9c5-5f7d3681592a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "549bbbab-8a31-4cb6-b7b2-335e74820892"
        },
        "item": {
          "id": "9a5e9863-4c75-40c2-89f3-b1363d74be49",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "868854ab-6673-4929-ac66-e0e2ff7a5436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa52ae3b-0486-400c-8f88-0a9db50935f1",
        "cursor": {
          "ref": "e7e1e320-c9e0-4109-9d19-a5ce19944505",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a1b0133c-5f08-4647-8d2c-502ef7ef2e9d"
        },
        "item": {
          "id": "aa52ae3b-0486-400c-8f88-0a9db50935f1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b1249cc8-1722-4666-a613-b23b609a3fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b8a0d-bb8f-4477-96ce-2b3eb3bdb391",
        "cursor": {
          "ref": "d490e5ae-458f-40f6-9f2e-1bd4a1901810",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fba4e17f-49b8-4556-92c6-40f746b4dc95"
        },
        "item": {
          "id": "452b8a0d-bb8f-4477-96ce-2b3eb3bdb391",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2b2864b-31b2-46dc-a915-7ad4f16cfb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0eeb682-38d9-499a-a12e-fb1606d06806",
        "cursor": {
          "ref": "7354dd78-c8d9-4050-85e9-1d54612fe412",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1db70525-dd58-427f-8c3b-04879728317d"
        },
        "item": {
          "id": "e0eeb682-38d9-499a-a12e-fb1606d06806",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d0f10db3-d3c1-4726-870c-6eb0e379283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deb6255-17bc-4838-a10d-93188c2b2b57",
        "cursor": {
          "ref": "9ad4f8b8-cf86-43d1-a485-d7b88b1192ef",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3ef43e61-7b77-4fac-a7f0-a9a226e22322"
        },
        "item": {
          "id": "9deb6255-17bc-4838-a10d-93188c2b2b57",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "94fe590a-40bf-49d8-8b0e-a9e7a70cd061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d819f6-08e9-4bbd-9040-d51ca4ffbc2f",
        "cursor": {
          "ref": "7864ae21-9c54-4782-b75f-961e3c9b27bd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0b338227-616b-4fcf-88bc-d3ddc1a8384e"
        },
        "item": {
          "id": "26d819f6-08e9-4bbd-9040-d51ca4ffbc2f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fabaea26-8627-4b68-b7b4-e19d21b80e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90b260e-9532-46ad-bd86-e438ae4bda6f",
        "cursor": {
          "ref": "27e86d38-9a8e-4c8a-b1f3-43aeb364ad94",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ca0b900-bc52-48bb-9ce2-d10244f42181"
        },
        "item": {
          "id": "f90b260e-9532-46ad-bd86-e438ae4bda6f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40538db9-ec5d-4346-aead-8a79f3e71df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c799fcbd-805c-490c-8f9c-734d0f097c3e",
        "cursor": {
          "ref": "7ae0571a-0a33-40fa-9de6-02660e1fb5f9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bfd7e2ab-73ee-4382-a0f8-e98e14cd386e"
        },
        "item": {
          "id": "c799fcbd-805c-490c-8f9c-734d0f097c3e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9e526f37-bca3-4966-82f9-9f30366680f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffa6f05-e8ab-48cf-b854-6fafa19c8cfa",
        "cursor": {
          "ref": "d81cf1be-e603-46bc-88ff-4c9c173f47ab",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "55928137-d6f7-497c-a41a-d8b712b567e8"
        },
        "item": {
          "id": "0ffa6f05-e8ab-48cf-b854-6fafa19c8cfa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0067fb0b-350a-460b-879d-2c9410ee585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af228847-0364-4644-b8b7-4250d4908357",
        "cursor": {
          "ref": "dc451b7b-ca7a-410a-bf6b-9f66633996e6",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fd09c9a7-9a67-45d3-9722-e1121b0a1c0e"
        },
        "item": {
          "id": "af228847-0364-4644-b8b7-4250d4908357",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6acf29df-cf81-42a1-992a-bdeff6bdb65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24529602-6e47-40b7-816a-996cd86dafd4",
        "cursor": {
          "ref": "ad82f8ae-8d3e-4e49-bb29-1a3880f4983a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b21ea721-e393-473f-900e-91a7c20354c9"
        },
        "item": {
          "id": "24529602-6e47-40b7-816a-996cd86dafd4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59022cfd-38cd-4528-a29f-daa6cd61d978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95632501-3d4b-4f6a-aa74-88e99c0f6a8a",
        "cursor": {
          "ref": "745fb09c-62d2-4881-b02d-f33303cc23bc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "614ae881-bcd8-4ed5-9946-6193d31d131e"
        },
        "item": {
          "id": "95632501-3d4b-4f6a-aa74-88e99c0f6a8a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9aa660c4-b54b-4ef6-90b1-6a59b3508287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0462f112-74c9-4cab-92f7-0b4de8d16545",
        "cursor": {
          "ref": "81f1e7cb-6e7f-447e-b0c7-414ab41135b2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "efeffbed-6de8-45ae-a4d7-8d82b2707d81"
        },
        "item": {
          "id": "0462f112-74c9-4cab-92f7-0b4de8d16545",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e19e5dd2-5946-4efc-abf9-a48b79be3ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab76d4-9a9d-4ecd-8473-8ab54b0b0b10",
        "cursor": {
          "ref": "bdc4db13-b320-4daf-8d68-4f44020c76c0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d79dd67c-afce-4510-a389-28fa3ada152d"
        },
        "item": {
          "id": "68ab76d4-9a9d-4ecd-8473-8ab54b0b0b10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8923ee10-478f-4fd2-8f7a-f267a2a50e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6750cd92-1441-40cd-b673-a94b6f05ad12",
        "cursor": {
          "ref": "c46bca80-5954-446e-b322-d0e7a444c2e8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cefd4d74-eb04-4742-9b93-17ec6fc62554"
        },
        "item": {
          "id": "6750cd92-1441-40cd-b673-a94b6f05ad12",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2f57a446-e7f3-446b-b84a-913fb7cde85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7258f9f4-565e-4eeb-b022-9e95ca9ec895",
        "cursor": {
          "ref": "24a3f2ca-8605-40b1-a5a4-c042eaf6af64",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bde56146-1d5a-4d0a-8dad-d71557f0cc3f"
        },
        "item": {
          "id": "7258f9f4-565e-4eeb-b022-9e95ca9ec895",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e6225872-4388-4d58-b5b1-2c47739855b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb0dca3-0d63-4b14-8399-ad43a6b2eb87",
        "cursor": {
          "ref": "05cb03ee-8eb0-4011-9e20-638e98835120",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "73295726-19d2-45d8-aae8-0157b4ade5c9"
        },
        "item": {
          "id": "8bb0dca3-0d63-4b14-8399-ad43a6b2eb87",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ddaa6b06-0068-4131-bb85-2980621a0614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af5ad17-d77f-4f3a-867a-a04df09f540d",
        "cursor": {
          "ref": "83e0c7c4-bd3d-422b-b58c-b9c5e04d0796",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b39aca32-18c1-4c45-9db6-be5eeb74e820"
        },
        "item": {
          "id": "0af5ad17-d77f-4f3a-867a-a04df09f540d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e8ec4710-e564-4b26-bbd8-e5f7eabae617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e943991b-e1ab-42ae-821e-c29d300bef84",
        "cursor": {
          "ref": "ac06c428-a6ff-47a2-94ca-a688ed68c1ca",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e65bbf76-898a-45ca-b5da-546dda589bff"
        },
        "item": {
          "id": "e943991b-e1ab-42ae-821e-c29d300bef84",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d42b2b2e-e11c-4ebe-8bc7-be9fc541f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e43b7f-af79-41b7-ad39-b684a8c9f7af",
        "cursor": {
          "ref": "494fbfb1-8a2f-4ccb-888b-8ad8f4b1efca",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "06e79b4d-287d-477a-a485-d4efda8d1e4a"
        },
        "item": {
          "id": "e8e43b7f-af79-41b7-ad39-b684a8c9f7af",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5235e955-a7ec-41f3-9a47-3c749a54ebc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ff4bd6-6e44-4708-890a-7b67f3eb8a72",
        "cursor": {
          "ref": "1c59d999-6587-494e-965c-6cb3712be02a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b97dc2dc-5e07-4112-b55c-535d1f31cea5"
        },
        "item": {
          "id": "10ff4bd6-6e44-4708-890a-7b67f3eb8a72",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de6eea92-915f-4b82-98a6-f4fdd33ee9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40734df-7af9-4b62-8cf0-a64bd5cecc37",
        "cursor": {
          "ref": "f076e9d6-3120-445f-b7f7-143f4f0b96b7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c6097263-eeb5-496b-91d3-202429c16ec1"
        },
        "item": {
          "id": "a40734df-7af9-4b62-8cf0-a64bd5cecc37",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb6b8398-5cd0-474b-a15d-e84b9ec3b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e22f48-bfb9-467d-8e05-58093ee5dd76",
        "cursor": {
          "ref": "9079811a-4025-4070-8575-8ff8e9d5d685",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "84af9b83-1df3-41f9-9a32-56284b5e19ec"
        },
        "item": {
          "id": "78e22f48-bfb9-467d-8e05-58093ee5dd76",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8b8907bf-afee-4d3d-b85e-f9ad3ab00385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10297b3d-a7f9-43cb-a585-95823635f26e",
        "cursor": {
          "ref": "f7e19b1b-908d-462f-bf56-210049622ca0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "60c76bfa-abc5-4db9-aa4d-9658d4675b74"
        },
        "item": {
          "id": "10297b3d-a7f9-43cb-a585-95823635f26e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b345cc51-f72f-4963-87e8-e98927924f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad49471-ea05-4db9-8f23-96da7cd940ff",
        "cursor": {
          "ref": "c3004005-0963-446f-9c4c-33c6cbd54cf9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "58e9f732-5145-4b39-921c-33eb476cb0bb"
        },
        "item": {
          "id": "aad49471-ea05-4db9-8f23-96da7cd940ff",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "caae3eb7-b19d-4323-a2bf-4ea0223de533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e24a79-5ce6-40f4-ac1e-16e2c9629cf2",
        "cursor": {
          "ref": "15b75410-40a2-486f-8ace-fac198718515",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "623fe7a0-8373-4463-abaf-0282b4c48253"
        },
        "item": {
          "id": "03e24a79-5ce6-40f4-ac1e-16e2c9629cf2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1fe7366-3767-4fa6-bdaa-7d7745012bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b407d-0d59-4e6c-a0d5-370b65d05b98",
        "cursor": {
          "ref": "bdacaa82-beb6-4140-aa09-37a17c47b1cc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9da62a71-e47b-458c-87ab-0e37eedfb694"
        },
        "item": {
          "id": "702b407d-0d59-4e6c-a0d5-370b65d05b98",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f8a03319-c007-4e71-bcc4-dacbf56a2ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1257578f-5966-4688-a013-abe41dbc97ba",
        "cursor": {
          "ref": "6a664983-5001-433a-a1c6-4f689d729496",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "655b4d82-edc3-47c9-ad3a-7e36cfc454f0"
        },
        "item": {
          "id": "1257578f-5966-4688-a013-abe41dbc97ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bcd52ce7-22c3-4337-a097-c46281e9a54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f5fea7-7fff-4e39-b094-c3e028afcdf2",
        "cursor": {
          "ref": "d372e4ed-ed40-4402-9043-b4b8080ba0c3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bceadd68-e360-4215-9bf2-cb9b52fa4372"
        },
        "item": {
          "id": "45f5fea7-7fff-4e39-b094-c3e028afcdf2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4c748602-4c9a-4122-9315-7093fbc22279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fffcf3-22c0-4487-82d7-a6b719bd7e21",
        "cursor": {
          "ref": "fe38aecd-ade3-4b8f-bded-dcce537668af",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d5c3d417-e04a-468a-b46b-7ba75eb90936"
        },
        "item": {
          "id": "64fffcf3-22c0-4487-82d7-a6b719bd7e21",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c386f1c1-cde6-4541-8d7d-808fd7172910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632fe757-b9f1-4473-8256-5c92c9f28328",
        "cursor": {
          "ref": "c6ea852d-29d5-4291-b6cd-1ab2075f10a1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2769d0ef-2d3a-4072-969f-2d38564ab050"
        },
        "item": {
          "id": "632fe757-b9f1-4473-8256-5c92c9f28328",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "702af938-6d23-4d4b-a1a6-869c637ab528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18d068c-d1ed-4c73-9c01-dcc87709a611",
        "cursor": {
          "ref": "c7b6bb69-ae05-4458-ab0a-7355dd9c9092",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0dd55037-644f-4879-8cde-ad9c86615244"
        },
        "item": {
          "id": "b18d068c-d1ed-4c73-9c01-dcc87709a611",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a5bde8a0-cbca-49dc-9da9-77517fb638f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858bfdf5-9cb9-4e2f-b78c-6bec7671c73f",
        "cursor": {
          "ref": "0f93dc42-d5fd-46df-bba1-b151329b391a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "920fa43d-32fc-4b4c-a8f7-c53721e20fa1"
        },
        "item": {
          "id": "858bfdf5-9cb9-4e2f-b78c-6bec7671c73f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aa804b55-72c6-4cae-b4f3-574f32d5c33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f4adf3-71dd-42ef-b5a9-e08a323e0f9d",
        "cursor": {
          "ref": "9df9939d-923e-4c0a-8a81-a31f2ac0d0a6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f58dc998-9977-49ce-8d3e-0b48c2bd030f"
        },
        "item": {
          "id": "a3f4adf3-71dd-42ef-b5a9-e08a323e0f9d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "650e2442-16cf-4b4f-bed6-9180e9b17ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fba57b-74c9-4919-abc5-4a1bb0d110c4",
        "cursor": {
          "ref": "b93da218-1e54-4257-b96c-f2876f7d003b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bcd8078c-1926-4097-80c8-21c0c1deeeb2"
        },
        "item": {
          "id": "c3fba57b-74c9-4919-abc5-4a1bb0d110c4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1553bef4-6a89-4f09-8f70-42ade7c29cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62db419b-4194-4a65-bb76-abcc7e01bdde",
        "cursor": {
          "ref": "45338ad3-ddc6-4d21-a88f-f0375b9f5a5e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5a3b3b11-5cfe-4d05-a457-3cd128a4e7e1"
        },
        "item": {
          "id": "62db419b-4194-4a65-bb76-abcc7e01bdde",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0dc6a430-c09c-49f0-9bd3-8a6a48657347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16badf78-ea86-485d-ab69-36ccd494a80d",
        "cursor": {
          "ref": "e87dc6f5-abb0-44d8-9a8d-fc254d66aff2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3c55650-8021-4fbb-82b3-68c1bddce4f1"
        },
        "item": {
          "id": "16badf78-ea86-485d-ab69-36ccd494a80d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e8e383f6-d1ac-4a2c-8122-203e7cbf0312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d633dfef-fdcc-4f98-9eb4-8865951a63ab",
        "cursor": {
          "ref": "9fa0bda0-45cf-44c0-a142-4720d2b48782",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "790fecf3-24a2-467e-9068-969377392d98"
        },
        "item": {
          "id": "d633dfef-fdcc-4f98-9eb4-8865951a63ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e38a218-9109-4411-b83a-fcdaee2d1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6cd754-aa4b-407b-9104-f34bfbcf5762",
        "cursor": {
          "ref": "2eb52e38-07e2-4940-86f3-d04b5d877349",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4b711502-5ad6-4269-b930-ab759c941dd1"
        },
        "item": {
          "id": "ff6cd754-aa4b-407b-9104-f34bfbcf5762",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3da8f7b-325c-4022-b534-d5e4b240774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e0423c-768b-41b8-a61a-db76969a20fd",
        "cursor": {
          "ref": "38454702-350f-486d-a185-925aa75409d0",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "556fd16a-0b83-4c7e-b6f6-b26b77efeb8e"
        },
        "item": {
          "id": "76e0423c-768b-41b8-a61a-db76969a20fd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a48370e9-1996-4a1c-a3b3-82eb6d049150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7a6a74-a06e-4bda-a3e0-74b5c60a4543",
        "cursor": {
          "ref": "0da38ecd-f35e-4f51-bf47-5aa47af1a7c3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "82dae43e-4cef-490a-9aa0-e958ba89daca"
        },
        "item": {
          "id": "5e7a6a74-a06e-4bda-a3e0-74b5c60a4543",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ef9625c2-2e3a-4449-9679-ae7a0d6e6ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50bfa97-d9ef-431d-8c51-d323b07f112d",
        "cursor": {
          "ref": "73a65347-90d1-4892-b3ec-6a69f65cc22e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4ef5d274-37ef-43a6-9ccb-6f8e144d0334"
        },
        "item": {
          "id": "f50bfa97-d9ef-431d-8c51-d323b07f112d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "703442ec-d80c-43d1-a015-c743f8d8c60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f26449-0a7d-43b2-a24d-52ae88f16f21",
        "cursor": {
          "ref": "545bc657-bc02-4e58-9aa0-6d63c172eeae",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "18d6661e-62c1-4663-aa0e-6f5dcbf6cd24"
        },
        "item": {
          "id": "33f26449-0a7d-43b2-a24d-52ae88f16f21",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fe377b3d-b56d-45e4-b1a1-c4973a97cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177ea1c3-a235-42e4-b2ea-85caeafc0316",
        "cursor": {
          "ref": "18b4c82d-3179-4c2d-aae0-6aaf8b92795a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1bd09f43-efeb-4529-87ef-5ef6593a75a6"
        },
        "item": {
          "id": "177ea1c3-a235-42e4-b2ea-85caeafc0316",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "01fffa81-b6bb-4926-a2f8-17b5e87d0c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4268d81-d9f0-4c15-a238-6dd47f20d29d",
        "cursor": {
          "ref": "d065c384-f0a1-4330-b51f-48cc1ba74e32",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bb1ae154-bd9f-42f5-afaf-ea9ccf68d6ef"
        },
        "item": {
          "id": "b4268d81-d9f0-4c15-a238-6dd47f20d29d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "48e7972e-4a32-4462-9ccc-5631e87b925a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d590424c-cbb2-45b5-b9d8-0d5624617683",
        "cursor": {
          "ref": "0d6bacd3-93b1-429b-a633-a0f72d71d631",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "61c14f91-96dd-4fc0-8dc8-6e29db5c6d68"
        },
        "item": {
          "id": "d590424c-cbb2-45b5-b9d8-0d5624617683",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3722c71f-277b-491c-806f-537a6b2e142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0f71fc-9173-4d42-818e-f4e2102e501c",
        "cursor": {
          "ref": "51a7ea9c-954e-41da-931c-c5ead30aabe5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f35d8c47-6d80-4ddc-9bab-762b0716e8da"
        },
        "item": {
          "id": "0b0f71fc-9173-4d42-818e-f4e2102e501c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7bffa179-54c8-446a-ab07-01c837e1f879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409526a2-c360-4103-81f2-7805d530de6f",
        "cursor": {
          "ref": "ecba5d15-67dc-4dd4-aabc-f9a00fc3c767",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "19cc7781-0d27-4c40-8c60-d193b8e0fe59"
        },
        "item": {
          "id": "409526a2-c360-4103-81f2-7805d530de6f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "13329dd3-8bc7-44b7-bc20-ba2e335c7cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c60af0-6f33-4705-b470-64a84abc11b9",
        "cursor": {
          "ref": "be7f7fee-e2c5-41cf-a79e-389881e53774",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "877b4a21-f90f-45a5-89b5-7f5d1fc0d36d"
        },
        "item": {
          "id": "67c60af0-6f33-4705-b470-64a84abc11b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "908959bd-bcd5-4eb5-b518-f0826e177494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88528ce9-505f-4326-9d93-8250815d5f76",
        "cursor": {
          "ref": "da954df8-ac51-4684-874e-691d4239123a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1fd6358a-db28-4282-99d4-18bd5c8df251"
        },
        "item": {
          "id": "88528ce9-505f-4326-9d93-8250815d5f76",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d31e8ebb-bb87-4624-97d8-6fa8ed95a83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ba48f-0cf7-415c-83d7-85b27a9521ca",
        "cursor": {
          "ref": "d4a86019-05d6-407c-82db-57e1f8161fa3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cf61f0e4-8176-4ebe-82c3-fa0b72cf2543"
        },
        "item": {
          "id": "1b1ba48f-0cf7-415c-83d7-85b27a9521ca",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5c16a391-1686-473b-9617-5f3020e3d843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445417fb-16ed-4b62-92ee-4033bc7915c3",
        "cursor": {
          "ref": "e0f617e4-bee1-4d24-b081-5fedec38cfc2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "52823912-a750-42b5-8f3a-b296b981120c"
        },
        "item": {
          "id": "445417fb-16ed-4b62-92ee-4033bc7915c3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8c721c9d-da3f-4d89-a557-0e0db3303735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f1b572-f5b0-4f0f-8577-54c058591197",
        "cursor": {
          "ref": "21be66e2-22ed-4884-844c-fc0525b3fb6b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "11fede8b-8185-4904-a7ce-e305f90b6374"
        },
        "item": {
          "id": "31f1b572-f5b0-4f0f-8577-54c058591197",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f9990bbd-f1df-46c3-991b-9454a91b55a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59609c0f-ed49-42d9-9ec8-dfcdb27a8afa",
        "cursor": {
          "ref": "79dfc7fb-a68b-42ac-92ed-b6bdcd61bc3c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "abacfd94-5f06-4550-b7b4-ac91fdedb9fb"
        },
        "item": {
          "id": "59609c0f-ed49-42d9-9ec8-dfcdb27a8afa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "48251dbd-497f-4e5e-b886-ff41ae82da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cbbef0-1b48-4305-8956-af5455355811",
        "cursor": {
          "ref": "c72acc0b-aa3c-47fa-8452-86c428c5dbb1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "941275b8-9920-4926-b2b1-3a3424598bdc"
        },
        "item": {
          "id": "b8cbbef0-1b48-4305-8956-af5455355811",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "828d66bc-ae0a-4335-84d6-584f229c18bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec276050-e629-4ca7-8613-a04130f5225f",
        "cursor": {
          "ref": "906df294-7616-4d98-8753-92da134625f8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ca2fb98b-61d2-4a2b-9773-331a1959e2fa"
        },
        "item": {
          "id": "ec276050-e629-4ca7-8613-a04130f5225f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "99fb61fe-4804-47b1-8201-bd7d39f1bdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eddefd6-080c-4292-aba4-bf0ee33d36e5",
        "cursor": {
          "ref": "d8902fb2-1ec2-4d5a-aa66-85e42be6ccb7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "16695e16-dbcb-43f1-aecc-5627bb668658"
        },
        "item": {
          "id": "8eddefd6-080c-4292-aba4-bf0ee33d36e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a548191-97d0-4186-b8d9-5be39a8b56b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0449925c-8cca-4963-9818-688882485447",
        "cursor": {
          "ref": "99593c1c-24fb-42ea-9df0-c790796d68d2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d810013f-a76c-4900-aa32-97752be5ce7c"
        },
        "item": {
          "id": "0449925c-8cca-4963-9818-688882485447",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40d00cc3-3004-4855-b485-65955443e27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14de14d7-28d2-4ee4-9ef5-5e6aa8508205",
        "cursor": {
          "ref": "9dafb8e8-4e1e-4a80-9ce8-fa577330b16b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "aca526d0-cbbb-4202-bf48-b9dea68b67d8"
        },
        "item": {
          "id": "14de14d7-28d2-4ee4-9ef5-5e6aa8508205",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "02fbff42-3cf7-46c1-8b55-afa903861994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b36dc-8746-40a4-ace5-c2427d2b829a",
        "cursor": {
          "ref": "aad4d79d-5448-4fe7-a354-fc732f2bbd26",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "84305ed3-ef41-4d2f-b512-a2ad581a8233"
        },
        "item": {
          "id": "8e0b36dc-8746-40a4-ace5-c2427d2b829a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f6158f8-5a66-498d-8938-6f4ddafba5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97ada12-38a0-463f-a522-60bf6a4ca236",
        "cursor": {
          "ref": "1410b411-fbdd-48af-9817-0861186fb292",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b00d9f89-04c1-4061-a291-421561ea5783"
        },
        "item": {
          "id": "d97ada12-38a0-463f-a522-60bf6a4ca236",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e531b395-1780-434f-ae28-b394916bd072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6c1a5-86dd-4f01-8508-c6f8d6ad67d8",
        "cursor": {
          "ref": "5494d6b2-f46f-476d-bbbc-f949b5323273",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ffd37b85-0823-48e7-8dec-e58373bd7e5d"
        },
        "item": {
          "id": "40f6c1a5-86dd-4f01-8508-c6f8d6ad67d8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "db8fed23-cbe8-4e88-bf48-00baf7d865d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25dfebb-7764-4931-9d11-ba32cc54ebbf",
        "cursor": {
          "ref": "f7f8a782-8f17-413a-9686-af05ddbee13f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e6321829-a3ff-43b9-9b35-039b89095f59"
        },
        "item": {
          "id": "f25dfebb-7764-4931-9d11-ba32cc54ebbf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fed06f9f-df1a-41d1-ad24-b72990a5d2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039f0f25-8f2c-448e-bf8b-f5235cc7ebdb",
        "cursor": {
          "ref": "eddf9ef8-226a-49e3-a6f3-f5749d3d3669",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e2ff1b25-574e-41d7-83df-bd140838a484"
        },
        "item": {
          "id": "039f0f25-8f2c-448e-bf8b-f5235cc7ebdb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8f95ec14-d368-478d-8e01-e81a715467b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a61a868-7afb-4996-bec0-57a3288b9a33",
        "cursor": {
          "ref": "ee300c63-a7d4-433f-926f-ef1255d18846",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "930c73de-f17f-4843-96db-473a2852b5d8"
        },
        "item": {
          "id": "6a61a868-7afb-4996-bec0-57a3288b9a33",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c4c59d3a-2237-4562-a220-b064ba9b6c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa61e04f-5316-4b6e-b5c1-bd30e00a3fd0",
        "cursor": {
          "ref": "8f44b0e8-8003-4605-8c17-d78ef8660be4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aaf2f248-ef30-4231-b0ac-dce319c0a478"
        },
        "item": {
          "id": "aa61e04f-5316-4b6e-b5c1-bd30e00a3fd0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c6440e9e-ce89-4dab-aee9-039d0a3073de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1061c3-c8c2-4ddf-8f7a-de8d140a43c5",
        "cursor": {
          "ref": "a55bc54f-d44f-4dc4-900e-de10ce87a1c8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8c3d54fe-d193-4d5e-912b-3c96ae5e778c"
        },
        "item": {
          "id": "ad1061c3-c8c2-4ddf-8f7a-de8d140a43c5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d901a041-42b5-412c-a25f-8744c5dafaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3517ce-f76c-4057-a003-b5490f3b4886",
        "cursor": {
          "ref": "d93e9288-067a-446f-884d-87ad2e085463",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d230f60a-1cf1-4837-861a-61b58671c42a"
        },
        "item": {
          "id": "8a3517ce-f76c-4057-a003-b5490f3b4886",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fe6ed2f3-4e83-4f55-bdf6-4e8f1e8863d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69aa8c5-6535-45a0-9ba9-64fe0398b995",
        "cursor": {
          "ref": "452d121f-b336-4930-85bc-b93829ac5cfa",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1f8a04de-96ab-4261-914c-7f06e8293766"
        },
        "item": {
          "id": "d69aa8c5-6535-45a0-9ba9-64fe0398b995",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3a5da0aa-5252-4004-9d4a-b3f57d268493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1c505-58aa-4dbc-928f-e90900586934",
        "cursor": {
          "ref": "57891d16-aa3a-47c2-bb90-6065c021c567",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "57f16584-5d49-40bc-af87-43c027e0da22"
        },
        "item": {
          "id": "83e1c505-58aa-4dbc-928f-e90900586934",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dca8de6b-8c69-497b-a242-55a51ae142bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f484b00-0ecc-4be7-9aca-d76737110c27",
        "cursor": {
          "ref": "2541e9b6-48f1-4910-bb64-8e79667f076f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ffc4a9f2-a289-48ae-9d15-830ab435124c"
        },
        "item": {
          "id": "1f484b00-0ecc-4be7-9aca-d76737110c27",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e9e6eed5-c89d-481e-9af6-c45ba8ca1d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad040d7-b0a3-45f8-ac0f-21835c72918c",
        "cursor": {
          "ref": "ae0c5bda-58f7-45fb-987f-4c334c1dc042",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fef2538a-9a2f-4802-8342-aca02944029f"
        },
        "item": {
          "id": "dad040d7-b0a3-45f8-ac0f-21835c72918c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c4c90662-7568-4619-b06f-46ccf1dc1826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d958cc4-0632-478e-8f99-4f3dabce94ce",
        "cursor": {
          "ref": "3778012b-72c2-49a0-b588-ecf40e4ebd35",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "69f2999d-9270-4552-a938-96332d39f9e3"
        },
        "item": {
          "id": "6d958cc4-0632-478e-8f99-4f3dabce94ce",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f307f9a2-283d-4f13-af12-d12cc6bb9d46",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d796dbce-69c1-48e1-8b3c-66a3f0fec79e",
        "cursor": {
          "ref": "0d10df07-eeaa-4e72-9828-4c0594b840b1",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "040df0b8-c800-4129-b781-7c821ecde06b"
        },
        "item": {
          "id": "d796dbce-69c1-48e1-8b3c-66a3f0fec79e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e239df69-78c4-4c9d-ad3d-bbb21f7f0dd4",
          "status": "OK",
          "code": 200,
          "responseTime": 1333,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "70294a60-159e-449c-b1a3-5cdaf0c7c84f",
        "cursor": {
          "ref": "b23c16d1-34dc-4baa-bcdf-c47a35131761",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "21a7bb5b-b369-4a01-83b2-0892f9ba5a0c"
        },
        "item": {
          "id": "70294a60-159e-449c-b1a3-5cdaf0c7c84f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5242823a-9adf-4e6b-8a09-2bec1ced3b85",
          "status": "OK",
          "code": 200,
          "responseTime": 1153,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0df35a-ef17-41e5-bc16-be42e9a78187",
        "cursor": {
          "ref": "91c7b1ce-9857-417a-b27d-812e7e024f9d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "489878bc-401f-4c3d-8373-db0a591365f1"
        },
        "item": {
          "id": "6b0df35a-ef17-41e5-bc16-be42e9a78187",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2cc0bcd5-4786-4225-b8b9-c70bff9b49cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0df35a-ef17-41e5-bc16-be42e9a78187",
        "cursor": {
          "ref": "91c7b1ce-9857-417a-b27d-812e7e024f9d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "489878bc-401f-4c3d-8373-db0a591365f1"
        },
        "item": {
          "id": "6b0df35a-ef17-41e5-bc16-be42e9a78187",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2cc0bcd5-4786-4225-b8b9-c70bff9b49cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d46f641-c1a4-4222-9765-6d361d2b7aa1",
        "cursor": {
          "ref": "981e3b14-cc48-4fe3-8128-403b3d9792d6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "52fa9254-3b53-4794-be20-eb52d4f226b6"
        },
        "item": {
          "id": "5d46f641-c1a4-4222-9765-6d361d2b7aa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3a791737-4aa4-4ae8-9e87-ded3c62dc71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead379f-cf96-4612-b14e-47e0b29b0ed2",
        "cursor": {
          "ref": "c1ceea95-ab17-4bc8-b98c-f315895fa0e5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "11c1bd1a-7248-4ba0-aecf-28c5c872e2c9"
        },
        "item": {
          "id": "2ead379f-cf96-4612-b14e-47e0b29b0ed2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "043847a8-fa6e-4efe-8688-ad29f4a4b160",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}