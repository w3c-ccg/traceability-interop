{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5293733a-03d9-43d8-8020-bab67e5e8736",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b0caf379-9216-4cae-aac1-979356513497",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8cf1da3-2ff3-4d62-a878-ee450191d85e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4dc66c15-8a78-49f7-b064-d12431362e4b"
                }
              }
            ]
          },
          {
            "id": "b8e4dcc8-87c1-42c8-806c-d8558c69ac9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe8b2e7d-203c-477a-bac1-177e1f63429d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b2fb2cc-9463-455d-afa7-3585f0784626"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5d83915d-423f-4fe4-bb72-8c6764e41e94",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f7e427be-d847-498a-b367-6499a165887b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ccc715a-1078-4661-a1f9-cd912a000363",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae69c56-9eb8-4bc1-99f2-6c81b04ef3b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2cf5df6-20d2-4eac-a0f1-50342aec2fcc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edac0436-19ef-4589-a72e-77c00a6feb76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26ba7f8d-b408-45ef-bbad-d19822bb607f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7490ce79-e324-479f-9fd1-8be04d9482d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34417252-d8ad-4ec4-9f2b-31c162584190"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d07745f6-61b6-465d-888e-733c921c338a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8e4f03f6-75cc-4717-977c-3b81fe7e4b04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63f1d1bb-2ce8-47e5-b82b-d9ae7c7f71f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8744793a-a606-4e98-aad0-b7f15e6c2630"
            }
          }
        ]
      },
      {
        "id": "abb3144b-cb6c-4c3d-84f9-bb775a128deb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "42fadce8-4d72-425b-a7a2-3e4a2d5e8ba0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72869323-4888-499b-b6df-6caa137e8bae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4575e212-ee43-4410-832d-ca00bbc26b40",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323298f8-5b7c-4a73-af7e-5a0fa52d4b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28587a1a-8e5a-49a6-b2a8-74fd8895d595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a967f5e9-7e61-44a8-ae97-d823adac8cbc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38767b99-34f5-4159-94ac-113af15034d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89e8a131-61f8-44db-b913-179f47314c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f95d1ce-2c03-484c-b84a-48d385bc36a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e7c6ce-43a5-4d4b-bfde-a8a0ebc43fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e1eb1f7-1b89-4a18-8cfa-2b514e703c4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "056855f7-23c5-4cf0-b68a-be49fba84200",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8549dc1f-4513-4b98-9be9-7e5ea5d7db3c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aeb997-dad9-4168-957b-6e50a88b4daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f117afd5-31f6-4d4f-a521-916d59aaeb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8b4a9-ed43-4985-bee5-317427eb0cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50196fb-fa8b-4418-8af0-4e92dcc37031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8991379-b696-484d-bf46-1818d9b9821f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113f5bd8-9703-4df9-b39f-c77dd9361a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d52e9b30-796b-48c5-8833-5909b5c063c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee03dd9a-426c-4980-a3eb-e1627cb8f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a95a56bd-bb46-41e8-a92c-63b246885b85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c163ec1-7aec-49b2-a0e2-1886b63ca33a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1771754c-ee5b-4b51-bfac-b7ae4a9ddc59",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b6c4d9f-97d1-4c59-a16a-8045f8d2a8ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f6b917a1-01e4-4e9e-9a0e-a6de3d949bea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f3cbc60-7d55-4f5a-8811-54db5b3d3d12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0b50e642-e94d-4d30-bd07-1264095e5c5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c172e6ba-279d-40ca-9d6f-0ef8ae7f4eda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6129034f-76af-43cb-8d28-e923e7e8c4e2"
            }
          }
        ]
      },
      {
        "id": "561d0495-5682-4b80-a847-46d84f575a42",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c64dcea6-2917-4146-9aba-1bb6ca6b015a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef2ed442-792b-4f95-b84d-b08040c24fbc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "705fbff5-8058-405b-a760-04d823332d9f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2e4043-5ab8-4d72-85b1-eb7cabde7376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52957342-1bec-4131-a3d4-e2cf663b6d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e27200-db64-439e-951a-8e7447f815f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25afd6d2-1111-4afb-bd96-f40b5ce13776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5442c369-acf1-4b8b-9e6b-17ca9e6c61e0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034d6f20-6eef-4532-a124-6e77bfddc38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3640be5-4b2e-46e0-bb06-df7c5259ccb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd12e270-6dd7-4a8c-8c73-0f3ee5fe85bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "689b678a-d86f-4467-9ac3-c8a372372323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8940ba32-1c62-458d-ac93-a338fe61dee2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196281cb-152e-4835-9363-465c8717152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a1754d-2479-46e6-8d4d-49e751421160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65588efe-c4ed-4b6e-a6a0-a8248878a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4b0c579-e53a-44fa-adc1-b7c43e5d08c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0296c-7947-426a-b077-f7764b678828",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ad76e4-a503-4c53-8020-8ab639218a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fdd13dc-4dfd-4f8b-b8a9-3f02da772e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27224c6f-632f-452e-ab86-cfaba3f1ebb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc69a7f6-1abd-4d35-9f51-d57ea4dcbd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385d08e2-7c2f-4102-800a-f39611370ae7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9acd6c-b6ed-47be-9629-180ea66a2b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3441316-5214-429d-b744-c33b5ced8efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5032e741-0646-4358-a3bf-c9c12936a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e2370e-ed84-4a26-8c33-f5ac378831cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b6771-6375-478c-a96d-e3d04ccdebf4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f62b4-f2d4-4121-9697-f584976ee8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6671b8b0-1254-42c4-80ec-41df0d5462aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f20b70-2226-48e3-88bc-86ad6e8173fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20932044-aa79-45dd-ae7a-956c30c17761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0834958d-c36c-4313-b2ec-082fa598b688",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629218bd-bf6f-48b9-8975-cfe598fb8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ccd407-f3e8-4277-b83e-a102c8beeeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b25d05b-c154-4657-8066-528685816c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234cc501-4282-4056-89ad-55b1bb6f54b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a5d99b-1ab3-49e5-8868-29ae9d59daaa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c0c42-7ef2-4da5-82a2-2aefbd2ea380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef83194-7061-4c85-a1b6-03a24d531b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc294b92-f021-48c8-a127-2f7754535d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56db2b89-61b7-4484-b4b5-0477c55fd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7851288-bd5b-4e00-ad4f-7489a3bbe99c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce51513-c24d-4707-a7f0-e8448cd9794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1137eb-eea2-4980-89e7-c623f2972e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4df13e-fa3c-4182-8568-1379bfb0cbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e113699c-76fa-4ed0-ad20-a9f46df1df5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a356248-17e4-41c5-b9ac-cef2ec9d4e78",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f750c5e9-8590-4596-a822-c047f371b7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a870438-5086-4f79-845c-9289363a5c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3d8ebb-6b78-42a7-9667-865075dd8765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f786493-f70e-4b26-8e76-1d866b40164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3e7aa0-318a-4157-b047-a7fc624456fc",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b423eb6-8392-49dd-a0fd-9bd1578625a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebc21c4-efba-4ec4-83e7-89025e834706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d44c9dc-9b7d-4e61-8ca5-2369d75dc591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51bce984-2348-4c6b-ac97-271a749dec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f75d204-e0ee-4164-a604-1326fd70f19c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed325e7-15ce-45a3-bb35-2a92db3ac18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8662c9-ce1d-41e8-b989-9ea9a9a3765b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a7c1ce-77e7-49b7-899f-4d0c128d2e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e7f9d1-be91-4f52-a26d-619c9169e3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2838000b-076e-4dab-8d36-096de1059dc1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46699270-f2f4-4b78-a56c-04f2b722d7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788e9da4-d7d6-4da2-b67a-09bc8427f551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12fc299-ad33-4431-aeb1-164813d609ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6316dd-aaf6-4343-a846-fbc020debc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70434d9-f990-49af-836d-aeb431dfdd9a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0c767-0599-487b-bf7f-3db5938feed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149fbf2d-ed16-471e-9de3-e34162757bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3a9c1-ba39-4be0-bc32-a4d21de7e06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5653821-b8c9-4866-a2b9-a9fe695a43a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eef03ca-3ccb-4043-b9bd-a8e8a0cad9b1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2789a037-c0f2-4539-97aa-f97f8a61c27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1edb036-b2da-4b7b-81ef-136c834c652c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c8d22-4b5e-4306-a99c-6ae58dfe0374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3976a370-db3f-49f5-bb50-e2fd0227dc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56081c3-2a6c-4c6a-a9b8-ba78d5e973e3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5d968-8e0c-4297-af12-cd24680014f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d534a276-4997-4abc-a3c2-7e6764bebd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3388c484-7f79-46cf-8061-afa08c224f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb0707a9-924e-4ad2-b2d4-e903ff4670d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b443c334-60b8-4ad1-91ab-7b97fa00a333",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffe9b5d-4b89-48a1-92dc-af59700c3667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b0e2cf-2505-431b-bf2f-592f74973099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd6d15e-2dba-4f00-9465-303d4924c60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be19aa25-a806-4983-a4c2-a5e819718d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80ec5a7-66b0-4fed-9625-a8839689cdc6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b528c368-e1b7-44aa-b4df-8273dcfbf27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76971b9f-2ca6-4002-81b2-f7c397950c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a437fa5-0123-408d-84c5-e50c2917b152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8500395-ae48-4aa9-8574-58ba97242257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac4d059-e6d0-4025-b464-15daf95d643d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a901b34a-704e-4fad-b773-94059778d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a35138-420c-40db-af9c-be354b10a69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d301c0e-8b7b-4f56-9867-aa999655d688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f3ff4f-c390-43d6-8923-7ad86506747e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb774385-eb5b-4031-a219-10a3d2abdf58",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3fae64-d27f-406f-ad1f-6b3a517b33e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a014fa-4905-400d-afe4-cf01bcc37e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e6a5b9-1212-4750-92f0-8be9b60d85c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95e90c9-2fc6-4fb5-9eb0-b601eea6ecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64ab26a-967d-4739-8f06-4bcde7613130",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b008e61-ad27-4687-9de6-e091784db096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b5d1de-9617-4536-ba2c-d42f5006a22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20573ec5-9822-410e-a19f-0f420b458ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0cc7d8-cce4-4334-b5b5-66ab8ab8e25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d91c7-e60e-448d-b58b-946bb3938608",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95995af-99c6-4ba7-bcdb-903f0424d2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9151fbab-5cfd-4312-ac2a-4e78204e9601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed57f918-bee2-46ad-8efc-0caa90d4679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e756836-c019-4324-aad9-e7ebb5812f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98590c33-83b9-4afd-9222-663384a77b46",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d67df24-5b18-40be-83b4-cbce573eb17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000067e4-6666-44cb-bc46-3e5ef7bf8cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb84b9fe-8dfa-4fc3-8fc1-21da4e98810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfee8e5-2431-433f-946a-08d73a1dc799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc788f7-67e6-45f4-a2d4-27f38bda9db3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96c3bf7-3edf-4115-bb5d-aa1d7baaf84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e0d94b-903b-4a9d-9ddb-8da79ba717c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f296ac-8a6f-4acd-9a5d-d795caa89bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d3a7e0-3bb8-42db-9f09-9c3c95943b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd3a257-4c33-437e-837c-cc94da0f0f4c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae60376-c164-4694-b8f8-37f60dc3a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e1ef6d-cc8f-4d1c-9d02-28b2667105b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215bf442-d489-4c46-9a74-a554305961cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32dd360c-3f97-4b02-8888-7560e5a3139c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4073ffb-dd91-4d15-b6a4-60eb98346362",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63372a8d-2ec9-4345-9d4a-0c0eafd0d402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3347ee1a-28d1-4438-a3c5-5223fb86ac7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5160b3-c0e9-4922-980e-d5972365bdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "740d4466-f77d-4ada-a27f-da1eee0481df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ab8bdd-6ed4-41ac-bfb6-9d58401a8da0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a8b744-71f6-4f63-9a3a-99e3ccbdeab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6804ea03-1488-4c15-bcd3-f8fbaf2b53de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4a8322-3fcf-4484-9817-881fcea7fdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dab3dc-665e-4c91-aef2-cb2951bcbf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a22737b-9f2a-402c-8159-ca51e0dc036e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0e232d-4419-42cb-a9af-392f865c0932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf5aa30-5191-4deb-9d0d-1fb328b6e340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40288fa-4252-41f8-8825-d90516eb5ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f966311e-1e3e-4172-855b-e483c957b342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e4756b-fec3-43ff-afa8-fc5425b6446d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c1615e-3f52-4131-9ebc-8af05326d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545957ba-2539-491c-ae41-133beadcede9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3571c9f6-2c94-4c70-8f2c-93901e9fb3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc747ca-6c3f-425d-8685-7c21c8027924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2228814-e433-4cb8-8b71-2e827e10b34d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e689bfbc-bc0a-4e2f-a661-0315c4802b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e38926-c0e2-4e94-9132-9abb5a0dc6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d7eae2-c20d-45cc-8141-6e8f9cbe9bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "128ea7d8-e64c-47f7-9237-ad05f1c2e4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0934647f-f7a6-4726-ab90-5aa07eb927ff",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fe28ae-b2e6-486d-9d51-3dde2ecf4100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f90c7b-215e-49a9-981a-81365d7c5f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85957598-35a7-4785-afc5-89faa7933991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6bc43c-485e-48d1-8d4d-0d4e95c1f72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2443c6-4332-4c77-bcdc-aac61823db17",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674ac741-ce5e-442a-be73-28720fb4ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c31bab-4fe7-4cf8-ac5c-9005a88a895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b731a6-da62-49d9-a466-fec9bd97f222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02330fc9-4d08-405a-bfb2-a5b71b201a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d975cc-189f-4b39-bea6-1f69e7b168e1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e531551a-277b-4953-b1a8-bd9a902d1a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fcd12a-9158-401e-9c4c-62c1dfcc4ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6690af02-b68c-476c-8b1d-79a53050a963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3eb972-f838-4c83-9357-a3558d85b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aac0ff-8223-4fe0-b365-cc124a39f4b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79a991d-60bd-4ad5-84f7-9dd2a2b21f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f33abc6-b193-49ae-b379-1485d98da2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd96b53-c588-4938-823a-31d71ab4855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdb8870-e1da-4dba-a0d2-8f85b5de4986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2134e9e3-c6dd-4f21-a94d-b9bcf4d61d0f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8267d31-1447-4f76-beb0-6549c20f5726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fe1dee-e346-45b9-9ced-478316894039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ea492-808f-40b0-86c6-52616daa249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d17d0412-9510-4304-8283-8e5d218aeb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a87254c-7b67-4ea3-8408-52f41db385ba",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf580f5c-f53b-4bf2-99c9-8c8e555cfb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b171758d-befa-461a-9188-c1cd736f6a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc53e8-1957-4d45-9182-8232ca8d1f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e539de29-4f26-47c7-b1fa-92bb5f465c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8902a791-c976-4b00-83ca-80b70e830396",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbd25e6-b96d-43d1-801d-e839907eaf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93907351-98c8-4668-ad18-891865df8af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efbb105-441b-43d2-bade-6cd71fe20ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce56cb2e-acc2-4d4f-9f7a-5b6496533f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298f6b82-1b3f-4f13-a510-a98cd73adcdc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43dafa0-903e-4ee3-9dcb-a38e9abad240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b6635e-270c-4826-a92a-688aeafc5b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4a06bd-6799-4323-91f8-1821bc805241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d439794-89a7-4a47-a54c-abb7f21d347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4962f9-847f-4372-95ab-52550af535c9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898e9e9f-5711-4867-a042-bdfc8bb691e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2226b35-8441-44dc-8879-50381ec667d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ec830-0319-444d-919c-966e0a0851c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2f1f93-8b81-439f-9ce6-a5f696234829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87962d09-828e-423e-ba4d-9296c6ddf624",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1672598f-b8a4-4023-b482-401504647d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f97b870-c674-4e5e-baa2-5913fe725487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f79d5-fb71-4d58-ac84-2039fa57903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7639631-7c56-45dc-945e-4dbaf832747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9346d35b-6c1b-455a-9132-cd56936fc545",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ac684a-49e6-4f52-a7a3-bb81c9ab3562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190424d8-508a-4be7-97f1-714a41c26144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5220bc-368a-474c-82a1-530a5a9966a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8055b1e-c567-4805-93cd-df9c6b2b46d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f154c708-d901-4a04-bf5e-9c70b2efdf45",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b79c207-bc77-4a83-8ae6-501e61a66b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d76415-8e24-4582-81f7-c20b4d252ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae8e7b-0297-476e-be85-cafa928856fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3bbf18-5da7-4ee4-ab35-2d6eebf5a587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662bb2ec-1739-4a4f-9ceb-459d208978aa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b801e764-b101-4b62-ba6e-65b1925ff4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89621d93-ebf3-4e2d-8782-8c1405900f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f42905e-f38e-44fb-bb24-137bc3833eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7041e6fe-f2bd-4603-8366-a340670095f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed034ce-1336-4bb0-8f09-2ffc8e7c0fa4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ac7d9-b868-4bb6-ae7d-7fe70bf4f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2d7d58-1474-4078-881d-277889c5f1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e3de2-5933-4f37-a658-6345db748453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f877e9-cdec-463d-8d6a-6f2474f296fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00614697-ca15-42d1-b2aa-8cf4803415ca",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae1e64-38ab-49f6-a017-956cb02c9c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4566d268-8086-427f-9cfa-6e44fa43d6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eec4929-7fa0-445d-81e0-b31f72593764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52a4a64-51b1-49fa-adab-6d67b1f88cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d2ab2c-57c9-4ed0-a05e-46d84d8e356a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50eca547-a391-4afa-83b3-9cf987c1775f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343ebd62-44c9-4f4b-a4cb-5f222f8d267f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24a851b-8b71-45b8-825d-19767de8d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b87f9f-55db-422a-9ec0-c9c1544cbfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6657572-850f-41e7-9535-915d97e0bace",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f68f80-c712-4b10-94a7-e79c6b6bad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427a0c27-6770-4aaf-9460-0e807842c633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555fc98c-8185-4add-95e9-f8a296c36e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aea6028-3028-4e50-b2a8-c269af6ea4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a4a4c-5caa-4e77-b165-b06188018762",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb02bbb7-3faa-46b8-96cc-3b476201c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe659c3-aa46-4f0d-b54d-12784fac2b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1e0c6-6027-486e-b2a9-77e5bd39d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cd8cee-787f-421b-87da-6a910de9ccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c90761f-d71c-4bd0-94f2-e68a3c552733",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d54543-dcfb-4816-af7b-7b90d1b7a3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86013801-6d9d-49d5-bc64-43fe9a094f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8156f7a2-e267-4119-bcf3-d5b10879a470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6882f3f-fc48-4246-91b3-3104dfddae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60599e67-5289-40b8-8c7c-0cef0cfb2c02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0dbdb-3038-42ce-b001-f8324f116a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa72ff0-5b1f-477f-999b-71154c45629e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de17021-1ebc-4f01-b06b-7c5c2bfce2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8127208-ae80-4da3-9b84-67fb23c6cf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053da589-8292-4b05-ac8b-8d76f7f658f6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ee326e-2d46-42e9-adce-332fe3074a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979c0c99-bb8a-4a2f-a533-440e3ea21cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9bca8-b9bb-4e8b-84db-ff196d1d4cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c47818-8e46-4618-b369-fb9d60c3d2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b672e78-b230-405f-8033-0b72bc069323",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe78a3-6d3a-492f-88a4-98ce9ff2a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03325a63-0058-494b-993c-dea3223de32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4cc7b-9bf8-4fd5-aee2-a59475a01c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07e8ddbc-d82c-443f-bbe5-6b6c54f2b0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f4fcee-c652-4e2e-95c1-073e167522d2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f323c45-a62c-4520-b78b-40a007ed2c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697f7ea8-fca9-4f84-be79-0591b043ac3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a2ef10-c44e-4277-a116-348e68ac70d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f64df3d-7e5b-4d34-b2b6-1a2e18892fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847da73c-6e44-49ca-88d4-c2f1c60a0930",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567e2e7-962c-4fd6-98bf-d4f9d58835b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413c700e-f8ae-4612-95e4-d57cf62c2c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a43ea63-f557-4cc2-a3d4-16c23ce00212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4143c2a5-46b8-4aaa-a545-7dc01c2af6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b70214-3476-4023-8413-d08c3ceec178",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cd147c-9992-45ad-86c0-fa26699ed3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5206f9a1-1824-494b-a582-286e12fc897f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c50e8f8-c149-48f2-91ab-3f9f4c11a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73dacfbc-6b71-4a62-bc50-a592f69cbaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d173b5-260c-40bd-99ea-7030677e7685",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e3f7b5-919b-4bcf-b3f0-255fdfca37fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765f86ff-054f-49cb-8061-b2c790f42278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9a8399-07b1-4855-8fca-925b611a0875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7778b1-556d-4525-b493-1e6cd0567ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2219fd25-738b-4350-a557-6ffde586c091",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b8c146-c701-4906-8b13-fc14f8700938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd94224-063e-4453-9992-8b15889f4792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70a722b-e9b6-4822-935f-cd4aeabacfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cde88270-2b73-4493-a876-e8f4630e3c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224ab59f-0822-462b-8d7f-3460b43f19dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62aa6c9-c269-4aa1-acff-8a729386f4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4eb5d79-a968-4ce4-8563-e48d8d723e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a090e9-729e-4d30-9a4b-0f32624351c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d6be6d-27c4-496b-98a1-43d27e179377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6ead63-170a-458d-a874-16fb13555250",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267923d2-17a1-44df-9204-db69cab3a486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccacbcf-bc71-467e-8721-cef1c2bd37df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0691d4c5-7316-482d-bfbd-dd35d78cfb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bfc4b3-3b9a-4045-a7e6-4a81538bff79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98e60d9-a61f-4195-8117-1449d961fd8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a288559-4e35-450d-a54e-c04ff77854a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cc60da-946d-46ed-890a-23cbcc3bb546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a2e652-5565-49c1-b1f8-c33ce1510641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "67aa5673-b169-469e-ab61-e7bd8125912c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae686d1-2c4f-45a1-b375-838a080db7f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed252e3-3020-4e6f-b008-942f04ee426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b70984-a1fd-40af-b839-3f1361a19cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0972c337-1910-4c14-93bc-fe85d5a50a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5772ee2c-9a07-40e6-929a-8f65356256ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dfc5e0-484d-4be8-bd74-b4ba726f19d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f26feab-bb58-4b40-baee-67d9a1152a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91967e4d-8386-4d1e-968a-baf60f823f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2c2d1b-08a3-44bf-945d-98b62d12cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "23872850-a0d9-4ee1-b8ab-e2cd7922c415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ab76bd-a660-4d0a-b48b-7b9ecf919e17",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acacfd9-4b67-4b89-ac1b-54b28bcf2c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34762c7-d5bc-448c-9615-14169ce33459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01715a-d4ac-4d7e-9666-c79af64a088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c99d7ca-1273-47c3-9185-6b59184788f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d55a206-f292-45e1-af5c-3186fc962fda",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b46f839-bbd7-4d08-824a-57e1c29c1d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dc4062-1151-4d2f-8648-8629e5978995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a15e537-5afd-4ab5-9907-73cd00b82313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46314e1f-1091-4671-b393-c4dd25085882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e3d09-e009-47f8-bcb8-4cb6aac1d281",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4ece3b-af23-47b0-bee0-02a1fce872c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bef802-2d49-48d5-bbda-2304c7507897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2b0d7e-61c9-4d52-8af2-81faf1d02c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3da7156-4aab-46e7-a2cd-c7584b2ea8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbba15-1ade-473a-9250-b019145e3b35",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9370a6bb-c3b7-4f63-b9fc-0495bb2456ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8487b094-75bc-477e-9d98-ca7405de869a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea1f208-28f4-4c5d-90c6-0b04b896d5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ada6a079-a7c7-4d3c-8a26-c9d497245748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1833464c-87fc-4941-a980-6ada16995307",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c504831-1064-45f6-b305-b636b1deae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fbfaf5-d7bf-4dc6-8836-2981bc576599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691ece4f-088c-4efe-a25f-a957fb743f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc8fdea-ba74-4b3f-943a-405a69b48fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c1ab75-a5b1-408f-8f41-e4ecfd89a66a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fe9493-b1ec-4143-93f7-134d27fd8480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc49b9c-bcbb-4ac1-90ee-62abb8ec0fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62141f1e-5a1a-48a3-a47f-1cb40b5edc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0118ec-12a1-410e-89c2-5693fb50c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc228d6-3fc8-4571-936b-615e7263741d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99c7948-a687-4634-b8a6-7e54d0c8487a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2527a2-c21c-44a8-8725-738b51c04ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15af552e-a2ac-4216-8263-6d8909fed806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53855233-cd00-4491-a0cf-877e7506d75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe77f4e-8ba1-4a4a-9e81-bcbb9bb14a75",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214419da-ed15-4d12-a097-49952a887c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c6c3cf-ca5f-47d1-9793-af5e4e28e3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5252f0b8-1c97-49de-91b7-d7e8f15c6369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6f4ca-880d-4bed-9b2f-37753c13f635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e62f669-22ce-4d0e-a6db-36d8f2ef40ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c835ae0-1b95-461f-bdee-c0f4507ffabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497f251b-1c1d-46c5-a674-6af9bd3bde29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa51dcb-c8a5-4662-abb4-271eefd0fc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a5fe2a-91e2-4444-a8e0-857b0eaceb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc636c38-644c-44b0-a007-382985139148",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a43aa-5c42-4476-b001-a37c25886b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa49b88f-02bd-426a-8d63-0bb278cda30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa16497e-c495-4b92-af6e-63caaddc79e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5ba2ff-e167-4154-917c-209136b9070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8dc57e-97b8-42f7-a597-11d258179790",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690efba8-cfde-4b89-bc14-30203f568df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bdf0a2-ad72-42cd-a521-1d6decffa7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa9cd1c-0ef4-4e0d-902d-5b5323b0bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29d11a25-c882-400e-888b-51dbac6825a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9a16f7-afaf-4d28-a3f1-6e1a0d074bca",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed9ee94-93f4-4e09-a364-a20c4d5a9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fa17e8-4a1f-4019-b3bf-eabe0554c798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54903af-dbf2-4d3e-aeb2-b3073061f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c19082-4b8d-4f1f-a1df-f1c838b28513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c674b-c6e9-4286-80ee-2aa3486c0b09",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a144c121-197f-4069-a1a7-077843969339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44f20c3-4a56-4821-a30b-d75bc7784846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cbd665-5165-4f5b-9c14-970a84440bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0288fad9-b2ec-4bc2-b0ee-00647bc675e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a413dbdd-2b56-4e33-8851-55a53aa5b461",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af082409-013d-48db-80a7-3ef948d4d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397be46d-0b82-4035-b4cc-56810ecc940f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef3ff7e-6fe2-4adc-9ada-a43ce52d1180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddb6dd6-ca7f-4b9c-a2c3-74cadd87e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7293a024-37ba-4376-9438-9b97fddf0dcb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d4709d-3644-4ebc-8af1-035ae12b8a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c94f4b-004c-4368-9e98-0eafbf8a0246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bd62f7-6414-4a74-bd57-a7459d60c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138cf19b-3139-4520-9705-4236f9123c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d285a-74a0-4793-bac9-67629f0d42ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7136f8e5-5568-4f8f-a38b-0f35675536f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2324748c-b735-4a5b-95f4-2f5997dad4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4eb8e0-5312-448c-b09d-fdddc0bde688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af31c4c-85a7-4914-af9c-09a5fe544dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db507830-bc68-4c20-bb7a-97e84bbb0cb4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2771bf1-5662-4618-b142-08b210404436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348e5d58-6ddd-46b1-bb38-5361cbfdb3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb039e5-e8de-40e9-ae79-19a9c9bdf47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89b93117-8237-43dd-81a0-f98d1c23b602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebc1bf4-0a53-4ee2-90fe-b29bc70dd6a0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849da614-3a35-4b2e-b3d5-38eb9993a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09918e16-8595-4d7f-baf9-f20256201ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54487367-537f-4a29-89fb-57e8528c0bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1c934a-6c6f-469d-9a26-9aa44a1abad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20db7954-d2dc-4938-8c94-21f73b70cc73",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d59c869-58cd-41ad-8b85-46591781de5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438fdf31-d93c-416c-a209-77b28b6dac45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344eceb7-7dbd-4f07-ac9e-96b93807d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6051778f-8356-44ec-bd56-11872232a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b709b-bb75-45a7-a637-394c04e1606d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43938b0-df43-4832-a571-423cc7daf9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f86039d-5036-4b5f-a35d-d4b83dfcdbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039dfc70-e0de-4f68-9933-0c02e9473d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b374c2b-9f6a-4c53-9d81-831736ccf747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093f839e-8c67-4aa3-9fbc-9af3478b74c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f436ebff-5eb1-4ce8-a82e-e6875acab841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337ba1a4-6a71-4122-b1c1-d8cd1d07f2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa7294-cb79-4a5c-a506-ffec191bd04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c7c3e3-c1ce-4d61-bd28-9fc968e250da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b4231d-d4ff-4f4c-b0fd-186828182610",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f066ba7-92a5-4d68-9373-c425671297de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f401ae-faa4-43cd-bb1a-ba16f233234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa055d20-a3e5-4e0f-b10a-87cfd41fa106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55c0f00-01db-44f3-b876-a34b72e863cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d8edb7-1ef1-4880-b848-6c4e0ee48d2f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568475e1-6b53-4f24-9808-f0a2c4f4817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178e7385-435c-4332-adbf-559fef1e1472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750b37dc-c0ec-4001-a0d3-67004b1eefd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a40dc8c-7ec4-4574-b0df-47659d14314a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11085c35-150e-4142-9724-fac7e4de821d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b079349-0c36-4fc4-b7f1-1eabb79b0596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453f1fa1-d7da-44d8-90dc-60cb4c6c30b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fde51b-3806-4db3-895f-8fc9fb125e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b987c81-5dd2-48b3-8de7-39ea206eff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea399f-4aa4-471b-a25a-1b2dc3859faa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf81616d-3aee-4fd1-b24f-823825df5782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2504ca5b-c0aa-493f-bd5f-1bdc7a661194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68fc03-6bd1-4bc7-8d34-ffa8d13aeb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50e15063-6dce-4e9c-8f43-67950b99b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b258285-7239-4214-9fa2-51445f3a99c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2b76a1-a061-491f-9e2f-4473bf6613ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cc541b-4749-489d-9cca-b02cdd9eb018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0421736-6a12-4b77-a9b5-9ad075d66aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9edfbd0c-bc6f-459b-97b2-cbea8a196a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d8666-960f-4112-bf11-7063e268ae1b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d874adc2-ceb5-4d0b-9f41-d7741855cace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaf788d-3f5d-4419-b21b-74c8dbc7765d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c2cba8-5712-466f-a861-62fa365e891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4b95f4-54d5-4b0d-8de7-23bec75ef4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57f4a1d-e91d-41c5-b312-02cfd57df8dc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07163d7-a633-4e3b-b4ba-f930ee6f2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b58dc9-26f8-4956-b872-9dcc43b1ff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d896891a-1805-4bdf-abc6-4db510a5bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6489853c-b2a3-43ca-ada2-4632ce1d40c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe4671-636a-47b2-89a1-6d492d6b48ef",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b892a97-dd16-4fae-adbd-7eff8e4707f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7aa14e-ece6-4590-8f6c-76e4ad1bf704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e624c14-40ef-46c9-9e5d-fdb93b1f340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a73f7cc-2de6-4815-95b2-ef4db50a5020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d706cae-44e3-43de-a4a4-c01f29051634",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5c1176-bb01-46ed-b58b-655f370ececf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d50dd60d-75f9-4722-82b7-d303b81a13cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be0a621-7753-4617-aada-41c463497055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e8d30-c405-4f4d-98a1-d24550d4f02f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42b0738e-d21d-4096-b761-ec24b058ff7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "446f73eb-d48b-4e97-8302-9d5b375317af",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be5d72-8ce6-4265-8d78-24820dddd258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39f70e68-a004-4917-85df-d6172c11e21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b5b9be-a219-4ebd-9166-296913d7252d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9849852f-dc36-4c3a-87e7-1e3a12f76513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b28458-f579-4513-beb8-50105df89784",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86bfe7e-458a-45b9-baa0-b9631c1c798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "160a8fe6-3c78-4faa-9047-d45677db9cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3110a5df-ef1a-49eb-b96d-db2963b644f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "076c462d-8001-4d4a-bfc8-721c7168f080"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac67040-cbbf-44ef-9017-bc64bf84a814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0ff18d-00ff-4507-9b21-95ca9ebb71dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8deae5d9-72a2-40fa-864b-9d003378975d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f15e3020-ba9f-406e-b4eb-f1a963a2e462"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66bba11c-bba6-4bf3-9aac-4f5d958a9f8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a685911-2466-4ea5-a156-d29c15faf81b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e6893ab-f38c-44b8-b2ea-1a0e4d9a49fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d94f7b85-56be-4166-a4d6-d28d1bff1944"
                }
              }
            ]
          },
          {
            "id": "3b056c05-1493-4c5a-904c-7f0a270820f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2bfa55a-0685-4db3-a45e-42592a0b12f0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae40169d-f57f-4607-83f0-e34b0fb60e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1020d27-40a4-4784-82d3-9f1b6055a974"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83726b1d-e51c-4c7d-b2f7-4edf40f0a61a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c9e10b8-05e7-4149-b608-dffcddae9ae4"
                    }
                  }
                ]
              },
              {
                "id": "20e73774-a2ca-497c-b0d9-b6b43019e6c6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b43adb40-598b-4d3b-878a-6650fbde3953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5b9e8a2-3715-402a-a805-b3f7f5ffade6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b707a4b-c83f-48a3-951d-13ed12ecb2fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e7660b7-c87c-4255-b523-427506c88806"
                    }
                  }
                ]
              },
              {
                "id": "63b5192e-47a9-4486-b98f-df6cb792d8aa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a205ae4e-5947-487f-9491-59a59fcb33c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f367e5d2-f2a7-4a8a-b833-dbdc43e68496"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5b19963-3ed5-495d-b7a3-af4afc99fe27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "196dd1d9-0bbb-4946-9062-519a4f26dfb9"
                    }
                  }
                ]
              },
              {
                "id": "45224265-8c32-4dd8-8d39-f01bf88e15cb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2207ddfd-5796-411f-baea-91b4d806b4cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ba2883e-e685-4dc2-a363-e23fe9303d6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac2cf778-0540-4191-9395-b9514d9d4053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e478069-edac-44f9-b6b1-a53f9475b90c"
                    }
                  }
                ]
              },
              {
                "id": "17a78aca-dfce-4295-b2d1-82525c414888",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaef6b0c-89a0-40be-a384-fe365f7c6a47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f82cc1ce-34ca-48f0-8fca-358ff8b6b396"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fba3b03-7210-4462-b722-fbfa9b98e05a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ceca0d36-d7bc-48f4-b2b0-7fbb32f588f3"
                    }
                  }
                ]
              },
              {
                "id": "bbf6979c-1b29-43d4-84ee-2866cb71972b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fa48a8f-5760-4328-9508-314e1340d38e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c559bb09-5cab-494a-b92f-63731450a5be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a5f1425-ac3c-4cf7-a014-b2ddda6e3b39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bea3b7f6-3e9f-4f3a-83cd-4e4eaee04aff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe6a5cb8-271e-4316-b6cc-5e8a43138081",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "325b9f58-9d8a-4bbb-a30e-e8673c70dd30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bffa72e3-8b04-4649-9379-11c050cb43eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cebe250-aa2f-41c8-a7cf-d3d70e80b724"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9073df0b-0367-4c3c-b17b-7765765baf5a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "be31ae8b-2516-43e4-adae-0dc155f59daf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c008cb35-ede1-498a-8785-ae4081ce8de8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "188ac8fa-4683-42f6-8515-96eab2203486"
            }
          }
        ]
      },
      {
        "id": "a538b97c-cb10-4979-a503-5c782ec0f3d9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "20f2e354-5d09-4d28-8d4a-f13105931b04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32ed904c-7fe9-44a8-bb8a-88af0415e77a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "971bd5b8-25f6-4e6d-8b56-0417b968b09a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed21c78-b36a-45c5-ae70-4a16abdad6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc81f2c2-9056-46ae-b30a-57a4c26edffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0f0d34-c432-43df-acd9-28139978c531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b903569a-110b-42da-b25a-74e057abd245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095db451-4eaf-4623-8f1f-a73e1c9b9dca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc64a03-4a86-4ad6-805a-e2f8e6f39fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed17bb09-751a-4424-855e-db97be5a0354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181af4bd-4965-4e77-8a4a-ac5e7a62a735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab5c23d-06c8-4014-a2f7-f7c8299748ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf789c0-8ba6-4780-8591-b2e601e6d9bf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920f4173-5ea8-40af-a7ab-5dca2837b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b5e0f8-962c-4d4d-b5de-2d0d6ecaa7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69206f35-9a96-47d5-a3d0-41e6f147e78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf230ac0-6059-4c24-a9ae-18e90722f90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7168363e-9440-4b21-81d8-bbaaa21a96b8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cf1a94-ccf7-47fd-a3e1-5416103d8952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3adb01-9795-4e5c-9959-6a0c51c1404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cff11b-2fba-4b2e-8a00-13a347767f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe2c3ef-9ac9-486a-af0d-f34c8fd5f334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bef689c-8ec7-46bf-b231-182d17cc76c8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b7bb6b-8040-4175-bd9d-0acbc6ff925e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e84fa6d-5ae1-4629-a391-18a9f28949e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c719c2ba-7b97-49e8-b16f-8a6a10c6b24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "761ed18e-57db-4a2e-be8c-5b313259461d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d889762-85ba-4b03-a8c4-74d9687ec5e1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c73a3ad-6e66-4cfd-8c95-559593244ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b89d78-35e5-4cd6-8c97-a57191602dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9644fd7-09f5-49ea-9581-fae2a68fd5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9401d67-9c0c-4852-8b6a-99cf26ba3236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90836360-90c8-4796-b995-259f12a9aecc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b9eb2b-ad35-415e-b656-9bba12c15637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bf6dae-2e29-4bbf-8882-e03837881c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3260c61-37b1-461a-a9e4-8e4bcf1bbfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "286c89ec-0e0a-44eb-a65d-d7222f8902b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69099df4-6407-4349-8f3a-d2dc7dca938a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1db500-b90b-4ebb-bfa7-1eef8dce9f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bf8fcc-ac58-4033-8b81-42855373e3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3223e9-fa8f-4e3a-bd39-bda816facb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03fb24e5-117a-4ebc-9291-e0c1a33f4e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b307f1-241c-4771-8a54-9adca9fe4eb4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d23ad1-1abf-4002-9476-64c01a296503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31499ddc-424d-43cb-a311-1f9d79bd7dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c940a94-3a0e-4ef4-a69d-23445fe1f557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "216509a8-2c1d-4aaa-937b-2794839582cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6141928-3035-4b6a-9b43-cdf036ae524e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ceb19b-0d5f-4912-a2a8-a8f8fc56b75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756315ae-ba94-4cd4-a092-d77abc0cfc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b076bf6-9a77-4996-9a48-db926452957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aecedf6-63ad-45e4-8760-771244223ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1e749c-5749-4bc0-9028-f2f32bd1714d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a085e277-8306-4d1f-a036-368e1bb17664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2491a1ee-e3a7-4e0f-b3b9-fd50965a78e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a3acea-0c1a-4197-8207-04ac6f1933fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "acc18108-1487-4414-899b-3b1ebdbbf0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1745256b-c75f-4de6-9a8d-7379daea3559",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcef7757-cacb-4e58-b387-149d3e2e730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe78165-7fad-4a4c-81c2-9462e558fcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c69b2b-9264-42f4-8ad9-5e1613999133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06f406af-3197-4a38-b779-72da0efed07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eed7e8a-afc4-4114-a1f7-009f68c392f8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f334b-7616-44cd-84b4-d6d1d9d15810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede7046-c02a-4ae6-a154-bdcae1e51e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a06ec53-476b-4fb7-8782-7dd3235280ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f343b8d5-6705-4e58-bb80-e9b96368dc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f73a52-38b3-4563-a512-63791f0c2f21",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadfa28b-4c37-4236-9784-72a5e7e23a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffa521c-0d69-4d65-8438-8637c29ab500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e3a33-a1cc-4d52-b954-510e497c98fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2973a9bd-0b14-4e8d-a234-4c002e7aba84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864c4695-a33a-4ae5-b4b1-1ea5f3ac5291",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c8098-147f-4471-9376-80fa7074b0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712fd31a-64cf-4d35-add7-b4724ec1e188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b760696-467c-4bec-9a65-95245149ebc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b2cb07-32d8-4ea1-8d28-39dd5c4f8e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b54016a-2be0-475a-ab50-97116c16df84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f13d03a-efbb-4beb-b5e7-7be17325351b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76a38a2-232a-403f-aa2b-75a941c7eb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820dc86d-4a4a-4472-874f-356a567d8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53a8f3d-049f-408f-ba1f-b40b0a493a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a98a23d-4a45-4d47-b08e-26b2f6ec5b6c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ce280-061f-4bb0-bcb8-703fbb3c5c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04c0153-e32c-4e47-85b8-29ee23dd91c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfb472f-6e70-4e87-9f3a-c2f30cec752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d585a9-99a9-4464-b5ed-b0a04e0b28b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cc53bf-242c-4e90-8cd7-12dffc427fd7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c85fbaa-a959-4fd4-a8aa-af338c251fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa6e5a4-0cb8-447b-9a2b-c24fd799dc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7440ea48-0410-4cbd-8529-8a9b0a791d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fa8bae-b84f-4ee1-baa1-36a33ff42792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583a853-4f5d-4e6f-98aa-6e4cf6439b15",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffe3693-5900-48bc-8b52-5fa3fa30a053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2693e33-5fa3-4a8e-b15e-af4251f54a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699111da-126a-48ee-854d-e34572b9421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f12688a-db9b-42b3-802f-8ace5a70af62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d280bd0e-a7d2-4815-95bf-f8ff445842a2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592a9b8f-8b4d-4479-90b4-7eea99e7de73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47542d1d-aebb-4671-b546-cc92a01ebf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e82b7a3-0004-480b-bc6e-7b4c7385a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee15d4c-f38e-40ff-89a5-e703e64dcbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee4936e-f234-4821-8f0e-58ea05bc04c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01fa103-82e8-4f75-973d-dce3c849228e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed677752-8e17-4ad2-8bee-2903ea610082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dd686b-503d-4878-b179-c0b88cf4a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d17a87-6be4-4abb-a221-6543c12e90a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1cdb7c-4b93-4016-bf99-64fb92f3daf9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a340fd04-6073-48a9-8680-6bc4b6e78692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed205d71-1db1-438a-8553-e4dd70e18e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0a9428-e3d8-41b7-b724-8e818394633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6499f922-a867-49c2-b17f-a81e389831e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d68c51f-7fa0-455d-8a3f-2cc3bb4ae6ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df0ee98-ac47-4ef7-8c41-5b697a52bdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb8ba44-d34d-425d-a636-e2ec2f73cd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18957952-d8fd-4d03-b2cb-b382b3f8f18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf342d67-90a1-42a7-b31c-c67be9e013e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0170251c-cea6-4ff2-badc-d74bea5dcf74",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce904a27-c340-407c-9982-c0eb83cb66b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b440ea-9f6d-489c-a250-8522fb2bb3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370ae803-6c0d-4959-87ff-0b366756747a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4043bd-66cb-4838-b228-674afe6f06a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2321f-1900-41a7-a518-aaf9e8e10fd3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ac7ba6-c324-4048-a3e0-a05b6c1d6f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d1655f-7b26-495b-ac65-59fb4600fd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d5a726-6ca9-45cc-b264-1056e3fbc63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a67e8b3-7f9e-461d-aca8-1b9687dbce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef3d255-e9c4-495c-b77e-6bbd0afe147d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5086b9-10ce-4b81-975f-80d08a2a27e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dabc879-241d-46f7-8768-f86306341813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40777e4-cfb8-4bc4-b9d2-fa8774955de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5984de6a-c75b-4d12-bf90-3709a5242a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cbb912-dbb9-4ad8-8ca9-34d3b280593f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76552087-e104-4242-a057-d6cabc221dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1557ff-215d-405c-a983-df2b97d4d7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fb9a29-1b3d-4db8-bd3f-47398af447f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d26526-3e50-4bc5-b82b-3e13166101df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad03c0b9-38f8-4846-a0a7-a840c0e8a1fd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11d6dda-8b99-4533-b4e7-d4eb38efba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0fa650-5022-4814-999e-e466aeaf2767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acae436-6280-496a-a680-9378e695c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa174d1-3db4-4c68-839b-d70e7a0df0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d6ee0-34bb-4b37-b556-2b8043bff740",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef41353-94ce-4c5c-b72b-3aea4d597730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec03e344-cd22-41fc-b9cf-49d6e6503b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b784a187-f5a1-4fad-a4b5-0045ea1f6e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "439f43ee-6b61-49a8-aa37-2ba9fad47624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc36bd89-7e88-49f2-950c-b278efd91b98",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df38566f-93b3-4410-b75e-9f90bdc38450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133024b-5a09-4170-afec-7e05d96ddeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14de3666-05ac-4de4-a9aa-9527d72be344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2ba5e8-c712-4eb6-85a0-f845000a2c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d61f59-f77e-44ea-a340-5ed74f7e680d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0e9fd-a602-4c24-8f89-57b23b8ae0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251537a2-39a1-4784-a0ed-3058fa2b7d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c64bc85-6bda-4e78-9246-18ca3b731a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b6cc4a-9508-48ac-8c93-e2151c2d4836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b251a50d-7b1b-4145-a476-07662fceeebf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d38f71-b1ae-4404-9106-b0cfc98bac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb9075f-cf2b-4811-a777-13fe412a2e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7167c62-c722-4037-bffa-9ae03be578fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ababd6-6bb9-44d1-9436-4a9f3f90d118"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b3b5e60-70ac-4f5f-96e3-3b599e26c9a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd7c80d9-0fd1-431b-9136-19b6ba508cd9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e66b388-126b-4f5e-9ac2-6a20fc99cbfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1009c10d-7fc0-421f-9c23-6144bd882f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51506e6b-508d-45af-b0ed-f3d4d98aca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e23e6e2-ee3f-4c0b-856d-587c12583503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50f6640-0f46-43ae-9115-eebb9f93b4e4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9eb9e-6305-40d9-b0dc-a2c82c70f540",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "14eeebb2-b15d-4b75-b60a-17cb7336ecc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d1844e-77a2-4767-b5a7-04d6c484407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ec5dc70-fff7-43dd-bcbe-f1d54219a879"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4224cb1c-0a06-4219-a648-df524cd7742c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2161a862-725b-482b-879f-7309dab11bbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b5f282a-a154-47b7-9f2b-3e4ee7715a88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6dac270-612f-40a9-bc47-bb3bbc546cd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cbbebd4-a31a-4e0d-a08a-04693cb18cb2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9188c608-f7a3-4653-a3db-b89e0c78c805"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7dc6f2f-26da-4d13-b7d8-1f5d45ef99ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e56ee3f-1614-42d6-acd0-9664943bc182"
            }
          }
        ]
      },
      {
        "id": "8336e18c-58f1-47b9-80f4-5ee6615e55eb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1266efd2-42ca-4574-8ac1-68c8e1a26dc3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "742014f7-0116-4706-a887-bc971cf9c653",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23b441df-8de5-44d9-8514-4c9b74405f84",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79caca81-fd4b-4b8a-a09d-35397f4623da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944f1844-0e36-4978-beb0-6f819d86eee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c622198f-2a98-43d1-826e-7a5718f6e01c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b18bd8-61a1-4217-8469-555a43f8f268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259e5ab-f113-4452-9a81-5bbef0885ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33be5031-ab20-4855-a121-f7bfcba91162",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4395aec-79c4-4308-a9ab-292eb7c3a319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2392a16-d025-40e0-bedd-4130ea9c9370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84278eb4-db0b-4584-b9d4-aa456412ba8f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0190ce1-0e03-4094-9dfc-6e3b15140fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed33c13a-383b-46ed-8db2-e8b69161ac9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5c43b8-c68d-46ff-878e-35105cfa2993",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee84db98-05f6-46e5-b409-5c9351f60027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fbdd78-8194-45f8-a311-ae9c5a2062e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09713119-5fb1-42cb-bcee-0f98ec43b06b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59abda9-676f-4fd4-952f-3c378cd2eccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0180e9ec-87b5-4de3-a4da-dc3fe87915e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4f9765-1d8d-4aa5-a430-94dbe8c2b5ff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52df1d-e04b-4b19-8c3d-3a2451ce90ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47445017-4cfb-4b04-9a85-8265702badd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6691349a-ab18-4473-b31a-3318731c3a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50728e33-b791-4990-b440-b4423cf6be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802e648e-51fe-4c12-b038-a8eee3417ca7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f7d79-7774-4a09-befb-b768b9f25462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e78672d-e9c7-4b5c-b76a-e65f7d27a6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2880450f-96aa-4a8f-88ce-d5886c778769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540d5e3e-f7b7-4057-9229-b1f23ff87339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f466c7da-694c-418e-9a39-54767b179f0d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef63a008-9e86-4a31-8e1c-5611b5df0e53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6cf437-45f7-4f15-8425-7a60856297df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93826afd-d83b-4aae-8ec1-70297233cf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e74d9b-a892-4553-8c94-6fcbf9d19312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a51894d-8396-445e-8616-c949879bf958",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a268679-88f7-4c6b-8569-57b744a8afd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b74946-f97c-4fb5-8df0-ec33e13bf733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d27d9e-5cd8-46b9-bd7b-721880b2d7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5408ce29-7a98-41e1-a8f2-4a9473878f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea7509e-55ab-4dc6-b50e-0fbaf73907d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a343b44b-3a89-4122-9b29-8c601c7bfd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6f574-2bf0-436b-b91b-1d95f2754803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6608a7d-31ef-42b9-b2ef-f462ca7f3dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f3a6dc-64b8-402a-aabc-70d0c9346c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6997683-1df9-49fb-b22a-7eea9213f6fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e64d3a-bc81-458c-b177-f99b69306f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b317731-20f5-4340-a04c-99d5f980ff9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d49278-b1ee-4f65-a322-8ee227970050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b43ddc0-98e9-4bd2-b611-e890ab9c1f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a34972b-9aa1-4871-a506-920aed5ccbbb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bea0620-2bbf-4111-8d9f-b3150c7da79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c0619a8-8138-4362-8415-f383f13e7738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bab3e3-1330-4911-b949-c07796c93a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6f9fac-7108-42dd-9545-24af9fa366f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930d6d59-c1d6-4bc4-a3ff-98c7942a29c8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0cbb02-2905-4581-b43f-20f9a6eebd81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7262432-bf84-4af4-8113-40273320f67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f71832-aad5-4728-a6a1-1cb1669412de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48f5888-154c-4812-abba-27fcd687dd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccb1711-99f6-4d72-90cd-cd765518a22c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787eb53-c4a9-4680-ab06-fa4d63dc9590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b6e634-4880-4d91-9f38-d718054e643e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b05ed8-1835-447f-b6ba-298797d0fd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4291d31c-494f-41ce-92ca-38cf9d5daff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7360be-358c-4e87-967d-d22191b7c244",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eec615-13f2-4962-a156-7b8eb7783a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f72ae2-28ab-4bc0-a1b9-c4cf974d8b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e148d0a-3ebb-4da2-8adc-d50b24431e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea8fe44-9ea4-4f16-a3e3-a99487b987fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5af5369-c7de-4a11-b04f-dc082c576b13",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d004dede-f229-450c-9807-5b08f3cf9e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d86645-431a-4597-8599-8760a0e0a279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aeb83b-0104-41a1-87eb-91bb4c906d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153dc9e7-cd7a-45d3-ae98-25d6b1e50fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf81f13-6a95-463a-94c0-0d76998e7f90",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1440894a-3d94-432b-9993-21a761b41dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e473cf-96eb-4681-90d7-3876055e9642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff6c13-2c32-480f-b075-53ed921af393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c0e9d5-64e7-428b-8f19-2d1fbc458494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb771cc-9848-4ad0-b6c5-53110a97af32",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51d75b0-c0b0-4976-b52f-68061c65e506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d20c00-8cf5-4e9a-bac6-c1153062b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9e57f8-bdc3-4152-a072-1d40afed9614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf17f110-0a1f-4f13-9f87-bbc508006150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772aeb23-33b9-46cf-8519-8dfcda1c2458",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c6d77b-1e5e-456b-90f9-1b965f392b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786147fd-6813-451d-bded-a6a948406780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dff191-7019-4b7b-85e2-a06c80e1a00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0c47ea-d92f-469f-838f-44fb62e2756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a40762b-45c6-4268-8b9b-5c4810abc4c1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a259a287-942f-411d-8730-db90db8c065d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf60775-5c45-4000-a8df-4521feb1598f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d34371-63e1-4bc4-af94-1fdb73e52f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a590d35e-69d8-4750-ae5c-c2ae8c3c0610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74f2e99-4f1d-4325-a9ce-1b8879d6715f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a24bd03-3415-41b6-ab45-fc648327db25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa80074f-8bae-4587-89c0-bb8cb65aa31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c5f534-aa81-48ce-9975-3f0521d4a2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09b3c77-dd7a-4ca9-80c0-d411839e5c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c783690d-4eeb-4513-8578-0627399da2cc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3712a92e-2475-43d4-b379-10b36bd52745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2662ed4d-c3c7-4524-94c3-8526491649aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f949d1-4261-49a4-b0be-323188cdd030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138b0c8c-bbff-400f-86aa-306666c27eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bcdf31-7179-400a-8ac9-7b8b525d613d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505b84ea-de76-420a-9a7b-301a72a41796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060f3f45-bda3-49db-b6a0-d0e57fc95d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363f3a35-1b0e-4a86-b119-8aaed0d0bfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1076d9fc-1237-4810-ab73-c0ba4b3df88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a4a5ed-c2aa-4d94-b25e-003b0ad35d6f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24d64c3-c022-45c7-8934-410b3e9a1cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ada4f0-2e46-4c8f-a989-d809997dd340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68215565-ef1b-4ef5-adc9-d79fa5ae1781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70329d39-d616-4a09-bcae-b6b03e62e01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9544542c-6df8-43f8-bd8b-496525898cdc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fbec36-f2c9-40c8-a847-4e719d899018",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07348ae9-26b9-4334-abd3-90e65702060b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970172ab-baed-4068-97f4-3e59a79dd86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bce651-8543-4b9b-9ab3-14bd8a7f2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aacda9f-23e4-4fdf-b457-b36f07901493",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cfde01-39ec-4c22-ab43-313e6b5b49f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66717821-0c3a-409f-b2d8-1489f295fe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "315923eb-27f7-454c-8a02-ac5c9756434e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689c4d35-6ba1-4b00-a700-3f8e44960fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9416ee2d-1504-4f5c-aa92-5a068c7a57a0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3160136-5a3a-49f0-83ec-d50c829da1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee1320f-3727-4c01-b2f8-21129a9472e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa6a5da-456c-40e7-89b5-dd59547c643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954817b6-55d6-4538-acf6-9f58cdfe264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f95d31c-7bf6-4b68-9acb-9f1165fc155c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd8393f-8e01-4e4a-aee6-4ba6a356db54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a02ea6-f2f9-4721-b4d8-67db65fa9372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1379c1b9-380d-4a24-a89f-e7df367115d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e158dccf-3727-4461-985d-8368618e2d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faf7501-fc0e-46a8-9e8a-1ed75e270d01",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86b6ea-1699-47f7-a401-5f5e46af9091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635ed2de-911f-4fff-b7c6-71d4d2970cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0c9dfb-d655-4e09-a2bf-cb67bd77351b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7225dc91-5be8-432f-832d-fdc85f4d31ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e4b53e-ef17-40b6-b3f5-92a52c1ae4b0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca0511e-c8c5-4b5a-ae02-a3036636b1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f56496-68b5-4c17-9783-a8ac511fcdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0500ad2b-5c79-476d-b324-1f728b7dc1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7813d4b5-1fe9-42ef-b333-8aea69ce5d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e61ac61-794e-434b-ae10-cee8b25ced9b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef754134-3e01-4a6f-a638-d16372caf8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052a7087-4585-47af-aa8d-fb4bcca66e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08642e-7992-406d-b65f-e20368cce473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a186da-2051-4553-9301-60dd34f4b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708588d0-1329-4494-a747-fc59ddec8cc7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e84053-3bb6-45e5-8e46-c6bea5091090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3703aa-a755-41d6-ae58-1ade9febbfdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38bbd24-62b4-49e4-81fd-1b1274ee70aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913c479c-4d92-4b0d-9c7b-81234fa7df42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925f83b1-344d-4b05-993b-bcd475c896db",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a66ffd8-7486-471b-83d4-0cae4b52e321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5eb233-b177-4b44-96d5-497e9416c169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b7a555-d3c4-4e30-b4a3-e156b4e98134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5383237-dbfa-4124-a828-2ca7fd564d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14ca7a1-56c4-458d-8520-5fd50fda087e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be238411-e0d4-43b8-b231-5059bf9a19f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09672f96-8bb6-4ad5-ab7f-cb54f06d2163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352315a3-446c-416a-9180-cd3f20449897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c54e0a-0f7c-4d95-aeca-4e91a77afb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051b51d4-8c09-478f-b42d-f1b37c3cda9c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911a4ac7-3536-4a94-a8a4-c6a156f893c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0cfa0d-cc02-44d9-9e8b-b826bb860131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72f2e2-fe89-4e37-bfff-20e4ab4ec209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5414c9d-b34b-49e0-88b9-57e0decd6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa56a6-6a3f-4175-bda3-5d0c8c107448",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b78510-27f5-4b87-a139-8cc358a349ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1764c5cb-882f-49cd-a641-15dd10bee3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec180d3-89fe-43e5-8ec0-43de4096cb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ed570e-edb2-4a67-8cec-f287d9ec8e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fcf76e-ed3e-4caf-92d1-e7a12a4aecd1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1b2b95-cc04-47ca-a3a7-9fd8a1d2ea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a6a4f6-8621-44ac-99e5-73263187b03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7519b60d-6187-4482-86f6-0f87de29dcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa5134e-612c-4c06-a590-066751268b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1779db-a9ab-4c24-b6cd-0a36e2dce05c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d9552d-2b6d-417e-af4b-a2d158d67294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51ad289-3184-470b-92c4-a0769aee650a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce58d2b-576b-4398-8eeb-2a96dbcc6e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec795d34-9a7c-41a2-a566-fbb8b9ad2ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc88b330-5123-4ebf-9510-1c83917a6133",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873f6419-0f5b-4554-8155-fc489fd9aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d2545a-8a88-4bfd-9d83-2ed03e1267dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63c9269-e2cc-4541-a19e-cffbbbb3ef31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855656c7-fc83-4c65-9055-db72702c0313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cb64ce-ba3a-4647-81d5-4a7f2fe08894",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d91c06-7829-4efa-9e86-c6c413d8a92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfb3386-9cb0-47a8-abd7-d6153da037a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7c62f6-393c-4b05-9c24-1af7ed8c2728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c4356f-03fa-4f07-949b-971ef589a9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc6896-c658-4b9c-8d4d-51ca92bd0dd8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83a6643-f60a-4333-9834-c920333ee2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb81328-de53-4d2e-91b0-37da6476d8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e526322-e761-4923-be2f-768ab64a918f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887cbe4d-ef75-4996-a56d-bbea5914a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06b8f45-4653-4b49-b477-e3207b24567e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2488d60d-d5dc-4abe-b3c6-d69e58b5cceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75057ff9-9920-4ec3-9e96-771e1c36e9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76ad525-b710-4875-860e-586cf54146a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa564f1-fdbd-4d32-8c8e-8e6a9ac09d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be095c2-262c-454d-970f-09b33cf91282",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de70e0e4-3577-42b8-9976-940d900776e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399762a8-c30c-4ba7-b172-980bf693c582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15b3249-f8bb-4d90-8947-39f904ef7eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465553d0-68d8-4748-9328-2f36aa2e0c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a4abea-7fa7-426c-a7d9-6c928d4568a7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40068afb-0a45-4f2e-8a19-1acc52aaf4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45bbf90-0042-40c9-92e1-1bb3227be864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84deb44f-cc8f-48b0-b3f1-48de667d6404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd36a24-f469-40ee-a581-e85389d4846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eadc651-b8d2-430b-b92b-f6a63eb7f121",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c42c3b0-3c93-43d2-b5f5-3c9ec63507d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb2f30c-0073-4a45-8c6f-351a6733a5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0408e07c-c7e9-4213-88ad-0ca91ed97f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ba866d-b9b4-47fb-b9e8-3752ae2cfdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc3c4e3-b39f-4500-850e-ea318449bc72",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39ee638-da8e-4b25-8d64-f2de9183cadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3773b9ce-3bff-4a4f-ad64-aab7be5c00be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c76cc5-c978-404d-8d0e-107a04743679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6f3518-d639-4a5d-b29a-ab6ca91bd916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807d97a6-d9d1-4bb7-b6a9-80388ca32857",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a600b9-8591-4f80-8e25-36abe7a59eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c089fe2d-3211-4101-aa14-0c8a594d9c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1219380f-f689-4984-bdcb-1b18a5248dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7649c43d-0196-4c10-9311-e74bcdc78be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3370598-f4e7-475b-8ec6-fedd58e9dbc4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c860260-7cc2-4a3d-b5b9-36cfa02ccb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffccb92-cbce-4961-87c1-cfb9be589004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d9419c-5794-4761-9808-4fe6bfaf7736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3b393d-7d76-439d-aaa0-0c18f683db8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cf3aa6-a0ee-463c-a3b7-de0e8ecc72e4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae002c2-6f67-4126-93a3-760f13cec45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17803411-40a5-4848-a6b1-7751d9a21ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea71ffda-7b19-4d9c-b9e6-3dd3fed7469f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab438704-d9cf-4adc-991a-b780d76cddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe3d391-bf4d-4ffd-b1c5-6e009d197cde",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643f8688-1e15-4c78-bb5d-5d66e24e9a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b55b8ec-c098-402b-8b52-ffb152797f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e907c644-fe06-419d-9943-1e150de8b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e192df9-e8c2-490c-b5c2-72affc849e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb4799b-d7a1-43c5-9ecb-18fb06e9b42a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4febee8-b395-401e-99d8-df420b8eb3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f57321-f353-4a16-9564-ff8dca1a8e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87f64bb-a0f5-499b-9f89-09e0cded8681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e283d1fc-9883-4232-b92b-bbcd9e2de45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852f759d-e989-4462-9b2a-cbaaaa356f84",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93591338-989d-407c-8117-1eb9a3f3eb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453de907-d69c-4cf5-8f6b-d8c6685c5dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b26fa0c-fb56-4a9b-974c-94cbe650ffc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e0a3c1-825b-4344-ba12-b625c095f467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781607d7-7774-4b61-81ed-2e85bbb36f44",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9caab5-fd25-4418-9bd0-80930a769a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1ef21c-5d0f-4b33-84b3-d3f1c4b8cabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1533a-79ea-4b53-9ac8-6739ef19043a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6c7144-ad86-4d2f-be66-beb15d8d898f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42061e-c935-4345-9ce8-92dc4e0cd1fa",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84340bec-2f61-4bdc-86ec-ecbfa23b2d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac3a6e1-30dd-4dbc-a9bf-f7e4bd583a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b0010-0697-4a0e-a3cb-a7feb6868dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392e5379-f250-4e26-b753-059c0ceb51cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2646a1a1-a7fe-43f8-922f-b467edbaaae6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b7b70-b028-435c-a940-0e24d25a955b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7060e83b-8652-4a26-bcc1-dc220286d757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da57b14-af4c-40fa-b84b-4c10568f9b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e2cca8-13fd-4287-a73e-b737afba2f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6249380-2ba5-4598-bb95-65b1482b4cf5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d9467f-1d2a-4765-9fbf-e51406d1774e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c2e58f-1bc1-4765-baa9-98c65e30ef43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5312b1a2-d95d-4aeb-abda-a2e0fd248aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3cdd80-ab6a-43a1-a125-a42ba2f501cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede8921c-afd7-4dd2-babe-62bde3317f24",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfe9f53-ab09-4e99-97f9-f5a5eb973026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e4fa0b-1d16-4d50-bcb1-723f36152647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930089ea-7f63-40c6-9dcd-9397d33a0edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b62a41-c801-4a60-9adb-a78d5d17c1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41684bb7-6eff-40a6-b4d5-793999a61827",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98217e99-75c6-4e72-85d3-2de78f867c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e67ca2-28f7-4f8b-848c-fb22bce45f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06441f83-588f-4299-ad61-a6ca5bb2f8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e37ebd-21f0-425a-95fd-f0b12e7e1f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b6318-fdbc-4ba3-8d84-a597ed589925",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0cd75d-dd61-4b36-98d3-35afc438ea02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487e0fcb-0c67-4401-90f9-9f3ebf9b4cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317acc78-fb27-4e8c-a165-19d68e056383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a66ee9-2a24-4b65-b91d-85241643fc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519cde2d-c7d8-44e6-b0da-779980c59ba4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bba0d9-1606-49a9-9376-176a3ad1b3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb7a078-d546-4252-83e9-fdaa8d9404f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04b53b7-f836-41ad-a9b7-421e32224ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3743598-e1ea-46b3-8869-8718345d1c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54633458-f968-4229-9e85-4cd6f5d24e0b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea86d723-7510-4e65-96b5-6e7d46f2d4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ee2f10-729e-4fd2-9ef7-79ce0e30e092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995560ae-67a4-449e-a119-093532b005ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709b553b-76db-4ef0-82aa-a3b150ce3b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf12df8-9c1b-4afd-a1bb-bbd9428dfecc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fce8ac-6762-4431-a7e0-13d6239d1e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7433ae-d4f1-42d5-a5ce-59a3da138599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1232973-366c-4900-9e1d-f5cde6dfe2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda95ef-e0c1-4f14-8eef-456c7a53683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85019b1-4ebc-4b75-a086-9c18f775d4af",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0600085a-0790-4fba-b17d-abe4dabd16cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d639f181-337c-4617-9446-b8621153a5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1099176a-c01d-4dfe-baef-966c91bd6898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9979042c-bc82-4c44-b284-58b3529341ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca104b2-8f37-4171-b8ce-9082115df481",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c88ed25-4b1b-4661-9acb-6b443afb84e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72d676e-c475-49f5-b0c9-86121cd8763d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8cdd72-5762-4ae2-8da4-fdc1ac210ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2012ce5e-e5c2-429a-a905-be89b5132f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adff7873-a469-42d2-b11b-561547c65f72",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e3f6a-a7fe-436c-a31f-ec9c02946510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5119a322-adb8-43fb-b1ff-5d023105bbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fb409a-347f-42ce-ae9d-b45373ebc73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8279b446-ad95-4736-905a-ffe511f489fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec4f4e-dda7-40a7-bfce-e3c58a5a9cd3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c82c650-fd4c-40f6-8940-68c6f1053e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a66d709b-fc60-4f8f-b9ca-e20328f4ab56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5de26bc-6512-48ce-9a88-874db6ab03bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905051ac-de64-4ca6-b773-45a4b962b28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0211530-670c-4225-8ffe-3b0054ff87f4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f224b7e-8a11-446c-9a64-9deb645a258d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57377d27-043e-44cf-8e0a-a63bc0bd98ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66707b30-269f-4508-a983-d9633f04a279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ed2324-5443-493a-a347-4998e59fd39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62daf893-2b1f-4411-80fb-5e6f21fb6064",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe21d72-e4d4-48e0-9d33-f3a71a955e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743731fb-04e8-4016-b8ae-04d151f4c70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a30bb1-e541-4122-826d-e2abb8b8080d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8680c118-8862-4277-94bb-046b6ae09d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903a85e4-f717-41fd-ae0f-7c37c3ed7ce0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7a1a5b-9cf9-425a-b65e-cfb05c1c4b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea1c216-53b2-41a6-b19b-31ef3d4c06f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb12795a-deda-4eae-a44c-0530510c8b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c81adbd-4a95-43f8-8c1d-19dbd0d9a78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4443b48f-1f1f-4be5-9248-0b634d4d3382",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eedd7f1-b7bc-4b27-8334-09074d429601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23917b0a-7444-4231-bb18-a5cd816d3c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf22210a-8012-4998-9024-515cd885267c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f523fa40-089a-476a-98e5-3bc698bf0357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6cee05-c05b-4d2a-bdd8-e542c85b0c9c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42045921-ab6c-4e79-81fc-1ada35aa7445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da032a51-6743-413a-a6c8-067b55dd1295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bcfa60-00b4-4cca-9b2a-e7f3589e48af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc1a43a-325f-47ba-a66f-c3e9ec4542a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795b8f4e-dcad-443b-a21f-1c4a07072c8f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8111d18b-c8ed-4de4-b450-d202091a85e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cadb972-73e7-4963-b655-4a5bff2a9a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c28de39-f553-496c-b660-f261662b4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8122e452-8ae3-47a6-a692-7b6088be21f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b932c77e-dfe4-482f-8f32-9ae6b46c5180",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad3d8b-e15a-4945-8fe7-f4e2b0baee7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3893697e-58fa-42c8-a034-fa4959903f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d616674-1c94-4ac0-a20c-a5373b9e89c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dbcf5e-ae62-4334-951a-118fc23e3324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aee790-fe2d-48d9-a8e0-4acf9bb6505b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09abd2b-b740-4d55-aac1-e335ab012aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22334a7-7cba-440c-8f51-f5b545c900bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2998243-a760-4080-8172-9355e2a005f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8738f1-001c-4f2a-8070-c684e3326a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346bf31b-969a-417b-97b9-becfd0caf61c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce5182e-8e05-487b-af00-0ec43f43ecc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c1303f-02dd-4860-990b-aa31669a6f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ac2d6-aabe-48af-bce9-b0508739d023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c84d9-f7d5-4005-ab9c-3973bc291967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5d8c99-7a00-4843-bde8-7742a5454264",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60fefb4-c009-4395-bb2b-fc104455c437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ff9000f-7f43-40fa-b512-b25f66cfed39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83df413-0f81-41c8-b6ed-d700ce08a928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bbb1ea-4930-4890-8269-f63ce1701759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269c0998-59a4-41d9-a3a5-75d70fe02d11",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ca4fd-ccbc-483a-bdaa-7ec52e659ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a88162b-4693-4bb8-b29d-c4c24fed3c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065e17ca-ceb5-42f4-818d-74404288a3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3219c679-4709-48f7-897a-5b8cb1a7792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e7ed3-69cd-42ca-92a3-a12b2b4b3830",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46182759-ba27-4697-b899-1ef4d75580ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee1fe3d-ca76-468c-8102-5917229a8239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a87b01a-a13f-404c-92cd-dc3fc52671ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f41dc45-5bb0-4203-ad32-c32682d471b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7d29f2-d596-4356-a0df-2c8955b7eda3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a28f9b-3cc9-47ce-9ac9-6b6de385ade3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e031fd6-ec99-4efd-a207-af6a92630054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24889794-c0a3-4a75-a654-47cc21e1d486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6890813b-75d4-4335-91e4-28ab45fcfa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd03859-1ed5-484f-92a2-869809da16bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b2cc95-2fb4-4e37-a690-ef768f3b47ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e925fe-bfc5-4c83-88ac-f58445c77bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12fb113-e6f0-4c15-9333-0f438be429f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40ae1a3-53aa-4f8f-911b-3351a986116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5fdad8-3a1c-4bc8-89eb-78743550d43d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992aedfc-cffd-44fb-8648-eb6e19702dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017f5313-7b6d-4afd-8664-4fc5c594ee0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97af36-523f-466b-b932-e7f05c435941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dbb4a1-ac74-47a6-8e91-f406d653583f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d36f08d-dfad-4757-b835-f9e0391cad4e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ea07ec-9f78-4475-b5e5-00b2f8fe19b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4370599-3106-4aed-a44c-4e4e804c8a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9b33a1-8c0f-4450-835c-edf55400414b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b63588-3e61-48c3-b204-7df1660d2e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8313bb-0ea6-45b5-b06a-a11650dcdaaf",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a51c82f-4039-4871-8ea0-2cbf54af4369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c48984-1a1c-45f9-9193-f00858d48b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea1c788-df81-4373-accd-e567c221b2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2626aac8-bc26-4a3d-a138-4673b051db47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad5eb23-2b13-409e-99c1-66388631e46c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebcdc7f-65a4-422b-b4a3-f69f8ece999d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5eea54-ddf5-4119-b65a-92309fdbd937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8cca7-7b20-40a9-87f5-f99e2a7ee9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6addc1-c53f-4ee2-a822-724357cb25a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70bf18a-8842-4ad7-9e1d-b6b4232b963f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841c8ae6-729e-49f6-a504-5d6d1ed7c9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ba5844-0967-489f-a573-1c574da59e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d0bbe8-057e-46dc-ae4a-c4ad241737f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86407615-58d5-4d76-a56f-f06c62e4e50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824ee49e-b794-4669-a145-f63fb14f3629",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d85cd79-83b2-4187-b038-74e4cd5655c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20c571c6-5d8f-41b6-9e9a-1464bb9945c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203f071f-804a-4fb7-b1a2-230ebd6ff9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b77dc5-b3c0-4dbe-9bf8-ab8ba36e4f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92859cd-4cdf-4036-b813-2e543148a742",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b77d78-3097-4f69-bbad-8769d5f527a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254dc2f0-5f43-4e24-9007-ef8541da7232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42854f1-3fcc-42a4-85f7-1488413ca980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd5d5e2-c0ad-4373-bfd1-abc464c6bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161d27f8-35bf-4603-b642-40f224fff653",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e379bd3-4240-437b-aae6-d9c450a4b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ef1e244-c665-49a8-8519-669ab248f51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0a09f8-84f0-4988-b3f1-2c03da55292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef08768-caac-4ce5-a0eb-79c39d8ded7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4797f742-5c90-4fe8-a230-f41fa1ab6239",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec68616-c72e-4dcb-b6f5-7b4ad4cf6816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959292d7-8e99-4050-9073-08375fea6fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ed2f0a-b973-4062-8129-7fd7d04bff5e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6eeea8-9058-424d-9da5-68f3d1fc02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dd6000-47a3-4494-a743-3275943319ce",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21871788-f508-414d-badb-3073c768ad37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "992049da-1990-4ba9-8876-941995304ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43a3206-e7f4-4bdc-acaf-31666d8745a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76476d89-11d1-464e-bb72-e2bd2785f9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c7483-fddd-4864-9562-d537176a7cec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f012ca-be77-4ba8-9a9c-090070e89fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5868c9-3da2-4859-8faf-f48c30493743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d7dba8-fec9-4cbd-a181-1120aa144a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb456a9-b16d-42ef-ac42-23c650fd2e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dc4db8-3d23-4e5b-8049-b2fc282bc952",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d42ff2-2ccb-4810-a255-5f4911f1e443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63557100-f57d-4076-8de4-85518f8e7c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec42e0a-ddf6-4296-9a23-76b08afad637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12ce96e-2d99-4c88-93d1-275a2555a4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87dbc03-a2fc-416e-aace-c61f1f854903",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd138db-c186-42fd-8300-4bed17ec12c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419b9815-03ce-4535-b606-4a04d0e77db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352d6bb-41db-4159-850d-d299c673edd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8611df96-fcbb-4982-b99b-b0929e4e7384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cdca59-4a4c-4607-84ef-0a4613f212bb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37190c95-5072-4976-a571-01627e572c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55b5cfc-d03e-458b-8923-3b8d86c16290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4f98b3-551f-4f5a-b2a0-8e5e80120039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fb5e5e-4596-4aad-a744-75bafe2054b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ef310d-be10-4136-bb0d-a00c6013ebb2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93710887-240d-4fa2-95f2-a14fde49f8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e9f459-41d4-4eb2-8136-ba73e4277b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5893087-00e9-458a-9593-01511f41da55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6fcf3f-d302-455d-a863-38fe1fea73bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46d37c4-8b7b-4466-86f0-e3ace8a26856",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c71006-3346-4040-9797-64c212abc44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79fb3906-ef09-4661-9bf2-70507b392a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc5ef87-53fa-4410-b689-b6bb526a3fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48781865-e7b6-4dbf-b2c2-cd668cae83d4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ecef532-8343-417a-b727-b5ccb6e36340",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48bf1882-b9bd-4ff9-af27-7a120e9423d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1352c7b4-f3d7-4e00-9576-96d8a52caa0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cac6eea-fd37-45ab-b34f-55dd6fe8ec44"
                    }
                  }
                ]
              },
              {
                "id": "53065f7a-01dd-48de-8964-d23ca17c38f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dcebe1f-e662-4d02-8236-14b647268a24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23031fc7-f79e-409e-b550-4cbf47a24b77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0eb24ec1-1ac8-4418-813a-e2c21e44502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db086d-802c-4c45-8d79-80a1295f3412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1db1f6d2-fdf2-4f6b-b961-c37c1331b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749435a8-1ab8-40ff-a40a-7d08ff053baf",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49574933-55b2-4dc0-955d-03fb2bab8004",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f87a13c6-18f0-49e0-9581-9fdf25d85293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc1ca4b-e1d0-4edc-ba43-c05abb7c6fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8bcfe68-aef6-4c9c-bdfc-3cff8b254b84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2559da8e-0484-467c-9b20-88d4c5a2ad20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdcdaaaf-12a2-47a8-b889-5113fcbc4ea1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1664b7ad-e463-40b0-864e-4943ae8d7e08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0ca2b65-799d-48ec-9ffa-07495b3e5b0e"
                    }
                  }
                ]
              },
              {
                "id": "8db9f544-e61a-46fa-8758-ee1f22fcd786",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d6e5c007-60b3-4e4c-bfe2-9b956e9f8ba3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdb89b9-5600-4ec5-9262-ff066e964b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "893babfd-e563-4bc2-8eab-58be6fb400a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236d1212-1eaa-4fac-811a-13df2f318115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21bbefb-c923-43ab-a45d-7953c5bb067d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "323dba00-3133-49eb-88d8-ae00eef9191c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36113d7f-e63d-47cf-9ea3-12032a35e66d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5504e70-2a60-41bb-a826-e2806e8e063b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38b78944-343b-42cc-bb62-5cf553ef2c71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "321b9423-26ea-4886-9d4d-b3dff140d6f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cf2707b-725f-4854-a342-6e69bae408df"
                    }
                  }
                ]
              },
              {
                "id": "7f9656ee-9954-4fe8-a950-df1277fee5ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb34298-7885-46e4-82cb-faedb37c213c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcc29336-758e-49e8-b799-3d93b21aa6a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce740727-b45d-493d-a1e9-1681567a0b33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a8d9b4-8d37-447c-b954-53901b66351d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0918d90-ffc8-424f-a3eb-146583b86331",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4da9d4e1-f3b8-42d2-b3aa-502004ad50a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4c11c40-87ee-4e7c-b36b-bf48d1292a57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01e850cb-6ea6-495f-90ea-7b11f513b2ad"
            }
          }
        ]
      },
      {
        "id": "76343300-7b55-4589-afec-b282b7f66973",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "32cbca46-f022-4e4d-97f7-77deaed9c283",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2e28e40-6589-4441-9101-811956f71332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d5554d-31bf-4400-b5e5-f2bc6cb9e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a54f22e3-3d9a-412f-a0bb-f38bdf9467ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7db78d1-d64b-497f-a4ec-65950370b497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0e8997c-0ce8-453b-b5b6-f22022f2f5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f460eb0-77ff-45a6-8a44-4f425d1ceb2b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a6f011-7ff6-4ec0-83e4-7824c632554e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b579700e-9076-4d14-8f90-7dc331436dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7adb39-05e2-462e-9d67-64f9aa3cda1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fc3b222-44de-4d9a-a42b-af7987bee1c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953eb113-78b3-42fc-b744-a4beffddcb69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44b33d8-374d-4aa4-9712-ccea4ba03c1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cfcdeef-c47b-4009-a357-4d02baaa0375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "035c12cd-ebe1-43d3-9aaa-daa280013b86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "284023f0-f705-4282-9a7a-d51c7f492e28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "54f7375e-8aa4-4eb3-833f-61f3bd1ed4c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a75983c5-991d-44e2-b711-e42eec9adf76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be564691-229a-4e11-8224-dc95c1e66da9"
            }
          }
        ]
      },
      {
        "id": "8f3423b4-3b7a-464c-9c0e-669c6e47e581",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1493dbcd-496e-4089-92b9-a01659472cad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96fe58fa-1bd8-45fa-9509-1c465c219fc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ea74747-a52e-4f27-a86a-3eee3e542b7d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f56f98e-6d9a-4c98-85c7-2b3182806f99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "639378c6-c7f0-47dd-b055-1059a6c6ec0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bbf7f8-d278-49e6-9169-5d5c0657f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc86e96c-cfd8-4a2f-a4e1-3b2e23c22dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f97a91-9a23-416e-9310-36a0bd64868e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd8007e-e8e1-4659-89d3-85f1ccb61a30",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04ac08b1-68d7-48d5-920d-a6d0ce407c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cf5f2e-b00f-4699-8209-e8632ffbe765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6093286-9386-479b-8e16-02ef9d976d21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15b3448c-9ae2-406c-9416-9d2b91754292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3400e99c-f143-4dcb-9541-cb62bb680815"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "933bb0c9-aff2-4a09-b3b4-d4c77c9de2a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca71ae4a-1443-4186-a4cd-b2383927e9e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d85c637-89d5-4afa-b020-e7854e0ac00a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ada35a01-6e0f-4411-acd2-582b6740b904"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb9a28e2-d285-42d1-8753-b7e4b50d138a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a62786d-5264-4e97-8bc6-61835659738f"
            }
          }
        ]
      },
      {
        "id": "fd0d880b-3683-4184-91b6-77e37b985e4e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "94d8a50b-498b-4f06-8323-438abf160607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f805a93-1211-4301-b3e0-8236d443b952",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "effb879d-3b59-458b-a014-d29be8284c8d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d4f178-e31e-4ae9-8871-59c140dff0bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dbad266-a3fd-46ab-a667-ae039904a0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a56f5-4ee9-434a-a0a8-baf4989b8f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91d059ca-5ead-4105-823c-54f78075e290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd821b1-9ee0-422d-860b-db048e67814f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e96ca-0ff9-44c9-acd3-e095cfc0bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "404e0028-f728-4370-8fa5-0afd98789632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a80492-7e54-414e-acd5-b4ea5d0b7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73e0d828-ce9d-467b-98f9-615a07feb657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c803353-dd13-4de2-9fc2-b66a4c75939a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfa9ff8c-5f23-405e-bb2f-e055c91b61a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42e72618-89c3-42bd-980f-ead72b5835e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69e6aac6-0023-451c-9790-0aa145c2ffc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce6af395-9613-4130-bc09-3c28a041f260",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "878b4692-b9a5-46a3-8ce2-a3d6f40cf81c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e596e7bd-7263-4a4e-b839-684e3a659458",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0892005b-3174-4665-a5d0-f403b256ecf2"
            }
          }
        ]
      },
      {
        "id": "52efcf49-59b2-4f21-ad8e-a18de8e7e83d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72d4b55b-66c3-44a5-9fde-5cc380d0d80f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "324c728e-c98c-40ae-b1c9-c8ef8da056c6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b67bced5-9b21-4182-ba50-f85001ea7af8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c5fd4a-964d-4374-b4c8-50ba66e85805",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51728cbd-50bb-4ca6-921c-a2b61f8ad704",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.100000000000016,
      "responseMin": 19,
      "responseMax": 442,
      "responseSd": 47.343320542606634,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683246852230,
      "completed": 1683246874085
    },
    "executions": [
      {
        "id": "b0caf379-9216-4cae-aac1-979356513497",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1afaa1a5-ce83-4f66-a4f4-c87c736b275c",
          "httpRequestId": "c4a53b3f-4caf-44fd-b57a-5d3896a0b70a"
        },
        "item": {
          "id": "b0caf379-9216-4cae-aac1-979356513497",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "afdccc9e-6435-4e4a-b897-f02f1cbc6197",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 0
        }
      },
      {
        "id": "b8e4dcc8-87c1-42c8-806c-d8558c69ac9c",
        "cursor": {
          "ref": "74a2bfda-5fc2-48ce-8044-32cc07b00b3a",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b4c4671a-5f82-4a5c-b017-44bc249eaf7b"
        },
        "item": {
          "id": "b8e4dcc8-87c1-42c8-806c-d8558c69ac9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e0b30ccf-aa09-47db-be40-75d42d6f7aad",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "4ccc715a-1078-4661-a1f9-cd912a000363",
        "cursor": {
          "ref": "0258c51b-8ce8-41d5-99c5-c1e6f270f71f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "936e4b89-a44d-4c6e-9d32-57843c855958"
        },
        "item": {
          "id": "4ccc715a-1078-4661-a1f9-cd912a000363",
          "name": "did_json"
        },
        "response": {
          "id": "5dcc1110-94c1-4006-8cce-59d24f9c51df",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4575e212-ee43-4410-832d-ca00bbc26b40",
        "cursor": {
          "ref": "7af2f10d-acfb-4ffc-b48f-773664a8abed",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae01596e-2274-4126-8dd2-7cbd9b1c8e7e"
        },
        "item": {
          "id": "4575e212-ee43-4410-832d-ca00bbc26b40",
          "name": "did:invalid"
        },
        "response": {
          "id": "b294f31e-bf86-499a-99b4-68239edda81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4575e212-ee43-4410-832d-ca00bbc26b40",
        "cursor": {
          "ref": "7af2f10d-acfb-4ffc-b48f-773664a8abed",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae01596e-2274-4126-8dd2-7cbd9b1c8e7e"
        },
        "item": {
          "id": "4575e212-ee43-4410-832d-ca00bbc26b40",
          "name": "did:invalid"
        },
        "response": {
          "id": "b294f31e-bf86-499a-99b4-68239edda81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a967f5e9-7e61-44a8-ae97-d823adac8cbc",
        "cursor": {
          "ref": "aaff91fe-28e2-4ba8-aea4-9089de08ac44",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "148c6535-902e-47c7-b045-933e8a464b7e"
        },
        "item": {
          "id": "a967f5e9-7e61-44a8-ae97-d823adac8cbc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2b4e58c-1c4f-4858-96d2-75d7de29f6ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f95d1ce-2c03-484c-b84a-48d385bc36a9",
        "cursor": {
          "ref": "e77faf4e-756f-43de-a489-7ec98eaf69ac",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "87d29263-416e-4950-a65c-feefcbc434c9"
        },
        "item": {
          "id": "1f95d1ce-2c03-484c-b84a-48d385bc36a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9ff68b0d-b8be-4dd1-a7ee-b5a87e5ecdfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8549dc1f-4513-4b98-9be9-7e5ea5d7db3c",
        "cursor": {
          "ref": "4090aacd-a974-4ced-9128-09e840053515",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e4a2ca4e-e6ea-47c0-9a54-1d0f30ac48e7"
        },
        "item": {
          "id": "8549dc1f-4513-4b98-9be9-7e5ea5d7db3c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "89ffd7d2-28da-436c-a2b6-57bb50e13d8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8991379-b696-484d-bf46-1818d9b9821f",
        "cursor": {
          "ref": "9ea138f1-5ced-4f64-99c0-de31ecb6dba4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "988c5c60-e7c9-49d0-877e-22a594578f94"
        },
        "item": {
          "id": "b8991379-b696-484d-bf46-1818d9b9821f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b1d0127-bbc4-490d-a0c5-bd842f6fca7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8991379-b696-484d-bf46-1818d9b9821f",
        "cursor": {
          "ref": "9ea138f1-5ced-4f64-99c0-de31ecb6dba4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "988c5c60-e7c9-49d0-877e-22a594578f94"
        },
        "item": {
          "id": "b8991379-b696-484d-bf46-1818d9b9821f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b1d0127-bbc4-490d-a0c5-bd842f6fca7f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1771754c-ee5b-4b51-bfac-b7ae4a9ddc59",
        "cursor": {
          "ref": "61a73749-dfe6-49e3-bdcc-7fcc108c921d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "465b7310-5399-4e64-b28e-17aed71cdd0d"
        },
        "item": {
          "id": "1771754c-ee5b-4b51-bfac-b7ae4a9ddc59",
          "name": "identifiers"
        },
        "response": {
          "id": "9b3e27cb-797d-4f09-b296-f92ebe5172b0",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705fbff5-8058-405b-a760-04d823332d9f",
        "cursor": {
          "ref": "aec9d62f-b677-4d11-8efa-8414aceffa14",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88ce1827-8382-4ed1-a935-a1884049b260"
        },
        "item": {
          "id": "705fbff5-8058-405b-a760-04d823332d9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b28867bb-2132-4ea4-bfa0-9437ca314b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705fbff5-8058-405b-a760-04d823332d9f",
        "cursor": {
          "ref": "aec9d62f-b677-4d11-8efa-8414aceffa14",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88ce1827-8382-4ed1-a935-a1884049b260"
        },
        "item": {
          "id": "705fbff5-8058-405b-a760-04d823332d9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b28867bb-2132-4ea4-bfa0-9437ca314b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5442c369-acf1-4b8b-9e6b-17ca9e6c61e0",
        "cursor": {
          "ref": "58aced02-1e99-4ec8-9964-8ff08fa29e10",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "608e0ea6-7bc8-4477-9084-668cfdad73fc"
        },
        "item": {
          "id": "5442c369-acf1-4b8b-9e6b-17ca9e6c61e0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "67adb45a-6fad-4529-b410-9af420479ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8940ba32-1c62-458d-ac93-a338fe61dee2",
        "cursor": {
          "ref": "214aa85b-f305-4439-981a-77c4eda3b544",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1036a24b-689f-4504-a6fc-6aea6cddccc1"
        },
        "item": {
          "id": "8940ba32-1c62-458d-ac93-a338fe61dee2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "efac1e9d-656c-480a-8c49-0344bff07432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0296c-7947-426a-b077-f7764b678828",
        "cursor": {
          "ref": "ff302364-4903-470b-95b2-f6d3a0af09f6",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8c315d87-bfa6-487a-9057-08a10cf776b8"
        },
        "item": {
          "id": "b3f0296c-7947-426a-b077-f7764b678828",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1812bf13-8f54-4434-9a24-6105ecae0491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385d08e2-7c2f-4102-800a-f39611370ae7",
        "cursor": {
          "ref": "2c990c63-fa93-4df5-9bdd-9b18ffa0fa00",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "353783cf-2178-46fe-a2fd-bf91b6942680"
        },
        "item": {
          "id": "385d08e2-7c2f-4102-800a-f39611370ae7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "13901f79-5869-4c75-8bdd-63f7f7f23771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b6771-6375-478c-a96d-e3d04ccdebf4",
        "cursor": {
          "ref": "a6f11ec9-ce29-44a7-945b-db3a6170ba7e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9642445b-9a60-400f-a397-b1da9726cf7b"
        },
        "item": {
          "id": "561b6771-6375-478c-a96d-e3d04ccdebf4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "421180dd-bc32-4e4c-9cf1-57b00af538f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0834958d-c36c-4313-b2ec-082fa598b688",
        "cursor": {
          "ref": "0b1406bf-a12a-40c5-87e9-2ba928fb7679",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fff8794e-1537-4acd-ae53-a04603e9234b"
        },
        "item": {
          "id": "0834958d-c36c-4313-b2ec-082fa598b688",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f9228b92-5cd0-4268-b2b9-05c36f87f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a5d99b-1ab3-49e5-8868-29ae9d59daaa",
        "cursor": {
          "ref": "34574cd7-6fe8-43aa-abeb-3ccd1e10a6f6",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7907cbd1-981b-495b-92a1-66fd9955234e"
        },
        "item": {
          "id": "52a5d99b-1ab3-49e5-8868-29ae9d59daaa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3ff86f05-3f79-4b3f-b21e-9a3b8b2b8e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7851288-bd5b-4e00-ad4f-7489a3bbe99c",
        "cursor": {
          "ref": "a64dacf9-c4e1-468e-90db-6923fd0f6a14",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2461f19f-2d30-4dc7-9ff4-e804f088cc6b"
        },
        "item": {
          "id": "e7851288-bd5b-4e00-ad4f-7489a3bbe99c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "61a6812d-1a31-4cdb-aa53-63b019ad945f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a356248-17e4-41c5-b9ac-cef2ec9d4e78",
        "cursor": {
          "ref": "d6b46edf-d234-41b1-bace-acb34a697ba4",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5ef6a706-0497-432b-bb42-64800185ee89"
        },
        "item": {
          "id": "3a356248-17e4-41c5-b9ac-cef2ec9d4e78",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5a109f6c-fb7a-4cad-a2fb-5d66064b5732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3e7aa0-318a-4157-b047-a7fc624456fc",
        "cursor": {
          "ref": "8628cf9e-af29-41c7-88d8-15984bc9b4e5",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0bb40fba-cce1-4555-a3c3-79bbcf30457a"
        },
        "item": {
          "id": "9d3e7aa0-318a-4157-b047-a7fc624456fc",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "39dc195f-4189-4c33-85bc-b9c53b712c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f75d204-e0ee-4164-a604-1326fd70f19c",
        "cursor": {
          "ref": "64920eae-0d15-4ef7-a354-6ce0d4b0115d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0f18230-5593-440f-80a2-c9808c03bdc1"
        },
        "item": {
          "id": "1f75d204-e0ee-4164-a604-1326fd70f19c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "28a01615-8654-446c-b768-56a952777961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838000b-076e-4dab-8d36-096de1059dc1",
        "cursor": {
          "ref": "62a2b9df-f93a-40ff-a599-5fab3bf3c931",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a334cc2b-3238-4b73-931f-af131dbdc644"
        },
        "item": {
          "id": "2838000b-076e-4dab-8d36-096de1059dc1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6e233764-f98b-4043-921c-4c33a85e24c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70434d9-f990-49af-836d-aeb431dfdd9a",
        "cursor": {
          "ref": "5e03133d-5875-41ff-8af2-72dba1725e4d",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "68ca078a-5d56-4521-8fba-d0ccc53308ec"
        },
        "item": {
          "id": "a70434d9-f990-49af-836d-aeb431dfdd9a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c94bbf61-4c7e-42aa-81fb-3bcf2919823d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eef03ca-3ccb-4043-b9bd-a8e8a0cad9b1",
        "cursor": {
          "ref": "94d29811-3eba-43ae-ab3f-787ce9d2b957",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f910f530-c5f2-4abc-b8e6-3181cdc6da27"
        },
        "item": {
          "id": "8eef03ca-3ccb-4043-b9bd-a8e8a0cad9b1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "797593ae-6055-465f-9403-ecec40b5d4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56081c3-2a6c-4c6a-a9b8-ba78d5e973e3",
        "cursor": {
          "ref": "f703d980-8d80-40fa-b8d4-61b375ce9e1e",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "461f8fcb-ff1b-4573-a0f6-339d68f6af9b"
        },
        "item": {
          "id": "a56081c3-2a6c-4c6a-a9b8-ba78d5e973e3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c89172a-2f1e-4aed-9a73-70b21d69e4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b443c334-60b8-4ad1-91ab-7b97fa00a333",
        "cursor": {
          "ref": "4be95ade-0d79-4358-a693-c1bda60754ca",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1602e15a-11e0-42f8-951a-56afff65a93f"
        },
        "item": {
          "id": "b443c334-60b8-4ad1-91ab-7b97fa00a333",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "180fb886-8c5f-4530-b4c8-9d1d32cb4175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80ec5a7-66b0-4fed-9625-a8839689cdc6",
        "cursor": {
          "ref": "ce61eba6-cb45-4d42-ac9c-c03e91035a38",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1b671cf3-0d04-4641-9498-4d94fb4bba6d"
        },
        "item": {
          "id": "e80ec5a7-66b0-4fed-9625-a8839689cdc6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e68d7988-d9bf-4025-9114-9aed6d899cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac4d059-e6d0-4025-b464-15daf95d643d",
        "cursor": {
          "ref": "e8b5daf4-93af-471d-9cde-04e63dea81c3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de01990f-7e6d-4fb0-b695-7e2307f47a59"
        },
        "item": {
          "id": "eac4d059-e6d0-4025-b464-15daf95d643d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bed2148a-57b3-4092-8b6a-a2f1ea30ea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb774385-eb5b-4031-a219-10a3d2abdf58",
        "cursor": {
          "ref": "f4214945-6ec8-48bf-8424-581f9ee376c5",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e60a9ac8-b570-43d2-a7aa-ef1f14131bda"
        },
        "item": {
          "id": "eb774385-eb5b-4031-a219-10a3d2abdf58",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a812cdb4-9de1-413a-882b-5a6ee665406e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64ab26a-967d-4739-8f06-4bcde7613130",
        "cursor": {
          "ref": "ef5c2ea1-18a2-4af5-bf6f-e18c5a52518b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a904ed0c-fc7a-4d04-8459-931b28564071"
        },
        "item": {
          "id": "a64ab26a-967d-4739-8f06-4bcde7613130",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0599ef9c-ac70-493c-a13b-30b1e49174be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d91c7-e60e-448d-b58b-946bb3938608",
        "cursor": {
          "ref": "f367529a-9cd6-4b35-8915-388fffbcefcd",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f2a107b-f322-4784-aaba-bf10a2d6cc2e"
        },
        "item": {
          "id": "751d91c7-e60e-448d-b58b-946bb3938608",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "39cfc981-79ff-4a72-92b5-bcdbc751aeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98590c33-83b9-4afd-9222-663384a77b46",
        "cursor": {
          "ref": "081f336d-b12e-4656-8349-9d1a81dd5172",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cd38ff6-c08c-4b98-b74d-93495fadae52"
        },
        "item": {
          "id": "98590c33-83b9-4afd-9222-663384a77b46",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c17a335c-b137-4275-8fa7-cbae95f13cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc788f7-67e6-45f4-a2d4-27f38bda9db3",
        "cursor": {
          "ref": "4619f321-1341-4f7d-abe4-4c4662f32811",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dfcf4a35-54da-4271-8d90-f66b761aeac2"
        },
        "item": {
          "id": "ffc788f7-67e6-45f4-a2d4-27f38bda9db3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "faeb44c2-1fc6-46f6-9137-69079c0e638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd3a257-4c33-437e-837c-cc94da0f0f4c",
        "cursor": {
          "ref": "7d546667-d272-4066-b591-9f688089dcf7",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f6acea36-903a-4213-baff-f85dc6888fb8"
        },
        "item": {
          "id": "ddd3a257-4c33-437e-837c-cc94da0f0f4c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "028e7775-ab3c-4ed6-aa8c-659e11a0a978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4073ffb-dd91-4d15-b6a4-60eb98346362",
        "cursor": {
          "ref": "17097fe9-67c0-4377-908e-b21651e9d648",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5ea78610-9594-48e0-8927-7ab10e4c2da1"
        },
        "item": {
          "id": "b4073ffb-dd91-4d15-b6a4-60eb98346362",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "96213ea6-1462-4e23-9ec9-4d9113234c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ab8bdd-6ed4-41ac-bfb6-9d58401a8da0",
        "cursor": {
          "ref": "e6510fa5-8aac-4cfa-b5f6-a9b1978a2282",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9e608ee-054e-4da7-91fa-5ae983a539db"
        },
        "item": {
          "id": "01ab8bdd-6ed4-41ac-bfb6-9d58401a8da0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1fc4181d-1bdd-4944-b00b-b59fcace2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a22737b-9f2a-402c-8159-ca51e0dc036e",
        "cursor": {
          "ref": "5eba344a-a081-4084-9b48-e55e5771d6cc",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8495658b-c745-4a56-bc97-2daa54ee0e64"
        },
        "item": {
          "id": "9a22737b-9f2a-402c-8159-ca51e0dc036e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bbdf0b1d-c88f-419f-a34c-eb52d1491869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e4756b-fec3-43ff-afa8-fc5425b6446d",
        "cursor": {
          "ref": "019a980d-59d3-443f-a8b8-fc676160a8b1",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cccc8c16-25b6-4045-a505-311fb719071b"
        },
        "item": {
          "id": "20e4756b-fec3-43ff-afa8-fc5425b6446d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d5e9f8b-d377-489c-b2a0-1e5803ca0b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2228814-e433-4cb8-8b71-2e827e10b34d",
        "cursor": {
          "ref": "49d80a25-63fa-4c3b-8303-4641c56005db",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea33a7eb-21f0-4526-b7b6-cc246f7ff075"
        },
        "item": {
          "id": "e2228814-e433-4cb8-8b71-2e827e10b34d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6609a80c-f008-4db0-a61d-169faeb46b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0934647f-f7a6-4726-ab90-5aa07eb927ff",
        "cursor": {
          "ref": "433984d1-3f51-460e-8b55-3a7b83c525fe",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a61c2fa6-a6c5-48c4-96a7-96d3bd0a59e9"
        },
        "item": {
          "id": "0934647f-f7a6-4726-ab90-5aa07eb927ff",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c1335c68-59ae-40ff-8354-85acafb38962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2443c6-4332-4c77-bcdc-aac61823db17",
        "cursor": {
          "ref": "8a1cc0a9-c463-4818-86aa-fb727a872158",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "81843fa9-c62b-4650-8918-c4a8f1816421"
        },
        "item": {
          "id": "6e2443c6-4332-4c77-bcdc-aac61823db17",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4cfa2ae7-bd26-479c-82b8-6796b35a1a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d975cc-189f-4b39-bea6-1f69e7b168e1",
        "cursor": {
          "ref": "d18618c7-37ea-4a11-adcf-5ec605e53a06",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6554f08f-b9d5-4655-9239-192e33f4c86f"
        },
        "item": {
          "id": "75d975cc-189f-4b39-bea6-1f69e7b168e1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c601b81d-57b3-4fd6-bcc4-74751b626d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aac0ff-8223-4fe0-b365-cc124a39f4b2",
        "cursor": {
          "ref": "8df84831-645c-44c4-8d16-6f0ed2d8feec",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3b98603d-1627-4242-9a4f-d24827d067bb"
        },
        "item": {
          "id": "c8aac0ff-8223-4fe0-b365-cc124a39f4b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7453e679-aeef-4dac-85fc-49f8f3654fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2134e9e3-c6dd-4f21-a94d-b9bcf4d61d0f",
        "cursor": {
          "ref": "c679763d-3939-4b58-9dc2-e0e416ca2781",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3b567d58-0867-41f5-9ac4-af3c437444f9"
        },
        "item": {
          "id": "2134e9e3-c6dd-4f21-a94d-b9bcf4d61d0f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "82179d52-2592-4e6f-8915-3cbb5f2706b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a87254c-7b67-4ea3-8408-52f41db385ba",
        "cursor": {
          "ref": "219ee74e-8f8b-4759-8e26-e5f622964956",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6587392d-fd2a-4ced-a637-9326c689ec09"
        },
        "item": {
          "id": "4a87254c-7b67-4ea3-8408-52f41db385ba",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2bf3d200-beb0-4856-9668-c5903ed1544f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8902a791-c976-4b00-83ca-80b70e830396",
        "cursor": {
          "ref": "fc1c4a16-23aa-4fe4-822b-0a171ae0b956",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5e704591-339b-4c14-afd9-dd479c1a13da"
        },
        "item": {
          "id": "8902a791-c976-4b00-83ca-80b70e830396",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f065b286-483f-4a92-bf24-e477d41e25a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298f6b82-1b3f-4f13-a510-a98cd73adcdc",
        "cursor": {
          "ref": "ce4e4758-0b77-41d5-8d2c-545e4cfd7189",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "90d0ba2b-7974-4b18-afc0-517502ed3e36"
        },
        "item": {
          "id": "298f6b82-1b3f-4f13-a510-a98cd73adcdc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b740d79-ba4d-4ac2-9e1d-51f12c8c5bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4962f9-847f-4372-95ab-52550af535c9",
        "cursor": {
          "ref": "a0943d2e-7237-4511-9fce-e086e888fbef",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8309ac66-62a6-48d4-8862-7b411861c7f4"
        },
        "item": {
          "id": "fc4962f9-847f-4372-95ab-52550af535c9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dc4fbd96-88bc-45b3-b26d-8802fba0c81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87962d09-828e-423e-ba4d-9296c6ddf624",
        "cursor": {
          "ref": "4141d9fc-5a77-4e1f-8602-2db0434955d6",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d9137034-855e-422a-a5f7-a21a99ec645c"
        },
        "item": {
          "id": "87962d09-828e-423e-ba4d-9296c6ddf624",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4f6ccafa-bf09-420c-9432-f996c37cc551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9346d35b-6c1b-455a-9132-cd56936fc545",
        "cursor": {
          "ref": "c71a0c2b-0007-4fee-892c-608e00d05f5f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e4da53b8-3917-4cb6-a35a-f8807cf5af10"
        },
        "item": {
          "id": "9346d35b-6c1b-455a-9132-cd56936fc545",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73ffea18-1228-4c34-a7c8-80e0484c69c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f154c708-d901-4a04-bf5e-9c70b2efdf45",
        "cursor": {
          "ref": "5dbcda3b-bae1-4a52-ac98-b4e3b98a58b7",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e617506f-5338-4373-b6b6-71a82add18db"
        },
        "item": {
          "id": "f154c708-d901-4a04-bf5e-9c70b2efdf45",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c767625a-8a6f-48a7-866a-123ec62a5a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662bb2ec-1739-4a4f-9ceb-459d208978aa",
        "cursor": {
          "ref": "5fd52a8c-d919-46e2-9b8f-62913952fb81",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a8f71efc-3e76-49c4-acc0-a818e024ca94"
        },
        "item": {
          "id": "662bb2ec-1739-4a4f-9ceb-459d208978aa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7459728e-4521-4614-86cc-0fceb0bbd0c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed034ce-1336-4bb0-8f09-2ffc8e7c0fa4",
        "cursor": {
          "ref": "6466a46e-485d-48e4-bf09-ef3eca971805",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "edcb08e8-6a24-4659-8405-296f43ad708d"
        },
        "item": {
          "id": "aed034ce-1336-4bb0-8f09-2ffc8e7c0fa4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d25f09d4-c33e-4f02-be28-c5ad2d644c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00614697-ca15-42d1-b2aa-8cf4803415ca",
        "cursor": {
          "ref": "b5214280-9cf1-4074-b7a9-51ff5cce1807",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8ee5cd1a-6e75-4404-9278-9180e756b35c"
        },
        "item": {
          "id": "00614697-ca15-42d1-b2aa-8cf4803415ca",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ddc0af99-d952-4e7e-bec7-14fa5ed886cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d2ab2c-57c9-4ed0-a05e-46d84d8e356a",
        "cursor": {
          "ref": "1c0bf139-0a06-4635-b0bd-470548e75c17",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d2c9faa-e838-44dc-bc86-50f17f27822b"
        },
        "item": {
          "id": "42d2ab2c-57c9-4ed0-a05e-46d84d8e356a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f5b2652-d3d0-4747-b213-6dabadefa37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6657572-850f-41e7-9535-915d97e0bace",
        "cursor": {
          "ref": "4aadbf33-8993-4905-b0b5-0040c1cb657e",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8b813f9a-45a0-4be1-b071-7b4030a4096d"
        },
        "item": {
          "id": "b6657572-850f-41e7-9535-915d97e0bace",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "254c7dcd-d819-4876-a186-ec6e6b22d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a4a4c-5caa-4e77-b165-b06188018762",
        "cursor": {
          "ref": "ea3093d7-bbe4-4661-9ea9-1de66b95699d",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a51042a-3b9b-4ec4-80ac-376fe27fc04c"
        },
        "item": {
          "id": "5b6a4a4c-5caa-4e77-b165-b06188018762",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b0d55bf-4048-4521-813b-7365494fc7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c90761f-d71c-4bd0-94f2-e68a3c552733",
        "cursor": {
          "ref": "d6034d31-818a-4082-a625-43e6a6e73e3e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7f8fb4d5-3b36-4b8f-b7c7-5a397f7c8f5b"
        },
        "item": {
          "id": "7c90761f-d71c-4bd0-94f2-e68a3c552733",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2b5c7e3a-eded-4770-9710-1dbc3f6f12fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60599e67-5289-40b8-8c7c-0cef0cfb2c02",
        "cursor": {
          "ref": "a20cf2f6-5652-4758-9a44-83cba6cf6506",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e092b13c-599d-4ab1-ad70-af5c0f42c1fe"
        },
        "item": {
          "id": "60599e67-5289-40b8-8c7c-0cef0cfb2c02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "862496c0-ee75-4529-a927-ca31155cf79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053da589-8292-4b05-ac8b-8d76f7f658f6",
        "cursor": {
          "ref": "fae05a62-b42a-49c7-8523-909a8854fa7d",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3e060fd2-9735-4d5b-b999-7d85c7ccfdfa"
        },
        "item": {
          "id": "053da589-8292-4b05-ac8b-8d76f7f658f6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f5c2c5b6-9387-47fa-a41d-d2d379c201d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b672e78-b230-405f-8033-0b72bc069323",
        "cursor": {
          "ref": "93ed8de5-7bac-419b-a21c-4319110c6f05",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1b945472-4584-476d-b52e-5bdfaffcf79e"
        },
        "item": {
          "id": "7b672e78-b230-405f-8033-0b72bc069323",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "326093c4-6322-46b1-9d14-63c83c0782da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f4fcee-c652-4e2e-95c1-073e167522d2",
        "cursor": {
          "ref": "47722a3c-63b1-4de9-86fc-65faf80a52c1",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f92a92a-5683-4cef-8a38-d210e69b4ca9"
        },
        "item": {
          "id": "68f4fcee-c652-4e2e-95c1-073e167522d2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "249808e5-d996-4aac-a104-9d27e6ab270e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847da73c-6e44-49ca-88d4-c2f1c60a0930",
        "cursor": {
          "ref": "32835ad2-c8fc-4c80-813e-3871e56fcde2",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6e18261-923a-49d5-84a7-2bbdcc311b53"
        },
        "item": {
          "id": "847da73c-6e44-49ca-88d4-c2f1c60a0930",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "388b02eb-aa51-4f9a-bb27-228dac6b8bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b70214-3476-4023-8413-d08c3ceec178",
        "cursor": {
          "ref": "dd90a375-1799-4ad8-b8bf-300bcc7811fe",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5a59d5e5-7163-4943-b409-8bda1c3a7766"
        },
        "item": {
          "id": "32b70214-3476-4023-8413-d08c3ceec178",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f1f96a4c-768d-49f7-9ba3-1664f5ff994e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d173b5-260c-40bd-99ea-7030677e7685",
        "cursor": {
          "ref": "07d38e80-e5e5-46f4-b947-12d5ae8bd82e",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c0354842-c122-4e56-b0d1-4f9d08c4306b"
        },
        "item": {
          "id": "45d173b5-260c-40bd-99ea-7030677e7685",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e4611a1b-e870-485d-bad2-314bac282ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2219fd25-738b-4350-a557-6ffde586c091",
        "cursor": {
          "ref": "4ab2ff3e-0796-4b5d-a5f6-03240e473773",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "22cd9e44-59c3-4004-b584-e80c67036d91"
        },
        "item": {
          "id": "2219fd25-738b-4350-a557-6ffde586c091",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "584d3dc6-219e-434b-b50a-e04d4829b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224ab59f-0822-462b-8d7f-3460b43f19dc",
        "cursor": {
          "ref": "e379c9e9-2a40-4314-9b5f-89e64a8a487b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ecc0a9ca-7443-40bb-9080-289645dbaffe"
        },
        "item": {
          "id": "224ab59f-0822-462b-8d7f-3460b43f19dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "942c722d-c87d-410c-9afa-3d6589d64e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6ead63-170a-458d-a874-16fb13555250",
        "cursor": {
          "ref": "27e27cab-e02b-42ff-9f68-bb8b93b63f2e",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "05a8dfbf-b389-4d77-9433-b99eacc86c52"
        },
        "item": {
          "id": "0b6ead63-170a-458d-a874-16fb13555250",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9b12b113-efa3-4d2e-a303-2dba14bc9053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98e60d9-a61f-4195-8117-1449d961fd8b",
        "cursor": {
          "ref": "b75f3d4c-a4c8-4539-af7f-f27c7def1f61",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b6209c59-44bf-43cb-8814-b59fa4049743"
        },
        "item": {
          "id": "f98e60d9-a61f-4195-8117-1449d961fd8b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cb48a1f9-ad52-4b45-bd70-fba3fa0dea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae686d1-2c4f-45a1-b375-838a080db7f2",
        "cursor": {
          "ref": "c293b9ab-86ad-4662-bdb4-23ed2052fb23",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "13507c05-62da-4ec5-8305-f79f0d2deda1"
        },
        "item": {
          "id": "cae686d1-2c4f-45a1-b375-838a080db7f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "afad34ea-43ba-444e-aaa4-8a54511c1211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dfc5e0-484d-4be8-bd74-b4ba726f19d9",
        "cursor": {
          "ref": "d51f2483-d177-4042-8a23-6e898dc18da4",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ab5fd22f-5332-4c09-bc08-329a814112ab"
        },
        "item": {
          "id": "84dfc5e0-484d-4be8-bd74-b4ba726f19d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fada49ef-5cfc-4e17-8883-d4feed339165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ab76bd-a660-4d0a-b48b-7b9ecf919e17",
        "cursor": {
          "ref": "3574649b-8a40-47dd-92de-878d310f8b6e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e439f732-b45b-4b7c-8770-07e2dcd370b5"
        },
        "item": {
          "id": "d9ab76bd-a660-4d0a-b48b-7b9ecf919e17",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "67f14890-3819-4078-908a-cb36b9355353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d55a206-f292-45e1-af5c-3186fc962fda",
        "cursor": {
          "ref": "2e2530aa-1ca5-4451-b85f-60087461cadb",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cd69e102-7b39-4e17-bc13-9146f32bbd79"
        },
        "item": {
          "id": "8d55a206-f292-45e1-af5c-3186fc962fda",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a34b2731-1f9d-4637-8645-d63e4206cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e3d09-e009-47f8-bcb8-4cb6aac1d281",
        "cursor": {
          "ref": "788222e0-15b3-4fa7-9406-dc7946371b15",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f167faa7-36f0-4235-b05b-53c57a09ca71"
        },
        "item": {
          "id": "9a3e3d09-e009-47f8-bcb8-4cb6aac1d281",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1c5f48bb-abad-41f9-a4ff-13f91c5b31f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbba15-1ade-473a-9250-b019145e3b35",
        "cursor": {
          "ref": "7ba2a3da-dd9d-45a2-a45c-cb142936e0ad",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c0db0cf3-c1e0-4267-8b84-07a6ed93a3d2"
        },
        "item": {
          "id": "2acbba15-1ade-473a-9250-b019145e3b35",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a31326d-a9ba-48d2-9a87-17fd0979a9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1833464c-87fc-4941-a980-6ada16995307",
        "cursor": {
          "ref": "d0b9c7fa-b72c-4272-b100-11db4894b9e7",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec25d06e-e2cc-4178-a019-80c457c4a1a8"
        },
        "item": {
          "id": "1833464c-87fc-4941-a980-6ada16995307",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80eedc6c-588f-44d8-b47c-deaa1814fa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c1ab75-a5b1-408f-8f41-e4ecfd89a66a",
        "cursor": {
          "ref": "d5fce570-d60b-4a80-b156-64a6b6eca7c3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9e6afd5d-b403-47f0-9ed8-d7608b638db4"
        },
        "item": {
          "id": "27c1ab75-a5b1-408f-8f41-e4ecfd89a66a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "36709e81-71a6-4cbc-beef-48b1e21111f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc228d6-3fc8-4571-936b-615e7263741d",
        "cursor": {
          "ref": "89e4108c-3481-433f-bb21-60ef68e7d9f2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fcae7500-d03a-4030-a967-e91fdb005c25"
        },
        "item": {
          "id": "3dc228d6-3fc8-4571-936b-615e7263741d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b9ce63ba-4093-4923-af52-97b34591556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe77f4e-8ba1-4a4a-9e81-bcbb9bb14a75",
        "cursor": {
          "ref": "25eb63a2-270d-47fd-9375-a86f1247a5ca",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a0f02c2-83db-45fc-ac20-ed874743382e"
        },
        "item": {
          "id": "9fe77f4e-8ba1-4a4a-9e81-bcbb9bb14a75",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "371b7d25-0b11-4c3c-acf0-508d53b098ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e62f669-22ce-4d0e-a6db-36d8f2ef40ca",
        "cursor": {
          "ref": "19184675-ebe3-428c-9c69-b6e71ef73b7b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "673d0c49-04eb-4b6b-afb4-53b0ed392d3e"
        },
        "item": {
          "id": "8e62f669-22ce-4d0e-a6db-36d8f2ef40ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51c4ff09-16fb-40c1-9709-d651f8b98bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc636c38-644c-44b0-a007-382985139148",
        "cursor": {
          "ref": "c5807876-2af8-4ca0-9c0c-a9cabc9f87fb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a01240c-6b19-4539-bdb8-44cdd2f878cc"
        },
        "item": {
          "id": "dc636c38-644c-44b0-a007-382985139148",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9f13d0d1-2639-4c60-8ba4-711a4e5025f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8dc57e-97b8-42f7-a597-11d258179790",
        "cursor": {
          "ref": "d012efae-9b11-4fad-ae1b-82ece430fe91",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d112604f-89f0-4925-a9af-acc6f2813a1b"
        },
        "item": {
          "id": "0b8dc57e-97b8-42f7-a597-11d258179790",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3b54c84-077c-4993-8315-5e2b1828e7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9a16f7-afaf-4d28-a3f1-6e1a0d074bca",
        "cursor": {
          "ref": "315ad47b-fbd1-4a8b-9fa3-598f5e40f215",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "09cc9d6d-d9ca-48d5-bcad-8067c28ef6e7"
        },
        "item": {
          "id": "8f9a16f7-afaf-4d28-a3f1-6e1a0d074bca",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "54528f04-54a2-4715-82c6-deefa0036e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c674b-c6e9-4286-80ee-2aa3486c0b09",
        "cursor": {
          "ref": "033692f0-bb01-4045-864a-54dda2f570c8",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0d8ee22e-cfa5-4753-95d5-5eccfcfcaa77"
        },
        "item": {
          "id": "606c674b-c6e9-4286-80ee-2aa3486c0b09",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0504a004-2882-4f86-bbe3-db9f49b4bbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a413dbdd-2b56-4e33-8851-55a53aa5b461",
        "cursor": {
          "ref": "54b78950-c814-495d-8f76-0a4e32021fd6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "13097b2d-9663-4fcd-84f8-9f76b783e2ec"
        },
        "item": {
          "id": "a413dbdd-2b56-4e33-8851-55a53aa5b461",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ecd6855d-4977-4e46-a4f1-7108d2c2dc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7293a024-37ba-4376-9438-9b97fddf0dcb",
        "cursor": {
          "ref": "f0bd0de4-d636-4bf6-942a-8c51f8d02c71",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6f55368e-a29f-4255-a71e-eae0b40f4086"
        },
        "item": {
          "id": "7293a024-37ba-4376-9438-9b97fddf0dcb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c4b0c0a2-7351-46dc-b8f9-888ceda1c2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d285a-74a0-4793-bac9-67629f0d42ac",
        "cursor": {
          "ref": "738a3e72-c139-4b62-9da6-3a47267404f3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bf2a9709-ca70-407b-ba85-e40f842844c9"
        },
        "item": {
          "id": "907d285a-74a0-4793-bac9-67629f0d42ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aeee4140-5ce7-4ec4-b41d-75fbe37b771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db507830-bc68-4c20-bb7a-97e84bbb0cb4",
        "cursor": {
          "ref": "60690e2d-7cb4-4186-a268-1ae99f284e17",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "caf51a86-4130-4dd6-b50a-99599adfe997"
        },
        "item": {
          "id": "db507830-bc68-4c20-bb7a-97e84bbb0cb4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "93b7feaa-2844-49f0-8f15-535b90aad42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc1bf4-0a53-4ee2-90fe-b29bc70dd6a0",
        "cursor": {
          "ref": "69d9f39a-6f27-48a8-9cc5-cbe0458f0756",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7bc002f6-76b0-4777-a920-5099d7902a50"
        },
        "item": {
          "id": "7ebc1bf4-0a53-4ee2-90fe-b29bc70dd6a0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e911b56f-1550-4057-94f4-f1ecafc13d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20db7954-d2dc-4938-8c94-21f73b70cc73",
        "cursor": {
          "ref": "b31bd2ee-a77d-4817-abb8-b19d40a266de",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f258b713-0de0-4c4e-abc2-3e431deffa34"
        },
        "item": {
          "id": "20db7954-d2dc-4938-8c94-21f73b70cc73",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6111ff7a-81ac-4828-ba6e-47e87b61bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b709b-bb75-45a7-a637-394c04e1606d",
        "cursor": {
          "ref": "ab169f64-a3c0-4fdb-b42e-dd2ce22fb0cc",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "20e80efb-2335-4ba7-b8d4-6274f449ba8b"
        },
        "item": {
          "id": "083b709b-bb75-45a7-a637-394c04e1606d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6db84f32-9d9a-452f-b1f0-a7c62ee78485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093f839e-8c67-4aa3-9fbc-9af3478b74c4",
        "cursor": {
          "ref": "0bc10ad3-c8e2-47fd-8cd2-c42664e1af8e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e55c9212-6832-4007-9c21-76e3f20d8d32"
        },
        "item": {
          "id": "093f839e-8c67-4aa3-9fbc-9af3478b74c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "00adea98-8c7f-4f83-84b6-da7670f7591b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b4231d-d4ff-4f4c-b0fd-186828182610",
        "cursor": {
          "ref": "02c0ed7b-f763-4b4b-9fcd-9e1d3183da06",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc82bbc7-c562-410e-a7ab-94055b96c84c"
        },
        "item": {
          "id": "22b4231d-d4ff-4f4c-b0fd-186828182610",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "64bb88b3-9d42-405f-b531-b184b7e395c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d8edb7-1ef1-4880-b848-6c4e0ee48d2f",
        "cursor": {
          "ref": "b2494ac6-8be2-4286-aa9a-47c007e46939",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3867490-fc81-4505-92b2-b8a7e29c7271"
        },
        "item": {
          "id": "f8d8edb7-1ef1-4880-b848-6c4e0ee48d2f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dc80f9b3-f4f5-4fd1-a5fb-28bde4bbc494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11085c35-150e-4142-9724-fac7e4de821d",
        "cursor": {
          "ref": "98a795cd-f578-4d79-bace-b019599667b2",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "be477c15-1ca7-46d9-8a71-77a17983b8fc"
        },
        "item": {
          "id": "11085c35-150e-4142-9724-fac7e4de821d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "75365f46-cb32-45a6-b8cd-4648746b16b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea399f-4aa4-471b-a25a-1b2dc3859faa",
        "cursor": {
          "ref": "f6815bc2-ff0e-46d0-bfa4-6f5f4e23cbdc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fba1121e-53d9-4091-9c7b-5409fae9c7eb"
        },
        "item": {
          "id": "9fea399f-4aa4-471b-a25a-1b2dc3859faa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a8031b54-f151-498a-9d98-e2c3a984a615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b258285-7239-4214-9fa2-51445f3a99c1",
        "cursor": {
          "ref": "86114bcc-781f-49cd-bad6-e48faf811376",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "53cf1516-96a5-4725-85b1-ffcd6a61f630"
        },
        "item": {
          "id": "1b258285-7239-4214-9fa2-51445f3a99c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f56bd33d-74c0-4a4d-ab52-6577ee9b2410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d8666-960f-4112-bf11-7063e268ae1b",
        "cursor": {
          "ref": "f37456e7-6265-47a8-94c4-5c21af6e7f5d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e94e504f-c836-4f12-aba1-56750bb4226e"
        },
        "item": {
          "id": "6e3d8666-960f-4112-bf11-7063e268ae1b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3694b032-da5e-48e5-ac46-8af867867417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57f4a1d-e91d-41c5-b312-02cfd57df8dc",
        "cursor": {
          "ref": "44f485de-ee8c-4f8c-867a-e4c9c91e3f07",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5a8db0d3-158a-47ad-9430-8098af4b4ad6"
        },
        "item": {
          "id": "d57f4a1d-e91d-41c5-b312-02cfd57df8dc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f1f8ceab-a2e9-4c6f-bdbe-64432cb98c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe4671-636a-47b2-89a1-6d492d6b48ef",
        "cursor": {
          "ref": "30333e85-20f2-4d84-97b3-a7140309fb7d",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3e7b94db-7d2a-4579-9f00-965f53ef4543"
        },
        "item": {
          "id": "affe4671-636a-47b2-89a1-6d492d6b48ef",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f69f16d3-7d19-48ae-b98f-da0ab1b4e0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d706cae-44e3-43de-a4a4-c01f29051634",
        "cursor": {
          "ref": "b67ed394-613d-40fb-ae3b-359fb53890fd",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "18a0aaad-5647-4f63-9ce9-c2cc74ab1021"
        },
        "item": {
          "id": "4d706cae-44e3-43de-a4a4-c01f29051634",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1e829983-f365-4243-af35-b1286baa1886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f73eb-d48b-4e97-8302-9d5b375317af",
        "cursor": {
          "ref": "28e21776-b9d2-447c-86bd-3243e6c49bdb",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f7230f8b-f0aa-4d37-8c43-54e3b326edaf"
        },
        "item": {
          "id": "446f73eb-d48b-4e97-8302-9d5b375317af",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ae57cc8-4430-4bd3-a15c-01785e91cc62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b28458-f579-4513-beb8-50105df89784",
        "cursor": {
          "ref": "5bbbca7f-48d3-418d-b41d-0dc27539370d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "675cb4fc-4513-4378-8553-30756036523e"
        },
        "item": {
          "id": "77b28458-f579-4513-beb8-50105df89784",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0deea509-ecd9-4629-bac9-727130384fe8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 240,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bfa55a-0685-4db3-a45e-42592a0b12f0",
        "cursor": {
          "ref": "0d0ed14e-f063-484e-bad7-9ade49bb245d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "83c61cfa-99af-483b-ba60-58dcbf75892c"
        },
        "item": {
          "id": "b2bfa55a-0685-4db3-a45e-42592a0b12f0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fad2a41a-8d7e-4b0a-99ab-29182714c607",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e73774-a2ca-497c-b0d9-b6b43019e6c6",
        "cursor": {
          "ref": "487cd4bf-be06-47c3-abbe-b2826f75db90",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f39cf3d9-fdf5-46e5-a9cf-7a549b43dad2"
        },
        "item": {
          "id": "20e73774-a2ca-497c-b0d9-b6b43019e6c6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f7776380-5ff5-46ad-a68f-f16ae93e2b95",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b5192e-47a9-4486-b98f-df6cb792d8aa",
        "cursor": {
          "ref": "6e7c87e8-ca29-4b5d-a7fb-2856d12b5301",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5db89337-b8af-4a30-a2bb-6cda8bbb5a41"
        },
        "item": {
          "id": "63b5192e-47a9-4486-b98f-df6cb792d8aa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f4684e18-67fe-4b06-87b0-3f0fe46c5932",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "45224265-8c32-4dd8-8d39-f01bf88e15cb",
        "cursor": {
          "ref": "54723c5f-4421-4078-b729-7c804ec4e1ac",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bca6efcd-74f4-40ae-a0c6-337384dd7ebe"
        },
        "item": {
          "id": "45224265-8c32-4dd8-8d39-f01bf88e15cb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dfeafeb0-e8a3-4f55-8081-c55346890385",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a78aca-dfce-4295-b2d1-82525c414888",
        "cursor": {
          "ref": "49f08318-6fec-429c-a7c9-4241d305d6ad",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "33981063-0ed3-4aea-8ef4-0dc8b04c2299"
        },
        "item": {
          "id": "17a78aca-dfce-4295-b2d1-82525c414888",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "14d5b722-dcee-49e9-b04d-22b1909e0313",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf6979c-1b29-43d4-84ee-2866cb71972b",
        "cursor": {
          "ref": "c53d9d6b-f587-4d71-a388-85664ad29ad1",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0994c0ea-a58b-4637-ba74-c301005185cf"
        },
        "item": {
          "id": "bbf6979c-1b29-43d4-84ee-2866cb71972b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6570ffcc-5f63-4c3b-9f6a-b7786ea6f98c",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971bd5b8-25f6-4e6d-8b56-0417b968b09a",
        "cursor": {
          "ref": "39bbf44e-f0d9-4b31-9ba5-22ee3faae6cd",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5247737-7a7e-40ba-8564-807779ae1e0d"
        },
        "item": {
          "id": "971bd5b8-25f6-4e6d-8b56-0417b968b09a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29e728fd-4e22-4ea5-a4e2-a53219ccdefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971bd5b8-25f6-4e6d-8b56-0417b968b09a",
        "cursor": {
          "ref": "39bbf44e-f0d9-4b31-9ba5-22ee3faae6cd",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e5247737-7a7e-40ba-8564-807779ae1e0d"
        },
        "item": {
          "id": "971bd5b8-25f6-4e6d-8b56-0417b968b09a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29e728fd-4e22-4ea5-a4e2-a53219ccdefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095db451-4eaf-4623-8f1f-a73e1c9b9dca",
        "cursor": {
          "ref": "334f24ea-033d-4f52-a06e-a8b267e95d1c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3d191d13-b251-4016-bad7-1cb6d4379259"
        },
        "item": {
          "id": "095db451-4eaf-4623-8f1f-a73e1c9b9dca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cca1c474-2ff8-4f80-ace8-332d11a4ea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf789c0-8ba6-4780-8591-b2e601e6d9bf",
        "cursor": {
          "ref": "814373a5-7f2a-4294-b9ec-ee73a2bdb3fc",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "82b92e82-775d-4b86-8ca6-0e7ed6928a7b"
        },
        "item": {
          "id": "aaf789c0-8ba6-4780-8591-b2e601e6d9bf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ce4b8f1-3636-473f-a6a9-d23c45742966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7168363e-9440-4b21-81d8-bbaaa21a96b8",
        "cursor": {
          "ref": "2838706e-4338-4a3a-b48d-f4fac0a280a2",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fd645525-f83d-468f-b266-9b099c14b641"
        },
        "item": {
          "id": "7168363e-9440-4b21-81d8-bbaaa21a96b8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e0ab5d9-baf0-4f4b-904f-4ac5d5bd6952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bef689c-8ec7-46bf-b231-182d17cc76c8",
        "cursor": {
          "ref": "1a95fabc-6827-4164-95b0-ba415e2f8dd2",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ee371766-2da0-4fe6-89c1-c1a4195da042"
        },
        "item": {
          "id": "4bef689c-8ec7-46bf-b231-182d17cc76c8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68a1d2e0-226f-423d-a217-545eadd45842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d889762-85ba-4b03-a8c4-74d9687ec5e1",
        "cursor": {
          "ref": "cfdee74d-2a77-482e-ab59-955c2e861689",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d565360d-8386-4c74-b567-590ed6657c60"
        },
        "item": {
          "id": "2d889762-85ba-4b03-a8c4-74d9687ec5e1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b5f8e1c2-7baa-4d9a-8cc2-1069118856de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90836360-90c8-4796-b995-259f12a9aecc",
        "cursor": {
          "ref": "604eeb34-a465-4417-a17a-4e1b31739408",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "44a3c8a2-17b1-4722-aeec-1cb0a628e019"
        },
        "item": {
          "id": "90836360-90c8-4796-b995-259f12a9aecc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4818ac0-9ab5-419f-a10b-37fc1ec5f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69099df4-6407-4349-8f3a-d2dc7dca938a",
        "cursor": {
          "ref": "03d3824a-d795-4930-abe3-aadd4b8ad243",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e0c79d6e-1d4e-4896-b99c-45856ff98725"
        },
        "item": {
          "id": "69099df4-6407-4349-8f3a-d2dc7dca938a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6837707a-fa47-4ae6-a937-29f614643383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b307f1-241c-4771-8a54-9adca9fe4eb4",
        "cursor": {
          "ref": "aba81fe2-00e2-492c-8a76-49d3c7f04420",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2feef247-7cf4-4943-b974-527605f07469"
        },
        "item": {
          "id": "a4b307f1-241c-4771-8a54-9adca9fe4eb4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f698d783-f121-4eff-b94f-c2f0ecc36eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6141928-3035-4b6a-9b43-cdf036ae524e",
        "cursor": {
          "ref": "fbca730a-c2ec-4ad5-b1c3-ee2189ef0e91",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "08e7be2f-ba1e-4594-b7f3-5943c31fda18"
        },
        "item": {
          "id": "a6141928-3035-4b6a-9b43-cdf036ae524e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d8110ee-5ed2-4246-90e1-56cef4c011c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1e749c-5749-4bc0-9028-f2f32bd1714d",
        "cursor": {
          "ref": "c4c5261e-f119-4dbb-8ff6-64403fbd176d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2ed4bc26-b750-4ac5-8509-770d5ed739a8"
        },
        "item": {
          "id": "9f1e749c-5749-4bc0-9028-f2f32bd1714d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cde4329f-17df-4894-8d6a-ea4b7a7e742e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1745256b-c75f-4de6-9a8d-7379daea3559",
        "cursor": {
          "ref": "9251a896-a615-4c36-969b-9e18bfbb7fe2",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b74d89e-b490-4b69-956e-a55edf4cb9a9"
        },
        "item": {
          "id": "1745256b-c75f-4de6-9a8d-7379daea3559",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed0eef56-3860-42fe-982f-db9c1067dcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eed7e8a-afc4-4114-a1f7-009f68c392f8",
        "cursor": {
          "ref": "c8e81eeb-2e8f-45a1-a0c5-37f14773d70c",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ee2a9af0-b568-4bc4-84a8-e98f6bf5797a"
        },
        "item": {
          "id": "1eed7e8a-afc4-4114-a1f7-009f68c392f8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eabe8c7d-baf0-4b6e-a5dc-153f1ebe5891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f73a52-38b3-4563-a512-63791f0c2f21",
        "cursor": {
          "ref": "ff8564b6-3c14-41c8-aa48-24190a1a9793",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "351420d0-b16a-4d54-a77d-a4d46725c8b3"
        },
        "item": {
          "id": "15f73a52-38b3-4563-a512-63791f0c2f21",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c6f9cf3-0b6a-40f6-a717-a97434a3ee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864c4695-a33a-4ae5-b4b1-1ea5f3ac5291",
        "cursor": {
          "ref": "ce980690-2c99-4107-99ea-890fa63ceb98",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8938c1ab-bad2-4a2b-85c0-a4597b5f57c9"
        },
        "item": {
          "id": "864c4695-a33a-4ae5-b4b1-1ea5f3ac5291",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a08e8eaf-2f80-4de5-93b1-9719005e326c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b54016a-2be0-475a-ab50-97116c16df84",
        "cursor": {
          "ref": "a28375cf-5df6-44d4-b17d-6ec87b6b2be9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "02c26c41-2396-41fd-94b0-c642d6d70f03"
        },
        "item": {
          "id": "5b54016a-2be0-475a-ab50-97116c16df84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48f9ace3-36d1-4594-9a19-fddf67bd71cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a98a23d-4a45-4d47-b08e-26b2f6ec5b6c",
        "cursor": {
          "ref": "35263607-9fd2-4442-bad9-dd70621be460",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a09be7f0-fae6-4b4f-ae9f-3c8e0a6ca294"
        },
        "item": {
          "id": "3a98a23d-4a45-4d47-b08e-26b2f6ec5b6c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42ea71e7-6e80-4816-bbda-e93c4941fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cc53bf-242c-4e90-8cd7-12dffc427fd7",
        "cursor": {
          "ref": "a162ef9c-8005-4c7c-849e-03440144a8c1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f895da8c-2a13-486c-8286-8866cbabf7c5"
        },
        "item": {
          "id": "74cc53bf-242c-4e90-8cd7-12dffc427fd7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2ac5e3b1-7391-452f-92c7-3df7d7954bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583a853-4f5d-4e6f-98aa-6e4cf6439b15",
        "cursor": {
          "ref": "e828e24b-8546-465a-9395-72e079dca4a6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "64a0c427-d3f9-4df7-9f3c-bf66abd5db99"
        },
        "item": {
          "id": "7583a853-4f5d-4e6f-98aa-6e4cf6439b15",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "77418718-5e82-4e83-999f-4d4dd8d66836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d280bd0e-a7d2-4815-95bf-f8ff445842a2",
        "cursor": {
          "ref": "c93432af-8d2d-48ca-93e0-338ee8c45464",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "319428ce-fcfc-4ba0-a5bb-b4505fcee9fd"
        },
        "item": {
          "id": "d280bd0e-a7d2-4815-95bf-f8ff445842a2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7bbc65a5-7a67-4ea2-8670-6cce9b8a6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee4936e-f234-4821-8f0e-58ea05bc04c2",
        "cursor": {
          "ref": "39af6bf4-8702-43ba-ade1-f6e2bdf9c132",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e9450b8-e3d8-417b-a741-7509777c168b"
        },
        "item": {
          "id": "4ee4936e-f234-4821-8f0e-58ea05bc04c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aa109648-ecc2-44d3-a5d2-38069b85ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1cdb7c-4b93-4016-bf99-64fb92f3daf9",
        "cursor": {
          "ref": "7e147aa1-4af6-4fbb-9439-780e399247d7",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "221a5042-0c91-42aa-b5fd-fb400b9c5e84"
        },
        "item": {
          "id": "8c1cdb7c-4b93-4016-bf99-64fb92f3daf9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "85289009-36fa-4442-b6a1-546611b3da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d68c51f-7fa0-455d-8a3f-2cc3bb4ae6ad",
        "cursor": {
          "ref": "0aec0b78-a972-482b-bb5a-f038431dbda3",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7f73b4f1-9bae-4fa0-a641-492b2e4d1c07"
        },
        "item": {
          "id": "3d68c51f-7fa0-455d-8a3f-2cc3bb4ae6ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85befeff-f400-4ee5-a0fe-f80fec13d954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0170251c-cea6-4ff2-badc-d74bea5dcf74",
        "cursor": {
          "ref": "6a2cc604-6421-4d0b-9451-262ba20f7ae2",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d470a2a4-9ee0-44c3-8218-821f6eac29d1"
        },
        "item": {
          "id": "0170251c-cea6-4ff2-badc-d74bea5dcf74",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d28782d2-5cc1-496f-8c70-66373b290fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2321f-1900-41a7-a518-aaf9e8e10fd3",
        "cursor": {
          "ref": "94e2d380-6d6a-47fc-b919-0b38a26333a0",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bfbae813-3df9-4310-83a1-b3c6bb7e1e80"
        },
        "item": {
          "id": "5eb2321f-1900-41a7-a518-aaf9e8e10fd3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e338d96d-f62e-4a3a-b712-aa66c0ac108b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef3d255-e9c4-495c-b77e-6bbd0afe147d",
        "cursor": {
          "ref": "5581ede2-01d1-42be-9eb7-3e9927239b92",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "64ff2552-f5c4-4e0e-a3fe-33818e4d5b99"
        },
        "item": {
          "id": "1ef3d255-e9c4-495c-b77e-6bbd0afe147d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bd7c4842-24c0-448e-bc98-fca20d5ed965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cbb912-dbb9-4ad8-8ca9-34d3b280593f",
        "cursor": {
          "ref": "49c66e0d-fec6-4f10-b9ed-0c14388aed74",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f181a2f7-daf9-4362-92cd-44b1e752e578"
        },
        "item": {
          "id": "02cbb912-dbb9-4ad8-8ca9-34d3b280593f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e8c5887-7bca-4ecd-8982-bd4be5dfe5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad03c0b9-38f8-4846-a0a7-a840c0e8a1fd",
        "cursor": {
          "ref": "f569c6a1-2699-47fe-b408-2b925cbdba6c",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a6296a54-013d-431d-b365-d2417829ebbd"
        },
        "item": {
          "id": "ad03c0b9-38f8-4846-a0a7-a840c0e8a1fd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0e305da-8d63-44e0-9c6e-598637eb598c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d6ee0-34bb-4b37-b556-2b8043bff740",
        "cursor": {
          "ref": "31301f3d-5832-4e1c-b236-8b420278acbd",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f3a4724d-a43e-4617-9264-b244c4a0b366"
        },
        "item": {
          "id": "619d6ee0-34bb-4b37-b556-2b8043bff740",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "edd095a8-47b2-426e-a868-2398544b31af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc36bd89-7e88-49f2-950c-b278efd91b98",
        "cursor": {
          "ref": "19010f42-fff1-4edd-827e-abc5de3561af",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a4f0f07d-3937-4c8e-b8f9-cd43a808a5b1"
        },
        "item": {
          "id": "fc36bd89-7e88-49f2-950c-b278efd91b98",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "076489be-35e0-4d77-8009-01d5b2593b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d61f59-f77e-44ea-a340-5ed74f7e680d",
        "cursor": {
          "ref": "5fd158d3-65f4-4f1c-8f84-14068fbdcdef",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "462d83ce-018d-4ded-9494-d99366aae9d9"
        },
        "item": {
          "id": "c5d61f59-f77e-44ea-a340-5ed74f7e680d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfb398a4-f5ba-424e-8dc1-7fdabdbbe73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b251a50d-7b1b-4145-a476-07662fceeebf",
        "cursor": {
          "ref": "225cc762-95b0-4502-9f05-470d03fa7d82",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26046ac2-7531-40a3-b882-624c0b65e26e"
        },
        "item": {
          "id": "b251a50d-7b1b-4145-a476-07662fceeebf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "09a3d1c2-a571-46f1-8c97-3487bbf49964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7c80d9-0fd1-431b-9136-19b6ba508cd9",
        "cursor": {
          "ref": "47dcbc33-b48d-418e-9f5a-00e20046354c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "41f40dfa-702a-4c07-ba5f-544b10fe43b0"
        },
        "item": {
          "id": "dd7c80d9-0fd1-431b-9136-19b6ba508cd9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05f2c31a-47ea-4f54-92bd-e37cda165310",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50f6640-0f46-43ae-9115-eebb9f93b4e4",
        "cursor": {
          "ref": "f6caa339-22f8-4de3-8ccd-6c2ce453a294",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "788638e0-7f4f-4f2f-8cfd-b22b4b7f47fa"
        },
        "item": {
          "id": "d50f6640-0f46-43ae-9115-eebb9f93b4e4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2f3d14a0-fcf4-430c-8eb5-eaddfcb82ca8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b441df-8de5-44d9-8514-4c9b74405f84",
        "cursor": {
          "ref": "990a224f-3722-4861-8124-63816a052070",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "07b3248d-073b-444c-b623-dfb902c8e7ae"
        },
        "item": {
          "id": "23b441df-8de5-44d9-8514-4c9b74405f84",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "953b69a3-259a-4b0f-8cc7-d01b6b5dee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b441df-8de5-44d9-8514-4c9b74405f84",
        "cursor": {
          "ref": "990a224f-3722-4861-8124-63816a052070",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "07b3248d-073b-444c-b623-dfb902c8e7ae"
        },
        "item": {
          "id": "23b441df-8de5-44d9-8514-4c9b74405f84",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "953b69a3-259a-4b0f-8cc7-d01b6b5dee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c622198f-2a98-43d1-826e-7a5718f6e01c",
        "cursor": {
          "ref": "1dee05dd-8a6a-40a1-9a88-8ea637a6d8bb",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "532d8e9c-c338-4ffb-acd9-fd7d239d7ca0"
        },
        "item": {
          "id": "c622198f-2a98-43d1-826e-7a5718f6e01c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "67c38a66-a7f1-4cd0-bcfe-c43631368043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33be5031-ab20-4855-a121-f7bfcba91162",
        "cursor": {
          "ref": "10e92b9d-6ff1-4931-a53d-0c599519ffce",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7d9b9bf6-5021-47bc-bc6f-426b2bb21806"
        },
        "item": {
          "id": "33be5031-ab20-4855-a121-f7bfcba91162",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "92cdf87e-853b-4dff-8b95-6c166403b539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84278eb4-db0b-4584-b9d4-aa456412ba8f",
        "cursor": {
          "ref": "b036b085-e9b3-43a4-827f-9c873b864549",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c20c97a8-f6a7-445d-9405-8b1d93d7446e"
        },
        "item": {
          "id": "84278eb4-db0b-4584-b9d4-aa456412ba8f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d814f231-2e66-4af5-9e26-29edc59328ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c43b8-c68d-46ff-878e-35105cfa2993",
        "cursor": {
          "ref": "80d6b47b-33cd-440c-b0d9-7681c6309d97",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fcdcc70c-0c1c-46a5-aec3-cff771e4dc4e"
        },
        "item": {
          "id": "3c5c43b8-c68d-46ff-878e-35105cfa2993",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a7d7d31b-da91-43a9-8de5-abd516c36bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09713119-5fb1-42cb-bcee-0f98ec43b06b",
        "cursor": {
          "ref": "e2aec297-e23c-48bd-84cd-fc73743d3204",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ea220cc3-f5cb-48ad-9491-2c160102e99d"
        },
        "item": {
          "id": "09713119-5fb1-42cb-bcee-0f98ec43b06b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "57f15149-952f-48b4-bbb5-01467edfda34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4f9765-1d8d-4aa5-a430-94dbe8c2b5ff",
        "cursor": {
          "ref": "fb965dde-d369-43ba-b919-0d8c90d6d857",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "52b07097-f86e-4658-90aa-49ad9f7ba3d6"
        },
        "item": {
          "id": "4a4f9765-1d8d-4aa5-a430-94dbe8c2b5ff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "08b81cb6-aead-492b-90a9-6d9487f24b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802e648e-51fe-4c12-b038-a8eee3417ca7",
        "cursor": {
          "ref": "b45fb524-cb45-4213-aa4d-94cbd99ee1bf",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "74b6ba1f-5dbc-4f35-89b5-6dfd1a1c0830"
        },
        "item": {
          "id": "802e648e-51fe-4c12-b038-a8eee3417ca7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0147d618-ceff-4ab9-8b33-e322346d3465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f466c7da-694c-418e-9a39-54767b179f0d",
        "cursor": {
          "ref": "42593864-4dea-4fb3-be2d-4410cc8985b9",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f9bb6ce2-c7a1-44aa-a7f9-43644ed79ebf"
        },
        "item": {
          "id": "f466c7da-694c-418e-9a39-54767b179f0d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a048a440-30e8-49ef-9ed0-c2d5fae580cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a51894d-8396-445e-8616-c949879bf958",
        "cursor": {
          "ref": "7a90a6f1-5198-4454-8c34-2968124cc329",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "22ca7bd7-9c94-46ec-b79d-035515184c78"
        },
        "item": {
          "id": "3a51894d-8396-445e-8616-c949879bf958",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e61fc59a-5a09-4aa6-a0f2-201f76fba6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea7509e-55ab-4dc6-b50e-0fbaf73907d8",
        "cursor": {
          "ref": "74720dcb-ecf9-428a-909e-043d699a0b46",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "53ea3570-8a57-46f1-87b1-1197d646a71b"
        },
        "item": {
          "id": "6ea7509e-55ab-4dc6-b50e-0fbaf73907d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b5c8b1f4-d302-42ae-8c20-3d6070df55c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6997683-1df9-49fb-b22a-7eea9213f6fd",
        "cursor": {
          "ref": "67d853a2-f47c-453c-9c24-973921c85ab6",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e3282e98-839a-455f-8fd0-16d6f43fa6c0"
        },
        "item": {
          "id": "d6997683-1df9-49fb-b22a-7eea9213f6fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "083cef53-f0b6-47b7-8a27-33f0ad7775c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a34972b-9aa1-4871-a506-920aed5ccbbb",
        "cursor": {
          "ref": "d73ef5e9-d7f6-4f40-ba52-8ad266fd9445",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f81c523e-e23e-49e7-a06a-671594f90862"
        },
        "item": {
          "id": "8a34972b-9aa1-4871-a506-920aed5ccbbb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba6d7b1c-d68c-40b0-a10e-5fbffd42bbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930d6d59-c1d6-4bc4-a3ff-98c7942a29c8",
        "cursor": {
          "ref": "93f4302d-e1f1-4323-8481-dd80615a6bd3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1da46840-9c00-40ee-9090-9642f6d71b0a"
        },
        "item": {
          "id": "930d6d59-c1d6-4bc4-a3ff-98c7942a29c8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a7c698e9-b40b-425c-8ac8-c8de074d05bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccb1711-99f6-4d72-90cd-cd765518a22c",
        "cursor": {
          "ref": "0d802d6b-4bf0-4c4a-8250-8802671288b2",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc6bb4cd-8b0a-4ad3-ab7b-57fdd02dc18c"
        },
        "item": {
          "id": "1ccb1711-99f6-4d72-90cd-cd765518a22c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6da4e076-211d-413b-8d86-b4e8fcf8892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7360be-358c-4e87-967d-d22191b7c244",
        "cursor": {
          "ref": "7855fbce-0bc5-4748-a767-fb88fd1b0a2e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "845371ae-4ea8-4a6c-9f71-1e6ea8795a38"
        },
        "item": {
          "id": "1c7360be-358c-4e87-967d-d22191b7c244",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "708f6773-e8d0-4cb5-8f07-d70d76982e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5af5369-c7de-4a11-b04f-dc082c576b13",
        "cursor": {
          "ref": "427b9b35-ff02-45a7-8237-a345b013f859",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ef591a02-812d-424c-9abc-6d087849d4c6"
        },
        "item": {
          "id": "f5af5369-c7de-4a11-b04f-dc082c576b13",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7a62dfb8-b645-4564-aa5b-c9475a4b11a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf81f13-6a95-463a-94c0-0d76998e7f90",
        "cursor": {
          "ref": "a80325b5-91d8-4652-9ae9-2b22cca6a653",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "088906bd-7a7a-4aa0-a57e-f0d6c5094f23"
        },
        "item": {
          "id": "cbf81f13-6a95-463a-94c0-0d76998e7f90",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f632c6bd-8ad7-40eb-8835-f13fe69ccbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb771cc-9848-4ad0-b6c5-53110a97af32",
        "cursor": {
          "ref": "bd5d3991-2bf9-46c6-8e45-e60e2f3af2f1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cf3f3a9b-dec0-49c2-8514-4752e4023ab5"
        },
        "item": {
          "id": "1cb771cc-9848-4ad0-b6c5-53110a97af32",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f712dce4-2f46-47c4-8fa5-068dfa259ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772aeb23-33b9-46cf-8519-8dfcda1c2458",
        "cursor": {
          "ref": "b8777470-103f-4059-a4ff-5412b34e80e6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ddc3bbf8-1f33-4c24-abee-33a8cfdaf75c"
        },
        "item": {
          "id": "772aeb23-33b9-46cf-8519-8dfcda1c2458",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "429ef314-6e75-4f72-a33c-680944f2291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a40762b-45c6-4268-8b9b-5c4810abc4c1",
        "cursor": {
          "ref": "12ab9f1c-6b6c-4f88-8751-44a6938c7f99",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bf46654-6cb7-453a-a710-1b117b1a5856"
        },
        "item": {
          "id": "1a40762b-45c6-4268-8b9b-5c4810abc4c1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a2a7f77e-243b-488e-9d4e-9b1e623e3205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74f2e99-4f1d-4325-a9ce-1b8879d6715f",
        "cursor": {
          "ref": "5064c5bd-88d0-4607-8b60-2c296c485bcc",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "71299b57-4cb9-4f0b-8ef0-d1df9a9db863"
        },
        "item": {
          "id": "a74f2e99-4f1d-4325-a9ce-1b8879d6715f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bb18861e-cc4a-4ec0-94ae-0b36e1e6ca79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c783690d-4eeb-4513-8578-0627399da2cc",
        "cursor": {
          "ref": "1b79e6ed-3620-4e54-9c87-4a35956eac4f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e3f28b1c-e94d-439f-a0c9-9c4a22fff4ca"
        },
        "item": {
          "id": "c783690d-4eeb-4513-8578-0627399da2cc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b069d1e-8693-44bb-85ed-00b4c01ca1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bcdf31-7179-400a-8ac9-7b8b525d613d",
        "cursor": {
          "ref": "f1cba1f0-5635-4ca0-b5c5-871dd340be88",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "94379ff8-01bb-4529-816a-af35c0b79240"
        },
        "item": {
          "id": "23bcdf31-7179-400a-8ac9-7b8b525d613d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f7240b3-e3be-4d4c-987e-6d8141bc8200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a4a5ed-c2aa-4d94-b25e-003b0ad35d6f",
        "cursor": {
          "ref": "06988736-91c5-42e1-bb20-a0fcf69ec7e0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "910586fc-5e97-4d50-878d-531c04198839"
        },
        "item": {
          "id": "61a4a5ed-c2aa-4d94-b25e-003b0ad35d6f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "031173f8-3f86-4777-b600-9a4e483f8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9544542c-6df8-43f8-bd8b-496525898cdc",
        "cursor": {
          "ref": "82ac43a6-1047-4e20-b00b-eac2fbeea27d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "de91b060-6a38-48ae-a3c1-313862920607"
        },
        "item": {
          "id": "9544542c-6df8-43f8-bd8b-496525898cdc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "695d053d-3991-4599-afe7-b9638cbfedf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aacda9f-23e4-4fdf-b457-b36f07901493",
        "cursor": {
          "ref": "cbeb9fa4-c22a-4e89-a61b-92665804607e",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fef6537f-5394-4130-b832-40c2e12e63fd"
        },
        "item": {
          "id": "1aacda9f-23e4-4fdf-b457-b36f07901493",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4b6e0c6b-2daf-4fad-b0cb-fd4a9047a581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9416ee2d-1504-4f5c-aa92-5a068c7a57a0",
        "cursor": {
          "ref": "74595305-cf23-4b43-beab-2c36c49f1fbd",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1cd233cf-bd30-43fc-a125-dc4f20a9376f"
        },
        "item": {
          "id": "9416ee2d-1504-4f5c-aa92-5a068c7a57a0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fde92895-2bb0-4ae8-941b-92002a243476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f95d31c-7bf6-4b68-9acb-9f1165fc155c",
        "cursor": {
          "ref": "0171102f-7f92-44dc-904d-052c4bdc4529",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ad65f9e4-86ac-4c60-8609-d85b29769a48"
        },
        "item": {
          "id": "7f95d31c-7bf6-4b68-9acb-9f1165fc155c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ae7ecd2e-1f4d-4211-9715-79925ab29574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faf7501-fc0e-46a8-9e8a-1ed75e270d01",
        "cursor": {
          "ref": "90367c92-2e68-4711-9eed-311034501582",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "10bd8d36-78ec-46b9-9a01-94d64649f873"
        },
        "item": {
          "id": "7faf7501-fc0e-46a8-9e8a-1ed75e270d01",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "20cf94df-257a-4df6-8263-fc479afa1a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e4b53e-ef17-40b6-b3f5-92a52c1ae4b0",
        "cursor": {
          "ref": "e061e747-20d8-428b-a0a0-d0661077654e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2c1f4439-d750-462f-b440-06a591fbdb07"
        },
        "item": {
          "id": "83e4b53e-ef17-40b6-b3f5-92a52c1ae4b0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8f81bea6-bf60-41ea-83d3-d7f394232f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e61ac61-794e-434b-ae10-cee8b25ced9b",
        "cursor": {
          "ref": "26725e47-f78d-401d-9fcb-557890e02db3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b6e943b1-f078-4eb9-9d62-9c829ee66d1c"
        },
        "item": {
          "id": "8e61ac61-794e-434b-ae10-cee8b25ced9b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0210635a-3c7d-4bd0-88d3-7e5d6b049f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708588d0-1329-4494-a747-fc59ddec8cc7",
        "cursor": {
          "ref": "2e7792ea-f2e5-4196-9930-4a48623ba77b",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dfaa2bac-0c2d-4f61-b631-28177a547f2e"
        },
        "item": {
          "id": "708588d0-1329-4494-a747-fc59ddec8cc7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "384d42df-b3f6-4f57-9173-aed86e731236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925f83b1-344d-4b05-993b-bcd475c896db",
        "cursor": {
          "ref": "c4b0608b-b368-45d7-b4bd-8e86d73ad955",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "134337b7-c552-4c34-bb0b-aaae8f6c5174"
        },
        "item": {
          "id": "925f83b1-344d-4b05-993b-bcd475c896db",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e4be95b6-b488-4a5d-80e3-4e6e713fe7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14ca7a1-56c4-458d-8520-5fd50fda087e",
        "cursor": {
          "ref": "868259c0-8595-4c33-88fd-c4a908f5a422",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "63c89761-545b-4121-aa60-458d765ed8a2"
        },
        "item": {
          "id": "b14ca7a1-56c4-458d-8520-5fd50fda087e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec707d95-0e85-476d-a617-1f7370c8c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b51d4-8c09-478f-b42d-f1b37c3cda9c",
        "cursor": {
          "ref": "dfe0b6f6-d704-41bc-a1f6-588d3d78fd09",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "628a9605-412d-4a33-8f4a-0e412c96c58a"
        },
        "item": {
          "id": "051b51d4-8c09-478f-b42d-f1b37c3cda9c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c19db867-67c0-4dbc-bd7d-974e82014e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa56a6-6a3f-4175-bda3-5d0c8c107448",
        "cursor": {
          "ref": "b04c79df-f1c5-4ef9-acdb-4b4e36ff5aa9",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "300f0e47-6143-4f4e-ac99-8994963f9b4a"
        },
        "item": {
          "id": "d4aa56a6-6a3f-4175-bda3-5d0c8c107448",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2353d00e-4eeb-439a-a2c7-9fa4f629728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fcf76e-ed3e-4caf-92d1-e7a12a4aecd1",
        "cursor": {
          "ref": "b0501f63-c2c9-44a1-bab3-499d3b051c07",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2984f560-766b-42cb-b884-8f9683069bab"
        },
        "item": {
          "id": "41fcf76e-ed3e-4caf-92d1-e7a12a4aecd1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "16989f96-1daf-4eff-918b-ff1bbb377308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1779db-a9ab-4c24-b6cd-0a36e2dce05c",
        "cursor": {
          "ref": "ddf1f5cc-63a2-4a41-b496-f018a2676efc",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "068b4abc-bec6-4a97-b3d8-4e1057b27487"
        },
        "item": {
          "id": "cf1779db-a9ab-4c24-b6cd-0a36e2dce05c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f1b8d400-ef32-4191-ae50-9148593a740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc88b330-5123-4ebf-9510-1c83917a6133",
        "cursor": {
          "ref": "ca321a07-a03e-49a3-961a-fa55fdce377c",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "44c65682-13a3-4521-87cc-71d5bdf6f5b9"
        },
        "item": {
          "id": "dc88b330-5123-4ebf-9510-1c83917a6133",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d0e0dfb0-9e21-4d8d-8c5c-978e178c6b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cb64ce-ba3a-4647-81d5-4a7f2fe08894",
        "cursor": {
          "ref": "0a08112d-9f15-4809-ae70-9415ebc3f6d5",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b364422a-b4db-48c9-b47c-e19ca3307367"
        },
        "item": {
          "id": "f3cb64ce-ba3a-4647-81d5-4a7f2fe08894",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b19c6cb-d951-4d58-a9d2-5c0fac585793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc6896-c658-4b9c-8d4d-51ca92bd0dd8",
        "cursor": {
          "ref": "15b5e1d9-4d61-4db8-8268-25f81585bc8d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2833ab39-f18b-4aa1-880b-b0c04016b2f3"
        },
        "item": {
          "id": "31fc6896-c658-4b9c-8d4d-51ca92bd0dd8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "59ba8266-69ed-4c79-8165-eb14066f40ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b8f45-4653-4b49-b477-e3207b24567e",
        "cursor": {
          "ref": "33c7bdb4-6b62-4d81-97fe-c6d3d59556ce",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5bee67b0-9936-448d-bbf8-40eea2a40c7f"
        },
        "item": {
          "id": "d06b8f45-4653-4b49-b477-e3207b24567e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cb851f66-d54b-407b-b9d7-6e8d6740bcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be095c2-262c-454d-970f-09b33cf91282",
        "cursor": {
          "ref": "cc5983fb-1204-4adc-82bc-affe57eafc8f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1745d35e-5a67-4f97-af30-6da2cacb7c1e"
        },
        "item": {
          "id": "4be095c2-262c-454d-970f-09b33cf91282",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f3cb3e23-a504-4579-b76b-52cd53555fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a4abea-7fa7-426c-a7d9-6c928d4568a7",
        "cursor": {
          "ref": "3ea79b19-6553-40a7-95af-f6c8b6558375",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4cf679e2-1415-4836-aee6-9ea1812a540e"
        },
        "item": {
          "id": "87a4abea-7fa7-426c-a7d9-6c928d4568a7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6f7b29d5-1c43-4489-99b8-031083a9d7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eadc651-b8d2-430b-b92b-f6a63eb7f121",
        "cursor": {
          "ref": "a6ad2e26-6982-4010-9c4e-8eed6f303e5b",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c735f326-0077-48b5-bcad-8ebc3493c425"
        },
        "item": {
          "id": "2eadc651-b8d2-430b-b92b-f6a63eb7f121",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9eadc432-39f3-4b34-8e42-facdc7d25aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc3c4e3-b39f-4500-850e-ea318449bc72",
        "cursor": {
          "ref": "f9dd9f76-be48-4e2c-9d17-31d2c2ae92e3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa78b934-6668-4500-98ad-7a4fb504f671"
        },
        "item": {
          "id": "2bc3c4e3-b39f-4500-850e-ea318449bc72",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "059da20c-744c-4182-a215-d79a6f03cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807d97a6-d9d1-4bb7-b6a9-80388ca32857",
        "cursor": {
          "ref": "64112b04-0e71-466a-a36c-38c0b23253ec",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38eef4df-a1e1-4a7f-bf58-068742fb1067"
        },
        "item": {
          "id": "807d97a6-d9d1-4bb7-b6a9-80388ca32857",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a17b6602-409d-4fe1-861e-877cee8a0f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3370598-f4e7-475b-8ec6-fedd58e9dbc4",
        "cursor": {
          "ref": "dd52e675-f67a-4666-8c8d-766acba179e3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd679938-b744-4470-a7ba-10e8815250fa"
        },
        "item": {
          "id": "e3370598-f4e7-475b-8ec6-fedd58e9dbc4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d7d2889a-1f83-4641-8338-66c3a408cac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cf3aa6-a0ee-463c-a3b7-de0e8ecc72e4",
        "cursor": {
          "ref": "fb02f2f2-ae28-40bc-b156-7373d00acd10",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c260935c-79b5-4473-829a-9b755734a64e"
        },
        "item": {
          "id": "19cf3aa6-a0ee-463c-a3b7-de0e8ecc72e4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6effdfd9-8d03-494e-92e0-20f314b7e8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe3d391-bf4d-4ffd-b1c5-6e009d197cde",
        "cursor": {
          "ref": "f1e837e2-d66a-48e6-9ba7-330166b35ab2",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1497ba66-63e0-4e45-b60a-e36d28b1be03"
        },
        "item": {
          "id": "dbe3d391-bf4d-4ffd-b1c5-6e009d197cde",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3a0d1f1b-cc3b-4bf0-ab8b-987684da74c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb4799b-d7a1-43c5-9ecb-18fb06e9b42a",
        "cursor": {
          "ref": "5237ef02-48e0-42fa-ae86-9d01e8d8521e",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dc527c8a-5731-4a6f-8364-81d9f714f565"
        },
        "item": {
          "id": "fbb4799b-d7a1-43c5-9ecb-18fb06e9b42a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc7cbc57-c4da-45dc-85d9-60bc2f6b7e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852f759d-e989-4462-9b2a-cbaaaa356f84",
        "cursor": {
          "ref": "783f5765-9e22-4b1f-9895-984dffc5ab6a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "93b3733b-70f9-40dd-a832-e9016cb5c6bb"
        },
        "item": {
          "id": "852f759d-e989-4462-9b2a-cbaaaa356f84",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5139b21e-fe27-4475-8ffb-06aff9b20833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781607d7-7774-4b61-81ed-2e85bbb36f44",
        "cursor": {
          "ref": "c5832186-6e3e-4224-98d7-677bd17d1c07",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b9f03da5-4680-4e80-9498-81b421dc7aff"
        },
        "item": {
          "id": "781607d7-7774-4b61-81ed-2e85bbb36f44",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f48badd1-155b-4ac6-85fb-f6ebe1b6742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42061e-c935-4345-9ce8-92dc4e0cd1fa",
        "cursor": {
          "ref": "93594519-285d-45cd-9d7c-a635c8f320ac",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2fa817ec-c03d-462f-89d6-4cf99b03eb34"
        },
        "item": {
          "id": "2f42061e-c935-4345-9ce8-92dc4e0cd1fa",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "550b570c-37a8-40c8-8cc1-8449d1e98202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2646a1a1-a7fe-43f8-922f-b467edbaaae6",
        "cursor": {
          "ref": "eefc83d6-8544-436b-8c63-0b9eb5420580",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9e7852b-8773-4fe2-9a75-79d3e2a67d19"
        },
        "item": {
          "id": "2646a1a1-a7fe-43f8-922f-b467edbaaae6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f946fbdb-f656-49dc-8bcd-779e25e03468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6249380-2ba5-4598-bb95-65b1482b4cf5",
        "cursor": {
          "ref": "240185c2-9f57-4e90-bc19-ecc879ff5506",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c287e4c6-9035-466f-8c81-d5533c91858d"
        },
        "item": {
          "id": "c6249380-2ba5-4598-bb95-65b1482b4cf5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a9dce13c-d330-4533-9afe-c055fa421c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede8921c-afd7-4dd2-babe-62bde3317f24",
        "cursor": {
          "ref": "6d8fa123-c1ae-4399-b0ae-63ae39d2bbd9",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2e7f618b-d257-4fbb-af83-8495ed8cc2a7"
        },
        "item": {
          "id": "ede8921c-afd7-4dd2-babe-62bde3317f24",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e53a8c01-301b-4702-96f0-369ac1f44f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41684bb7-6eff-40a6-b4d5-793999a61827",
        "cursor": {
          "ref": "16143dbf-860a-48eb-8376-66b0566c92f1",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b2e03fce-4f76-43d7-9a21-aca87f899310"
        },
        "item": {
          "id": "41684bb7-6eff-40a6-b4d5-793999a61827",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8a1bfb42-9755-48e5-b574-92cccfab1755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b6318-fdbc-4ba3-8d84-a597ed589925",
        "cursor": {
          "ref": "82973331-5527-495d-bd6a-5976dff36cdf",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e9a68fd1-25c4-41d6-99b9-9360420ceb9b"
        },
        "item": {
          "id": "7c1b6318-fdbc-4ba3-8d84-a597ed589925",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5225102f-6724-41b7-a679-34bb0630e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519cde2d-c7d8-44e6-b0da-779980c59ba4",
        "cursor": {
          "ref": "70408fe6-f92b-48b7-9d3b-9fe468fe0bd4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "43c2b798-40b9-4945-99b0-6be43f65276d"
        },
        "item": {
          "id": "519cde2d-c7d8-44e6-b0da-779980c59ba4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "472e2d77-507b-42ab-adac-fc4826f8f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54633458-f968-4229-9e85-4cd6f5d24e0b",
        "cursor": {
          "ref": "1063a896-64c2-4496-92bd-c4e906731787",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "31eceb38-230c-4fd9-990b-605186858399"
        },
        "item": {
          "id": "54633458-f968-4229-9e85-4cd6f5d24e0b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b9d6df4e-d25c-482e-8aa9-d1711dfefe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf12df8-9c1b-4afd-a1bb-bbd9428dfecc",
        "cursor": {
          "ref": "fbbcd2b6-0e7c-4c9f-8a06-4af981c6872b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "67ed1291-30c7-46a2-aa55-da2ebb326cb7"
        },
        "item": {
          "id": "5cf12df8-9c1b-4afd-a1bb-bbd9428dfecc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5e4c253f-4f02-4c72-a15b-6c37f9330252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85019b1-4ebc-4b75-a086-9c18f775d4af",
        "cursor": {
          "ref": "a0fbb20e-838d-4fd8-80b1-bb582821300a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1c3cbe65-a444-4d7c-8598-53c5b292ce95"
        },
        "item": {
          "id": "d85019b1-4ebc-4b75-a086-9c18f775d4af",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e8d5e452-fd02-4381-9042-9dd6fbf79223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca104b2-8f37-4171-b8ce-9082115df481",
        "cursor": {
          "ref": "333134bd-04bd-4db4-a542-6764d512fb58",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "48893c3e-f37c-4ec1-8065-5da953617df4"
        },
        "item": {
          "id": "dca104b2-8f37-4171-b8ce-9082115df481",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "dc87bb11-cd74-4964-b037-236c413b654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adff7873-a469-42d2-b11b-561547c65f72",
        "cursor": {
          "ref": "ba4f27fe-1125-4779-a329-8150b2f9bbfb",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "348687ab-ad1f-45cc-b8e6-7a715a8bff05"
        },
        "item": {
          "id": "adff7873-a469-42d2-b11b-561547c65f72",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ee7dcc52-1e67-4a23-87ee-65673fdbc50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec4f4e-dda7-40a7-bfce-e3c58a5a9cd3",
        "cursor": {
          "ref": "136833fc-0154-4e23-a82e-080c6f271d1b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5cfa2391-8ae3-4f52-81e5-61addb911d7e"
        },
        "item": {
          "id": "b8ec4f4e-dda7-40a7-bfce-e3c58a5a9cd3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40da2df7-7613-42e1-b072-36cd122ba4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0211530-670c-4225-8ffe-3b0054ff87f4",
        "cursor": {
          "ref": "6f4ea96f-45e0-4490-bcfa-35d41f3727db",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "99abd0e5-d743-4d3d-8608-0179df3142aa"
        },
        "item": {
          "id": "a0211530-670c-4225-8ffe-3b0054ff87f4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1125ddaa-694d-4b41-af56-5fa03737df70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62daf893-2b1f-4411-80fb-5e6f21fb6064",
        "cursor": {
          "ref": "cc645f58-1dab-4188-b7a7-a4e26023fc57",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3f20c671-52db-4ed6-bb9e-8e538fa3e823"
        },
        "item": {
          "id": "62daf893-2b1f-4411-80fb-5e6f21fb6064",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4c840607-11e2-4dfd-9a8f-bade50dd328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903a85e4-f717-41fd-ae0f-7c37c3ed7ce0",
        "cursor": {
          "ref": "2226f5ad-6795-46f4-9234-601f92796b85",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a5931d4d-9d90-4b1f-bf3c-84e80f2344b0"
        },
        "item": {
          "id": "903a85e4-f717-41fd-ae0f-7c37c3ed7ce0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d03ac4b7-c22b-4769-a5b9-66e465dfb6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4443b48f-1f1f-4be5-9248-0b634d4d3382",
        "cursor": {
          "ref": "ea3d9992-a26b-4adb-8256-f95c28c0253f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "465af0ab-f7fa-4d52-9ed8-e3a900c30f5f"
        },
        "item": {
          "id": "4443b48f-1f1f-4be5-9248-0b634d4d3382",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b9b12ed3-7632-4661-9272-834b3683b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6cee05-c05b-4d2a-bdd8-e542c85b0c9c",
        "cursor": {
          "ref": "ba3404e5-a0ec-4b0b-8998-63bdc88cd2ef",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f28c4f94-382c-495d-a63a-acbf2223b24d"
        },
        "item": {
          "id": "fe6cee05-c05b-4d2a-bdd8-e542c85b0c9c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "320b88b8-6586-447a-93ef-d8d4a242c329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795b8f4e-dcad-443b-a21f-1c4a07072c8f",
        "cursor": {
          "ref": "ae69224f-7a12-40eb-99fa-0d96970e4cc1",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5555f79d-64b5-43be-bf79-46c2b13b7613"
        },
        "item": {
          "id": "795b8f4e-dcad-443b-a21f-1c4a07072c8f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3811ca13-31fc-4d30-9b35-43892a89cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b932c77e-dfe4-482f-8f32-9ae6b46c5180",
        "cursor": {
          "ref": "4d93c76b-323b-49a2-94fc-9ed444c12348",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "13d32483-12d0-4990-b5a3-542720e6a9be"
        },
        "item": {
          "id": "b932c77e-dfe4-482f-8f32-9ae6b46c5180",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "63805844-b0b3-4113-bdef-e23b61c1c488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aee790-fe2d-48d9-a8e0-4acf9bb6505b",
        "cursor": {
          "ref": "a731ba01-bced-4990-9ab8-130bf0e473c2",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4798b386-332d-4a4e-aed8-05c6738c1617"
        },
        "item": {
          "id": "09aee790-fe2d-48d9-a8e0-4acf9bb6505b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dac26a6d-b398-436c-868a-d93eebc2ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346bf31b-969a-417b-97b9-becfd0caf61c",
        "cursor": {
          "ref": "014cafac-5e2a-436d-aced-4ed3f89bc6d9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8b58c96e-7e95-4d31-850e-d46b0920d3ac"
        },
        "item": {
          "id": "346bf31b-969a-417b-97b9-becfd0caf61c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fcdb602e-bdab-4f0b-a1dc-62e996679adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5d8c99-7a00-4843-bde8-7742a5454264",
        "cursor": {
          "ref": "23aa22fe-5bc9-4b75-a654-2a2b8e074d01",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a9cb0393-f1b4-4479-b5d5-00a32ca59664"
        },
        "item": {
          "id": "bb5d8c99-7a00-4843-bde8-7742a5454264",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a7b10985-eeb4-4e06-8153-b9452b729724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269c0998-59a4-41d9-a3a5-75d70fe02d11",
        "cursor": {
          "ref": "676f1443-66b7-4446-b994-1930acf2621b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7b47382f-de87-444a-851c-7543bd947b21"
        },
        "item": {
          "id": "269c0998-59a4-41d9-a3a5-75d70fe02d11",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fee339f2-4e7a-4697-bbae-e9bd8c89d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e7ed3-69cd-42ca-92a3-a12b2b4b3830",
        "cursor": {
          "ref": "c351258a-3064-45ed-9517-4837ab5432ee",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eca980d3-7031-45d6-8eff-ab23a0cbe2b9"
        },
        "item": {
          "id": "a54e7ed3-69cd-42ca-92a3-a12b2b4b3830",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f31e19c3-bec0-4de7-ade2-a19ae27d3ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7d29f2-d596-4356-a0df-2c8955b7eda3",
        "cursor": {
          "ref": "011e73d2-8f1b-426a-aeb4-f242a78e872d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "49b87f4b-d499-4343-8df9-7660c95652d6"
        },
        "item": {
          "id": "6e7d29f2-d596-4356-a0df-2c8955b7eda3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e03969f-d5f0-4f8e-8e33-150d9fdb47be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd03859-1ed5-484f-92a2-869809da16bd",
        "cursor": {
          "ref": "9e71cac7-1745-4cf0-9e08-e6086b4566c2",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9d58ffad-d3cd-4752-a6f3-250ed51ba26b"
        },
        "item": {
          "id": "abd03859-1ed5-484f-92a2-869809da16bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "276260a8-6b20-41a8-885d-bf440e0a19aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5fdad8-3a1c-4bc8-89eb-78743550d43d",
        "cursor": {
          "ref": "e85e1538-3c7d-45f7-bf1d-aa2c70331cf9",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8a10ae70-9bcd-4369-99fc-1789ba595566"
        },
        "item": {
          "id": "4d5fdad8-3a1c-4bc8-89eb-78743550d43d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4b4f85b0-7450-48a9-911d-4e4ea6f1497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d36f08d-dfad-4757-b835-f9e0391cad4e",
        "cursor": {
          "ref": "47f522e2-89fb-4105-854d-b6320323ebc6",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c9f6c0d3-8d39-43dd-8f76-fa5ca152e989"
        },
        "item": {
          "id": "1d36f08d-dfad-4757-b835-f9e0391cad4e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "89622e50-24b3-4374-9d59-040048530c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8313bb-0ea6-45b5-b06a-a11650dcdaaf",
        "cursor": {
          "ref": "3594e219-8768-47f3-9fca-2d94a6e3037a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cae738ac-3119-426e-ac0a-cb27b5eb610c"
        },
        "item": {
          "id": "af8313bb-0ea6-45b5-b06a-a11650dcdaaf",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b842f1c-7eff-477d-99e1-ee3375b16bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad5eb23-2b13-409e-99c1-66388631e46c",
        "cursor": {
          "ref": "dc4b7126-3e3d-4099-8bff-9a6e20839326",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "90c58b62-bb25-4dfe-b7e8-0b63c296ebb4"
        },
        "item": {
          "id": "bad5eb23-2b13-409e-99c1-66388631e46c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "623807c2-6372-4408-a671-b498b049dc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70bf18a-8842-4ad7-9e1d-b6b4232b963f",
        "cursor": {
          "ref": "49b1b937-8016-46c6-bb3b-2f31f5abbae6",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8a927495-6a3c-44c2-b77b-d461dee93e79"
        },
        "item": {
          "id": "b70bf18a-8842-4ad7-9e1d-b6b4232b963f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b6aea969-0cb7-4599-b765-c6ed99caa54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824ee49e-b794-4669-a145-f63fb14f3629",
        "cursor": {
          "ref": "af49c597-bb5e-4909-98fa-f5045ced2978",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5d38c3fb-75d1-4cb9-86bc-f3319da22c1f"
        },
        "item": {
          "id": "824ee49e-b794-4669-a145-f63fb14f3629",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d027463-9adf-47f1-a656-492e413ed9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92859cd-4cdf-4036-b813-2e543148a742",
        "cursor": {
          "ref": "95c4daeb-ed92-4d72-b9f3-1fca23e88800",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9d55b7ab-0308-46a5-8974-aee3b9c8d5f8"
        },
        "item": {
          "id": "e92859cd-4cdf-4036-b813-2e543148a742",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f96a787d-fe29-4cd2-a841-12f06456c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161d27f8-35bf-4603-b642-40f224fff653",
        "cursor": {
          "ref": "994daaa4-5fb0-4d20-811d-47537aee4dcd",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a1d8e9e-1ad8-4918-bec7-ab980188d96d"
        },
        "item": {
          "id": "161d27f8-35bf-4603-b642-40f224fff653",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "119f2dff-d79d-4625-a69f-b230749591a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4797f742-5c90-4fe8-a230-f41fa1ab6239",
        "cursor": {
          "ref": "6ca1773f-a9e5-49e2-a6a4-567721b4b612",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2b9b3ac7-6d66-4f94-9b16-ef8533884546"
        },
        "item": {
          "id": "4797f742-5c90-4fe8-a230-f41fa1ab6239",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8bc00b64-d68e-4bb2-a166-8e8fcffc5cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dd6000-47a3-4494-a743-3275943319ce",
        "cursor": {
          "ref": "41a8985f-75a0-4d51-9260-2f70c7f5f735",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8f8efe1d-6d30-4781-940a-5d65110e416e"
        },
        "item": {
          "id": "30dd6000-47a3-4494-a743-3275943319ce",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b988d213-ec46-49dd-8492-7ba33ff83032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c7483-fddd-4864-9562-d537176a7cec",
        "cursor": {
          "ref": "937b3e29-88af-4a72-972f-756ef550cbc1",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1da0d270-f9fd-4116-ab18-450ae68ccbe8"
        },
        "item": {
          "id": "b53c7483-fddd-4864-9562-d537176a7cec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3404072-a3c7-4743-bf73-221be204476c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dc4db8-3d23-4e5b-8049-b2fc282bc952",
        "cursor": {
          "ref": "df24f8ff-b63d-4c7a-b567-26f4d67c4492",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c76dbb11-dfbe-4742-af82-ba751dec281c"
        },
        "item": {
          "id": "91dc4db8-3d23-4e5b-8049-b2fc282bc952",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f594ecdb-65df-4e40-bc99-01ac995b7c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87dbc03-a2fc-416e-aace-c61f1f854903",
        "cursor": {
          "ref": "1bd872b1-eb7a-4319-9fcb-6f7397ab30ee",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1cc41324-c673-4d7b-9b8f-fce791d222c1"
        },
        "item": {
          "id": "a87dbc03-a2fc-416e-aace-c61f1f854903",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "af9b5d57-8748-4054-8a36-033862eaa353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cdca59-4a4c-4607-84ef-0a4613f212bb",
        "cursor": {
          "ref": "496c663f-3182-4d89-bdc7-0e7184e96dde",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72ef1443-f93b-4293-a0f9-e72a1c52b0b2"
        },
        "item": {
          "id": "f8cdca59-4a4c-4607-84ef-0a4613f212bb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "46a3e6f1-1233-46e7-bc26-b120f36e4754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ef310d-be10-4136-bb0d-a00c6013ebb2",
        "cursor": {
          "ref": "b8858b8b-2e30-4656-ad26-af4b609fd4ad",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da7df2f1-bde3-4380-ad6b-d87df2e4b4bf"
        },
        "item": {
          "id": "12ef310d-be10-4136-bb0d-a00c6013ebb2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c351a40-c6eb-4b20-bb7c-2bb88aaeac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46d37c4-8b7b-4466-86f0-e3ace8a26856",
        "cursor": {
          "ref": "e785340e-9bed-4efe-80b6-054009afb2b3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3eb03e2e-fe2e-4713-a743-192252d6478b"
        },
        "item": {
          "id": "f46d37c4-8b7b-4466-86f0-e3ace8a26856",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4a17ae75-44a4-4994-8ca3-98c28dec34be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcebe1f-e662-4d02-8236-14b647268a24",
        "cursor": {
          "ref": "80fe8f15-7c36-4a02-9e48-0d4927befba9",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f8967d08-7ba0-4212-b257-6f5373dbeed2"
        },
        "item": {
          "id": "6dcebe1f-e662-4d02-8236-14b647268a24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "56c85cd8-6f1b-4521-8ef7-85ee1388364a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749435a8-1ab8-40ff-a40a-7d08ff053baf",
        "cursor": {
          "ref": "565b1cde-7582-4c39-95e7-e58334f71c4d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a2f4b6cb-b56f-4fb7-8798-d9336e757981"
        },
        "item": {
          "id": "749435a8-1ab8-40ff-a40a-7d08ff053baf",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "99463ed6-d847-4152-9547-14f36084e897",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e5c007-60b3-4e4c-bfe2-9b956e9f8ba3",
        "cursor": {
          "ref": "3d9d74d8-4320-47e9-a22f-b8d5353b9915",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eb3abfc9-e039-4f4a-8090-e25086ef14fc"
        },
        "item": {
          "id": "d6e5c007-60b3-4e4c-bfe2-9b956e9f8ba3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c3163658-f061-48fd-8fbd-cdcc9ff7d08e",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "36113d7f-e63d-47cf-9ea3-12032a35e66d",
        "cursor": {
          "ref": "d309783c-5421-4ba5-8cf4-a1ce4c6c1cc3",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b9795102-0e54-452d-a16d-216ded089623"
        },
        "item": {
          "id": "36113d7f-e63d-47cf-9ea3-12032a35e66d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "09e98dc5-bf73-4b27-847a-fa29ed0acdcc",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9656ee-9954-4fe8-a950-df1277fee5ee",
        "cursor": {
          "ref": "7acff548-bb86-445d-a3c2-a5181e4f332a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ca8cc5e8-9e4c-4389-a1e3-ca88788956b2"
        },
        "item": {
          "id": "7f9656ee-9954-4fe8-a950-df1277fee5ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "733f206a-ec5f-4966-a49b-4d368fc3ac80",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
        "cursor": {
          "ref": "fda8a737-923b-48fb-a694-0b0ade287d59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "80cb4c25-da20-4b2b-b308-efbfe17d79b7"
        },
        "item": {
          "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69db39c-9f15-4ee1-929b-d4cdaf933916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
        "cursor": {
          "ref": "fda8a737-923b-48fb-a694-0b0ade287d59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "80cb4c25-da20-4b2b-b308-efbfe17d79b7"
        },
        "item": {
          "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69db39c-9f15-4ee1-929b-d4cdaf933916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
        "cursor": {
          "ref": "fda8a737-923b-48fb-a694-0b0ade287d59",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "80cb4c25-da20-4b2b-b308-efbfe17d79b7"
        },
        "item": {
          "id": "2ea82297-5e56-41d9-b1f3-ad77e19f2d48",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c69db39c-9f15-4ee1-929b-d4cdaf933916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f460eb0-77ff-45a6-8a44-4f425d1ceb2b",
        "cursor": {
          "ref": "68d09d60-793d-4ed5-929e-afbbd560be01",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "372b8529-6042-47e4-964d-55986d97ea3d"
        },
        "item": {
          "id": "3f460eb0-77ff-45a6-8a44-4f425d1ceb2b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "45c4785e-b5c7-4958-88f1-657f9120473a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea74747-a52e-4f27-a86a-3eee3e542b7d",
        "cursor": {
          "ref": "89ada67d-8a68-426b-ab92-db2d15b4f372",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88fb4cd0-aff4-419e-bd45-ad85c791b5e5"
        },
        "item": {
          "id": "4ea74747-a52e-4f27-a86a-3eee3e542b7d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83f5924e-ec92-44eb-be3c-79d45a51843f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea74747-a52e-4f27-a86a-3eee3e542b7d",
        "cursor": {
          "ref": "89ada67d-8a68-426b-ab92-db2d15b4f372",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88fb4cd0-aff4-419e-bd45-ad85c791b5e5"
        },
        "item": {
          "id": "4ea74747-a52e-4f27-a86a-3eee3e542b7d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83f5924e-ec92-44eb-be3c-79d45a51843f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f97a91-9a23-416e-9310-36a0bd64868e",
        "cursor": {
          "ref": "66b6a8db-e6a6-4d09-9203-75a50d6b9630",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e2281ddb-bc5d-4cb1-8eb7-75cecdd9f287"
        },
        "item": {
          "id": "e0f97a91-9a23-416e-9310-36a0bd64868e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "76f6d49e-f9fd-41cc-a349-36072d347a9d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effb879d-3b59-458b-a014-d29be8284c8d",
        "cursor": {
          "ref": "77eeaa3a-5801-4cd3-8b27-d165797faeb9",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8a73ecf7-9967-4c2d-9b88-7b1702efa197"
        },
        "item": {
          "id": "effb879d-3b59-458b-a014-d29be8284c8d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "23ef7c97-61fd-42ee-9722-28318996cfed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effb879d-3b59-458b-a014-d29be8284c8d",
        "cursor": {
          "ref": "77eeaa3a-5801-4cd3-8b27-d165797faeb9",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8a73ecf7-9967-4c2d-9b88-7b1702efa197"
        },
        "item": {
          "id": "effb879d-3b59-458b-a014-d29be8284c8d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "23ef7c97-61fd-42ee-9722-28318996cfed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd821b1-9ee0-422d-860b-db048e67814f",
        "cursor": {
          "ref": "3094d473-bd23-403a-94fc-0e6e37076b01",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a1de8ca2-8199-487a-82a6-edbfcf6eaa86"
        },
        "item": {
          "id": "bdd821b1-9ee0-422d-860b-db048e67814f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "223d47b1-52c2-431e-a360-5b7c082f0d2d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}