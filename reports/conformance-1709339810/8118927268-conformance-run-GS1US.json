{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f3c73538-0d48-4077-9a2b-c529fabeba27",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6224904e-2755-4af6-ad26-f60d17b28cda",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "957232bd-efbf-4a54-9ca5-f9d67ff0c313",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "71a38fe0-c50b-4ce2-aae0-9481867fc632"
                }
              }
            ]
          },
          {
            "id": "acf55cc4-0ea7-44aa-858b-cfdb81c787a4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc54fa75-89f6-4d87-b6f6-1674690af5db",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a70118ad-a1fb-404e-a7ef-1160fc03b834"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "75e8f845-ca03-4064-b2dd-dd63ddf07916",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f49058e8-384c-4b88-b42a-5f581e289913",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76fc5476-bbae-4f03-be38-86225f841cbd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2efd20c1-b920-47a9-81b1-9a9e8b6748c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e92722a-3f5c-4b48-9505-a7b16c89b027"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "799634e0-49c3-441c-982d-e50f6f61e7fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5df0e415-062d-43b2-96a3-58ac90715431"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "88051c33-89e8-403f-b102-b05067a6fb5f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9578f4d4-bbb8-418b-b6b7-a736e21eff31"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e8b6421-0555-4880-b1d6-3d062365bade",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9a759479-4e43-4caf-9359-6c1cd5e75d93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd3223d7-27b9-448a-89c8-6f559d9ea294",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "330cd33e-ccc0-4ef4-ae66-87b30f491e3f"
            }
          }
        ]
      },
      {
        "id": "54fde664-ad69-48f9-a594-b750524f0812",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "20b48a89-c98c-42e6-b06d-f8d9dda7990b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88e1c69b-30ee-40c4-aed1-5b2342da942f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a090f75e-17d5-4e6f-a3bd-9a4af3084cf6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43687663-6caa-4a83-9f6d-a09513141aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aee5ca5-873a-46ad-83ff-3d909be7c4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba342a3-ffe9-4640-bbeb-6eaf6c941646",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f4803a-b7e3-482a-b3d5-565317ec6768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cc1b6c7-00dd-4b09-92aa-3a2e05f42797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bacb225-251e-4643-91c7-6daba2d01047",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015ec3f-cc11-4892-b949-ab683933009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5a20468-e585-4c61-8495-6231e7afb7aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "017c17ef-f04b-4d81-90a0-dd59926d4aa6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a22505f3-7abd-4635-9fe5-59d73c1a880b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff0e46c-4c50-40f7-84c1-c07d99825890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233b5c2b-72d8-4ce4-9c50-72ced8b96c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7453d6f-28ed-4471-bead-d25e7a33467e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989fb761-5dfa-4185-9c07-bb335945b173"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c40fd264-726f-4453-999c-4fce726e7f0a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e36e4fc-c8e9-4384-8a76-b6c918f29f78",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff1adb8f-d4e7-41dc-b207-189efc6e0e5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1ca50a01-2ba1-47ca-a5a8-3ff27cfac237"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02bfe787-34e1-4a41-9bfe-1e11895ebb9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bff2e68d-2c80-491e-94fd-07b1025d1dfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69d19f39-f86b-4e96-887c-8ca74604ce01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac4b0aaa-dfdf-49ff-a9a3-0fb0c61f53f9"
            }
          }
        ]
      },
      {
        "id": "6b174318-0a96-493b-9a7e-9d60a3cce1c6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "248a5423-fac0-4fd8-867c-4a9bda93739a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c2ed326-aac8-4705-a341-43e1bd5efe2e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae0b228a-e373-45c6-b011-5f7eefc4dd14",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c61179-e0ec-4b62-bdf2-91d8453147c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30cb46b-6c16-4fb2-8f3c-0cc3013c3962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86352920-1b90-4a91-bf48-772462c32f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c05653d4-be68-4b54-829c-b07080d2f6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a61989-afd9-4d29-84d2-eb6808de35bd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4c503e-2ddd-43a4-97cf-51ebcb600bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87559ea5-f835-415b-8837-1b016ce4434d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b49f862-f5db-4fe8-85d2-cbe61059d99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0455c819-32f4-4d6c-a7b7-2d996809567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276d01b-5122-4dd6-931a-6a39587a4efa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50747716-2d60-4583-a19f-23ca82d6c21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26244084-b2e8-430b-a1de-6e7186f9c186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3da9cd0-07e0-4810-a6f7-47ed318c05a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e08944-4559-4659-911e-11e684e6c1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304a2a08-128e-4b12-9025-9be3d5b06ac7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f36f0-959d-4f13-accd-3ee32ae3dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e2c91-1d51-4a8a-a3c8-38050c7383bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44112c55-8c55-4b8e-9fd5-a4ba51469a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cc6f1fb-e030-4084-8e19-78eba6609a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad71c059-8891-44b9-a656-d5159588c5c7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee95bc-16b6-4735-8208-5bd40b61949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f9edaf-8292-437c-9496-62002dd1a7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6eff4ed-0e16-4d89-9e34-85ecec9cd442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d987c1eb-217f-4c1c-922a-498176a8ef80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4478a91d-0a6e-4076-97c5-71bee39c6057",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccbe907-d5d7-44d3-9578-36ede2779682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ababc18-17c0-48c5-adef-f26c65439121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e06e79-addc-4b5e-82b9-b5a5bc76c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e62b12d6-da7a-46bc-b000-6e1c59bee57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869a80ab-9342-418c-a0ed-2df5e334dd97",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93021b20-6ccb-4fe5-9d75-40b6b05d3c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab91703-506a-4b93-ba0d-de6aa4b5bbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6212ec-2f4b-4aa7-be40-c752b19e9be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce214f8a-8220-4fa6-b186-1ea617c2fd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44825000-3313-482a-b549-539750a227a6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0b936b-9917-41b4-bfac-14bd9129cb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bfaa60-5324-46a2-b7a4-b1689e34ff7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9f57b-edaf-4c0c-87d0-552017ad0f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6db4034-7f7f-4c72-b159-d5c3aa8f4ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576b6a7e-900d-4355-bd19-e8b3138f90fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead18e99-2991-4a01-9281-8514051d4f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d7ee79-ea3c-4c6d-a73d-fb7793c782fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6771f34-7b99-4049-a5d0-eb2fb919d63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5028f630-4ec6-4241-a8cb-6c4fd0945db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b81debd-501b-4331-9ece-8db6ff3b3def",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3be3722-2f13-4d89-9ffe-7dbaff4f2480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c203c61-c68a-4a9d-8f29-a4d5f6ab8475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838e4f22-f7ef-4a91-9d01-43305ff0e2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd607b0a-f2d3-4ed1-9d75-e28f21afad74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddef6ea9-9409-4c26-b922-5b0e2f789edd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456134ac-bf9c-4a65-a316-b6b56b07f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedc861e-bfe8-4393-85bf-739635b80a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937f8444-3f2a-4960-8352-74cd2a85b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d18df77-aa54-4707-bfd7-9700d329c68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef90d07d-44bf-4443-8ea7-9dfd4a211d5a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcdc4f2-9394-4529-911b-bd98d36e1442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a4ec47-95c8-46f6-9887-48121a913dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15554d4-9568-47e6-8f60-11517017af06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3579f64-c8ef-46a5-8e1c-1be18156bb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecfb94a-3653-4b60-9386-4275b9382b74",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5ee76-0676-41d2-98b4-8cd540acbb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1020c0fe-f653-4269-9773-129f983bc3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61a8181-0ee1-437a-812e-2d8048260813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c29fc6ae-aadd-459c-922e-a32e1fdff731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4026b0f6-2367-42e5-bde0-40d5f919a7b3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8c5da5-7554-4642-9fa0-c5808552c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80ed26a-45f2-4aef-b932-273bb94ec33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d5f256-3af6-4589-94e2-c947d171ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e9a52df-a30a-4459-8736-a20a2b3335f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210c70c-6569-48df-99b4-40947a5b3874",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a27eea6-57c2-4496-a186-70da4bd96fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e3ae1f-dbde-4637-8614-742bb12b2ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab58c4-54b0-406c-a911-236a43245d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27e08a03-7073-4831-8f33-b4ff8843362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caba73af-5c40-4b71-b6b9-33786c1decaf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743d2f89-ac25-4275-96c7-5f266ae4a384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cf3deb-f456-44ac-aa75-e583789fa70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d0d85-81e4-4f8f-be8a-dd475833275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b6de838-cab3-4ca8-b68f-3cc3fc83d7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da64749-dd3a-4bf2-a2ec-bf1a81eb5025",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc1072-fecd-4ca5-b0a1-e7c6e0228091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d86984-7268-44e0-a60e-2a2d63ee7879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1848465-e1ed-4d46-80d3-f5a61da1c687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7430f91-2195-47ac-8074-ae8258803353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb326a1-0728-47d7-b2f0-cba386afc96d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72e0219-8760-471d-8fbd-7843f8c90351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf725d-8a92-4be2-86ae-c547ca0df86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1772d2c-3df9-4846-a848-d39f8c4de8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc73ac47-926c-4b8f-8cc8-1ebd7176f88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888974c-07b5-4aca-8b51-cdea082b8662",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3bee11-5e25-4873-b8a4-3733b607ce40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02be53f-c9b1-4af3-8017-e9a6a8119e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233ef2e-7a89-4206-9672-b0823a69c757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4204fc5-32a9-4dc6-88df-c06a1c04a48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e901b92e-ac43-430f-9b7b-be5e2beb492a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd02eb-d7cf-4316-8706-88f97238f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4e678d-95e7-4bc9-9ef1-34ae6b839cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517000cc-1f24-4c0f-a092-d543aa451521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6e1381-947b-4ae1-9663-e665fc53527a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43be074-d34d-4000-8fd3-128fac20717d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f15b3d-c698-4f0f-8968-09092b36bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e0982d-5ed6-4de5-b5e2-e5812577d97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bce732e-8da9-4b5f-83eb-d72a7b45ba85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a129c8-38ad-4f44-8269-368f3852ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f1bc24-c9a0-4c47-a54a-25c0e655848e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6047ad0-26d5-4111-a4b3-890ed9142842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e10b49f-8ccc-4287-a6ae-d234ee2e242f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6946de0-9ec8-418d-bdab-ea1aceebc59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6643e1-e7d4-4488-9d1b-5b0ca3edd7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160bb1a2-1898-430f-91af-71e644caad1e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c466c4f-e49c-408d-b354-612ebd81909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347d9dc8-b8a9-4348-8cf1-cfb997b6fc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9315181c-516f-44bd-8bed-552ac317f1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d828787-6385-45c6-88f2-208f7f7e67ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231c0e64-f662-4a8d-8707-91d20d731069",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a7151a-84fb-4764-90e4-613087680a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1afff91-dce1-4c0b-abcd-989e1b494038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a796f398-0e07-496c-a710-ce2775ca4416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ad2561-fd6d-48e4-b1ba-a9412c885625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1036c180-3b06-431f-8661-45dcb54763ad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36198ed3-8ac2-4e27-80f0-dce083ac6051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22917951-6f07-4166-90eb-3043b1fa317e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5efb81-b93e-4112-b0cf-14fa4660a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee268d28-9ce5-4551-9a4d-3014863d08ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad6a80d-ac1a-4220-b16e-d0a4ee398a72",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ceac5df-4033-4f6a-99d1-39a2bdb05c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1cf688-573a-490d-86ff-fbb32b866762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a52373a-07e1-4e1d-a19c-44004eed7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2455dbc1-e360-42af-bcbd-4813f4f60b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fae1d18-0413-4352-9d2e-d4631ff4c297",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac90954-172f-481d-9592-b0e44851da07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa29286a-7eb6-4105-bd5d-ffb561522eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d1b391-29dd-49a5-aa97-06ecd8130779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec823763-cd2c-4b55-9b05-26f5300ef75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34179b84-1597-4b7a-a6f6-1249a13dbc7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7b29c6-b4ab-41b1-bb8e-84f9543c5f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b8ab7f-9956-4f8e-b937-8cda3901b271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d8819-56f5-439f-891a-069453fcb26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6733d257-4204-47c3-9c36-849b567c4fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62cc30b-1ae9-45b7-aa25-990dc9052922",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f45aa-3f48-4169-980a-c1404e5b4a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7dd166-b357-4bd0-a2ff-efdedfdd4e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71d5003-b873-40b2-ba52-946f880b27a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d640061-1c14-4d34-979b-27de7bb472ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b585f5f2-9579-47a3-8bdf-909fd53bdbd1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfc3264-25dc-4168-b2fa-7c7953cb49a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3204dd6-697e-4264-bcf9-1331a4a0b8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df16864-42f9-4718-a2b3-86720b1f830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c52455-347c-4a73-8f8e-bd7f5de846ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aac02a-b1fb-4b8e-ab7e-2781a347a7a7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d648c31-f999-4d3b-ac76-f79e32ad0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d679d42-d66b-4c75-bccf-d6c333f209be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd109e41-4d35-41e1-b4bd-df8586faa676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac9f3e1-411f-4516-b5a2-0b4b3f1bb700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a57f541-a167-48e8-a90c-4ce508057479",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3399e5c4-5112-4b0f-8f9f-0d173bc91902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b103ec5-99b5-4587-a80f-18c53a41f07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d8e011-7254-4ab0-83ce-294b706f1bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8be1f59-f32f-4d84-b303-92c14af3e00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a822bc-5747-4d85-a14f-d8605303a30f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e10f1e5-50f7-47af-b29e-fc08f41fbb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520682ea-0a41-4161-a68c-ba8d132cb202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32690af7-931f-4deb-afe3-bb3a6ffba7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6388ce-4d5a-4e21-8ced-a88e6371b5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbbca6d-1a56-409b-b440-aeb4d4ea47da",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44904943-a9b1-4b55-97e9-acd7012c28e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd5e73-6532-48a8-85c8-69508d9917c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e44030-fdba-4fe3-bd43-0da26973bf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a46307-74e9-4ced-8f4a-5dac1b1e528f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40970154-cf9c-4a5b-b5f1-43816e47b113",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cafbeb-ac5e-44f4-aeb2-35921ea7dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ed1d19-3e06-4345-91be-8ef2ab0e54a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379a8cdf-4370-4655-8ef4-b299110b37f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc0173-b052-4f66-b9f1-3160536cce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ac2021-5e7b-4d59-8c4d-fbe75150d4f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2b8f6b-7132-445a-ab45-21ddc6c27079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caf944db-21ee-4361-acaa-0e7057ae47f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb4e32-63f1-4afa-a52d-4a99ac0f4934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f345d983-2a6b-41bd-8a52-172b76e756de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac037124-c128-428e-b8b4-1862e0c2fbcc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68214c4c-72a2-439c-b42d-84580e6143f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e060dd3-6ff7-49fa-ac69-506f862a8ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9460f2-1ce9-4a67-8559-0485c42095ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87395d13-9632-4cbf-951f-5530cd1f8b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a07855-91ae-4846-8e1f-69caa21aec22",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a31be1-f4b9-4614-b87a-48781df454b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477c6437-24f9-4144-93e7-1b32c63d9ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35ebd13-0fda-4c67-ac8d-640dd153d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88fb6852-dad5-4183-9cd0-2b764cec4af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a953c-6d51-4f07-a80f-2eaaa740f1c2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81807186-dc28-4de0-b422-f9aa8cd46f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdff280-135b-4869-b175-f1b684f72a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60caa72-eba0-410a-a835-4cf7b6103bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4189da-bc20-4a8d-8823-a1351d169e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50edb0a-095d-48eb-b79c-cce0e4142496",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddc9cfd-3104-43f3-bfae-08532a881b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de04a6b-8a27-4ff8-ad2f-d7983609f4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98b4d5-342b-4eed-a1bc-130dfa4f4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66bee99b-fe17-4950-aea2-f9e0e0cb1536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3738193a-d68c-4e8b-bea6-e5d82416f004",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed34317f-59fb-4b1e-b8b8-b59709721cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7625f6b5-fc37-49a5-aa65-90272604e3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aed38b-98f4-43d3-97f4-7724a88ca06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c88fa3-0bab-4cb6-8182-cbab7b90f7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10054c4a-08f1-470f-b96b-d424a951ece9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ea5220-8261-445c-8cc3-e3ee620aeb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ceefd3-b96c-42a1-bb30-723c8eb3e8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d86d7d4-22c8-4c9b-b683-dc259ffb248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18947961-156c-49f1-b344-1fbffcefbdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc4ac22-e3d9-4753-9a55-e2fb7f9886ec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac043a-0123-4e41-b5a2-9f71b533aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ec1a48-d854-4685-adda-05b5b9e1e4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8265da93-66b0-4e00-a85d-bd4402b304af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d677d482-7e6e-4f6d-86f7-e9cec2750add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d10aa5-cc30-43dd-80b1-42389d4565e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c394adb-4dbc-4042-9974-52babfe926fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597c535f-aefd-403c-8565-253dd3425812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6214b1b-d703-4bc3-bb7d-cb790d40cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "240cbad3-b1a9-450b-a4d5-ae9e809e9884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d38cfd-65a5-4d69-ab78-873976960b2b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1671a82e-4bdb-4558-af8b-3893c7854c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee58212-fb49-4e1a-9459-18ad565552d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb94bf7-981c-4d5b-9b49-060c95c640af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e69a6c-fec2-4327-a654-04af74aed50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc3b7e8-553f-4a21-ae1e-c765f5597174",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b230011-6098-4c54-9c20-86bfab1bca0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f01159-97a2-4a7e-bf5f-4f9ef3db7023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458359e0-b3e5-4d02-b4e2-f235ddb515fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b066a32-2e5d-423b-b97b-f0c895102b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354e6396-1f5e-41a2-a422-2a6d4a452605",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2f790a-084f-4562-b188-9d120fc0baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d494b25-ba90-44d6-a254-fd415b063e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0de9f3-3546-4338-b986-b8343bab3367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddfd1f0-abb3-4fe2-b2b2-82e32ec91b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029f835c-3f9e-4af3-bb9e-bf2aab6ac36b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064591af-0a12-4e36-92f7-96888cf22cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73fe745-20f7-4d39-8a0f-303b4aac16e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae83de6-2ba1-4054-ba82-92bac4a58b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16da9184-bab5-4fd8-b024-36deae45a7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615aba2c-3ebf-488d-b3d4-c4098dae9181",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11158590-7fab-4fb2-9035-c436bb1039a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5c19ad-6da7-4f5d-974f-a52c638088b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce9129f-b361-4b75-9d46-f3d32d3e2374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03dbfddf-a4d5-4d99-87ac-1ce21f9be8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63be2603-f6ad-407a-8438-084026fa25dd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22bf6b7-db9b-4f01-a8b3-7bf5b1e968cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5149e8-8815-4828-806e-aea7a128a4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94144e71-44b8-400d-8c0b-5ab3cb5eb2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93783ec9-38cf-41d1-b2d2-28b70e818f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282b280e-9cc3-4b04-a289-046252423520",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6586301c-aac1-4aa9-8ab1-22b45f8e4435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a48d70-b01e-400b-940a-fd5a9db439a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d64a90d-559e-4ba1-bb9d-2e2e23e4f420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14906b1-96f9-42d6-b59f-db6f60f9b14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c9940c-530a-4bbf-b844-c368cc5c61df",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71e9c73-2ac7-499e-a2d2-0448ebf4fd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76530a4-a7a4-457b-8509-043196ac57dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e90985b-afd4-495e-a0bf-3b77161d80fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1371067-ed11-4c54-86a0-e2998785a6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c205175a-1c0f-4d34-9d1d-cf13fcd7067c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bf64c5-eb69-435d-8e83-02740f04549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794f845f-e349-47ae-afb6-809df0613c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5c7ab4-1436-490d-9a8b-004f4b093d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5516d0e3-e6a3-4d1b-ae7b-4105bb3e421f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f331426-7fd5-4088-a15f-dbb66bb209ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f90a65-d587-42ca-8efe-8011c0115f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae29654-624e-41ac-b8f4-f81b9e258a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9633fd3-5d08-417d-bdde-5c317c0f8c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54460b9c-e3f2-4898-ae7a-4552c280ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c8d226-9d78-4665-b0e5-c54a3e729f67",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0bbf25-e914-46af-bb54-dc1e0e79771e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790aa973-16d4-48d2-9c27-91d0038ee615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84de2c29-d9db-4ef5-8967-5c12eedc3eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "766dba49-f484-4b12-beee-c77f8b4efa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0065c295-9741-4710-a420-0733790db805",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5c6401-fc76-4a49-8a07-840390a4e0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd76484f-0e19-437c-a83e-ec5fc07c1122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bf0466-5999-4ef3-a39f-bdd078a8c395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "294fdfde-acb1-449a-b6af-d738cdf68ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ca217e-fb66-4537-981f-bd80406d3455",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebbe9e9-d48e-4fa8-893d-a4c192d2d189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7918ed76-2ecc-442c-8c55-f5b73444ed3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefab5b9-009f-45aa-9a7f-d13013c3c336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c1ff75-5199-41db-9da2-396d23eed605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d6f52c-e4f6-4a7f-9c31-9e3f4bad2741",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bf4fb8-1899-403b-9bf4-00d6593fb8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d76d570-5fb6-4aee-bfbd-9384267149da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da80758a-1736-4df6-9f25-f24f42bf1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "684cc30d-f38f-4cf8-a942-67c8c5d4a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69a88b7-62eb-40e2-b030-9d4933550b18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66433bb-26ee-48d8-896f-f32aafce7826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81181da-e794-478e-8487-be6a17ea4240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da95ee7-4259-4367-91a9-034bf1df16d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef53906-4d8f-4f35-84a9-25bad42a5e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4325dd-88f5-4231-b3c0-256105eb6d1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5457921-8e72-4c1a-bda7-71f146d98a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b005bd2-d3db-41df-982e-5037e4a5044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ad3e6b-d5ab-4bf1-9c89-66c728987658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd05fe0d-5eb0-4a59-a0f8-0fa032d83123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4327edb-ddbb-45e3-abf8-484f11cac05d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b644ac8-fbf1-4a38-9c9a-6f4ffa004645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b866c1d-1a5a-4733-b76e-62339ec9b046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dafd65-ddfe-48f3-bcef-af7177977b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da087b1f-42dd-4709-bf6e-0687ec0bb8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa87ab98-4635-453a-9cdc-b4e93f3d3829",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f854f5c2-4528-45ff-9c92-b224aae4e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb81737-789b-4fef-a0bd-2fa2540b7633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff8275b-0f14-4c3e-bbc9-a5b687a3c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da58f16-2f90-4798-af18-c1e913a41544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a6a8e-93b3-4811-b8bf-0a5eebc02af2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9564d2c2-6b27-4b36-9850-a023f41e5155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6bdcd1-53b0-45c9-b082-cd8c541e802f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9d6226-ca41-457a-8e4b-5fdcb6c1929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb52af55-f195-4851-a842-7944a320cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eee6577-b930-470b-81d1-43016a4f54ba",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b760ef-a334-4c3b-9c6a-f6bb0d0a201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5835d8-c8c2-45ae-ab9f-b051698ec0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6899bca6-05a4-470d-b07d-2b8a92766782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca6fa9c-6ba8-4e2c-a40c-3fd77358a3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9280dab4-f47a-4807-80d6-d5368d907a97",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e23a5-292c-4032-960b-74527782049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8987e989-28e7-4452-bb5f-117ea70a4c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9000ea33-581a-48b3-ad93-66f5dc5cc87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a35794d-1ece-4237-8c59-9b2a51b32de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a527ad0d-1b15-4756-b5a9-358ff49012c9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d2c5bf-ff61-47bd-9fa2-735e85539e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df57e91-adb9-4a07-853f-bac3390938d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a538da20-d762-463f-bc4e-2c6ed14a0b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ef1e0d-5ba6-465c-a5eb-1218d7c2a122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c8bc92-45f3-40a3-98c8-a4e6f5f3fb0a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f921a2-c533-40ab-831e-b3ea62e5b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17605fee-0b81-47cc-9cf2-3fafbafe47eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe39d5c-cd12-4076-bf9a-3919e3cd8569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae71d5c6-e186-4194-8918-dc1dd140f9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ded139-dc5d-4474-90fd-4f638a3f86ad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82134a33-6efc-48bb-a3ee-a12fb72ed0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317a4a1c-e4ce-483c-8708-6bd3da283f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0894b31-86da-4432-b3c0-7873fd31a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9417a012-306f-4b80-ae46-5b27afb66add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255ce3f6-6b8d-4162-8f9e-eb62a1e1ca61",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331da54b-6e62-4a05-b9a1-2ec5eddb6ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05373b5-6d39-49f2-a6f4-5e4d0e7e31aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2809b3a4-c7a1-4715-8c20-29eadeeab732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "896bb865-ab15-4480-93a7-bf50bba30de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b53115-04a3-4786-9880-807604911eeb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1966de07-2eac-4207-813e-acdd81abe006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5f9d53-903f-4fad-9bc8-450e8e654869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c668fbd5-0104-4ad7-ba75-c079cfaea403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b055c4a-9101-4ce5-b7f0-c70c660917bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae9f712-e0de-4915-8f04-868d156f4d07",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73b8e0-83b0-4f6b-a748-213e755cf631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc7a715-129e-47a8-ba2a-a7e1806d4bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9083fece-de27-4a28-8c30-136d0d99821b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b11acf4d-591b-4d11-9475-79376531c712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb76fc1-5000-4838-b64e-b05a885bd1d0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0ffae5-9a6a-4a35-a082-7aa0710ca92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7adf49-5da7-4540-9ead-84f942f2d1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c17d5-1a67-4269-84b9-ab0d18f44468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78144c5e-3430-473b-bbde-4e3f627c5278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb0467c-67e9-44f0-82f7-1a3473ab43d4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8745e8-40a9-4d15-81e5-4436e6053c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fb5e06-2e07-41cf-a20b-ed9d0177e122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3265181f-f384-43ae-8f6e-f2ebb10502c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1245fe28-126c-4673-bd1b-867e42027110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb2cc06-2f8b-46c6-8e45-06b35dd34c46",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7980a4de-9297-4011-8c17-b74bd778d79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8113a61-27d3-4fd1-af73-ca11236807da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6287b-35eb-40b5-b960-eb3969e5d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c76cc880-fd62-4c7a-8bb0-4db1e16e2f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce05c04-20c7-4caf-b8f2-6e09f8bf6205",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecf714f-f8cb-432c-a312-7b1a16ae7ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8889ccc-631b-4e85-a294-b319acd62a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe68c7a-6e6b-4c04-8845-6624d6323788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b7a95b-c7a4-496a-aebc-83bb501a6dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27f9d62-26a7-408a-aa80-ee98f8a4d438",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0281e895-d6bf-403d-ab4d-47da452aa763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6f89a2-6089-437a-9401-46fe50a7ab79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8142287d-432e-4622-84e5-8f97e5fedf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d14fd9c-a3a9-4981-af85-b73f74506e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c09760-cc9f-4093-a5ce-44629f84e14f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e22b73-7439-48bf-8861-b235ab86ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d71f2a6-582a-4a1c-8b84-2623bd3b5d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50121309-6949-454b-a0e3-bb8095208d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67f2a99-8818-44a9-97c6-032ddd886e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ca8ac5-0dd7-43d4-8af0-9df05514c9f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bdda84-df7b-4331-86b7-c7774149cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77aa9e6-e1d2-4144-aed1-165abe9f3c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe59670d-9815-4f92-8cf9-d8ff1eb42f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d8ea7e-ad01-493b-a511-1eb7e593bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150385f9-d567-4df8-b84b-79619bd2ba72",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57631a64-c2a0-4d56-a66c-2f400e72459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f81941-81b4-4674-8837-57900e81da5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3323c83-9f8c-4012-8703-d8540fedf030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be09ac8-93e7-47f5-b42b-659b3e98ec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25587727-fe0d-471d-968d-968772f75239",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2116195-d32f-429c-ba28-94a8624fefc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c48329a-92b9-4f76-bdec-0d23fb403b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8e3b5b-e891-4081-a0b7-2847a6a442e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fec85726-6dbd-427a-b835-3b8213b86d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38131ae5-0409-4dd8-b675-ba04ec14b950",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2408747e-5516-4054-9aad-3fa17b3c8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f5470a-fc79-41d8-997f-5ebb5eeda118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6565924c-389d-425f-982b-26c3155da05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "002e2675-e1fd-4360-acb1-2f00d6df0216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50681e00-35ea-4898-9417-aa897927ba08",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083eeea1-9d93-4e2f-9e36-c76c9c7cffdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6901686-2f60-4a54-b8b8-4aadb7fdbc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5df20a0-fab1-4380-ad00-db16e2ccb9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca1e143-13af-4556-bcf9-37c45f2ebc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89313168-b842-4749-a8bd-0e3f71e981e0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5afd994-905b-4307-bf13-ce8acd62156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5599105-95a9-4b23-ac06-76260413f31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dfba91-6757-46b1-a7b9-91ac6dcd29ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2646d84a-f708-43b3-994a-af4c3fb93610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e02b8b0-e398-427a-999b-b86d6c280609",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43904e67-57ab-4fb4-a7bb-b00f9e20a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81709369-638f-4aa9-8d91-6349709dde59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c818fd7d-2e5c-4d0a-8aff-ca7966a18220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82782d7a-fc87-4005-b6b8-c13bed9ff56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9578d06d-6218-4b34-9759-ae2b6f04204c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e71402-9de0-4391-a8b1-f23d33a81c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146b3bf6-febb-4979-807e-d26313f11fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5630c850-a682-4995-bb78-28d2d2c89fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f357cc08-8c40-4876-b697-e95a3499d5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3edac3-054a-44c4-8285-8a12af600baf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba1ffa1-ea24-42eb-a325-fca2d46fc8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563b5f41-1c25-4887-94b5-b9007a51cc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83346fd6-7ac1-42a3-9ff1-745fdd189fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e240e67f-563b-49b0-b269-a6edc15f451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa582b4-fe17-4afe-8951-02f55a7f8db3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f15569-a287-4453-87ac-925592c02c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62b7a8e-b51d-487e-9088-8e4739267272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acbffdb-4183-4fe2-aaec-570763c49fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d85493-0060-4ec5-b7fb-24fbc3c6debe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbdb256-b24a-4de6-bd11-c35c48371e5f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec61e88-8a0f-45e6-a4b3-4c9e9a8854a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e936b127-8587-461b-9b99-a825b5e7c348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb3b4ae-3ec8-420b-9a76-e9b683033f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f38e70d2-d110-4994-864b-c4441190e10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5061a-5c60-497b-91d4-90fba865f11b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b611c1-3d83-4a9e-8144-e1b4116a8782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a66009-6ebd-4d5a-918b-7b8f9c1efbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e414710-b46d-4555-a9d5-4d83f13030fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e88a5000-f6ce-4e3b-a16d-3528c57e0027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc2a8c2-0bb2-4634-8878-c68993e726d2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5faebed-4449-4b0d-93f6-12b8659b5a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252fbe69-f667-48dd-b700-ff068cb254c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e545f-3579-4500-8471-95da2148dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0693a90c-a20c-4d9e-ae3c-bf81f25a4f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e17be7-38a1-405b-bae2-c6cdf72a47b7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a1629d-ae0c-42ee-aa30-44f1557fa623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ac1ed0-b96d-42d9-a384-d25f0298b51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba326b82-5696-4069-bf8f-059674e2e571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffba8f8-a4e4-44ac-817a-6adbda51dae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b9ebb2-979b-47fb-bf28-9cecfed239db",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e38c6-f9c4-4c6a-8d00-08904e2bed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e4df001c-a354-4a95-a7ce-36ad961aa63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d671791-2090-4481-b1fd-6cad99b433f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "58011ea0-a151-4137-8471-d8285103b3e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5600db47-b9ec-40b1-923e-e5b5a01cc978",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "309982c6-235f-466c-b52e-e5b46d5263c0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1998c81d-fe26-4ecb-b3f0-fded682cee21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82e47bed-af58-4533-bdd1-3250231a81ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15ff61e-7037-42cb-89ed-1587ea3ea6ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f6e552d-87d5-4630-bcb1-477fc33b7a52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01c5d35c-e842-496c-b8a8-950e23637a17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24200efe-fac4-409e-81c4-34a9c8770888"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b742cb7d-fe54-449b-a51e-b968e431827d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c3e361-fe6f-49df-9ff3-faec610d1bd5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cc2a8ef-67f3-44c8-8690-6f857f925a33",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15ead94d-859c-41ba-88b3-aba96829f51d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "749d18a6-b7c4-439d-912f-2b18927b7ffd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e008d80f-0d42-471e-89eb-44c42c7dfb89"
                }
              }
            ]
          },
          {
            "id": "a40b33b4-7c90-4580-bf41-93aa0ed578aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f14255bf-f634-401b-afd9-ccd20f953e75",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "25d68955-132f-442a-88f0-a8146e262474",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c3bbfe-8506-4eae-88d2-75fc90dfc820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b18bb80b-026d-4188-b3e9-87aa13bcd319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c787604c-df6b-4bc3-bcd5-f5b784c234cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b6ad24-003c-47f3-ade7-a681e80fd521"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "67d6116a-836d-433c-b7b2-e71e133c92c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc1fcafb-a5f6-45fe-ba69-5917da550cf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38fe79ec-4364-43b7-8645-2c668c906846"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0935d9ce-6951-4d45-a9c9-8581fe62b438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b08feb1-c759-4ee7-8e5b-db6d7619cf19"
                    }
                  }
                ]
              },
              {
                "id": "d7c679c8-a4d7-4a1a-bd06-8332c4d66a8f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ff2f9d3-c6fe-4712-bfad-c3fe0718578f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1bed81b-fae1-44d0-8160-09e8e600f5d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b8d9cc0-8009-4126-a942-572f4be29d67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7925df1c-9d63-4c22-824b-dbfa9a8e5e80"
                    }
                  }
                ]
              },
              {
                "id": "5d7d03fc-b944-4bf7-994b-9d1a73c3fdbd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d59754d2-a578-452d-9b0d-8833b0329631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bca24022-e1cf-4b79-a534-92c0c9686d0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4ddb52e-31cf-467d-b281-617225a1433c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44139fea-dea4-4763-b9da-5c22f0e4fc8f"
                    }
                  }
                ]
              },
              {
                "id": "7df5aa7d-b947-474e-9f1d-d9d013070b81",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ea83e2-1330-4f46-8693-b0deb6f8be83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6b3b8b5-724e-4dd4-ae4a-9ca0f1b06231"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6d4172d-fe86-440b-98a5-689f916f43bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "946d5819-7dc2-435d-8b89-de22b55b7154"
                    }
                  }
                ]
              },
              {
                "id": "9fa6ebb9-46cb-4db0-984a-011e8ad79b23",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f9315ab-f6f3-4805-9853-477e772fa90e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a785109-d2de-4cad-b382-c7920c3dd16f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dca5f8a3-91f7-44b1-ba95-19de446fe058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ba807a0d-8f6d-45eb-8cbb-a0f9c57aef5c"
                    }
                  }
                ]
              },
              {
                "id": "972b74d0-6d21-441e-ab60-1a167e43ec69",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a9b01df-85d2-40cc-a1ab-12226412308b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d78d565-5924-4f48-9bc6-d80e1eb24f83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e039a52-b24a-4d90-8024-0d871109c500",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05962d86-8f2e-4d4e-b772-c7813d352977"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b2d5a9f-7ec9-4637-a8b3-f5715e7d27a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86efc0c2-39b9-41b9-8715-934a486684fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf15d82d-1f99-4b48-8812-4980e5ab991c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce600975-1e83-429b-a10a-6cd568907b5f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c2c950b-dfd1-4489-b408-25dbd8d88098",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "690d5e52-3e18-4c72-9ee5-c5f24446e0d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c938a143-3ed6-4dda-bb32-9daf369cdee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31399740-feb4-4291-abb1-c4ed2ead8d22"
            }
          }
        ]
      },
      {
        "id": "b2dd7654-dafe-4587-a6eb-c790b9ad80a1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d1f4d58-2908-4f48-b556-36269360699d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72b0d213-0a77-44e3-a038-af2c9bec146e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe9cbad7-b80d-4e63-8ab4-401c8594540e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12277406-b72d-4532-b894-ba57984daedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c385365f-997c-4cfc-98ab-03e8689ba948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a000d3-86bb-4ae5-a51e-34342d9e85bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "85b8735b-1885-44b3-bcf4-acb6c0eb88a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86174796-18b5-4d62-8ca6-ff675634128e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b7fbb-af39-4fa2-91dd-7bd7482a00bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b644b2-4d03-4480-9556-f2b258b948a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a58fb3-12c8-4eee-99de-45d9ad45c90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d5c037-14d0-483a-8fb3-36a64e1f5100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8669fca9-8908-4aac-9587-b4e8ad891851",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0467250b-d633-4f08-a112-0fb6f65de188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665b527a-cec9-46ba-9ff0-811fa25c0c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28096b4e-c3f3-484d-8463-185463207695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9829cb-e19a-4298-8080-dacb3f99dd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebb505d-a047-4e20-af15-19adda69bca7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009e00f2-2e91-4176-8756-82ca0c3db971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8bcd11-0f3a-4fea-8600-614f73ff2fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa274b7-287f-4720-8a97-4c15e8c8af67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7006ff92-9ac6-417f-b40b-f9d08e968454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da5965d-2c77-45f7-b5ce-5988705b0eb1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0f19cf-a0c6-4a82-ab4e-8435928b4daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18048bbc-5420-4eb9-8afd-e1721e103dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf6af4-fa2d-43b7-a311-0a4654ca049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29ed044-2ce0-4f12-8727-a0be9a646b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1f30bf-956c-4e7a-b4c4-f0f95f442d2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e32496-07fa-4520-8b86-193bf79c6924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2046920-319c-4b1e-850c-8961f0b229ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294778ee-8e82-4823-a4b7-34998d4d7622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87c6924a-d246-4ef7-8cfb-508f52019acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c34ad5-4d52-4067-b20a-554d2e2d21fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f877825-330a-4ba4-ac6b-864094b6c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ae5f4c-037d-4233-97cb-1e5bc66c81dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822f4e9e-8ab4-4be2-82e4-b95a1ca79f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3fb868-7467-42f6-9865-6f4d621f2955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba7c60-1862-408e-acf3-8e3eb6db813a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a423b97a-8910-4031-ad56-eaf96f547ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7ec264-bd74-48be-a0af-22f3e8db378f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d56283d-ee2b-4381-89bb-ab5bc5aa8273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b5352b-21e0-434b-8990-feb060190cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99098e50-122d-4c49-93ee-1f5511bef8bb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acd3d23-1381-48a6-b421-54600823fc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eadc69-f190-44c3-9ec4-6a4a4f2bad70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8021f9-425f-42b0-9838-3f26a69ee5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6da4f061-6ae1-42ce-809b-6d73926d40c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07192736-5a1d-43a1-a54e-2e433e7573fb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad11b91b-a4d8-4027-baf8-dcc273274b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1789c2ff-9b58-4df5-927d-ed3480b30f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaaa229-4753-46da-8151-84e62c94db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7b7a8e-c4bd-4ede-96b9-365b52b427ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28215945-13f7-4543-88c3-8b52437c7349",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87709fd-1d25-4db8-94e7-cb1ede174987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1bb5bb-1cc3-4198-b50d-ab9dbfdfba92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ade963-98a5-439d-9797-e1c7263b692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef39bfa0-3ea6-4fb2-88b7-c053b8f790bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8928f2-936f-425f-a43e-0013d5391afa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0937cd-ad29-45a4-8e22-04f996cebbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c656cb-69be-4541-9003-2a1a86a1e06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3db413-d46a-42a1-9743-e38f0a3831c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dff31ef2-f54c-439b-b2b6-816a14fc5804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2848ed-59c9-4914-9cdb-4c47e116f30d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2431316-2cc6-4cdb-8bc9-93733313bc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e73878-ed44-4c8d-a8d2-103f10ee5b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ef0956-fbf2-4c14-9106-c72b34dda10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ff7f41-f473-4421-98f7-af3bee957b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a84a54-ac71-49a9-a8b2-94c3af44a7b6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c33efd6-27c3-4e0b-b6ec-2668f2625088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f2041e-3af4-4ac6-b54d-f989547b5816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8171573-020a-42da-bc1b-65c92f65cf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "09544202-9f0e-4ca0-b396-bd4cc14cf6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f5363b-7f8f-46e5-ad30-569fad03dd69",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8deceb5f-f58c-4846-9b08-1f59305e1a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940cb873-e6e9-43eb-9e85-5f774528158f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1ffb7c-0c8f-4ea5-a7d6-c33766ab388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f42828-8760-4a56-ba3f-fb1449c321eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e777ed9-d19f-4fbb-aa19-7addeb805fef",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ace377-5ba1-4650-80d4-4c57c47e89f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cbaf42-ed2f-444d-943b-3d1b3f67eabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965ad70b-33ce-41b9-9a8f-9a589c07dfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b1e2e9-8e7d-42ed-b2d6-d153ffc0ae3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574aab64-0b18-4192-978c-e366e92e018d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98418d2-7ee2-4de1-8707-4d6648130dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e73cc7-9b9b-4e1f-a892-e48f5b58875a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a79bb1-e304-4800-b9f1-b9afcd449f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b6d2f4-4ac1-4b9c-b7d4-95ea2d55c1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf19b79-54f6-4741-928a-70a881c6028e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20fabda-b1aa-4266-bae7-f4e6aa226d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1db016-a77c-4173-aefc-de50a0b41307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47383836-f3de-4b22-a8d9-76181e2b77fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9db55fc-b3e5-4912-911f-52d609fc4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662798c8-bfbf-46ff-aedc-c594428afbb6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fc3138-2ec5-472d-8eeb-a44b47597a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51e8954-d13a-4414-95b7-e39623ec1d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591905dc-2e83-4e51-b587-2edd190c993b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba17bd0-03c3-4a9c-88fd-dcec526107d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218fe14a-d258-44f0-a7e3-367f85b78f80",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43c7920-dbd0-4702-9509-80625adc481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea235ad-1303-45e0-a748-87bde10fb108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ad8247-d54d-4910-88f6-50ca4487b5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6bf81c-62af-4d8f-8c56-eecb4e4185d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32971a7c-9fe7-4861-824e-777132ac0e05",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a257c92-b931-42a8-b2a0-8a7548ac84be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e10081f-b495-4aa1-b6a9-12910784c66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926f72f-ec5c-41d8-8c51-f57a50c94a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41c490a5-4d06-40c9-9c5d-0d9fea1bf74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ca0d0d-b59a-47ba-97b9-f282414b2382",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918205cf-e3e8-4bb8-a4df-5e0cd0c0d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd5885b-ba96-4947-988a-726a7b89f599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8138c5a6-f6e4-4cd7-b5d8-904fa685fa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b4bb39-2c04-4b4e-ba51-b1950590b2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fb45b1-ec85-4527-a003-3ac62800175a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc6240-0fe2-4125-95b9-893bb924c373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b102fc-a629-4deb-872f-6a2d5fa197de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8895227-d897-488b-bc20-2594a512d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2634721d-c025-4c76-8d03-f6f8a7c5bdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6853aa06-b891-480c-97ea-d9145816877e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a83570a-a0c5-4a2b-9669-8bad72ecbba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224112ac-244e-4cf0-9c7c-5e2e8177e0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45bf66d-bd75-4d8e-ab40-ad5c94a7125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b780b632-d379-4a34-8216-f85d13041c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7dfcd3-1a4c-4ca9-89c8-c038fc8b9cee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78594d79-ea8e-4878-8162-a1d5fb462b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a991a30-18c1-41cd-a80a-bbd7c09efe30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295e89e1-8de4-49e1-b1cc-c23ada1576ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c22ceb79-b883-49df-a438-0c751d0d05e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5513c4c-ff4d-45aa-95e9-31b7c22f63b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c431b4e2-0a73-438f-91ea-77df3b462f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4700fb-435b-411a-a5b6-a7a32d45318c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93dd2f-39ee-42d8-a292-79ef744b3c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "943e8871-b940-4eb2-8d5d-154b1b898ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5366118-f67c-4181-9346-01e16d48f012",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2695dd-c111-4c82-b653-4a02441e23aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85a6b6b-3a0b-46bb-be39-5ed885230810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c73d482-5970-427f-9878-e3eb6fab17aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f0359b-dbe0-4843-98b3-ae9a0201faa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59cb74f-24cc-4db8-b2ff-2338fb243c07",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76aec6e6-eb6d-41bc-ac05-683836ca98ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e04724d-4e6b-46fb-8f9e-2c130f4261ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c224b9-fd51-4ae1-828f-2ef698c00a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "225bca8f-defd-4659-adb4-d9091211867d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffb25f3-0ac9-429c-8151-2faa08c1f02d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1cd507-5db1-49ea-80b5-86cd6cef9964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abde3fba-a343-4fa6-9077-86a606991576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b2c69a-f357-423b-9102-00403355a9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5064aa-b5ae-42d5-a744-ee88841520a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e039034-aba5-43de-b272-5d3d244cde25",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795fdeb-37da-4af1-be71-8180a3f5f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59fb02-2e5c-43b5-87eb-54194de932bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea09b65-7d95-4055-917e-fffcdd30febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb64a7d9-d97e-4ae1-8cf4-5a5cf16201d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b14df6-6a28-42a3-83cf-b1de07a83536",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66c7090-65c0-46ee-93eb-3801bc66e489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238987f0-5ff5-4ad3-b69f-00fc1caaa64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f634a1-819b-4602-a904-665df03250c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8951e812-4f86-464a-8f26-8932ad9cb6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fa8bbf-1905-42f9-8ecb-4ff81daf31e6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5de8b3-09cb-4d80-a4fa-248d436e01c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446b58b6-a3ff-4a61-a271-5fed22b5735c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d03ab2-c021-44ed-a61c-c6191fb37988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd141fdb-92c8-455d-b30b-11168aeb0570"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a04f642c-2ddf-4fd9-86eb-d47b4f5154f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfc181bd-5e89-4c60-8a9e-d94b57380b24",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d2eaae-1d45-45e2-bcd4-536c4c4da35e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "113ba235-5eb5-4490-a2f9-af4c465c8956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ee8502-a521-49f0-9f85-60b29a80a0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f45bb015-2c1f-48ca-9f5c-3dd38b500600"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec66484e-8489-42d7-8263-31cc3899eaba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb7240a5-f354-4300-a697-a9544bfda9a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85fdeb3b-281a-4781-9a07-2f1208852dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1ef1005-e53f-4ce1-9042-5ef6dbc4ba88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa1d1fdb-c024-4c13-9171-873e59cea7d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43ad58a5-eaa4-40e8-97ca-6ea3d4715c00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89b82d94-ffc6-49fd-9814-925d74a8c72a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a591bc7-88e1-410c-8b2c-06f65b1b3c0f"
            }
          }
        ]
      },
      {
        "id": "e2ac97e4-cd57-4597-a1e6-e9cf3eda2f19",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1666ad1f-e08e-44c9-a3ef-622a2143c364",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39eecf38-3fb7-4845-831d-63a95f9da994",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c5217e4-fd00-4764-a49e-b544c657d0b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c9a2b1-2dc2-4ecd-a423-d80f8a7805a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e0d038-e6b7-45d5-b745-5d9262fc54b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d368a94-9748-4615-96d9-5fa40b0afa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5837e0-0c4a-4613-8191-7c94c4c9b830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f629f8ab-2ff7-4813-bf5b-9a53a23763a9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eea716-3f3b-49eb-84dd-4700b74c05db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053951ed-4ad3-4e66-8791-3b4b658f7f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab7b5f9-ef4d-42a6-a207-b04a66167456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "377aa220-e6e1-4b9b-8141-beff6ae3e298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1da2675-c1e7-4892-ae00-d5b77df97af7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4caabdc-af33-429d-81b6-5bff82b2741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c323cf-d325-471a-bda4-0bf27f41c65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711a816-bbea-4578-82af-56327538b185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f612db4-fda2-4ee8-9b9f-e40c6fa246df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2308fb8e-26f6-4735-8847-17356dce0467",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52fb078-b050-47e5-8416-771923420b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75646ea9-382f-456a-bbf2-2b6b9c7285d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac1f0c1-bddf-4ad9-835d-9a6ecf2e0619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1368a557-356e-493e-902f-d917998c89f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415d30e7-0045-4b0c-a56b-f2c26efaef50",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc132a-3bbd-41b9-bc9c-826c2037cb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb422ed9-5a19-4c90-86a6-5dbbbc83d379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f8ece4-9140-40da-bc3c-60b5ad130e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "733522d5-4b64-4948-90ab-d83d7fd33685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f29f25f-52ce-4feb-b881-47d33c6bbe36",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ea09e-754a-4d1a-ae99-e4d660229ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142d1e5b-e0ac-4a02-b4db-c02b3755343d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf156caa-0f49-433f-b247-aedccfd6d097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0354dd06-c8be-4e59-bf72-e9f8eedc0064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f48d8a-e550-4283-af52-814d1376385f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e7b27a-0e0c-490f-997e-41ba342c157a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680b380c-1264-4fa8-948d-a033ef89be0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452daa43-e2fb-47ba-be3b-da158c804969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d4b5f1-dec4-4a0d-b6a7-57b207aae988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2641e566-67f7-44d1-832f-12fa769791d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43299319-e996-4999-a7c5-610a8429a252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea3de15-fbb1-4e99-9713-b14274e4a3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b4b547-b5a9-413c-ac53-f8fc0bae9295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bde54e-934b-4997-bcdc-cecd487f4c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01025851-fa34-48ee-a06a-8ee0a66f98ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eb609a-1950-4a72-8d89-7b5b4d398bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524ca299-b36c-436b-895f-c118105ceaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5779d9-0baa-4a1b-a1c5-6c7b277967a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6b2020-8e29-467e-8f66-7a83a6b26888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d37078-b0ed-44d3-9804-f7613be57d85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8942b0-1411-4efb-8504-2ad014d655a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eba292-d326-4e1d-b929-0a462f35870f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012afa6-8c7c-4004-b50b-8ddd1dd0f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09da8030-c43e-4e1d-8568-d8b7641f2c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759b62c4-9a93-467f-a474-484bb01384ce",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf3d186-f13e-460b-92e5-2abd97fa2e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5103ee68-1c2d-4b68-af94-0186e7bc84bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a64258-4bbe-4e94-9c40-b94e601d1e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d8e0af-2ec9-4f01-a121-25986cc2c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdf1fb3-8522-4456-8357-79c33edb139f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318fa9c1-e6a8-4d41-8293-42afa0160a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13137c8-e960-403c-96e3-3fc699b48686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8997638e-d08e-48f0-9d9e-fd5c17898ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fc640a-38c1-4979-8dfe-03ebf6e73260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c76e6c-959f-42e8-8ee8-54b2b44fca93",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62411ba1-d91a-4147-bc6a-05e682501236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79680283-3041-49cd-a222-166d191f0eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e68ef80-64de-4229-9626-6b9cfb3decc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27bb9c3c-a936-49f4-9b5f-979c51e9fa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465aa1db-b20a-475c-94e1-6c71180b229a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc534579-5704-4a97-8914-c3077edc7dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bf1853-166e-417b-9bac-8720466bc694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ceaa8-0f2c-4222-b9ee-ee6e804a0e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d30faa3-1a1f-42a3-91e4-fe3f95ebe08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acf4e51-d525-4539-bca1-a92b369b0e48",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea57e693-04a8-4732-8432-d3e131f9f91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae939722-f59c-41b8-9071-d16a11029457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe64c3aa-c5bd-41ca-8a6c-83d23b2d42bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc5b81e-9fc1-4296-9d61-8b4dfa962004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d4a0f-e94e-476f-be0a-98877a9126dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805cd69b-0c79-47be-974a-43e28110b0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca1b2b6-c167-43cd-929f-1ad0943241ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9304fbd5-c19b-4f08-a082-ff5458df8b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d93245a5-cd2b-4627-a445-3c65a713c86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2519d9e4-c13a-4ad6-b31d-00578ea48651",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c590aad-7e64-4f99-b75f-6174da83000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e76c3eb-784e-4381-91c8-2dc6c9319857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e39ad7-b2bf-4371-b502-b89ee56e15e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0b1dfc-c9e5-498b-b0cd-a1b32267eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec41d24f-77eb-4d7a-85b7-e77b711c4584",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d56679-13d0-41d3-a23f-e8de603a6b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999d1aa7-9460-4c55-9a8b-37a8b10db396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02d5ccc-ce30-4b14-972c-f72483766fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39159b49-ed83-48d4-a8f2-b27fd202509a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d7be27-2f09-42a7-b7c5-6b2b9017c518",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ceac47-1ef7-4aee-bd27-e8c0449b4ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fd8426-af03-4df7-84b6-d8b0cbf2d1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc4f8e3-1985-457e-9b55-849ddcccbafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "960cc99d-c15f-461d-ab16-eb6157f744c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b607c140-38ee-46be-bd33-d3a550c35b4d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986487e9-80bf-4d17-b088-3e9016fe4fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7eea7f-4b9e-4aa7-961d-be3ec40169a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507df42-d1b6-488e-9708-739b5b7fc850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a7b421-9277-4493-af0b-3ee5990f8f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73ea44-7dda-4b48-8898-f4ff962666df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee152417-09ec-4094-a2a7-c3d49a3b5155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e17c63-a164-450e-babf-8ba7389b0723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b44c7-d007-46be-8aac-298ab850f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d7190d-8898-4d85-823b-3694a5d4c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11162503-abea-4ec6-a696-7cee8e41efb6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256fa7a2-db38-4ebf-90fa-7d0d9de9bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8837337d-dd0d-480c-9b64-645877d88c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cfbf30-38f7-4d72-b740-8cf400011397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2030304e-713b-4731-bdef-5e6dce17c6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6184ad-48ca-4fc7-a864-095fc86eccfb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da735f33-3226-4c0e-9fec-81606a51b284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ae5615-90f7-4db1-a815-54c9b6e8cb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfc18c5-a19f-4d1c-bde5-f51449152215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0971be35-94fa-439f-a4ea-51cc71a06477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e9f60-8d74-4fd0-9a41-38f35b83309c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c7242a-b103-4576-8172-4e26000f447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f73cb5-0877-4976-be55-b6aaf31b50c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27ed89d-7af6-4765-af75-2954737e724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655c2752-6ebe-45ec-8bbe-fdfd62484273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362f552e-6e4b-4c35-8a91-0e54fc16b5de",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc1f00-0071-4ca0-8210-3daccffc0e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baec16c8-35c6-47d2-850d-7735cac8c3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25670bd3-078b-492c-938e-5b7872ab38db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33da1ad-70eb-4476-b6ae-2d0d15f4c452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6732b6e8-aa57-4b1f-97b8-5fff8165fad7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2e8197-9ed9-40b2-861f-f7f82a7d5652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de354523-fd5d-481c-b094-bdaf4cf0bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c5c5e4-e866-4cfa-b2a1-04754796e623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8534a0cf-3901-4d68-b828-8e04ad185a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622b8ea3-1018-47af-85e3-5fc7dc2fb1a3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e46d9-4d9f-4fd4-98bd-0ff3a80ade2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a442657f-2861-45a2-ab0a-52c144df454c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50d7a3-0cca-4b6f-8edf-fb53dd50d316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc6ab3b-40f0-46cc-9c26-5ff97e6a1766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fb75d5-12b5-44b0-b2b5-28376a536fea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3e3a3-35c5-48fb-add5-08d0013e9a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64f8fcb-474d-44da-a979-cb9ebe198c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c119dc74-38b2-489c-80db-f90064434fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3769d75c-6738-4b5d-aef9-7ccf2c3b5844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b840e61-5d2d-4e93-acbd-03a7ebffda60",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82daaee1-485d-4685-ae09-30b842ab9ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0fb7bc-5f65-4519-9b4f-ee7e69a43f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bca4e9-8d4c-494f-8ccf-a90b2814e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33589d53-8899-4fdf-93d3-c3187250b0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c68384-9cef-4b05-8573-7e1cf556a1bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fddd69-8c56-4530-95d1-2d3149e2caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193acd9f-2766-4e50-a46e-37ed751e7f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e04626f-9e61-4115-940d-585afe78df09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "affdb5a0-a2bd-443b-b134-2fcbd6a1b641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9b32fa-673a-4d91-bb0d-ffc9410bff5a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e07d31-8f1f-4cb3-ac5b-841f3b1769cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96ff65d-e580-4147-bd41-6574967f3854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753300ec-fceb-47f2-ad1c-30a0735c2441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74ea1c62-2aae-431b-b3b3-feff4bd79475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702c25ac-6c84-4ef4-ae95-57d0722efc48",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a816c9-a56b-4d7e-89ef-a1632fb37822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbd283c-75fa-4bc6-b5c1-8c4441c23edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806f365a-e349-4472-b204-d2b8e72f18e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c04a6e-144c-412e-b4bc-65e5c246e34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c335fe5-eaf6-489f-8764-8838c6f3170e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57664a50-c8de-4509-ab0d-edbbe3ff1360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ec1f49-72e1-4921-8d4e-be7e32c6fc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9331a524-bd0a-48b5-a850-a5943ff81a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4da7e6-54c6-4837-b9c2-c6062ed82093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3205f2-8dd9-4d8a-8e3b-79f4973a2ce8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87934351-9af1-4d39-afeb-bf46057d51f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544dc8d0-3f58-4e93-9b7e-28a54a0f6e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5671fa-cd26-4d8c-a5da-c33cfe167972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd7e7a1-cd71-47f2-8486-16cd4765f01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7c7cb5-9b05-4553-ae82-3e6f05bb165f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9f290-2cd0-465d-9428-c68aec815b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8ebd14-fad8-4b81-ac53-89c27eb6a3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75dfe94-1207-4fc2-b1a3-673396251ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dcd9c4-6a39-487c-b6ad-f3267dd09ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd8c00b-b8b1-4208-92bf-a5b2ed43d6f9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ffa9f5-cf98-49d6-b27d-2cf1839b5bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87ec4e0-93c0-48db-8ea9-4b7883c08f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f502f323-df91-4b22-be52-72457a127d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7987c7-9a99-447c-bd3c-7dbf4256af5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a11d07-d134-4410-86cb-89abe5bebdf4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9117376c-f9a8-48e1-b7cf-e6e508087644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94797bf-a3b3-405e-9e63-4201a162ec43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08adfe3a-9073-4e6e-ba67-9148b71b218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "126b3c5a-39b0-475c-83ca-a4097a4fdae0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56409839-e5f7-4deb-ba21-aab7e1c98ef9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b708bb09-64fa-456c-bd7a-d2a59c0c8406",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c157d4-c927-43d7-915e-f3d6a4bf8a6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48bae05f-cd54-4740-bd78-a9b0884ac746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a437eb-cee5-44b9-b921-df53f30bdd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2fd843f-602b-4b36-9e8b-0289f2632267"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d73d21bf-f265-48bb-8da8-20c2137a51aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84da97fa-ed6f-41a9-bb48-e51e2f81f819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edca64f8-17fc-4d1c-b0f9-cefb890796b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b35523d0-34bc-4a19-b57b-a6ca2e58295c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "735bb9a0-4503-46d2-8017-4ec88f537423",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6442e15-a51f-4275-86b2-f4c1be00806a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "805f919c-0da3-4e65-b341-fe0e03d13307",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2c44d79-1e35-4888-be56-792992017cb5"
            }
          }
        ]
      },
      {
        "id": "4afe649c-f205-43f7-8063-e50ee6abcc17",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1ed0b850-7f7c-4e10-ad76-a69e43614ae5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc096845-41be-4e0d-817e-22c9c22f71b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db633eb1-19a0-4185-9496-57329d2178c5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf778269-b753-44b4-b254-06de21067257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b69b11a-3f2e-4ced-a74e-31dabd1dad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dafc42-b6d0-4723-b43d-0caea32665bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045e2d02-6d19-45f1-b87e-126a4ea970ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5cca17-0498-4e74-a2ea-04ee805dce7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3469acf2-2608-4bc7-8798-f5c5bab772f8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b178be4-754e-4077-a1b0-c53aac179a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8367219f-ced6-4340-ae68-888a61a62b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ffbac0-7561-4dac-b6af-7549cee69067",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa96fe8-8612-44ea-9d69-90da119dd73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec8977f-185c-46d7-bed3-6b60f98461e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f3369a-aa70-4060-a303-5d7c6851713c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e592262e-a685-4cc1-92d4-5ae4884f6530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1465872d-85b8-4fa5-ad82-d64ae8dadd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac3e5fe-c24f-48c4-a402-b54b524e900c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3fb0fe-56c0-423a-b697-41f31002ad2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60dbf67-507c-4a26-b6b7-e40d7d71e19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be5d371-e723-4b7d-8fd5-9016cf065892",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7c61a4-0d98-441a-8a33-a8a88a2b8af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15f049a-9206-40dd-926b-8b0c16f7766f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be21b0c8-531e-46bc-858d-11a3d48b053d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb2a458-8ba6-47c8-b8ce-25f8e65a70c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb10077-ee75-4c85-8ed4-9bbefc6d92c6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0745f2a-4000-48b6-a601-f4942905a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc28d73-d7d7-49b5-8f4e-c0edd7f6abde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb26e88-326f-41ef-a2b2-7bb839a56e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac088c89-3386-49fd-aa28-f6f9f666ad45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a41c29-4254-4f54-a0e9-9ceb9ae03d94",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88028acb-a29b-447f-babc-4aa5d9105200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2394fca-b2cf-47a5-965e-7a23ae264720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467b4655-ee4b-44fc-a195-d93643adc94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672b0448-ef87-4c5a-a90c-940bfb8cfefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e45033-be14-4180-a5b4-12f88afc2f7a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece9d4e3-1cb1-4eb1-a8f3-32311f4d8475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a50bb2b-0c15-43e6-9d19-efea78fb66d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7615e94c-32b7-4f92-a1ac-7409c53bafed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45fac8e-bc69-4c30-b7f4-f9249965de05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7574ffd3-457a-4cca-8648-53029bd3cfce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfce28e4-5115-4836-9084-4e7224c06b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721cee24-a695-4a20-83e1-ec99e650eabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b24f70b-aeb9-44f4-8166-dbcba6af5844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9085ae-af69-4daf-86cf-01be46ec5a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8901b8f-ea61-424f-9c7e-effb52aeec3a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d008d131-de1d-477f-8b1a-121347de087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15e5c85-5cbe-4243-8ce6-4a4e04a695ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4420ab2b-9658-49cb-80e1-654cad79f9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3b5762-2eb9-4d2f-8305-202fb75b778a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f58c6-c480-4ac1-b129-841e168377dd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d56ca-0b25-4249-bd20-0993db8409db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c42d689-b76b-46cc-8fe6-eede84e36a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1955db2c-01c0-463a-85e2-ee94a7b1a6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83b9836-df06-4e84-b642-e21332ce75d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc8d5a3-c2ce-4853-8d11-71e952db382c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfedfc36-3013-4d7e-bb5a-9fffd9436f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e7ff69-c1d0-4ab4-8b3f-bf20a69cb5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe177b-64c9-4c27-9d3f-2145af2cb93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34382d52-9435-4481-999b-9eca3db71c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccefc4a-b236-4871-9339-90c1d8e50a37",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6f19f5-e406-420c-88e3-7a270736a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d123ee4-3e12-49bf-9710-0b202d364c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b817cec9-cdde-47c1-b352-834a43503ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2618f782-3ae1-448c-9913-08410d4b66c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0de7e4-5356-4fe8-8d19-f7850cbe8760",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2195c-f7f1-4b5a-b65c-b2968411ebb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29cb3e0d-2361-477e-9ad8-e0954513ae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1e294d-ddb5-4860-96d7-e9a1ae1b14ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dc70a1-fed9-4861-9a3b-e6f7cf6f96f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bbeb12-0eaa-4fcb-8d0a-b913c5edccc0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bacf1db-9f3c-47e8-b808-863e58f7d306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1d3b26-f30c-4354-a50a-cdb5a8ec2323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cbdfbb-e9b5-49b2-bde5-c214fa68fca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac7d959-e542-468b-a2bf-a7f4ef96d229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d46ccb-f98b-4f94-b643-546d9ae4975f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eda91bc-ae0e-4732-81b4-54cfec354ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ff7cac-4804-4f9a-b363-8c103bf3d515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d0f7cb-4c6f-4d1b-9f10-4ec807780bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e0da6f-cb72-429b-9f19-83695c28171a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edfa6d6-d5b2-4d3b-b506-a46d041e0ab5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6634448-40e0-48da-af3f-9aadf32baae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18591a3f-6d3f-4d24-a40c-02143ea38beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c92c5b-ad0f-4bef-ba1f-73ebd973e396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11dc22a-bff3-4002-bbad-38c2b346acb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71a5af-a81e-4900-a805-157857e853e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aaaf6a-0615-4cac-912d-18b128a819e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32782c9c-8a04-47dd-8173-cd396d176f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee3f751-d836-4ca0-b5bd-c3fe95799b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e274c6a-2944-4a02-a8e4-1a701aa7b474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3367b004-352b-4c2f-8a8a-721a4d39ea95",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08716aa1-6262-4e21-8c8c-bf69fbcee2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795b7fe9-b5ed-4ca8-804d-34c6fb48ccb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb93270-df40-49ed-bb3b-7a611a1ac301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c20444-e61c-432f-bbd0-6f3a913c290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4656be2-cc33-4567-8371-0d64cd0e96f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faf0b5f-1b90-4f9c-8e2f-c498f91c2ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbfdf34-1aea-47b3-82f1-e457d309708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927cee8-4ca3-4de5-98a0-e9dbf23348cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ca7176-f38a-412f-917d-15d1ba00091d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2899b931-f5b7-4586-899a-f20a3294292a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e55cae-8aca-4760-9195-96d33d30c792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8443e11-8ced-4da7-90c6-17556e473300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f08325-1216-4758-b5ac-6a4711738d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b29a41-69db-4d01-951e-6ad13f4cbb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c041f8-9d65-4a07-a31b-087f16471c5e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72d952b-bd8b-4410-9d9d-7f8a75d295ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "626bc23f-c67d-4006-8ed1-6b388e07d525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9896d769-f089-4b68-9366-fcde494b690b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92a4597-68cd-4fa7-80ca-506863a56fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef4aec3-0c66-4cd2-a792-c00747a2f79b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dab62e9-04e2-4e10-9e02-03f7241c32b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d603075-91d3-4383-9eb3-3842804289f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d00f3f4-ceb7-450c-9fe8-be00e40f9cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a733029e-ee38-42b6-85d4-6b5f45723730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5e757e-ab9b-499f-a88c-be9616cd2873",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3900c4-b86b-43bb-be63-b0121750dc09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d4e5bc-7b8e-427e-83d4-f941cd777267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2602d08-1963-4fcb-9a97-81cf967c44ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a20041-8447-4cf6-98ac-049ab8bea62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f6b794-ccb5-4c74-8e47-adc76aa0bfe7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c01cac4-198a-4f47-8e40-db5b24ca1649",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fdb873e-751b-4d41-9b94-695d0d1c4962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d7dd45-1f0e-476a-80ae-a1ff0055627c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36d7bb2-302f-4206-9477-fd1dffc82633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ac1fce-5359-4431-b3c9-ab3acea5056f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe69c4e-62d8-4912-9991-c4f3bfa47f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc278562-301a-43e0-85c5-3b91c2c1986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0064a3bf-b635-480a-894e-20a41c2d9101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41086066-bce4-4daa-8b42-5bc0256ed0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23225c09-8d69-4b6f-98bb-4fb45de0d23b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03213cfb-8edd-438f-ba6a-ec8f0b9dc08d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5545c0c-89a4-42ba-89ca-fd0834751f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc1b4ca-0522-4fab-836a-78f0e6a2b009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005d5054-3f70-4614-85b3-83d0c5d5e843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c788296-612c-4f8b-ae29-e86165d8202a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e037a2e0-5a20-4afd-9162-a67977b9405a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00c4ef2-9695-41b6-af81-9f1569c39a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad66d0c-10d7-4857-9af7-97fb0059cdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab7d533-a7f3-4023-9367-012147fd114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87247a07-9e6b-44d4-ae50-01c924fe4590",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d067ac49-8a56-4926-9e88-12747cf99015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f3bfc7f-6c9a-4fdf-b660-4d62f0125a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e177062a-8c83-4e2e-9cf4-144a7eed5891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61901ed-eb09-443b-ba8f-c103b20ed43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7350ba57-e39f-41d8-aa07-d51a527dd74c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7562a4-1970-4a13-96e2-3ead36783e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3527cfb-7109-44de-afe5-4aace167a73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45aa630-31e6-4b4a-a50c-cda0497c0162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80684b14-5a14-4a1c-a946-a61bf6984db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac4c195-be60-414f-ac58-27fae07870b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a882070b-4210-4a0c-ad80-97cbc0185e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf8b963-01b4-4928-8b1f-49de17ee96a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2547c41-2965-4ed7-8ddc-8daad2a71945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1770c1-2741-4b18-8441-58ec6220af21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a511c66-cfe3-4d23-976d-246cefdf2f6c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ee0f9-095e-4fc2-a7c4-fe0c29176d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b49d46e-d1db-4117-924d-3872905913fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f54f12-b32c-4d0b-836e-2e7098fe4f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df368ed-62a4-4030-9d4f-9ab255dc6be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f0314e-0598-4a70-98a6-513374ed2404",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54870425-63d1-46d5-8cd9-3bc8df832f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebb5ae8-8c32-4c74-9067-af8994f9c2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4156b6-9179-4364-8d99-10520d6f831e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475e1d02-6a6c-4180-b372-7d3bd3a63d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fed35a-8f8f-4404-8e91-3b03acc97761",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faeae1f9-4e64-4870-9525-f775d4dc5183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea0ff5-cbe3-4da6-8967-a29ad57bfee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db1724-2531-4b8e-a4aa-7dcdfbe6f6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef0d793-ce43-4cbd-9dd1-33b740a37de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed80b71e-f968-4283-9f13-dfc5fdf8d30f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dfb503-a3ea-4b6f-abb0-9582c75b3a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b20cf8-2ae8-4205-9822-5c42bd2d9556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1554c85-4d33-4a1e-a695-1de6292f5e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbaaeec-6190-4d95-8884-efa1b55389e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf20a49-4364-47e7-8454-8e00fc4e13f1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d400af6-785a-4c10-8243-028c4a9581bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c250d3-cbe5-41a3-b930-8f63be005fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1df51ed-6e07-4375-99e8-4eed56930de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f406a083-44d5-4e32-b18a-6f022f97a410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64190d35-81a7-4607-bc35-b814476ecaba",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81735a10-33e1-49a4-afa9-392eefb8cb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ba38b9-4601-4526-a695-def05f6152ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411d6c94-98c1-433b-bf47-917d499e76af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49d99e2-3f85-480b-886a-dda06a41855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f1ca7a-1c6c-46ad-b22d-32a6a83d3962",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff688ce-b536-4809-a530-59d96e7f4864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c38ddcf-85cd-4d77-8346-c3ff14097685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c785c4b-3972-42c7-8671-8c4a612c5644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb38791a-95cd-4506-b6b2-dd5a3504351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7ad83d-8a9c-45a2-a657-edc86c9a22da",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6756f6eb-92ab-41ac-9859-03df75f5e400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926df18b-a110-46e7-a48c-1d35b405576a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff02779-0ec0-42ab-acf5-1d7f1bb982d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc2d36d-72bc-41d1-9337-724f490a8ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9de747-d41b-43c9-a32b-561fcd39a675",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25054377-4f1b-4800-bdb0-2dbcd119391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0530296a-a988-40a1-995c-5057f86c5943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad3a9d4-541e-4c11-810e-9c89e0b3a346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91aa481-9904-4e8a-89f0-b5699bd25407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3890da-0bf8-4738-909a-2c2627c40c6d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6159669-60c0-459a-9ab0-20ea235f00f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522fa756-e9c2-433a-a7c9-73574c815e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbdeedc-fbab-463e-875b-61c22c3633a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88625da7-8a15-440e-8dd0-c46d9e281a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eca6b0-a329-4502-9955-1cd0fb7d40ed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dc0bca-2f26-407b-b609-4e89d9105ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cf2989-50dc-469f-9612-178babc03c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7901ab0-4664-47ad-ae36-f7d67f637045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec8b37d-1185-496a-b590-267cd018bc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21695bf-41ce-4c78-9888-2df12646bcaf",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2e4885-77c6-49ad-ad51-a8860974b66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005e32ca-f213-4c61-9bdf-1edf3255219a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c0e785-c109-4184-aea7-cf2271be1668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fa59c2-dee6-4ecf-a503-c325be57ed3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18afca86-223d-44bc-bc29-4f711ba66c05",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f3dcf0-f703-495c-b5f7-2be5ac31102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84aa5e31-7620-43a7-a189-33e386c9c133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7471d9-c33a-4dab-9d2b-b00bebcf825b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e810c09-a000-4fe4-b083-ad8d2a2955bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a02b8-45fc-4e7f-9828-fe41e7773410",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99d4762-0e27-4e7a-beb0-b5b3f398e38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8783a0-6c57-4c7b-a422-c4e60d0fd862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7761443-f693-4f10-955e-86971bfb2165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca20d737-db75-435e-aa57-541a829a1fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d8dc0d-14fb-4b89-9fa4-428e8f8a8466",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb69052-9271-41a0-9d41-4ba55eebe459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42644641-1681-4d41-a034-f3e63f2fd6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5159dcb-5bd0-4537-8038-647fa5d4629f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739536f9-f140-4eb0-8960-1818f709c62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bddec2b-4b33-4588-9970-886e95c23ba7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e819bd4-0720-4579-863b-60ce520216be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a49ce48-4761-44e3-9dff-d95d19686bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c32cfe8-5a6a-42eb-9b74-98c5b1c858ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0e71f8-c353-48c0-a9c6-b75b932d3b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19def856-30d0-4449-accf-910e4085e900",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ecff7a-278c-47ff-bd02-09387b531d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674544f4-82c1-4861-bd5b-541adc519c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a68ee72-5dc1-41e0-b603-7f61d8a49dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a934ffd-a239-441f-9bce-00fe098e109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76fdf01-381e-4def-b09c-ed7f187294c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31b7bc6-55ee-4d87-9035-e721bb7a4d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed41f5aa-0100-42ab-bae7-677b5367c3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f86537-778d-4884-a6fe-8b6ec83eeb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958a6f92-02c5-4dff-a47d-8ae110cde57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504328b0-0c03-4d46-b214-ac6c9cba87f5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddae296-40e8-47d7-861e-2e5fd45d6526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31a11f8-6b2d-4a80-bb91-b69dbdde0304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5c8ee4-4af8-4f20-901f-a2b0e38e611b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef36255-ed08-45ac-a067-399b6a133304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f7b262-0c86-4b7e-9e78-0c096b912fa1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7303304-7669-4205-b0d7-514efaaa8fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697fee1a-c639-45a4-9360-e880a732292c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275f6416-8f6c-43c2-9282-d086f480996a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2983e57c-e361-4f0d-9c44-f3e8e153c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb50580-cf80-4053-bcd7-85ff75f94cc4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647a9244-6fa7-4047-9ab2-e4dc4e239eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395614b7-8c75-488f-85fc-f727fac5b28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc2316-6b5c-43c4-9f60-aa4f0c55c64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686ae8dc-dd41-4b43-b12a-18c8870b4edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45804bcc-4ace-429b-bd16-8541600e886a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385badaf-fd8e-451a-a041-dbfbd6204137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b9eb85-972c-44f5-ad07-5cf9648bdafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b1941-e69b-47f7-b407-4b1dd72b5263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a10e1f3-2e54-4222-9d58-f117533c3c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9bcb8f-ac25-486a-a42d-51dc39c45c3b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fda0c3e-105a-408b-a9aa-da42ba6e5acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929c9275-30f7-46e5-a552-e562cb583a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ff3b91-9217-4e06-9632-953ea5e05271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e599d66-c39e-4a98-8fe8-407e2b9ce523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43ef445-c423-4aac-a130-18be08e985eb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499e28ab-8d0b-4322-b8b3-dcc240ece458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca07b1c-8d8f-4a10-a3df-66be760d4bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ee8e3d-bf67-4b26-8555-e6fb967ad598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee55217-0f24-4247-9d7c-4dbdac31e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74a8e9f-495e-4cec-9896-8a5b233f9aed",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119b807f-0929-4280-b74a-a2bf104e507f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b955afcd-6461-47e4-9123-b0932853e0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554527e-5bec-45eb-946f-c05f08350a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22663b99-945b-4a7c-b49d-cc4ad3f2156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8002cf-b314-46ec-8e7b-14c13774603c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2978b3-6cf5-49b0-9d84-eda19662c81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23476c5e-f33a-4a20-8923-a24f516555b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0592895-f467-41d6-a3c8-afc43ec9e34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ae6c79-25dd-4b57-b103-4cf84ff05f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ce0761-e385-4ebb-8c61-3e179ed4f792",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f473fe1-aa52-4bc0-956c-adba8d668bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73189d9-2dcf-4684-b699-62fa4afd819b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b54ba9-1c2a-4a56-819b-71e0f87de94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a478e6-9378-4d49-b250-5ef51f47270f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9217c871-aab3-4e66-ab6d-f8f30388085c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7104e0f-3065-4b3a-a397-b96d43bade2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c44dcb8-6c38-4e4c-b366-f7f695c1742f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d5a21-da2a-4aae-9e69-98ac4faf0137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8e64ac-436f-4851-9239-b02e5d20beab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f2e43c-254e-47e0-8dde-1afa8c4c629a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1787e4df-ef85-4b42-8925-f33a060ae8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be457b5-efc7-4ea5-8e1b-f19430d4bfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a12755-373b-4314-8cd6-f34894295990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a631bb94-d65a-412f-a966-d7047436843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4556d94-c303-4d14-af4c-29dbcc728e9b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a4d173-02a7-4fe4-8d62-32fa5dc44bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de5eb63-4fc5-4fed-9e81-194b59d90c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43aa266-54f6-4a6a-9409-2828944ad007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced48a9e-b32b-4a88-b47a-48373dedeba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b43ad96-0245-4dc0-9c29-aad5f52f5c06",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf6474e-216b-4f3e-a53a-e0683123ed32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f88230b9-a4be-4473-acb3-962383320abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd3ea8-b6ec-4415-b828-df4b8e4347b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aed9568-0248-41b2-a410-d87f73942266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a071543-c791-438e-a05f-b2eb259cdb3c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c8aba9-e617-49b0-802a-7f080299c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92cceb0d-de72-4d13-bfa3-12ad615ab4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456d8ab-0ed8-41f3-8a5c-32904cf03f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c585732-9aa9-47d2-a358-2c600c909965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28f6360-2810-4a82-8d73-af8dfb58991d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2ae9c4-580b-4bcd-b191-c050a581ee70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9c3b64-fe48-499f-b28a-58a4af321ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd1c846-d5b5-446c-bcae-43d1e6541e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e77b9b-1177-4a62-813a-ca1c464ed7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff21cc0-5de0-46b2-a5e9-9c16c3bce0f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821748dc-61e9-4ae2-8eae-e7f561c8487e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8139a985-6618-434b-aad0-c6d2b697c768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a828db33-fa26-424d-b42a-7808f37b9a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc28143-735c-4ce5-bde1-3d5ffa82091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c8be2e-ae21-4528-88eb-287cb73c8f66",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9058acb-b51e-47a3-854a-1d9e3421a749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c8b3270-0e28-461b-848a-8d99a2aa3b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2fd129-f0e1-4459-9f61-6a61d59ee7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ee8596-cf06-4e5a-aba2-2a02ec4b114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ba54af-238a-4b65-b4c5-50f5297c3d5c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a0b97-dfe1-41ab-8a37-df059abf5d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30531480-05ee-434e-9632-bb17e9929609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f07eef-54fe-420b-8fb8-d5d93d17341c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baf9b0b-a696-457b-ae97-d12c65554e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae85c708-fdc7-44d9-9de3-df6c77223951",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9e542e-a11f-4845-85bb-baf7d3941dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e388469-6882-48d6-bb73-6e3284dcd56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa7a3a9-bc00-4716-8cce-e4c4baa5c0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139fd17d-57ee-4aa8-bd24-a5981064e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad1c680-40c7-47af-a8b1-b209dc9a9300",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e76ae8-7b00-473e-880f-fa5fb4864f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447fee15-72a7-4196-b3e5-468050b1d23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ff362-1666-4387-bd60-da6fc6dfa75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d40c128-4b3d-478f-bf86-270b3d4953c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09486025-588b-4d7b-ab9d-d7ca6939471f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06215475-e999-4a88-86d2-7d619a98e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fae6a5-c591-42c7-b548-aeabf85d4b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baef6ad0-dea3-49a2-9c5a-5db0b0fb1baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96c63b5-4e10-4289-9382-e2ba022f697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca92e6c-eb2d-4b74-a1f5-3b0f192841d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1925b041-624e-4d82-bc82-55a24c51bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c97bdd-4d4d-47ae-a060-7098ff639edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbc25fb-32a3-4cad-80e9-c3c777bd18df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21bf46a-92ff-4eee-95b2-3cfd9733093c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e24c27-66ac-4ad1-b470-cac59710beef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35c90e-79a2-489b-8426-e8a968d7cce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d789e18-bd2c-47b4-ba70-18ac92f4989f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669a4980-c9e8-4dc8-95f5-dff40b764d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b9103b-f409-4a37-acb2-4a7b30d21e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108105a9-5dcb-429d-a9e0-2c6c02f8930b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0940f821-b8d1-4b0c-811d-c0e4dafa58f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acbae637-f408-484b-b7d1-c360914eacbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbca5df-61ac-4b2c-b2d1-0d4d6b5a4a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2cccc4-31a6-464c-8bd7-50ee9fd4fbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327f7fb4-346a-4097-ab6a-5186a71f85e3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae570e4-9f39-4dde-9e67-1fbbad320fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d2fbb3-819f-4d6d-86fc-9fa008e52549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c040925-0f76-4357-a210-64c6f1cfff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874ebe09-ce07-4e31-bbe8-0784fb60c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be34818-033c-478a-8cdd-fd6a5eacf61b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bdd5e1-9455-4167-b24b-4501d1892dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8bceb8-881f-4110-9876-4422fb496f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbfa096-148d-48f1-9cf6-31d00f3d6d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea84b8ae-929f-4568-8006-ec60b82860c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f25abc-dba1-43b8-86fe-31df459d39a9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb9eee0-27ca-483e-a852-7f70c79f85d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e6a9b9-7ca7-40f0-9b19-7483d890f9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5559072a-b103-40c6-9fb1-d91dde3e3ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2af98f-6cd2-4646-9f52-546d5bc6ab9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8647657a-530c-48d4-a2f4-44d33a6cd2ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f8b44b-a07a-4225-97fc-4bb6d256fe77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef68efb-d531-4998-b5c0-5ec653af1703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d11014b-3ef4-4161-ab44-be2cc89ca94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a802eda-d84c-4794-ac74-51e50dc6cd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32a26f-2c61-4369-89ac-1521262871e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de6442e-7a49-4622-a050-d27c4170c348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c21950-010a-483b-b9da-c2380130e9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c091cdf-b8cb-4855-ab93-9f794b11fbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20316ec8-a563-4c78-a638-f73ede9d761c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d342c9-e361-4774-8e0c-d80ac4215a3f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27c79dc-765f-4def-9702-8163a1c4a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04713b1b-3990-466c-a02f-c46d4eb73e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20726774-65aa-456f-ac70-faa6f7857219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d191dfc0-bd8a-47b4-aa87-e7166858d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d4cba-9a0d-407a-ad25-fae426aa81c4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d2966c-1577-44fd-9ec6-ce9cbb150d0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5be185-42f7-4845-af44-970895cb77e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3621dedf-3bfe-4e6a-8740-f46e5d60bcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d403c9-180d-4c66-b417-c671f54880d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c878d2c4-685b-4347-aab9-3a08f9470e84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d2416f-73b7-4b1a-bbd1-96ac473633c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47d0e65-bf33-4907-b7f1-13c26e228166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0045385f-e961-4666-83dd-8bedd756196c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a71fb77-20bf-4e03-a750-3969bdf65b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822e3bd5-e98d-40cc-b002-a7e0c932a1fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19b039c-accf-40fd-afdd-a4ea7ade047a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f01101-a6e7-45cd-8191-cd4413cd0c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d719b8-73f7-4a4a-a141-ad6318b96f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c9009b-77ef-4ff3-bebb-980ff698706d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4486c826-b25e-42a6-85be-cff2075accd7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f150bd-3e62-4851-8117-9de9e01d2b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b34b22b-46b6-4048-81d8-624ad85576be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42bf6be-8525-403f-acfe-f84a3996c1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c1e7eb-0d05-4e8d-8334-32609b4848c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100e06f4-8e80-4aa0-8d24-0ef7a3c69a14",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f13ac37-5989-4898-a063-74dfa29aad62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c4f071-2a4d-4d2e-ad38-7c39ddc953f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce96c23-b90c-4ac3-9c40-ca4786b263ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138b0bf6-5f00-438a-b79e-9e78f225b5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cd21be-e882-4dbc-8587-a2756f246d40",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9711eb7b-ab1c-456b-b204-9292f1efff47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf5de65-8360-4953-83b0-fcf89468125c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc881b1-4f73-404a-8a36-9e2419afd7c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c8cbfe-72bb-4024-959f-4eedd0576493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd31955-8014-44a6-954a-d6bf63bf71cf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c0802c-b6c5-4b88-be36-668f9f9604b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dcd9298-7c7c-4ba7-84e7-03a1b1deda52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629ec4c1-615b-4c3f-9270-f14f1a73e4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee423c6-c751-4675-867f-966685439453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac9cec-b54c-451e-93ac-670b59b89454",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010ebafb-88ec-4097-a455-40b207ed7539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c479cfa8-4f7b-44ab-9483-e2764996b483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f594b2-12fe-42a2-ae79-089a83e57315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00708b9-825d-42d9-8b2a-929690b57391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c67e0f-405c-47a7-acbe-a9c2fe63e3c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca49097-232b-4c78-a0fc-fc28ae55be09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "405778fd-cba8-42ac-be98-9c8fa65bf99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7bac3b-d4d5-4f3e-a437-c41def359eb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc3180a-1573-44b5-8e56-94ac9467ee57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2f8dc6-80ca-4d6f-89db-309ec4f63f4b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fee523-4beb-4f6c-acbf-b41569054969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613b01f3-e482-4a94-8315-83e5ee26cc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6270a520-ee98-4aec-939f-40818b4d4be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4fe712-ea14-43e5-8bc8-e6d0b0577722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff36fb0b-4e47-42f9-8890-ce942bfbada9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36047750-8fcf-4e31-adff-e7ba3d44025a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "764612bb-6f44-4bbc-b3e8-174a5860d416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552f2f1d-ebe5-4cd2-9ecd-b46f350bd93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e9445a-eb1b-4fee-bb89-7661d639f821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba97ed38-9a63-4c91-8b9b-a90deee4ec25",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f0927d-8cc8-47b2-bc01-343b75e72e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434a9dcb-b759-4ff5-b402-ff7e5e85afe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd574041-6c5c-4984-bea3-00a827970835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d7fd3d-dff9-4a09-aeac-99e0769cec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb4f932-4ae8-4d1e-af73-61488f1bbc22",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f905ad3f-6e6b-4525-ad84-707c57bdc0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9d36dd-8e81-46e1-b79f-5798519996c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9d3971-50e0-46a3-8d53-71783ac80ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e080fb30-e97a-498c-9807-b953c73222b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09acacd-ad7c-47c1-a3d5-9aa7622dcbbf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9588fa11-ef0c-4b2b-a42e-2cd40bf88372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56abcdd-9bb7-4261-859e-3d7bff4ca438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec6b8b-fcc8-434e-9a2b-b1493260b7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9607d5eb-474b-4899-a213-b1203d0226f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6095ddc-a7af-45ae-9ec8-4517353094b3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee2423-f002-4f39-b8ee-7343b33da972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43c7fd7-9e3f-47dc-b8ed-860e33934ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b15cfbb-183e-43bd-b7b4-b7c22e13652f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8476ee9b-3490-427a-b12f-6ba840549331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef73f98c-a105-4382-a9cf-18447f91d7a3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27daf923-f217-41bd-8279-0d6fe4268f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097c5cd2-6942-47e2-87c1-55d6ce62389b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50c7027-44cf-4297-9d9e-0a6e0e334f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d664bb5a-73f2-4778-9f22-93baba28e1f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "756c16aa-99fa-41bc-a0d7-080f80cf3f39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ab02b9c-cdd4-4bed-82e2-b86618b669eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61d43698-bb53-44bd-ba5e-a6f4c0a0f9f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7164524c-c1d3-4f5f-967e-4fb949eebbd1"
                    }
                  }
                ]
              },
              {
                "id": "e4893d9d-e604-47e5-8459-1b5da06ab432",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82937942-61a4-4bbc-bf44-dbc93957acea",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069064d7-6edb-4342-8abe-e96bd049c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fc071597-a8a4-4d69-a219-4dde45f9c57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7644303-8260-4eb5-878e-b16851b17b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64739a79-3560-4996-89d2-fa09b7a9d24c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5806ad7a-9323-40ad-9629-5554b1a426a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7065b53d-2c71-4f7f-806f-3e951bb4d891"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bbfdb10-af25-4178-8d53-fc33c40a837a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "790b7b8b-b5ea-4007-ba48-745ec67b1bac"
                    }
                  }
                ]
              },
              {
                "id": "340ea67b-dd1f-4eac-be5f-faf41440dc02",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2fda95b-cb59-4519-8256-5976fb898cee",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4694f9f6-ac09-4d11-852b-36d6de67a95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "074ad877-4d23-4e5b-a032-ee5e4be78e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369b1460-1393-4afb-8140-f0f420654b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49d462e-a6ab-48aa-a4ce-72a306d97456"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1cd56942-90a3-45d1-921e-167cea9140d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb33cf07-1fb1-4c59-b074-cb9a3265fffa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4611c7e-e3c1-4bdd-979a-81237459ccff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22a70aaa-9245-4bf8-8146-31b2a3e1006d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc1a0445-daa9-4a34-b94f-51267f812887",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f0c2b19-0fb2-4c4c-9dd7-3fd4af4f338f"
                    }
                  }
                ]
              },
              {
                "id": "5f5725ef-e99e-4446-bffb-79e9adc5a4e3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26d32e04-f97f-4dff-9d50-0ea20277bd35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2dabf757-8433-4f19-972d-74fb0e4aba75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5a3f47d-b437-4f86-8b4f-72f200c0a6f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6cab52e-a9c8-45cf-96fc-dc78a3777edb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c33d872f-c851-4895-9ed0-4b7a8468a6a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "661dde74-110c-426d-81e8-54b5c78bc1c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2e50cb2-89ab-483c-8c55-9292cd665005",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4475507b-25cd-4bb2-907e-aec457d74cca"
            }
          }
        ]
      },
      {
        "id": "161c1cac-1ec3-4e7b-b5ad-22db7538a0d5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4e85228c-102d-430a-9428-cb79a987af99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "540055a7-1eed-4a3a-a874-8c9306096cbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "750b5b47-1011-41c3-9263-6522adb1305f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009e7c45-9e52-4a79-be22-117b12c81612",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d327c234-590b-478a-b38d-ab48e0c45898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1738f6-13b6-4d14-abe9-9f3f6c1fd612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b402d950-742f-4075-9a81-21f1739d731a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba8873d-f83b-4414-8b62-561858370058",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84ef0f84-33ce-4dcf-a184-ed798561bd23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb86a1a-7562-41db-bce7-c8dd18814637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b89619b-2779-41e4-ac5b-8d8caa143069"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4badfde6-56e1-4c4b-b8af-f85144b56d67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11f38b9e-ba2b-49a7-945a-bd98162a85d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca962be3-0205-4df8-be22-85a8ece8a41e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17f21f68-d7c0-41a6-9170-4da41bf14016"
            }
          }
        ]
      },
      {
        "id": "b9a41f91-44a5-4fde-8e98-eb0bd46eb3cc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ff831a11-eb2c-4901-92a1-42500a5accbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c77d8c38-8b46-49a2-bda1-6e7711bbb4d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "609d3f6a-38d1-4d70-afc9-2f9c789ccead",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a91009-5d08-47d8-b22d-2a48ea5d1b48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b9eca4d-8ac2-4f2e-891a-acac9ccfa872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cafcb7-30ae-491c-8c34-c2066d460fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "916363ab-67ac-41d1-bb25-90373bf6c11e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72604af7-6be9-4825-9729-d9bff51c2dd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c1eba39-c7b5-46c8-84a3-9991748dcd3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3591a5fb-e672-4de6-9682-2a25cab26bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed892ae5-e959-4af1-8ac7-f889ae6119f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1fa4700-359e-4418-b207-59f1792adf39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6d26046-f2d8-4e9c-b36b-52c26159e543"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d776ed10-fd68-441e-8bb6-6e98fe3468b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff6e7f0d-d252-406f-94ed-6359c1593094"
            }
          }
        ]
      },
      {
        "id": "7c52b10b-cddb-41da-b1bb-9c848201963b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f89d9103-dacc-4a77-b8f0-886aeae94078",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8e18a6d-3edd-480f-9015-86215ce261d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbb14614-25a6-4202-8339-12b3f2c24a32",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26beef24-eae9-418c-9bae-ddc62223134d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcae9e0d-8db3-4038-b518-e573a51f8a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e12164-2379-4d7c-b84b-dc60ff5666c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd97943c-26ce-4d40-a0c5-601b80158e8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a885349e-2a09-4da2-a284-15783dedbf14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "428a67a4-b5b4-4bbe-97d6-509ac6ca47c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c952123-7c1c-4813-9934-38d322567f72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3199b42c-c926-42f2-a3a9-bf80ec5aec2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "765d7249-e225-44bf-ad73-0dec06a333fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "565e49cd-20e6-4434-9085-9a6f9287ef40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c05872a4-bdc0-4c68-bad4-5bb1da04b67b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75571ddd-e6d1-4278-9bbc-2bfa20e9d74d"
            }
          }
        ]
      },
      {
        "id": "06388ca5-1c3c-4b46-85a2-aa738d6eea93",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d31a2c7-ed2e-4482-960a-a60d32dfec53",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da935d5e-2ae4-47b3-911b-bd00f730996f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "81273eca-9125-4684-9310-03fc3d6e854c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc18e6e7-925b-4995-8cf3-e242afe28d77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d492c907-bbf6-4971-bd4c-d724766c840c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.8280701754386,
      "responseMin": 26,
      "responseMax": 11081,
      "responseSd": 710.857107005681,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709339579283,
      "completed": 1709339623062
    },
    "executions": [
      {
        "id": "6224904e-2755-4af6-ad26-f60d17b28cda",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6230ea71-2615-4559-86af-dd3879b460b8",
          "httpRequestId": "1992333c-eccf-493b-bac6-612058af115b"
        },
        "item": {
          "id": "6224904e-2755-4af6-ad26-f60d17b28cda",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "90077949-ec23-422e-a31e-b316ad9da963",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "acf55cc4-0ea7-44aa-858b-cfdb81c787a4",
        "cursor": {
          "ref": "532b173b-f5da-4c3e-bfa9-7c643c480ca1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "21b5ece2-65d4-4289-8aa9-170eeaf3877b"
        },
        "item": {
          "id": "acf55cc4-0ea7-44aa-858b-cfdb81c787a4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45337378-0b8e-4e00-a39f-1965f62049ff",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "76fc5476-bbae-4f03-be38-86225f841cbd",
        "cursor": {
          "ref": "6c9b273c-9ea5-4e8c-a543-8803dbf0571a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67d61713-ac01-45cd-b597-ede1a758cf07"
        },
        "item": {
          "id": "76fc5476-bbae-4f03-be38-86225f841cbd",
          "name": "did_json"
        },
        "response": {
          "id": "1fab677c-8a1f-498e-8d9f-d4cc4777f5fb",
          "status": "OK",
          "code": 200,
          "responseTime": 196,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a090f75e-17d5-4e6f-a3bd-9a4af3084cf6",
        "cursor": {
          "ref": "d15a4a15-4591-4cfd-8355-79b56808aa23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a13d3d35-3d2a-4d46-98d7-d3976b23cc8a"
        },
        "item": {
          "id": "a090f75e-17d5-4e6f-a3bd-9a4af3084cf6",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f4b7649-4225-4e28-84f7-0e45052d6a2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 676,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a090f75e-17d5-4e6f-a3bd-9a4af3084cf6",
        "cursor": {
          "ref": "d15a4a15-4591-4cfd-8355-79b56808aa23",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a13d3d35-3d2a-4d46-98d7-d3976b23cc8a"
        },
        "item": {
          "id": "a090f75e-17d5-4e6f-a3bd-9a4af3084cf6",
          "name": "did:invalid"
        },
        "response": {
          "id": "6f4b7649-4225-4e28-84f7-0e45052d6a2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 676,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba342a3-ffe9-4640-bbeb-6eaf6c941646",
        "cursor": {
          "ref": "5c1ae5e5-f9be-43a1-baa2-4ed34d173b41",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8eb90237-e398-4373-9b2c-5f6cae801ce4"
        },
        "item": {
          "id": "4ba342a3-ffe9-4640-bbeb-6eaf6c941646",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "42f07493-79d8-4e7d-8b9c-79e96a185fb4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bacb225-251e-4643-91c7-6daba2d01047",
        "cursor": {
          "ref": "964e2941-1ebf-4b6f-baef-6d29ee2d240a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "be9a11c4-18c8-4c5c-a630-4da2d550037f"
        },
        "item": {
          "id": "2bacb225-251e-4643-91c7-6daba2d01047",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98f11af9-415b-4685-b918-856e0ddfdab8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22505f3-7abd-4635-9fe5-59d73c1a880b",
        "cursor": {
          "ref": "0a54b80a-2b01-4ce8-a75c-8d47bcc6aa32",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79ed38fc-e789-4a0b-8c55-e5cd03756efd"
        },
        "item": {
          "id": "a22505f3-7abd-4635-9fe5-59d73c1a880b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d53e2fda-a805-431a-a8e5-94117f9af1de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36e4fc-c8e9-4384-8a76-b6c918f29f78",
        "cursor": {
          "ref": "0e298a34-497c-469a-b04c-d300067ecb0d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "907a8082-bb54-4cc7-a6c0-96a8743934fd"
        },
        "item": {
          "id": "7e36e4fc-c8e9-4384-8a76-b6c918f29f78",
          "name": "identifiers"
        },
        "response": {
          "id": "aa518291-6cd2-47a8-88ee-dc1fd6f66f31",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b228a-e373-45c6-b011-5f7eefc4dd14",
        "cursor": {
          "ref": "b5129d2d-918b-4527-860c-7328b433d73b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "236fa1f0-4a80-4661-ac4b-8555b5228c5f"
        },
        "item": {
          "id": "ae0b228a-e373-45c6-b011-5f7eefc4dd14",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "03431f5c-bac7-4f83-8502-8fc35b94dc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a61989-afd9-4d29-84d2-eb6808de35bd",
        "cursor": {
          "ref": "202d5e9d-723c-4ef2-8fdd-f44ed708a85e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "719c056a-3a6e-4097-9d97-6c8ebd57051a"
        },
        "item": {
          "id": "e3a61989-afd9-4d29-84d2-eb6808de35bd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9ff98b54-199c-4f7a-9881-46e1ae0d8b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276d01b-5122-4dd6-931a-6a39587a4efa",
        "cursor": {
          "ref": "35e0bf92-10b6-463b-b191-f320e3225778",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "47fc481a-6f7d-4d5a-856e-ae8977969e71"
        },
        "item": {
          "id": "8276d01b-5122-4dd6-931a-6a39587a4efa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e78297f-22dc-423d-9aec-d97b1df1a555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304a2a08-128e-4b12-9025-9be3d5b06ac7",
        "cursor": {
          "ref": "6cd881c0-4bdf-46c7-ac61-a234da66979d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "875acfdc-07dc-481e-b913-40d4dded1020"
        },
        "item": {
          "id": "304a2a08-128e-4b12-9025-9be3d5b06ac7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eee7a0e8-8309-4828-82e3-abe705d87bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad71c059-8891-44b9-a656-d5159588c5c7",
        "cursor": {
          "ref": "8a464891-aa67-4fbe-a59c-5e2b7a172026",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e122ece3-8254-45ea-b50a-215769b575e7"
        },
        "item": {
          "id": "ad71c059-8891-44b9-a656-d5159588c5c7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d6f5d7cc-f25d-4d60-94af-f86a1333381b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4478a91d-0a6e-4076-97c5-71bee39c6057",
        "cursor": {
          "ref": "315e3a34-2b5c-4c61-8e4d-7e21f839fe64",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f64a1998-1a79-46de-bde4-0ab5f26faeba"
        },
        "item": {
          "id": "4478a91d-0a6e-4076-97c5-71bee39c6057",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "82b85486-2351-4f06-af86-fd14e32d36e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869a80ab-9342-418c-a0ed-2df5e334dd97",
        "cursor": {
          "ref": "dcbe03cb-303e-4d15-b3ee-a5604d5c6d40",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "563a2b54-1a55-4436-881c-1f0061581395"
        },
        "item": {
          "id": "869a80ab-9342-418c-a0ed-2df5e334dd97",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dcb1a6de-b53c-43d4-9b55-ae9f82fc6015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44825000-3313-482a-b549-539750a227a6",
        "cursor": {
          "ref": "83c09598-6457-4a9c-8885-c9284f5b84a5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "459034d2-dd61-41f0-a0bb-303c467ce83a"
        },
        "item": {
          "id": "44825000-3313-482a-b549-539750a227a6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f950f55c-1c49-469a-bfef-f4cf04f828f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576b6a7e-900d-4355-bd19-e8b3138f90fd",
        "cursor": {
          "ref": "abdd541f-99e0-4975-8a5a-abf13577d418",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b3a2cf16-3523-4a85-bd71-e5ef972d82b7"
        },
        "item": {
          "id": "576b6a7e-900d-4355-bd19-e8b3138f90fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2dcd4169-5533-4d2f-89c5-1ae5b209b704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b81debd-501b-4331-9ece-8db6ff3b3def",
        "cursor": {
          "ref": "dbf2f52c-49cd-4021-8354-301051214e7b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5184b217-eb99-4d6a-94ce-05f434019c6b"
        },
        "item": {
          "id": "4b81debd-501b-4331-9ece-8db6ff3b3def",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "999a076f-791d-45fc-994d-bf7ab5850620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddef6ea9-9409-4c26-b922-5b0e2f789edd",
        "cursor": {
          "ref": "0392cb09-4e57-4371-8f86-d22a8825a490",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cb8fc140-84bd-45e2-b5a0-1b2fc515f8a3"
        },
        "item": {
          "id": "ddef6ea9-9409-4c26-b922-5b0e2f789edd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "85cf6fc5-35c2-4adf-8270-33e9dc13986f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef90d07d-44bf-4443-8ea7-9dfd4a211d5a",
        "cursor": {
          "ref": "2d638d8f-90ab-4234-84d1-c68d3fecdc32",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b157aebd-c44e-4f06-b7c9-22e3a3f16929"
        },
        "item": {
          "id": "ef90d07d-44bf-4443-8ea7-9dfd4a211d5a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "edbd3e54-2ad5-4d1e-90b7-e9165b47f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecfb94a-3653-4b60-9386-4275b9382b74",
        "cursor": {
          "ref": "acb5c6f7-8346-4cb9-8b69-19679ba6cd77",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a3a4d414-456f-4a24-85f4-12f8f95899f9"
        },
        "item": {
          "id": "8ecfb94a-3653-4b60-9386-4275b9382b74",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c34db073-a496-4f27-9084-2efb6ede784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4026b0f6-2367-42e5-bde0-40d5f919a7b3",
        "cursor": {
          "ref": "1bbfcb5c-b95e-4257-bda6-d88f07b0bf4f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "00081ff8-bb7b-45eb-a0a3-09a896e9233e"
        },
        "item": {
          "id": "4026b0f6-2367-42e5-bde0-40d5f919a7b3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0eae4406-3df4-47d6-8a84-5913b18a25c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210c70c-6569-48df-99b4-40947a5b3874",
        "cursor": {
          "ref": "5f0131c5-42e4-41e1-915f-5a21e0097d1f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9058b78d-869b-4cf7-bf30-34ce8b83ab14"
        },
        "item": {
          "id": "b210c70c-6569-48df-99b4-40947a5b3874",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "37506a8a-69d2-4b32-90b6-8ed90c94e34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caba73af-5c40-4b71-b6b9-33786c1decaf",
        "cursor": {
          "ref": "4be9631c-f43d-4321-92ed-e9b8839a497b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "04df0642-bf4d-4200-9568-9cdd2632cb6b"
        },
        "item": {
          "id": "caba73af-5c40-4b71-b6b9-33786c1decaf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ebd48f9b-71cf-477e-b30d-630306c959c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da64749-dd3a-4bf2-a2ec-bf1a81eb5025",
        "cursor": {
          "ref": "0ac09f45-1e05-4c4a-bf43-44009fff7021",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "631d6fcc-78c5-4b76-a2a0-51ca6b03a17e"
        },
        "item": {
          "id": "8da64749-dd3a-4bf2-a2ec-bf1a81eb5025",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0f097598-afdb-47b0-80e0-4019c71b4038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb326a1-0728-47d7-b2f0-cba386afc96d",
        "cursor": {
          "ref": "2503087b-ca61-4457-a977-d2790e06a6b6",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d1eff5e0-80bf-4571-9e7a-fb0bef7d02d5"
        },
        "item": {
          "id": "8eb326a1-0728-47d7-b2f0-cba386afc96d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6ecf7d56-ad67-432b-ba85-95b5faf5ebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888974c-07b5-4aca-8b51-cdea082b8662",
        "cursor": {
          "ref": "7ff57b4c-5227-4074-b2bd-593b9ca29261",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6824d5df-806f-4c7b-89b1-748de2a633a2"
        },
        "item": {
          "id": "0888974c-07b5-4aca-8b51-cdea082b8662",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afea7338-a293-4fc5-9998-e7c802f818a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e901b92e-ac43-430f-9b7b-be5e2beb492a",
        "cursor": {
          "ref": "c0fcb849-4f24-422d-bbf6-17e4366f1836",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d356668a-3cb5-46ba-8675-4f32089d6771"
        },
        "item": {
          "id": "e901b92e-ac43-430f-9b7b-be5e2beb492a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c5ff9ee7-cf0e-4ef2-83da-13edd6495079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43be074-d34d-4000-8fd3-128fac20717d",
        "cursor": {
          "ref": "08081d8a-82e4-479e-864a-d3a5c50005c9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b8fb13ee-b194-4423-af54-4f2da7ef578c"
        },
        "item": {
          "id": "b43be074-d34d-4000-8fd3-128fac20717d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ae4c5247-7ed5-4a4b-bd10-4e079ae8a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f1bc24-c9a0-4c47-a54a-25c0e655848e",
        "cursor": {
          "ref": "f7591128-25b6-467e-9d12-5d5bafa2fd75",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0c4d559d-5fb1-4134-a726-280a6046e4a6"
        },
        "item": {
          "id": "67f1bc24-c9a0-4c47-a54a-25c0e655848e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "286b13ad-2b66-4804-8480-ca7544fdd4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160bb1a2-1898-430f-91af-71e644caad1e",
        "cursor": {
          "ref": "3b4d1858-5640-4a55-a313-7a065110785b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "70cefd5c-39eb-4684-b818-0354dacf062a"
        },
        "item": {
          "id": "160bb1a2-1898-430f-91af-71e644caad1e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13a94bf6-371f-4be2-a10c-c545306cb0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231c0e64-f662-4a8d-8707-91d20d731069",
        "cursor": {
          "ref": "3d2ecf2a-6c16-49b3-a8d7-581ecc24c0b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a25a6428-82fd-4129-a498-a82dae3d404e"
        },
        "item": {
          "id": "231c0e64-f662-4a8d-8707-91d20d731069",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bb471d72-eb32-4818-9ef3-958664042a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1036c180-3b06-431f-8661-45dcb54763ad",
        "cursor": {
          "ref": "f4124932-6439-47c3-ad0f-b8b107061aaa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a744d61e-f231-480c-be3f-5c32871dd89c"
        },
        "item": {
          "id": "1036c180-3b06-431f-8661-45dcb54763ad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "041dd4a7-bc46-4df9-8281-2ecfb6ae9628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad6a80d-ac1a-4220-b16e-d0a4ee398a72",
        "cursor": {
          "ref": "3b117c49-f56c-4fab-a01c-9e15d69c678c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1c4a60b-ef5d-4323-8618-6506b687ea01"
        },
        "item": {
          "id": "cad6a80d-ac1a-4220-b16e-d0a4ee398a72",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "facfd5cf-d900-4e8d-96aa-dbf708e5b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fae1d18-0413-4352-9d2e-d4631ff4c297",
        "cursor": {
          "ref": "d3857bbe-be4f-4280-9177-1a2d44ba98a8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5ddeaa3-7434-4279-9066-74791d7e2c4e"
        },
        "item": {
          "id": "7fae1d18-0413-4352-9d2e-d4631ff4c297",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f5afd199-3c7e-4e95-88f9-f3ed7feebbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34179b84-1597-4b7a-a6f6-1249a13dbc7c",
        "cursor": {
          "ref": "137da620-d8d5-4b5f-a232-2057639e2295",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "824ad14d-0354-4344-bd8f-4621d8d33d81"
        },
        "item": {
          "id": "34179b84-1597-4b7a-a6f6-1249a13dbc7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4a5140fe-7da0-4fcf-b2af-465a45308009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62cc30b-1ae9-45b7-aa25-990dc9052922",
        "cursor": {
          "ref": "90298849-709c-40f3-8ef6-b08d2606a4c6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31694962-f7bb-424f-a11e-e47f13e111e6"
        },
        "item": {
          "id": "f62cc30b-1ae9-45b7-aa25-990dc9052922",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8a6ba3fa-90fe-4e6d-845e-8e49af72f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b585f5f2-9579-47a3-8bdf-909fd53bdbd1",
        "cursor": {
          "ref": "441ee598-6cd5-48f9-9837-99797e6c946b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "34d74f9f-6ad8-4244-96d0-ded5b9e04f4d"
        },
        "item": {
          "id": "b585f5f2-9579-47a3-8bdf-909fd53bdbd1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "316dcaff-1b1f-4783-b20a-0e3acac40650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aac02a-b1fb-4b8e-ab7e-2781a347a7a7",
        "cursor": {
          "ref": "16440dc9-7076-4f09-8e5c-70901da7f3b4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c191ade6-1579-4884-9d83-f58509c5ba0b"
        },
        "item": {
          "id": "64aac02a-b1fb-4b8e-ab7e-2781a347a7a7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fc55cb31-3fa5-45b5-9323-13c8efc744e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a57f541-a167-48e8-a90c-4ce508057479",
        "cursor": {
          "ref": "09bbeced-a46b-4fe8-9681-b3d039d577c1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "944c7a9f-8ab9-46c6-a2b0-0f1e53179d98"
        },
        "item": {
          "id": "7a57f541-a167-48e8-a90c-4ce508057479",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aeee5431-f440-421e-9f19-fffbaa3ea06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a822bc-5747-4d85-a14f-d8605303a30f",
        "cursor": {
          "ref": "41c61cb9-7eef-49eb-beca-0747aa4fb371",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5f0f726-7bed-4739-92f0-4cd1ff5e4766"
        },
        "item": {
          "id": "54a822bc-5747-4d85-a14f-d8605303a30f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ae030199-a892-44ea-b71d-682542e56204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbbca6d-1a56-409b-b440-aeb4d4ea47da",
        "cursor": {
          "ref": "5a915db2-9257-4297-8b27-9dcb1af66167",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b32a0aec-8115-44bf-a860-5de1bd864ffa"
        },
        "item": {
          "id": "7cbbca6d-1a56-409b-b440-aeb4d4ea47da",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f78bb201-3760-46ef-8c70-e80cb411ab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40970154-cf9c-4a5b-b5f1-43816e47b113",
        "cursor": {
          "ref": "f3d88fef-8cc8-4756-a45c-2e96f615149b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0de27aed-1d6a-4f8d-b8a0-4a55bb65e5c3"
        },
        "item": {
          "id": "40970154-cf9c-4a5b-b5f1-43816e47b113",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e7e575f-1fde-400f-b733-426216e3f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ac2021-5e7b-4d59-8c4d-fbe75150d4f9",
        "cursor": {
          "ref": "26409c8a-868f-44d8-9910-72d1daf407ee",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0ed7db70-ec6f-47a2-8161-fb05ee2012da"
        },
        "item": {
          "id": "d9ac2021-5e7b-4d59-8c4d-fbe75150d4f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "accc3c1f-46ec-4f52-8d51-b2538f532b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac037124-c128-428e-b8b4-1862e0c2fbcc",
        "cursor": {
          "ref": "f7c59361-cc51-436d-a345-58e11348a0e6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b9c16f01-aff0-481e-91e8-05039ee87335"
        },
        "item": {
          "id": "ac037124-c128-428e-b8b4-1862e0c2fbcc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9afff501-83cc-4c67-9bb6-a76dddbde7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a07855-91ae-4846-8e1f-69caa21aec22",
        "cursor": {
          "ref": "ede0ecdf-8f12-45b4-9f1f-788b93f5131f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "113f47f5-305f-48b1-846d-f9d7f854fea0"
        },
        "item": {
          "id": "72a07855-91ae-4846-8e1f-69caa21aec22",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9bf27b4c-2687-43a8-a9d5-595c5b3e1708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a953c-6d51-4f07-a80f-2eaaa740f1c2",
        "cursor": {
          "ref": "ac752bcc-2960-483f-b8af-7d49b0cff39f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9436c11d-8f40-4c82-8888-d19f2223cc89"
        },
        "item": {
          "id": "0d7a953c-6d51-4f07-a80f-2eaaa740f1c2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f46d18d-a845-427e-86f5-64d1be6a4ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50edb0a-095d-48eb-b79c-cce0e4142496",
        "cursor": {
          "ref": "6e1a2847-e38c-4524-9656-9bbd49d4519c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1189d1ad-afd1-4e1f-abea-cacd34f63348"
        },
        "item": {
          "id": "c50edb0a-095d-48eb-b79c-cce0e4142496",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "730763ec-7237-4cf8-9833-439a03a9c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3738193a-d68c-4e8b-bea6-e5d82416f004",
        "cursor": {
          "ref": "8daac45e-9a3e-4443-bb3b-279a8bc279fa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4054efdb-cb1d-4f0f-8c5d-0e1155a5c992"
        },
        "item": {
          "id": "3738193a-d68c-4e8b-bea6-e5d82416f004",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bdc802ec-2d1a-4d64-9606-fbd6420fb839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10054c4a-08f1-470f-b96b-d424a951ece9",
        "cursor": {
          "ref": "8825d7a7-c598-4534-9dff-034e78e70909",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "826a17b9-679f-4597-aec3-35792376bb1a"
        },
        "item": {
          "id": "10054c4a-08f1-470f-b96b-d424a951ece9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3ddca3c4-6073-42c4-86fb-67f80f24275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4ac22-e3d9-4753-9a55-e2fb7f9886ec",
        "cursor": {
          "ref": "0e19b0df-f364-476c-846a-3697b7c92b42",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bca1a8e-193c-4deb-b9dd-6acff9e307c3"
        },
        "item": {
          "id": "5dc4ac22-e3d9-4753-9a55-e2fb7f9886ec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "86eec22e-5bbf-41cc-bfca-7e8aafd3c72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d10aa5-cc30-43dd-80b1-42389d4565e8",
        "cursor": {
          "ref": "a215366e-44a5-4316-b5f9-0032d944a19d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "575510dd-78e7-4302-8d7c-4c7a82f8a88c"
        },
        "item": {
          "id": "31d10aa5-cc30-43dd-80b1-42389d4565e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "18ee8a34-cad2-4b76-b0bf-074c72b5445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d38cfd-65a5-4d69-ab78-873976960b2b",
        "cursor": {
          "ref": "1a8b359a-a80b-43ea-b3bf-77aa6acadc6e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4cff097b-080b-42cd-920b-4d65b3d16c70"
        },
        "item": {
          "id": "76d38cfd-65a5-4d69-ab78-873976960b2b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ac3eb1e-ad18-4116-8a64-ed90e10b9d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc3b7e8-553f-4a21-ae1e-c765f5597174",
        "cursor": {
          "ref": "a7f71608-5521-43ee-98f9-702b9b290e61",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3824055a-a2f7-4c20-a432-5aae896a2eb2"
        },
        "item": {
          "id": "1bc3b7e8-553f-4a21-ae1e-c765f5597174",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a9a64747-a16a-4b5d-80b3-c1f238452c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354e6396-1f5e-41a2-a422-2a6d4a452605",
        "cursor": {
          "ref": "f166a190-915a-4e2e-92e9-8c568b3ebfa2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2dad4ec2-c900-47dd-bb21-eb3aa0053818"
        },
        "item": {
          "id": "354e6396-1f5e-41a2-a422-2a6d4a452605",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c19a283-6b0b-4724-8de4-2914d7fe9dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029f835c-3f9e-4af3-bb9e-bf2aab6ac36b",
        "cursor": {
          "ref": "2bb870bb-e847-4371-b389-90c8ed24c27f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b5fd71e-5d9c-4885-bd95-0c5b3fc5f540"
        },
        "item": {
          "id": "029f835c-3f9e-4af3-bb9e-bf2aab6ac36b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4d606a27-1735-4e92-afa3-4b14757b2bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615aba2c-3ebf-488d-b3d4-c4098dae9181",
        "cursor": {
          "ref": "f709c097-b383-4e45-8095-76d12b5e452f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "118c7cc9-1c7a-4f24-8657-0df5ed74bc56"
        },
        "item": {
          "id": "615aba2c-3ebf-488d-b3d4-c4098dae9181",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f556c6d2-2312-4d09-adbb-3f7c5bb41538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63be2603-f6ad-407a-8438-084026fa25dd",
        "cursor": {
          "ref": "a3de2976-6e91-496e-8b0d-d96a87a6cffa",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ea8b3931-c529-427d-97ba-71673deaccae"
        },
        "item": {
          "id": "63be2603-f6ad-407a-8438-084026fa25dd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "85564382-08cd-4740-9032-8f03d3b8d646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282b280e-9cc3-4b04-a289-046252423520",
        "cursor": {
          "ref": "c4cc4271-0f2d-4f15-af45-2452f4067e8d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "834849e9-28d2-4611-8ed4-1c41eee0492d"
        },
        "item": {
          "id": "282b280e-9cc3-4b04-a289-046252423520",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d2e23e90-ffb2-46ee-b206-f1b590fbd20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c9940c-530a-4bbf-b844-c368cc5c61df",
        "cursor": {
          "ref": "b126f5e7-5a63-49dd-961f-7377c4dcafe3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0d17e3f5-fa29-4118-9152-ef4f4fc8e5e5"
        },
        "item": {
          "id": "20c9940c-530a-4bbf-b844-c368cc5c61df",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9c1aa3a5-aba1-40b8-a585-6ddcee3efbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c205175a-1c0f-4d34-9d1d-cf13fcd7067c",
        "cursor": {
          "ref": "3792f425-bb7a-4d4d-be51-831dfd122d90",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8077b7f6-c19c-4df8-9851-8c480a588962"
        },
        "item": {
          "id": "c205175a-1c0f-4d34-9d1d-cf13fcd7067c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e98f11f6-fdf0-4443-9af7-cbc7d1485009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f331426-7fd5-4088-a15f-dbb66bb209ef",
        "cursor": {
          "ref": "ed59bcbc-6d97-498e-9431-e66fa639517a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "91d71e22-7906-4867-82f8-601c1fd252a1"
        },
        "item": {
          "id": "2f331426-7fd5-4088-a15f-dbb66bb209ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f917ce7a-3b25-4e23-8b5b-b563a532a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c8d226-9d78-4665-b0e5-c54a3e729f67",
        "cursor": {
          "ref": "ed94b661-6559-4a5c-99f9-52a9609d7642",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ea88c19e-ff67-43c5-bd12-0cb3722e68db"
        },
        "item": {
          "id": "34c8d226-9d78-4665-b0e5-c54a3e729f67",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "877bb9af-7917-48b5-b7a3-cbeb91b243fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0065c295-9741-4710-a420-0733790db805",
        "cursor": {
          "ref": "df6c8dbf-4693-4c01-9e8a-6fbe17bcec69",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "57bdf934-aea8-4c43-9811-f0bb9d372d44"
        },
        "item": {
          "id": "0065c295-9741-4710-a420-0733790db805",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ea74312a-3e0f-4402-9049-f3ebf8e44d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ca217e-fb66-4537-981f-bd80406d3455",
        "cursor": {
          "ref": "fa646c51-a159-4b84-936d-9dc02961414b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0561eb8b-b7b9-4678-9edf-6b25524b51b3"
        },
        "item": {
          "id": "c5ca217e-fb66-4537-981f-bd80406d3455",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c36131ed-c8a1-4e5d-800a-562997572803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d6f52c-e4f6-4a7f-9c31-9e3f4bad2741",
        "cursor": {
          "ref": "a2bab7fb-ff99-4ffb-99f4-fefb924b2dac",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b585a917-0051-456a-a685-bea930e6d7d8"
        },
        "item": {
          "id": "24d6f52c-e4f6-4a7f-9c31-9e3f4bad2741",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae9ae22a-18bc-4df2-b0d8-c656c4a0c150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69a88b7-62eb-40e2-b030-9d4933550b18",
        "cursor": {
          "ref": "4addf35e-1a66-49e4-b4f7-79b328a32e09",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "36a44234-030a-49bf-9f94-b480ab70bb62"
        },
        "item": {
          "id": "b69a88b7-62eb-40e2-b030-9d4933550b18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "39a6e7a8-3144-42c1-acba-fc1900044296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4325dd-88f5-4231-b3c0-256105eb6d1d",
        "cursor": {
          "ref": "b997a187-017a-4b71-9f22-46fa4c9fcf6d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8833492e-bed7-46b2-a2cf-c2af06cb1442"
        },
        "item": {
          "id": "fc4325dd-88f5-4231-b3c0-256105eb6d1d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fd81e9f9-1375-4a8f-b8dc-8e45f33f30d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4327edb-ddbb-45e3-abf8-484f11cac05d",
        "cursor": {
          "ref": "bb620092-1f4e-439d-bef4-2295dff48a1c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f9e8dcb3-9b6c-42f6-8196-5f477fa4c648"
        },
        "item": {
          "id": "e4327edb-ddbb-45e3-abf8-484f11cac05d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c70b7578-05ee-4390-b1fc-3a04804b4483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa87ab98-4635-453a-9cdc-b4e93f3d3829",
        "cursor": {
          "ref": "fd3983cf-40b3-4baf-ad7e-8afeca90ebe1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a832a2a1-b59b-4cd7-9b0a-8cbd74859474"
        },
        "item": {
          "id": "aa87ab98-4635-453a-9cdc-b4e93f3d3829",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b9a3ea34-99db-4a48-8d19-5f2cbd6529e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a6a8e-93b3-4811-b8bf-0a5eebc02af2",
        "cursor": {
          "ref": "0358da9c-fae6-4a14-b436-bad7a2549b9d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "32034de5-4521-41b2-bb62-5a2cd8b02799"
        },
        "item": {
          "id": "ad0a6a8e-93b3-4811-b8bf-0a5eebc02af2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "281c41cb-c3a7-4365-b893-24b91893ff3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eee6577-b930-470b-81d1-43016a4f54ba",
        "cursor": {
          "ref": "52119be7-13a6-4cb6-863a-e1b6d3cc3fa8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "09ac6634-8ae8-43b5-ac5e-9546de849149"
        },
        "item": {
          "id": "7eee6577-b930-470b-81d1-43016a4f54ba",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3d93f3d7-e412-4291-ae20-f87daa683bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9280dab4-f47a-4807-80d6-d5368d907a97",
        "cursor": {
          "ref": "10b6d17d-3c4f-4162-ada0-60ae60254060",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0ad08715-679a-4362-915f-0bcfeaaff805"
        },
        "item": {
          "id": "9280dab4-f47a-4807-80d6-d5368d907a97",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3fd67699-08e5-4d22-a4a8-57c37d5b55fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a527ad0d-1b15-4756-b5a9-358ff49012c9",
        "cursor": {
          "ref": "b7ea9b8e-718c-47ab-9414-30384a184337",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b568839-6b8e-472f-8326-728555f63c72"
        },
        "item": {
          "id": "a527ad0d-1b15-4756-b5a9-358ff49012c9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "18a54ab8-63d1-41ea-a51b-ff7635fa9ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c8bc92-45f3-40a3-98c8-a4e6f5f3fb0a",
        "cursor": {
          "ref": "982cf744-b464-4300-b94f-7595ad5cf7cc",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "35e699c5-757c-4ad5-9157-f0763c977598"
        },
        "item": {
          "id": "f2c8bc92-45f3-40a3-98c8-a4e6f5f3fb0a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "131f03d9-367c-41d0-b4f2-5c98ccba567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ded139-dc5d-4474-90fd-4f638a3f86ad",
        "cursor": {
          "ref": "8fe1744c-0576-4584-970e-61c45349ac16",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7cf85a53-c9a1-4ee4-aa75-17c377315a40"
        },
        "item": {
          "id": "a4ded139-dc5d-4474-90fd-4f638a3f86ad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "14f08bcf-182f-4777-be63-433b7455121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255ce3f6-6b8d-4162-8f9e-eb62a1e1ca61",
        "cursor": {
          "ref": "65350960-c97d-4103-b4ce-a87ba3ca4e78",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "055fa2da-bcce-402a-a34c-917177989a02"
        },
        "item": {
          "id": "255ce3f6-6b8d-4162-8f9e-eb62a1e1ca61",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "58fe43a3-23fe-4bb2-9074-26143c64ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b53115-04a3-4786-9880-807604911eeb",
        "cursor": {
          "ref": "c7373e88-4ff1-4f22-9395-ce97660625f4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1167967b-8c8b-41d4-8d9f-2a650389e3b9"
        },
        "item": {
          "id": "11b53115-04a3-4786-9880-807604911eeb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "202b21a1-5fd6-42b3-bdde-7c09c0c0ea09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae9f712-e0de-4915-8f04-868d156f4d07",
        "cursor": {
          "ref": "3757b3d5-cd18-429c-a3f5-a68608f89cad",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2bfeef37-20ec-4299-9278-57ba3649ac40"
        },
        "item": {
          "id": "aae9f712-e0de-4915-8f04-868d156f4d07",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0a1d80a5-b54b-40c6-9af1-8b914196823e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb76fc1-5000-4838-b64e-b05a885bd1d0",
        "cursor": {
          "ref": "3941737d-e490-48a6-9692-5869f0bf2e12",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bab81906-9e0f-46ff-a749-872b4a1e91e2"
        },
        "item": {
          "id": "ffb76fc1-5000-4838-b64e-b05a885bd1d0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aa186d1f-9358-47ce-8797-8ec3354445ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb0467c-67e9-44f0-82f7-1a3473ab43d4",
        "cursor": {
          "ref": "33e7e80b-11cd-4da6-894d-496a6fe74135",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "32f85c07-639b-45e3-aa8f-8fb232e22f7e"
        },
        "item": {
          "id": "9cb0467c-67e9-44f0-82f7-1a3473ab43d4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "05a6d1aa-009e-49ac-924d-b5ed24f2cbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb2cc06-2f8b-46c6-8e45-06b35dd34c46",
        "cursor": {
          "ref": "946a08ef-f321-4f84-95e9-670c85833d15",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "85826a99-ad71-4ba5-a4df-186d47dfd8b6"
        },
        "item": {
          "id": "6bb2cc06-2f8b-46c6-8e45-06b35dd34c46",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a1c53c9b-0729-45d8-8903-4f45414beeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce05c04-20c7-4caf-b8f2-6e09f8bf6205",
        "cursor": {
          "ref": "b463a27c-195c-40ce-8f10-f6c6bddce737",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f4ddc839-fe0c-4098-828e-913fc004a6c0"
        },
        "item": {
          "id": "1ce05c04-20c7-4caf-b8f2-6e09f8bf6205",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fa9effe5-449e-4ad5-bb67-6f8e67453323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27f9d62-26a7-408a-aa80-ee98f8a4d438",
        "cursor": {
          "ref": "9444d744-70d8-40b0-ad39-2f0a8fd559d3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9684f590-d22c-4902-8198-2e04a0e73a59"
        },
        "item": {
          "id": "d27f9d62-26a7-408a-aa80-ee98f8a4d438",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b711b362-0335-494c-a97b-9217fcb0c106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c09760-cc9f-4093-a5ce-44629f84e14f",
        "cursor": {
          "ref": "936f6dea-6279-4f8f-a4f5-158be3577ba9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e1b0e56a-dab4-4089-9ccd-b29d03c4c8a8"
        },
        "item": {
          "id": "e1c09760-cc9f-4093-a5ce-44629f84e14f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "03e2c165-5f8c-43b3-b575-496871a59d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ca8ac5-0dd7-43d4-8af0-9df05514c9f7",
        "cursor": {
          "ref": "1f423ca0-b14d-4d6e-aecb-eb2e8943c148",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "42fe1dac-c9c8-462f-8ee2-fa8a44565a2f"
        },
        "item": {
          "id": "b3ca8ac5-0dd7-43d4-8af0-9df05514c9f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a75e48fd-8e47-4a13-9c64-bee919b01b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150385f9-d567-4df8-b84b-79619bd2ba72",
        "cursor": {
          "ref": "225553c8-c5d1-432b-a6d5-178b5ae8cb92",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "70f3427e-c57b-469d-9559-3753db46d6bc"
        },
        "item": {
          "id": "150385f9-d567-4df8-b84b-79619bd2ba72",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a72606b2-6d8a-47aa-8716-31342a9ea43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25587727-fe0d-471d-968d-968772f75239",
        "cursor": {
          "ref": "845de057-e254-4301-b807-2e433c1e8579",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6be496f5-93c6-42ae-ba95-ef80a3c906e9"
        },
        "item": {
          "id": "25587727-fe0d-471d-968d-968772f75239",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "975c8603-46f4-4c65-9245-5c0a22deaddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38131ae5-0409-4dd8-b675-ba04ec14b950",
        "cursor": {
          "ref": "5822a8c7-ede8-4ef8-85cb-5ee22c25af8e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5019a1eb-293d-42c3-99ef-7343dda8c95a"
        },
        "item": {
          "id": "38131ae5-0409-4dd8-b675-ba04ec14b950",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "78a0856b-0737-4ca2-9bea-cfee35baa1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50681e00-35ea-4898-9417-aa897927ba08",
        "cursor": {
          "ref": "db712c77-7dd5-40a5-b9f5-fdf31ed57e10",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fddaa517-015f-41ec-8e2c-b657306674b0"
        },
        "item": {
          "id": "50681e00-35ea-4898-9417-aa897927ba08",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3c85139-a68d-408b-9253-6e089ac5c259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89313168-b842-4749-a8bd-0e3f71e981e0",
        "cursor": {
          "ref": "52408db1-34be-4597-8dbf-87590ba5e9e0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ecc4ae19-5901-45d5-ae97-d1eaf6671f28"
        },
        "item": {
          "id": "89313168-b842-4749-a8bd-0e3f71e981e0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9047ac4c-faf4-40d1-99b3-0824b34fb7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e02b8b0-e398-427a-999b-b86d6c280609",
        "cursor": {
          "ref": "cb498ac4-9f3a-43d4-9d66-d1bf834f525a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6f4493a6-07b3-4e2f-8b10-3c1b4732a341"
        },
        "item": {
          "id": "9e02b8b0-e398-427a-999b-b86d6c280609",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1ea76ec3-d269-45c0-8a5e-ca0366f91170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9578d06d-6218-4b34-9759-ae2b6f04204c",
        "cursor": {
          "ref": "52e8686e-aa80-4d28-a4bc-4641f92ae17d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5c1da60f-7d8b-472f-9e14-97178687514d"
        },
        "item": {
          "id": "9578d06d-6218-4b34-9759-ae2b6f04204c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61d69e24-b5cd-423b-aa97-4b852d6194fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3edac3-054a-44c4-8285-8a12af600baf",
        "cursor": {
          "ref": "de35e376-9390-49b1-8e8b-473cbce593cf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "349ed590-f763-439d-a7ff-afbd599ce01b"
        },
        "item": {
          "id": "1d3edac3-054a-44c4-8285-8a12af600baf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8fd65712-c773-46f3-82c3-8d8b796dff96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa582b4-fe17-4afe-8951-02f55a7f8db3",
        "cursor": {
          "ref": "7da06b42-29a2-45a4-b014-14d3c6e2fe3b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "426b477b-3753-4f96-9339-059b26184e42"
        },
        "item": {
          "id": "2fa582b4-fe17-4afe-8951-02f55a7f8db3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "05a6cb77-d219-4547-9ed7-88586b1aff06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbdb256-b24a-4de6-bd11-c35c48371e5f",
        "cursor": {
          "ref": "8ba0f6ee-3d45-45af-90db-acca7365ab6d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "057f3ac1-2db4-48ad-8d6e-deb89cd3e5df"
        },
        "item": {
          "id": "1dbdb256-b24a-4de6-bd11-c35c48371e5f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d0d363c3-97b3-4447-b9e7-b42bff8b90aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5061a-5c60-497b-91d4-90fba865f11b",
        "cursor": {
          "ref": "827c0d7f-175d-4109-b0c2-7a6efaafc2e8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8b8d26d9-7fcf-41b2-bc00-34cf4db0bb7a"
        },
        "item": {
          "id": "a0c5061a-5c60-497b-91d4-90fba865f11b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "601239d4-100f-408f-acc3-29068b58759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc2a8c2-0bb2-4634-8878-c68993e726d2",
        "cursor": {
          "ref": "d0e65f69-ab9e-4217-9ddc-4f0b7362ca07",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "36ce1451-b606-40df-ba96-1ff2c0701bdb"
        },
        "item": {
          "id": "7fc2a8c2-0bb2-4634-8878-c68993e726d2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2feb7b2b-ca01-45e6-8219-be71ce5c089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e17be7-38a1-405b-bae2-c6cdf72a47b7",
        "cursor": {
          "ref": "feefaaa7-cec1-454a-a585-d32660d16b4d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11377bbe-7cd1-4d48-a5dd-008c1c6ca79e"
        },
        "item": {
          "id": "35e17be7-38a1-405b-bae2-c6cdf72a47b7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "48ad90f0-6f76-4516-b50f-9f0ce4225736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b9ebb2-979b-47fb-bf28-9cecfed239db",
        "cursor": {
          "ref": "0b12a7fe-5c52-4cc4-900f-620c55ffc837",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5b73f508-ad16-40bf-9977-a71b387f647f"
        },
        "item": {
          "id": "66b9ebb2-979b-47fb-bf28-9cecfed239db",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b811d1a-6330-4482-ac08-2cf38157a71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309982c6-235f-466c-b52e-e5b46d5263c0",
        "cursor": {
          "ref": "4d0145cd-18c1-477b-bb9a-0f8734aa90b8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33060f34-159d-4f27-9300-bfb9b83f122f"
        },
        "item": {
          "id": "309982c6-235f-466c-b52e-e5b46d5263c0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7da99234-7529-4e96-a7be-f53f5e21a7e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d68955-132f-442a-88f0-a8146e262474",
        "cursor": {
          "ref": "ba204f46-6788-4113-89f7-8b8bd9be16ae",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bb599a41-7e48-47db-a84b-999fc23e7cc3"
        },
        "item": {
          "id": "25d68955-132f-442a-88f0-a8146e262474",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2d4defe3-8b67-4cf6-bc7b-7de049f19b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "67d6116a-836d-433c-b7b2-e71e133c92c0",
        "cursor": {
          "ref": "113f1717-ef45-4a13-a2fd-7cc0c9232f95",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "429651b4-acc6-42bd-8315-9d2c4ba3be35"
        },
        "item": {
          "id": "67d6116a-836d-433c-b7b2-e71e133c92c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b970b61f-36d4-499e-8c7c-9ee06bf917d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d7c679c8-a4d7-4a1a-bd06-8332c4d66a8f",
        "cursor": {
          "ref": "dc244599-db62-4201-b7f5-780dc4d67a81",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3dfc7ef7-9cb5-4b15-9d8b-8a7d4a014f5f"
        },
        "item": {
          "id": "d7c679c8-a4d7-4a1a-bd06-8332c4d66a8f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d7cedd01-542e-417a-b2b8-c81034feb4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5d7d03fc-b944-4bf7-994b-9d1a73c3fdbd",
        "cursor": {
          "ref": "d795459b-e8b0-41d0-b0a9-486eea01e5a9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e08e8ae3-12ba-412c-9c0e-08982552ef17"
        },
        "item": {
          "id": "5d7d03fc-b944-4bf7-994b-9d1a73c3fdbd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "52713dbe-1592-46dd-b531-23561c9ac21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7df5aa7d-b947-474e-9f1d-d9d013070b81",
        "cursor": {
          "ref": "50f0d9e2-be52-495f-add9-f8620bac0c75",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "986571c8-54d9-4c4b-a169-528aefa404d4"
        },
        "item": {
          "id": "7df5aa7d-b947-474e-9f1d-d9d013070b81",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6d5c9891-7c44-4c25-8f3e-853c8d718c86",
          "status": "Created",
          "code": 201,
          "responseTime": 11081,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa6ebb9-46cb-4db0-984a-011e8ad79b23",
        "cursor": {
          "ref": "8b078a24-ef1b-4370-90c1-044c8a037794",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a79d5d52-1cb4-4a9d-91b1-a5b2374b7f2d"
        },
        "item": {
          "id": "9fa6ebb9-46cb-4db0-984a-011e8ad79b23",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1ca21c90-4ecd-4740-9cde-4e7e4691bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "972b74d0-6d21-441e-ab60-1a167e43ec69",
        "cursor": {
          "ref": "af0bccb1-6100-4528-9e79-8c1e7c6c5c40",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c3b75471-7bf4-45e6-9d56-bfdaf2f9c919"
        },
        "item": {
          "id": "972b74d0-6d21-441e-ab60-1a167e43ec69",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c3d17ad1-ff54-46e6-bff3-f89757894e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "fe9cbad7-b80d-4e63-8ab4-401c8594540e",
        "cursor": {
          "ref": "5005a8b9-d455-43e4-9fac-dc3b95892b43",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "056dc404-863b-4252-be2e-620096d09b96"
        },
        "item": {
          "id": "fe9cbad7-b80d-4e63-8ab4-401c8594540e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb02b89d-09b0-41e1-9f49-f7e0d26c24c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86174796-18b5-4d62-8ca6-ff675634128e",
        "cursor": {
          "ref": "5165e1cb-dfed-47cd-9891-9bf429cd4b2f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9b0a4a60-c2bb-4d80-84ce-3ffb52789e40"
        },
        "item": {
          "id": "86174796-18b5-4d62-8ca6-ff675634128e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0afafbac-7c03-4c42-a4cc-408b1a9a7d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8669fca9-8908-4aac-9587-b4e8ad891851",
        "cursor": {
          "ref": "ba51afa7-4212-47eb-9feb-19a90d1ff381",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b6786c55-e23c-4bd8-af00-0a7eea173b3d"
        },
        "item": {
          "id": "8669fca9-8908-4aac-9587-b4e8ad891851",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4cf149f-e035-445b-8dc8-d32b42bc0b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebb505d-a047-4e20-af15-19adda69bca7",
        "cursor": {
          "ref": "3836678a-c4ed-49d5-9b30-9cae306bd889",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ec1f432-239e-42ad-8b14-1677ee46436c"
        },
        "item": {
          "id": "0ebb505d-a047-4e20-af15-19adda69bca7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "08a8c972-7e4f-4e7e-a5ea-4ad4e414947b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5965d-2c77-45f7-b5ce-5988705b0eb1",
        "cursor": {
          "ref": "a9f89c38-76cc-4f0d-a690-05c2c32cda81",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "656b22bb-d6b0-40eb-a718-0bce9fc31440"
        },
        "item": {
          "id": "5da5965d-2c77-45f7-b5ce-5988705b0eb1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9e0dbff4-d351-4fb8-b772-4e011d79fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1f30bf-956c-4e7a-b4c4-f0f95f442d2d",
        "cursor": {
          "ref": "9213e3d4-3909-4d86-96bb-d4aa1d931ce6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "323d9976-02c6-4ff0-a55f-60267c4df741"
        },
        "item": {
          "id": "9c1f30bf-956c-4e7a-b4c4-f0f95f442d2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4df1c20a-fcdd-4e00-ae2c-7411dfc895c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c34ad5-4d52-4067-b20a-554d2e2d21fd",
        "cursor": {
          "ref": "7f895234-0167-4408-b8e3-68ce67f4e2e0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "05b70a88-ceff-40ec-b3d3-1746e2f0e94b"
        },
        "item": {
          "id": "74c34ad5-4d52-4067-b20a-554d2e2d21fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e046ac4-dbb8-4245-a953-038d8f7535e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba7c60-1862-408e-acf3-8e3eb6db813a",
        "cursor": {
          "ref": "30d63d7f-a4ba-4526-90ef-32dba39650f9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f3a39b9e-e9e0-4ee9-96f3-f12f81d94fe7"
        },
        "item": {
          "id": "ecba7c60-1862-408e-acf3-8e3eb6db813a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "48da22ea-224a-481d-9403-6a6947e9381f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99098e50-122d-4c49-93ee-1f5511bef8bb",
        "cursor": {
          "ref": "05277409-adab-4fad-bf43-ca0e582d846a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9fd8fb8a-fe95-4ed7-bd25-2663265f9b9f"
        },
        "item": {
          "id": "99098e50-122d-4c49-93ee-1f5511bef8bb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f726d019-5bdf-44ba-bc8a-c45b7c137fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07192736-5a1d-43a1-a54e-2e433e7573fb",
        "cursor": {
          "ref": "48f44898-8b1e-4cd8-be33-3278d2b43bb5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3db0e4c0-faae-4954-8631-8f361d257ab3"
        },
        "item": {
          "id": "07192736-5a1d-43a1-a54e-2e433e7573fb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3542f63c-b975-4fb9-9f66-614c2e8a968c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28215945-13f7-4543-88c3-8b52437c7349",
        "cursor": {
          "ref": "c999bc33-359e-468c-9c9f-8a89298f7fe0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28cad6a1-db84-4e1b-b5ca-15525179d5d9"
        },
        "item": {
          "id": "28215945-13f7-4543-88c3-8b52437c7349",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e0b22f93-c669-477f-91fd-a49c8935ec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8928f2-936f-425f-a43e-0013d5391afa",
        "cursor": {
          "ref": "41f5af3e-2096-4d5e-8af6-b7dc762f67e4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "91dab4be-13f7-49be-88fc-4a591408f5e1"
        },
        "item": {
          "id": "6a8928f2-936f-425f-a43e-0013d5391afa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db9ebdbe-4c26-4918-be9d-4ab8ec3ced7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2848ed-59c9-4914-9cdb-4c47e116f30d",
        "cursor": {
          "ref": "9f2d8e2b-ec92-4ac2-ab36-a0099ce7998d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4fb17473-b4b4-4a3b-82f1-964d1d1f53af"
        },
        "item": {
          "id": "9b2848ed-59c9-4914-9cdb-4c47e116f30d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2a7c9a5-5425-44be-bf33-85f2d5e6016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a84a54-ac71-49a9-a8b2-94c3af44a7b6",
        "cursor": {
          "ref": "a36c5d66-4e25-4fa9-ac38-0c2613522981",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2d1143f1-339f-4f7d-aec8-221fa17354e5"
        },
        "item": {
          "id": "64a84a54-ac71-49a9-a8b2-94c3af44a7b6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33562b94-e399-454b-a98f-941ca21c81f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f5363b-7f8f-46e5-ad30-569fad03dd69",
        "cursor": {
          "ref": "e5ef5699-968e-41c4-8a25-d6d78162c7e7",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "57fd0686-bcd5-4229-8425-d3c14b7712a9"
        },
        "item": {
          "id": "06f5363b-7f8f-46e5-ad30-569fad03dd69",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3eff496-c21d-461a-b123-058729f0fb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e777ed9-d19f-4fbb-aa19-7addeb805fef",
        "cursor": {
          "ref": "57277cc2-c72a-4eac-b620-e853e73d35fc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "41a2e612-f074-4bc7-bb91-2f535f917425"
        },
        "item": {
          "id": "3e777ed9-d19f-4fbb-aa19-7addeb805fef",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd35d2b4-5eaf-4b97-afb2-970c04989252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574aab64-0b18-4192-978c-e366e92e018d",
        "cursor": {
          "ref": "a7a09caf-aefe-4c22-8de6-ac19cc02e2a2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "86c0d0c5-8b73-4038-b5a0-6d9a9f5cc249"
        },
        "item": {
          "id": "574aab64-0b18-4192-978c-e366e92e018d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d8109c1-0874-4c58-8fb2-0ce17d12fdd0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bdf19b79-54f6-4741-928a-70a881c6028e",
        "cursor": {
          "ref": "5670dca3-c9c0-48be-bd33-19bd5acd8157",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0063e5d7-f6f5-48c1-8e22-eaf4b5f00a77"
        },
        "item": {
          "id": "bdf19b79-54f6-4741-928a-70a881c6028e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4327b0c5-e5c1-4011-866f-9f1c781434ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662798c8-bfbf-46ff-aedc-c594428afbb6",
        "cursor": {
          "ref": "f386175e-ea54-4159-97e8-6fca4b7b9719",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "31d3304e-0eb1-4558-8d71-268e79f4e848"
        },
        "item": {
          "id": "662798c8-bfbf-46ff-aedc-c594428afbb6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6cfd081e-5033-489e-91d8-4e16ac4672c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218fe14a-d258-44f0-a7e3-367f85b78f80",
        "cursor": {
          "ref": "bd84f2ad-38be-466f-abf3-2908d0cb64f6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "828ff590-f88e-41cf-a0c0-7714b0dd4294"
        },
        "item": {
          "id": "218fe14a-d258-44f0-a7e3-367f85b78f80",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff3ac09c-c1eb-45b3-a873-2f270b300e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32971a7c-9fe7-4861-824e-777132ac0e05",
        "cursor": {
          "ref": "4c28762c-fb39-4ef8-bfa2-7471a7aaa940",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1b2ab58f-bbe1-4046-b1b5-bb8200ef7765"
        },
        "item": {
          "id": "32971a7c-9fe7-4861-824e-777132ac0e05",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ed697c89-640b-4224-9511-16a31b874b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ca0d0d-b59a-47ba-97b9-f282414b2382",
        "cursor": {
          "ref": "e545d9cd-4439-4819-95f7-5920053df882",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "20bacc64-d761-4679-9457-f1b543756bf4"
        },
        "item": {
          "id": "79ca0d0d-b59a-47ba-97b9-f282414b2382",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "94a85a88-240b-448f-9517-f1ca9336f5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fb45b1-ec85-4527-a003-3ac62800175a",
        "cursor": {
          "ref": "36a3a403-b14d-4fb1-a872-c3bc5577e585",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "98aa570d-a0e5-4d37-9d70-c687ba5a1307"
        },
        "item": {
          "id": "71fb45b1-ec85-4527-a003-3ac62800175a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fcad7def-f7d7-43f4-a2ac-3c76075cad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6853aa06-b891-480c-97ea-d9145816877e",
        "cursor": {
          "ref": "c3391df6-ecae-4731-9928-96ec313ed85a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "37e97a49-e070-4108-acfb-f6ffa5ea5f6d"
        },
        "item": {
          "id": "6853aa06-b891-480c-97ea-d9145816877e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0aefd293-fc09-495c-85b3-74b5c95e78cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7dfcd3-1a4c-4ca9-89c8-c038fc8b9cee",
        "cursor": {
          "ref": "7ee345db-b052-434a-aa37-b98e05bb9d09",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4626bfe9-12d2-4f65-8128-1bab09e22221"
        },
        "item": {
          "id": "8e7dfcd3-1a4c-4ca9-89c8-c038fc8b9cee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5edbdc18-003a-40c5-bf28-2b3d1c77a560",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a5513c4c-ff4d-45aa-95e9-31b7c22f63b4",
        "cursor": {
          "ref": "27165915-35bf-4caa-a18a-dc6e13d5cadd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ff83bf2b-c945-44cb-a072-d61996e27698"
        },
        "item": {
          "id": "a5513c4c-ff4d-45aa-95e9-31b7c22f63b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "663298cb-cb33-4d15-93c2-f3b34bd29a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5366118-f67c-4181-9346-01e16d48f012",
        "cursor": {
          "ref": "6c4c1951-90ee-43b5-9e07-191138bd3e7c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7ebf5908-385f-48a1-860a-75d3bf55a5dd"
        },
        "item": {
          "id": "b5366118-f67c-4181-9346-01e16d48f012",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8f96f562-ec73-4dde-8368-0b49c3d21dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59cb74f-24cc-4db8-b2ff-2338fb243c07",
        "cursor": {
          "ref": "df619b79-5d46-41d9-8c7c-d6bfd6728605",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5465361e-ce8c-4cf5-a39a-60f3b0ad1baf"
        },
        "item": {
          "id": "a59cb74f-24cc-4db8-b2ff-2338fb243c07",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "026a07ed-5c4d-490f-bf9c-25f189abe4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffb25f3-0ac9-429c-8151-2faa08c1f02d",
        "cursor": {
          "ref": "c48d4a87-4afc-4b42-bd17-61c53fee0e84",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d70896cd-4dc7-4cb9-b30f-a90a05809c25"
        },
        "item": {
          "id": "dffb25f3-0ac9-429c-8151-2faa08c1f02d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cf1b467-2b2c-4c79-83ae-993f9909efec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e039034-aba5-43de-b272-5d3d244cde25",
        "cursor": {
          "ref": "9f2b4b3a-8395-4a9b-8a37-793b32c8ee49",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1e901589-755d-49bd-ab9e-f5754ef1bae3"
        },
        "item": {
          "id": "5e039034-aba5-43de-b272-5d3d244cde25",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b224c8bf-1908-4655-93ab-704909436b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b14df6-6a28-42a3-83cf-b1de07a83536",
        "cursor": {
          "ref": "99d89590-e39f-4a7f-8f0e-0ea8b5aecf91",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fdefb5f5-a433-43a7-9681-7c32363c41fd"
        },
        "item": {
          "id": "89b14df6-6a28-42a3-83cf-b1de07a83536",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "45b97d9c-70c2-4b4a-9226-2bd3e51e7940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fa8bbf-1905-42f9-8ecb-4ff81daf31e6",
        "cursor": {
          "ref": "52f1017d-54b2-48c0-bd44-4142eee9eead",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de81c231-176e-41ae-9f45-26a7f77decf5"
        },
        "item": {
          "id": "d3fa8bbf-1905-42f9-8ecb-4ff81daf31e6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c96b36a0-c90d-4fc5-bc41-526b6a009052",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bfc181bd-5e89-4c60-8a9e-d94b57380b24",
        "cursor": {
          "ref": "a61465a7-f12f-485f-83b2-b7d20e70649e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cd8011af-404a-4b5a-99d5-04e2ee67d470"
        },
        "item": {
          "id": "bfc181bd-5e89-4c60-8a9e-d94b57380b24",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "123409e5-6a3a-41a1-b7c8-ffab62b90c46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5217e4-fd00-4764-a49e-b544c657d0b3",
        "cursor": {
          "ref": "5ee45140-db9c-4e8f-b730-89785a60d26f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8a697e42-2570-45a4-843a-5cd55b7ccd73"
        },
        "item": {
          "id": "3c5217e4-fd00-4764-a49e-b544c657d0b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8bc75a10-bf16-4ff6-97b7-af78bb20b98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f629f8ab-2ff7-4813-bf5b-9a53a23763a9",
        "cursor": {
          "ref": "c6ed5bc0-8738-4110-bd00-d303ed51721a",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "42495c7a-938d-41fd-ba1a-9a864c1887d4"
        },
        "item": {
          "id": "f629f8ab-2ff7-4813-bf5b-9a53a23763a9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9f6f203f-7713-4871-9635-68c3a7ba8816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1da2675-c1e7-4892-ae00-d5b77df97af7",
        "cursor": {
          "ref": "615bafcb-5c11-4acb-a61e-921abaeca954",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a13d2c8a-b5e2-4e63-9cd7-e7960e4ac97a"
        },
        "item": {
          "id": "f1da2675-c1e7-4892-ae00-d5b77df97af7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f15dae24-9867-4cba-87c9-5b29bcea4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2308fb8e-26f6-4735-8847-17356dce0467",
        "cursor": {
          "ref": "2d58baa8-9dcb-4411-9b14-b4836f0647b3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98ebb97c-c8d6-4196-bc56-a20bfd384939"
        },
        "item": {
          "id": "2308fb8e-26f6-4735-8847-17356dce0467",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "948fb02d-71c1-4a1f-b797-80fe0c2dfe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415d30e7-0045-4b0c-a56b-f2c26efaef50",
        "cursor": {
          "ref": "c36a1dae-9a59-4c55-865e-89a415b592b2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "395d0421-ba2e-4a2b-a248-d4e98ac37179"
        },
        "item": {
          "id": "415d30e7-0045-4b0c-a56b-f2c26efaef50",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b5cec310-cf52-4e82-aaf8-deb781d98759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f29f25f-52ce-4feb-b881-47d33c6bbe36",
        "cursor": {
          "ref": "4aa10f7d-261a-445b-92b9-66a793bde64b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2c128408-96f8-4f73-b8ba-54fc40a278cd"
        },
        "item": {
          "id": "9f29f25f-52ce-4feb-b881-47d33c6bbe36",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "389ce324-83c3-48b3-a910-a75b485e3a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f48d8a-e550-4283-af52-814d1376385f",
        "cursor": {
          "ref": "098ea920-2903-49c2-97cd-8b212c62c070",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6841eff8-a38b-49d4-9c7a-4288e8357e16"
        },
        "item": {
          "id": "67f48d8a-e550-4283-af52-814d1376385f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b6ed7512-f4e0-4592-a86b-1dda57a560c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2641e566-67f7-44d1-832f-12fa769791d5",
        "cursor": {
          "ref": "b9891d06-4503-43ba-a14a-e7390a0fb47f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bf7e65f4-bed7-4b69-92d2-4a720969d2a3"
        },
        "item": {
          "id": "2641e566-67f7-44d1-832f-12fa769791d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f9b604f-b9fa-47f6-93d4-f42cd55cfca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01025851-fa34-48ee-a06a-8ee0a66f98ea",
        "cursor": {
          "ref": "7a7f5bbb-ddd0-44e7-b8f2-1bf48ad985d8",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "86fb03b0-1da9-45e7-b956-4b60fec51387"
        },
        "item": {
          "id": "01025851-fa34-48ee-a06a-8ee0a66f98ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a1018b5-6335-42df-a1d0-475161fd8408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d37078-b0ed-44d3-9804-f7613be57d85",
        "cursor": {
          "ref": "e8356555-6722-45e5-bdb1-95058b932666",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e1ae6c80-ef1f-4e02-a387-602464a39d5c"
        },
        "item": {
          "id": "30d37078-b0ed-44d3-9804-f7613be57d85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "90e37a58-0111-448e-b3ad-53037e8662bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759b62c4-9a93-467f-a474-484bb01384ce",
        "cursor": {
          "ref": "023145ef-a826-46ee-aa8e-39ba55ca8514",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c6accc75-1843-4ae1-b08a-70864b660b34"
        },
        "item": {
          "id": "759b62c4-9a93-467f-a474-484bb01384ce",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3af7d21-b8dc-457b-b9e8-2b863c7115b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdf1fb3-8522-4456-8357-79c33edb139f",
        "cursor": {
          "ref": "114be8fb-a367-41f4-ba4e-1b386409487d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca770124-575e-4fe2-b038-fa87bf0a301b"
        },
        "item": {
          "id": "4cdf1fb3-8522-4456-8357-79c33edb139f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e2a78f54-2492-4b1e-be09-15c4224b772c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c76e6c-959f-42e8-8ee8-54b2b44fca93",
        "cursor": {
          "ref": "a3b9211c-7114-4e1e-a8ab-f0c92096b116",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c24955f8-baf1-4499-8d54-bd951363be2f"
        },
        "item": {
          "id": "d1c76e6c-959f-42e8-8ee8-54b2b44fca93",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2353245c-8722-4243-9272-4f9de3ec4b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465aa1db-b20a-475c-94e1-6c71180b229a",
        "cursor": {
          "ref": "edc4480a-6fcc-46b8-907e-fe86510778d2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f8c315e9-5b92-4925-94b6-12f276358650"
        },
        "item": {
          "id": "465aa1db-b20a-475c-94e1-6c71180b229a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb5c426a-8345-4fd5-82bc-fa280a60f408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acf4e51-d525-4539-bca1-a92b369b0e48",
        "cursor": {
          "ref": "9fe23da2-f6fc-405f-abe5-1e31c6fe71b7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3d128873-1f40-4a5b-acc9-c6f6a2c5f991"
        },
        "item": {
          "id": "5acf4e51-d525-4539-bca1-a92b369b0e48",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8622fb6-ca3c-4e6b-9c60-a34aea3f0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d4a0f-e94e-476f-be0a-98877a9126dc",
        "cursor": {
          "ref": "551a7d94-ba54-4d89-bc8c-da27c8d13316",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "24498146-fb81-49e6-a6c7-028bbc05f31b"
        },
        "item": {
          "id": "886d4a0f-e94e-476f-be0a-98877a9126dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "089e282f-f827-41a1-9376-7e513896a258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2519d9e4-c13a-4ad6-b31d-00578ea48651",
        "cursor": {
          "ref": "14882ef4-bc31-4d84-8d2b-ee7cd577d7ae",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "818de36d-95af-4f81-8a4d-d851c6bca7f9"
        },
        "item": {
          "id": "2519d9e4-c13a-4ad6-b31d-00578ea48651",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c17aa28-13a7-4e48-bdcd-b5b8c37e592e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "ec41d24f-77eb-4d7a-85b7-e77b711c4584",
        "cursor": {
          "ref": "7467a9cd-4d37-4b67-8ace-da80af05ae21",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2cb1e7b3-c369-4842-9b13-366661d49031"
        },
        "item": {
          "id": "ec41d24f-77eb-4d7a-85b7-e77b711c4584",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9816d7f8-646a-423e-be29-8cc4f2cfae49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7be27-2f09-42a7-b7c5-6b2b9017c518",
        "cursor": {
          "ref": "75008aa0-b8a8-4e28-8384-841cbb69c81b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e66fba3-c9a1-40e2-a1e3-f4b4cca23633"
        },
        "item": {
          "id": "30d7be27-2f09-42a7-b7c5-6b2b9017c518",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5015b26f-a476-46f3-ad06-04e3c5f6a31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b607c140-38ee-46be-bd33-d3a550c35b4d",
        "cursor": {
          "ref": "7c2217a9-01c9-42d6-ae19-a446111531f0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a0cd627b-533a-4bb1-985b-74eea9b18354"
        },
        "item": {
          "id": "b607c140-38ee-46be-bd33-d3a550c35b4d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2a838e9f-31e5-4aa7-b04c-2dfcb13aeecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73ea44-7dda-4b48-8898-f4ff962666df",
        "cursor": {
          "ref": "53688f43-4ac8-4d92-beb2-9ca629c41386",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "57cfd8ac-ce06-416e-9e7e-e10357bb8b04"
        },
        "item": {
          "id": "ca73ea44-7dda-4b48-8898-f4ff962666df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e8224ad-7961-4c79-bc56-ee1a679210c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11162503-abea-4ec6-a696-7cee8e41efb6",
        "cursor": {
          "ref": "7b43264d-1d96-4193-93b9-47f1da75f324",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a898b76-a3e5-4b9a-91d2-8211af5fb498"
        },
        "item": {
          "id": "11162503-abea-4ec6-a696-7cee8e41efb6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "27f90c3a-b562-4df0-a1c2-270b0c28be2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6184ad-48ca-4fc7-a864-095fc86eccfb",
        "cursor": {
          "ref": "2278bccc-99ee-46f3-957d-d516d1b9bcf8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6c10ac4c-15e3-453b-a12c-480eaaed26e5"
        },
        "item": {
          "id": "5c6184ad-48ca-4fc7-a864-095fc86eccfb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f1ea508-de9a-4593-b40b-73fd14bec38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e9f60-8d74-4fd0-9a41-38f35b83309c",
        "cursor": {
          "ref": "8db7e8e7-8d7d-469f-8e4d-9c42cd750da7",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5be4f26d-40ca-4631-a7ab-614eecb8e5a2"
        },
        "item": {
          "id": "af1e9f60-8d74-4fd0-9a41-38f35b83309c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "432d3bad-02b0-4bd5-8842-bcca0588e0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362f552e-6e4b-4c35-8a91-0e54fc16b5de",
        "cursor": {
          "ref": "b587b1e6-0a8a-42df-9f8c-2b2e4456791b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a2653bc8-5d63-4ae0-a107-c48c6e8b3709"
        },
        "item": {
          "id": "362f552e-6e4b-4c35-8a91-0e54fc16b5de",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e32406fa-9381-492d-abba-9c1f4c983f68",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "6732b6e8-aa57-4b1f-97b8-5fff8165fad7",
        "cursor": {
          "ref": "0339a547-2d75-4665-94e5-399813cafa0a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cd6a7b44-aec6-4d2d-8054-18a1c11e5914"
        },
        "item": {
          "id": "6732b6e8-aa57-4b1f-97b8-5fff8165fad7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f55bfd64-d8ef-409b-afac-2dfa0060186f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622b8ea3-1018-47af-85e3-5fc7dc2fb1a3",
        "cursor": {
          "ref": "c2f9745e-fee8-4952-bbb5-64a530c11cf6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f635cf59-4eaf-4cd7-954a-4bec5846f5e5"
        },
        "item": {
          "id": "622b8ea3-1018-47af-85e3-5fc7dc2fb1a3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3c367a8c-56f3-45a3-9911-1759dabfc45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb75d5-12b5-44b0-b2b5-28376a536fea",
        "cursor": {
          "ref": "478d5484-4771-4078-94aa-83413edec7b1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80bc7c89-2f24-431d-8a09-1f753ccce036"
        },
        "item": {
          "id": "a0fb75d5-12b5-44b0-b2b5-28376a536fea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fa3821c2-8550-412c-8f5b-7193fbd64c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b840e61-5d2d-4e93-acbd-03a7ebffda60",
        "cursor": {
          "ref": "9fca0781-8304-45ba-9805-10607e7b98db",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "200e099b-b20c-488e-abc4-9cb07be465c6"
        },
        "item": {
          "id": "4b840e61-5d2d-4e93-acbd-03a7ebffda60",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0c74f87d-cade-4932-97f4-e13add5d241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c68384-9cef-4b05-8573-7e1cf556a1bb",
        "cursor": {
          "ref": "3a2b345c-6acd-4b1e-a226-bd2ddce5bab4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eef25242-22f4-44c1-b676-b712178434de"
        },
        "item": {
          "id": "21c68384-9cef-4b05-8573-7e1cf556a1bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "76721203-7f18-4b5a-a07f-2882bff8f271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9b32fa-673a-4d91-bb0d-ffc9410bff5a",
        "cursor": {
          "ref": "c424d9e3-1d40-4418-99be-96be6ff4d42b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ab8c7049-fa3b-4f40-bb3e-873e2345aba0"
        },
        "item": {
          "id": "4b9b32fa-673a-4d91-bb0d-ffc9410bff5a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5bd445df-d40a-48ec-8faa-4546a1dfdf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702c25ac-6c84-4ef4-ae95-57d0722efc48",
        "cursor": {
          "ref": "0d19aca2-fdeb-4128-bd52-dd2a3210b66d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "93032259-5f82-4222-8b20-a10f8b85dffe"
        },
        "item": {
          "id": "702c25ac-6c84-4ef4-ae95-57d0722efc48",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "db070428-9605-41a2-b2f3-23e261867af0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "7c335fe5-eaf6-489f-8764-8838c6f3170e",
        "cursor": {
          "ref": "eef4cd4b-3a31-452d-bfbe-5961b8cabe2d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a219e1be-6f66-4c0c-9b7d-74bc17ea5a20"
        },
        "item": {
          "id": "7c335fe5-eaf6-489f-8764-8838c6f3170e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ed9f7293-b685-492a-b28e-4fcad0d65fb8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "af3205f2-8dd9-4d8a-8e3b-79f4973a2ce8",
        "cursor": {
          "ref": "a412b017-6a73-4b1e-9df5-8de23dc43103",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3c3b2adb-e623-48d4-b2b3-532f7e325e03"
        },
        "item": {
          "id": "af3205f2-8dd9-4d8a-8e3b-79f4973a2ce8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "44dd9a99-7fdb-4cf3-a07e-3e1e149dfa34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "2a7c7cb5-9b05-4553-ae82-3e6f05bb165f",
        "cursor": {
          "ref": "8955037f-a64d-445c-bf03-d9d7c654217c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "946a7e11-75a4-43d9-8950-f6abd1f6d93b"
        },
        "item": {
          "id": "2a7c7cb5-9b05-4553-ae82-3e6f05bb165f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b9b708d6-142e-4a37-8192-618bb25bd992",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "7fd8c00b-b8b1-4208-92bf-a5b2ed43d6f9",
        "cursor": {
          "ref": "e053f58f-1114-4256-9966-af702af9cc98",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "870dc81c-de90-4a60-b0cc-8b9e02533a88"
        },
        "item": {
          "id": "7fd8c00b-b8b1-4208-92bf-a5b2ed43d6f9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0166a3a-a392-472d-a8f8-12e9c9de5542",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "f5a11d07-d134-4410-86cb-89abe5bebdf4",
        "cursor": {
          "ref": "bb909604-31da-413b-9a58-093bb3d6a0c9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9000f91e-ff8f-4050-b20e-03641a32b14b"
        },
        "item": {
          "id": "f5a11d07-d134-4410-86cb-89abe5bebdf4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "49435ca2-5af8-4d3b-bd9f-f6af92ce7e15",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "b708bb09-64fa-456c-bd7a-d2a59c0c8406",
        "cursor": {
          "ref": "ee4f7630-8d6a-4d36-a857-89a69f4914be",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "22a4b513-2d45-46a1-ae6d-e36f5b58e5ad"
        },
        "item": {
          "id": "b708bb09-64fa-456c-bd7a-d2a59c0c8406",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6bae3891-4921-40de-948e-793b4fb98f79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db633eb1-19a0-4185-9496-57329d2178c5",
        "cursor": {
          "ref": "e6ab47ec-857a-4fde-aded-d42db3f78bde",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "91c0814b-5504-4018-9619-408dfffb1493"
        },
        "item": {
          "id": "db633eb1-19a0-4185-9496-57329d2178c5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9940b8be-e38a-425b-af69-9205d609be14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dafc42-b6d0-4723-b43d-0caea32665bd",
        "cursor": {
          "ref": "99e2ac53-e54b-4404-8187-4df8570b64bd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "da999b4e-d985-41de-8d09-aa0736ce9d6e"
        },
        "item": {
          "id": "a1dafc42-b6d0-4723-b43d-0caea32665bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9714a30a-5e0b-4037-94cf-da94517bd1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3469acf2-2608-4bc7-8798-f5c5bab772f8",
        "cursor": {
          "ref": "6990457d-409d-48f7-9018-20815a49a144",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "01e785c3-dcc9-4fd6-800f-35d72ddee5ba"
        },
        "item": {
          "id": "3469acf2-2608-4bc7-8798-f5c5bab772f8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b7960dea-91a7-4f0e-b24f-e534639efbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ffbac0-7561-4dac-b6af-7549cee69067",
        "cursor": {
          "ref": "fdebe497-8621-4468-8c47-342aed923d35",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c58ef1a-4c6d-461a-8b4a-687adf8d7741"
        },
        "item": {
          "id": "41ffbac0-7561-4dac-b6af-7549cee69067",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "838ce932-1fa7-4927-9003-f0c61df9901c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f3369a-aa70-4060-a303-5d7c6851713c",
        "cursor": {
          "ref": "76bb401d-a583-4bb3-968f-08e53dc0e801",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6e10a1da-7394-4978-96a4-3501eb72d452"
        },
        "item": {
          "id": "28f3369a-aa70-4060-a303-5d7c6851713c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ac74f50a-f8bf-4233-b2d6-76df4eab93b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac3e5fe-c24f-48c4-a402-b54b524e900c",
        "cursor": {
          "ref": "b40a5136-4d51-447e-8de7-38b973f0eb0a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "03c227da-eace-4290-a8ec-b0d95675586b"
        },
        "item": {
          "id": "1ac3e5fe-c24f-48c4-a402-b54b524e900c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "526aaca6-a6e7-46f9-94b8-e430762c4a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5d371-e723-4b7d-8fd5-9016cf065892",
        "cursor": {
          "ref": "8f83b793-52eb-49b7-ae1b-1df010232b68",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74e7351e-ec0b-470e-afed-1dfb1454c0b3"
        },
        "item": {
          "id": "4be5d371-e723-4b7d-8fd5-9016cf065892",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49592f87-7b1e-4951-8f5c-3a4e61727f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb10077-ee75-4c85-8ed4-9bbefc6d92c6",
        "cursor": {
          "ref": "a8bbfc78-7c5c-40c6-a7e7-fb2d1a80f76f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "05aed08e-2bf9-4fde-86ed-1eb3ddb7b28e"
        },
        "item": {
          "id": "2bb10077-ee75-4c85-8ed4-9bbefc6d92c6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0c819d2d-79cd-44e0-acf2-717079fdc71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a41c29-4254-4f54-a0e9-9ceb9ae03d94",
        "cursor": {
          "ref": "645ddfe5-17a8-4172-a032-32798e7b2e7a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90a2bef4-7f7c-4fb0-875e-550602915880"
        },
        "item": {
          "id": "66a41c29-4254-4f54-a0e9-9ceb9ae03d94",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47bd3d8f-1de7-49ca-a07b-41cac7319beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e45033-be14-4180-a5b4-12f88afc2f7a",
        "cursor": {
          "ref": "c95230e4-4522-463e-8948-f2344d92d8ce",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "08cd6aed-9d3c-42e3-96b8-c1704c984a4f"
        },
        "item": {
          "id": "71e45033-be14-4180-a5b4-12f88afc2f7a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a723232b-78bd-49fb-898d-fb06bfcdeaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7574ffd3-457a-4cca-8648-53029bd3cfce",
        "cursor": {
          "ref": "deb36ed7-83b7-4659-b3fc-eb4144109b94",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "05bbcc97-4b1a-422e-a28f-53b3b04fceea"
        },
        "item": {
          "id": "7574ffd3-457a-4cca-8648-53029bd3cfce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ad98d595-db33-44e2-9319-1b6d6ec677d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8901b8f-ea61-424f-9c7e-effb52aeec3a",
        "cursor": {
          "ref": "0d67fe41-8b9b-4997-9f13-057d2439068b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60f47647-11b4-459c-9423-8c2919628d3e"
        },
        "item": {
          "id": "f8901b8f-ea61-424f-9c7e-effb52aeec3a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1aa94681-02a6-4dbb-9d24-8fd7a9c5e441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f58c6-c480-4ac1-b129-841e168377dd",
        "cursor": {
          "ref": "8456eb0d-7481-4e45-afd0-be7846881aec",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b76e0e95-013d-43c7-827c-a8a36c680f9b"
        },
        "item": {
          "id": "da1f58c6-c480-4ac1-b129-841e168377dd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "923dfc35-bae2-459b-b6c9-7aa06f7a13dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc8d5a3-c2ce-4853-8d11-71e952db382c",
        "cursor": {
          "ref": "436f3d1b-5570-4407-b683-38ed0beac305",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27f99d52-acc7-4a40-964c-f8ab4bba8bcb"
        },
        "item": {
          "id": "fcc8d5a3-c2ce-4853-8d11-71e952db382c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "142099d8-af9b-4524-8be6-6aca6be6f9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccefc4a-b236-4871-9339-90c1d8e50a37",
        "cursor": {
          "ref": "3217481b-660f-4524-a64d-b2d725cfb53d",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d66ca926-4636-47e3-8853-2cbe8c2fc488"
        },
        "item": {
          "id": "1ccefc4a-b236-4871-9339-90c1d8e50a37",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1eecba5b-5de2-4499-934f-df78c9e47e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0de7e4-5356-4fe8-8d19-f7850cbe8760",
        "cursor": {
          "ref": "fd6a4a3c-c0f0-49b9-bee9-cebbb59709e0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "480f306a-0f96-4548-9f71-999a6f2640b1"
        },
        "item": {
          "id": "ce0de7e4-5356-4fe8-8d19-f7850cbe8760",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e2f0f5e-3734-4e77-91cc-9109fff0415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bbeb12-0eaa-4fcb-8d0a-b913c5edccc0",
        "cursor": {
          "ref": "79e7cc4d-31b3-4cd4-b42e-c7dc439c70a7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b1d9f99-243e-4024-a132-9c46d23c26d9"
        },
        "item": {
          "id": "89bbeb12-0eaa-4fcb-8d0a-b913c5edccc0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f1759bfa-9323-4c2c-8233-34e809d7a146",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "37d46ccb-f98b-4f94-b643-546d9ae4975f",
        "cursor": {
          "ref": "81a0feec-6c5d-4cd9-bb12-585835d17cd4",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4533c3d-5d01-4f91-ae95-2064f2621432"
        },
        "item": {
          "id": "37d46ccb-f98b-4f94-b643-546d9ae4975f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "03b3c555-2ebf-4633-ab17-31a2546d2de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edfa6d6-d5b2-4d3b-b506-a46d041e0ab5",
        "cursor": {
          "ref": "cd0420ff-540d-4fbe-9b2a-80644c7ba284",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "db08b313-f21a-4296-acd5-a2b235d9d9e4"
        },
        "item": {
          "id": "6edfa6d6-d5b2-4d3b-b506-a46d041e0ab5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5cf6891b-52c6-4ac2-8b8b-8dca1109b311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71a5af-a81e-4900-a805-157857e853e5",
        "cursor": {
          "ref": "015a7058-8696-4eb8-b798-cc55d1e31a6d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a3fd3807-1194-4116-99b2-2f676b26632a"
        },
        "item": {
          "id": "bc71a5af-a81e-4900-a805-157857e853e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d1f4faef-7bbc-405b-a306-0a581ab7b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3367b004-352b-4c2f-8a8a-721a4d39ea95",
        "cursor": {
          "ref": "0a185ab2-5c17-48ba-8921-9be7bd24b84a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3bb8ad16-5385-406b-b788-d0a54cb40922"
        },
        "item": {
          "id": "3367b004-352b-4c2f-8a8a-721a4d39ea95",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a1125d6a-111f-4d69-a2c5-3a1f22882e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4656be2-cc33-4567-8371-0d64cd0e96f0",
        "cursor": {
          "ref": "5d41d299-a5e7-438b-abad-e24ef0a511d8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "107897ac-b8f8-4123-8209-42cfcf7eb22b"
        },
        "item": {
          "id": "a4656be2-cc33-4567-8371-0d64cd0e96f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "509d5ea4-8618-49ce-94d1-47e32dfa8ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2899b931-f5b7-4586-899a-f20a3294292a",
        "cursor": {
          "ref": "59fd6076-68ff-498a-b877-a9eeec9958bd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4a704565-1ed8-4daa-8b28-6fd490015ec5"
        },
        "item": {
          "id": "2899b931-f5b7-4586-899a-f20a3294292a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7073b0b1-6fa8-46b0-8449-aa0c2e5395ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c041f8-9d65-4a07-a31b-087f16471c5e",
        "cursor": {
          "ref": "38d14a87-0317-4d5b-b073-b7f9a6ef0e42",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8ce21e5d-039b-4ef3-ba30-78efcfa493a5"
        },
        "item": {
          "id": "b8c041f8-9d65-4a07-a31b-087f16471c5e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5b65bdef-793e-445a-b9c7-df3f33be1770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef4aec3-0c66-4cd2-a792-c00747a2f79b",
        "cursor": {
          "ref": "fc0d6655-808c-4d96-abb5-7337056f6c92",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "83c78ae3-5458-4095-9566-b8947f06dad2"
        },
        "item": {
          "id": "2ef4aec3-0c66-4cd2-a792-c00747a2f79b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "371d714d-693e-4802-ab21-52d4d0395227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5e757e-ab9b-499f-a88c-be9616cd2873",
        "cursor": {
          "ref": "11e03501-3dce-40c3-a44c-7997d22b4dbc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0b21875d-822e-4739-be26-bf9e34789737"
        },
        "item": {
          "id": "9d5e757e-ab9b-499f-a88c-be9616cd2873",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6becdac8-9d31-4e78-92ce-0696bc5275a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f6b794-ccb5-4c74-8e47-adc76aa0bfe7",
        "cursor": {
          "ref": "fedf3091-26ae-4a34-bcf5-515a847a93c3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "473f34f0-1de7-4585-b45e-e5f88badf1bd"
        },
        "item": {
          "id": "a4f6b794-ccb5-4c74-8e47-adc76aa0bfe7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "63cff462-989e-4f2d-9926-10e30fd3e213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ac1fce-5359-4431-b3c9-ab3acea5056f",
        "cursor": {
          "ref": "dc86f47c-0708-49a8-bce4-1b32653887b7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8c5dcff0-bee4-44a8-ac22-efe6d0c6e6c7"
        },
        "item": {
          "id": "d2ac1fce-5359-4431-b3c9-ab3acea5056f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "754c167b-9248-4ca6-a767-febb4c9e9d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23225c09-8d69-4b6f-98bb-4fb45de0d23b",
        "cursor": {
          "ref": "510b3649-7170-4f19-bd3c-8e8a59e51f32",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a9815ce-2647-44b9-bc7f-37de2df12fe8"
        },
        "item": {
          "id": "23225c09-8d69-4b6f-98bb-4fb45de0d23b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e3ae3ac6-d04e-498b-b25a-56c3727a0492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c788296-612c-4f8b-ae29-e86165d8202a",
        "cursor": {
          "ref": "296cb6f7-e802-4e6d-9642-7ec1e6cd0099",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "768c9e06-3ccc-4ba9-a717-9618cfe66cb3"
        },
        "item": {
          "id": "8c788296-612c-4f8b-ae29-e86165d8202a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ffa2baf8-3c1b-46c1-b2f5-ae5d93656698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87247a07-9e6b-44d4-ae50-01c924fe4590",
        "cursor": {
          "ref": "8089ad7a-aff9-419f-984a-c719d6cb440d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fd9fd16-e21b-43cd-8cb1-46c4eecb73df"
        },
        "item": {
          "id": "87247a07-9e6b-44d4-ae50-01c924fe4590",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e9203218-3573-49ca-b4e7-4c7903ff82e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7350ba57-e39f-41d8-aa07-d51a527dd74c",
        "cursor": {
          "ref": "6f2f8337-6042-4cd1-a1f6-f4018cfd49bc",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "29916a4c-37a7-4b76-9ebc-f4e26c4707c0"
        },
        "item": {
          "id": "7350ba57-e39f-41d8-aa07-d51a527dd74c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b821c15e-cc76-4bc7-add6-f995057e0783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac4c195-be60-414f-ac58-27fae07870b4",
        "cursor": {
          "ref": "b67bfc3b-8558-4b28-9c6b-2c8ebc2ebae2",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "302e287c-815e-46dc-ae8a-ec9b93e8f5d7"
        },
        "item": {
          "id": "fac4c195-be60-414f-ac58-27fae07870b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c03374e9-18c2-4055-9802-5e0d4a5dd74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a511c66-cfe3-4d23-976d-246cefdf2f6c",
        "cursor": {
          "ref": "b35e6e31-2012-4a85-9d1c-4047ad05b89c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1b7f71a4-1d26-417b-af37-9804be4ee86f"
        },
        "item": {
          "id": "7a511c66-cfe3-4d23-976d-246cefdf2f6c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4711adc5-c7ef-4811-ab77-19730d396965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f0314e-0598-4a70-98a6-513374ed2404",
        "cursor": {
          "ref": "a5e03eb5-cda7-40d0-843a-48da7f3e8ce8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ca9dfc98-24ad-4c11-a422-4b6cf5e92007"
        },
        "item": {
          "id": "20f0314e-0598-4a70-98a6-513374ed2404",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1f44e199-6a92-4ba4-9fbe-bcec009e1c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fed35a-8f8f-4404-8e91-3b03acc97761",
        "cursor": {
          "ref": "15fe3aae-b91b-4784-9ba1-a6d4eca70aa8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3b3e126-c1ab-460b-945a-079f336d3cba"
        },
        "item": {
          "id": "d8fed35a-8f8f-4404-8e91-3b03acc97761",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e9245564-2058-4168-9ea5-0914999716c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed80b71e-f968-4283-9f13-dfc5fdf8d30f",
        "cursor": {
          "ref": "2b34e619-ab73-4c81-ad48-f1ed2b5073ad",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "850369a8-3842-492d-a4a2-0c34a302a082"
        },
        "item": {
          "id": "ed80b71e-f968-4283-9f13-dfc5fdf8d30f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3cf497e-cdd2-4d8b-819c-da85aa160adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf20a49-4364-47e7-8454-8e00fc4e13f1",
        "cursor": {
          "ref": "068f03e9-c768-4ce5-bbb8-f32df9a0e822",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7e9077e7-9747-404d-9798-877356765476"
        },
        "item": {
          "id": "0bf20a49-4364-47e7-8454-8e00fc4e13f1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8b7ec5bd-7e3f-4ed7-a6b4-fd276e465472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64190d35-81a7-4607-bc35-b814476ecaba",
        "cursor": {
          "ref": "f4e63919-54a4-4637-bdb3-f77a9b9f7fd1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a7b3005b-2175-4764-8ba8-cb3266928595"
        },
        "item": {
          "id": "64190d35-81a7-4607-bc35-b814476ecaba",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b65b5fd4-2282-4d3d-b9b6-5b8652c4094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f1ca7a-1c6c-46ad-b22d-32a6a83d3962",
        "cursor": {
          "ref": "26814403-bd45-4df0-9175-bc9c40861de9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "937437c0-36a5-4e16-87b6-7c5e1f20efbd"
        },
        "item": {
          "id": "96f1ca7a-1c6c-46ad-b22d-32a6a83d3962",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aaf53bd3-bf51-490f-97b0-361ecf71cc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7ad83d-8a9c-45a2-a657-edc86c9a22da",
        "cursor": {
          "ref": "39b2c6cc-f79a-4a81-bf33-7b62cbb23828",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f7f0750d-e104-4e85-82e2-bc473f83903a"
        },
        "item": {
          "id": "ee7ad83d-8a9c-45a2-a657-edc86c9a22da",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2315caff-fcf2-4ae5-aa5d-8a6bc4cffd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9de747-d41b-43c9-a32b-561fcd39a675",
        "cursor": {
          "ref": "17732e3e-3185-4e02-8c12-ebd94c825774",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8c55b368-514c-4266-b299-c8c5a7ce8c6b"
        },
        "item": {
          "id": "0d9de747-d41b-43c9-a32b-561fcd39a675",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a6a8d064-79a2-48c8-91ed-c1d709fb2471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3890da-0bf8-4738-909a-2c2627c40c6d",
        "cursor": {
          "ref": "b3f2a205-4c24-4d0d-9990-59c401496ec3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fb9ccbb7-ec35-483b-9fb3-0dd8092c6ff3"
        },
        "item": {
          "id": "2b3890da-0bf8-4738-909a-2c2627c40c6d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2b1f4f88-6478-4411-bdfd-d2979c78fdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eca6b0-a329-4502-9955-1cd0fb7d40ed",
        "cursor": {
          "ref": "2e6c5e1e-e3ab-42d7-a5d5-075d55da2587",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "33151096-ef85-4def-b32f-523d82538ca9"
        },
        "item": {
          "id": "a9eca6b0-a329-4502-9955-1cd0fb7d40ed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aabd0efc-1b1e-4092-a5a4-d312d4fed10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21695bf-41ce-4c78-9888-2df12646bcaf",
        "cursor": {
          "ref": "bb6032f0-6c4b-491e-ab11-f498143ebe01",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e4c065f1-a287-4928-926d-5a6d4aecd510"
        },
        "item": {
          "id": "a21695bf-41ce-4c78-9888-2df12646bcaf",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2b17cf80-537d-45ec-9a1b-9657d2020333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18afca86-223d-44bc-bc29-4f711ba66c05",
        "cursor": {
          "ref": "f104c8db-6c2d-479a-a163-e60172d74536",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dbbfd986-7ca2-4c4b-8bc8-b49debe0a8c5"
        },
        "item": {
          "id": "18afca86-223d-44bc-bc29-4f711ba66c05",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aba1db5a-13cb-4567-a2ad-81d65bec929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a02b8-45fc-4e7f-9828-fe41e7773410",
        "cursor": {
          "ref": "c48e35d1-b167-4a78-b7c3-486b38a80378",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5dc2aad0-d8e2-4b3c-b330-07131e3d80bb"
        },
        "item": {
          "id": "554a02b8-45fc-4e7f-9828-fe41e7773410",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fdd533ea-52ca-47d3-9edf-8cdf551111cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8dc0d-14fb-4b89-9fa4-428e8f8a8466",
        "cursor": {
          "ref": "e906ad85-46a7-4529-98a2-2f7ee9d69901",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf127069-2699-43ee-83ed-ad63537f40f0"
        },
        "item": {
          "id": "74d8dc0d-14fb-4b89-9fa4-428e8f8a8466",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c9a32ef6-a0cc-42ff-8d23-2199c41bc315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bddec2b-4b33-4588-9970-886e95c23ba7",
        "cursor": {
          "ref": "8bc16357-d2f3-4aa4-a63b-e67a10e67647",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4148cc0b-d002-4204-8d43-194bd154c09d"
        },
        "item": {
          "id": "4bddec2b-4b33-4588-9970-886e95c23ba7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e606a1ee-00ad-4f39-9d64-5415bbc985f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19def856-30d0-4449-accf-910e4085e900",
        "cursor": {
          "ref": "8400a617-56e0-44db-ad39-a67769bc55df",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "71f7b8fa-3b1f-4e89-ba7d-509a33f9105a"
        },
        "item": {
          "id": "19def856-30d0-4449-accf-910e4085e900",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "515906b8-e4b5-4d32-9a29-f5f48d86c21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76fdf01-381e-4def-b09c-ed7f187294c0",
        "cursor": {
          "ref": "9cbb3490-e74f-498e-86be-e01df246e80e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fa7403ba-37ea-49b3-9988-a17773568667"
        },
        "item": {
          "id": "c76fdf01-381e-4def-b09c-ed7f187294c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a947dd06-f1ef-4904-9d87-05dba2a2adeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504328b0-0c03-4d46-b214-ac6c9cba87f5",
        "cursor": {
          "ref": "d64957db-0d89-465e-b1ba-6c9356b38aae",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "29ba5ab2-3115-4072-b3f5-31f8e87070f1"
        },
        "item": {
          "id": "504328b0-0c03-4d46-b214-ac6c9cba87f5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ebc48db1-1fc9-4dfb-98a4-1779ded141c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f7b262-0c86-4b7e-9e78-0c096b912fa1",
        "cursor": {
          "ref": "237b8ec9-8fd2-4f50-855c-7700ad6b6a25",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b4c1f062-3211-4fdd-9681-17a55964d1fd"
        },
        "item": {
          "id": "c4f7b262-0c86-4b7e-9e78-0c096b912fa1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4faa3755-d0c2-4d1e-b3a3-cf3958fcf649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb50580-cf80-4053-bcd7-85ff75f94cc4",
        "cursor": {
          "ref": "64ff62c0-1808-4ced-b024-35eff4abff64",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9413c101-10cf-411b-b00d-8f804e54eb02"
        },
        "item": {
          "id": "fdb50580-cf80-4053-bcd7-85ff75f94cc4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f3ccc511-9839-4c6a-a498-4e03ab40bb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45804bcc-4ace-429b-bd16-8541600e886a",
        "cursor": {
          "ref": "47546843-ef4a-4a5a-9aac-4d1851a8a8e3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7f274c41-b156-4bc0-8eb3-f16e70eb0d14"
        },
        "item": {
          "id": "45804bcc-4ace-429b-bd16-8541600e886a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a6865409-d197-417a-b4ea-863882bb8c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9bcb8f-ac25-486a-a42d-51dc39c45c3b",
        "cursor": {
          "ref": "41befcf0-279e-42b8-92e1-cea75aa88939",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2440a46d-0290-4450-8996-7cadce3623a8"
        },
        "item": {
          "id": "ca9bcb8f-ac25-486a-a42d-51dc39c45c3b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2fd24560-d2e7-4390-8a10-27ef44990261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43ef445-c423-4aac-a130-18be08e985eb",
        "cursor": {
          "ref": "753d9472-9c98-4779-8613-be256fab45ae",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "651ee5c1-0831-44df-8921-d6a99c627502"
        },
        "item": {
          "id": "f43ef445-c423-4aac-a130-18be08e985eb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c3eb3f2-8982-4b91-b1e3-56f66f82d8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74a8e9f-495e-4cec-9896-8a5b233f9aed",
        "cursor": {
          "ref": "ce5c474b-1bb2-4934-bb87-0893bd6dab72",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3f526ff7-32fd-4ee1-a1a8-5d5ce5e8b910"
        },
        "item": {
          "id": "a74a8e9f-495e-4cec-9896-8a5b233f9aed",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "443dda40-c66c-4a6c-a18f-c146877c7b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8002cf-b314-46ec-8e7b-14c13774603c",
        "cursor": {
          "ref": "045f609d-0623-4002-80b8-c63e6c9348ab",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ead258f9-c3f4-44a5-b7e1-b1adde3b1319"
        },
        "item": {
          "id": "ce8002cf-b314-46ec-8e7b-14c13774603c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7cd050de-6298-4784-8412-0c102f7db194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ce0761-e385-4ebb-8c61-3e179ed4f792",
        "cursor": {
          "ref": "f2756ef0-69a8-4ab8-a2cd-59c2a3c6bfcd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "26fa197a-b331-4251-857b-f9661fb1c7d9"
        },
        "item": {
          "id": "49ce0761-e385-4ebb-8c61-3e179ed4f792",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0aadbec2-90ce-4f24-be11-fd010eae94e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9217c871-aab3-4e66-ab6d-f8f30388085c",
        "cursor": {
          "ref": "7530763f-f599-41d9-b18d-f6dc96edc965",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "55d170a7-797d-4d4c-9f9c-dd4405d82811"
        },
        "item": {
          "id": "9217c871-aab3-4e66-ab6d-f8f30388085c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6708d6e1-1d28-482c-beeb-b227e3a71fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f2e43c-254e-47e0-8dde-1afa8c4c629a",
        "cursor": {
          "ref": "adc16c4d-2f8d-4e67-a26c-b06aa2a0a863",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c895291e-b945-4089-8ed3-bf9e0f131590"
        },
        "item": {
          "id": "d7f2e43c-254e-47e0-8dde-1afa8c4c629a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ac1800c-bf94-4a41-8f68-80ece51222b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4556d94-c303-4d14-af4c-29dbcc728e9b",
        "cursor": {
          "ref": "a694ac17-22bb-4645-a18a-536bb921a2fe",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1ad023ad-4477-4143-ada9-01f9fc24bfe1"
        },
        "item": {
          "id": "b4556d94-c303-4d14-af4c-29dbcc728e9b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "454a3c50-db60-47ca-a345-70a44720074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b43ad96-0245-4dc0-9c29-aad5f52f5c06",
        "cursor": {
          "ref": "0eeae9d5-9ff1-428c-8f11-f9362009cdf1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4a410a01-ded9-4862-9103-e48d7c46dfa5"
        },
        "item": {
          "id": "9b43ad96-0245-4dc0-9c29-aad5f52f5c06",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9ddcdf97-1a6b-4c7e-8e5b-4fa5b442e2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a071543-c791-438e-a05f-b2eb259cdb3c",
        "cursor": {
          "ref": "c7c391cd-c14e-4c5f-bf7f-9d83b858eb5d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3b726755-d12b-4fc1-9d45-23a1d4068dfe"
        },
        "item": {
          "id": "9a071543-c791-438e-a05f-b2eb259cdb3c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d9318615-bc29-4ef2-aa7c-5375987e3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28f6360-2810-4a82-8d73-af8dfb58991d",
        "cursor": {
          "ref": "e9fe282c-de0b-4bd6-bb0b-36838f486b28",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "34e90d9d-79fd-46b2-952f-7c6508b21879"
        },
        "item": {
          "id": "d28f6360-2810-4a82-8d73-af8dfb58991d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1ae02ea4-0298-46ae-a14f-b81de976437d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff21cc0-5de0-46b2-a5e9-9c16c3bce0f1",
        "cursor": {
          "ref": "ec3a740d-53e8-429f-8826-10dd1fdeffdb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6006faa8-71e0-4c62-89e2-7c2b82a598f4"
        },
        "item": {
          "id": "3ff21cc0-5de0-46b2-a5e9-9c16c3bce0f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "05045250-0cdc-45a5-b7d7-7fc048456a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c8be2e-ae21-4528-88eb-287cb73c8f66",
        "cursor": {
          "ref": "898cb0a9-dd73-4046-888f-0839b618545f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "12bb1bcb-d6ca-415a-90b9-73a12a14d56c"
        },
        "item": {
          "id": "68c8be2e-ae21-4528-88eb-287cb73c8f66",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5313ebdb-a6e2-49f1-8abd-00e0e63b7d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ba54af-238a-4b65-b4c5-50f5297c3d5c",
        "cursor": {
          "ref": "39ca85b3-6c51-415c-978e-fe7d60d1a552",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7659d366-d321-44af-a4ed-52a3dcb31f62"
        },
        "item": {
          "id": "a3ba54af-238a-4b65-b4c5-50f5297c3d5c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "893dc1c1-572f-4a8f-8820-7f3de0504a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85c708-fdc7-44d9-9de3-df6c77223951",
        "cursor": {
          "ref": "9636f287-1d96-4e07-8bf5-c5778734e99f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "26526fcc-be35-42c4-9675-83644d75b696"
        },
        "item": {
          "id": "ae85c708-fdc7-44d9-9de3-df6c77223951",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2e88ecde-1bc4-4edb-bcd0-f562cc5640f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad1c680-40c7-47af-a8b1-b209dc9a9300",
        "cursor": {
          "ref": "6132ecf5-649c-4b36-bf85-e84192c358a9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8326f861-f5ee-4af4-a4af-5a901dfe0e30"
        },
        "item": {
          "id": "6ad1c680-40c7-47af-a8b1-b209dc9a9300",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "47644df4-c924-405f-b80f-2fe8759a973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09486025-588b-4d7b-ab9d-d7ca6939471f",
        "cursor": {
          "ref": "09205f5d-a238-4c9c-a9de-d4584baae1f3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "658c092f-f2b4-4e79-a041-f14caf9a14ee"
        },
        "item": {
          "id": "09486025-588b-4d7b-ab9d-d7ca6939471f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bba227ab-542c-4c5a-a87b-952854a2040f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca92e6c-eb2d-4b74-a1f5-3b0f192841d1",
        "cursor": {
          "ref": "5d7f56cf-f19d-4a8e-ae5c-d4150804c3a9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6b77bf54-ebc4-485e-8eb7-430e6cf865bf"
        },
        "item": {
          "id": "1ca92e6c-eb2d-4b74-a1f5-3b0f192841d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c645dad9-a4f2-49b9-9cb7-ef603545ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e24c27-66ac-4ad1-b470-cac59710beef",
        "cursor": {
          "ref": "2be7b580-255d-471f-a512-7275feb4cc92",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c7654fa6-28ed-4212-b368-1de3e3d4f098"
        },
        "item": {
          "id": "b6e24c27-66ac-4ad1-b470-cac59710beef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "775223e5-3134-4208-a4ca-ec9cc565b4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108105a9-5dcb-429d-a9e0-2c6c02f8930b",
        "cursor": {
          "ref": "8a75c945-6eca-48b2-b39b-3fda24635aed",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c70a43ac-b6d5-4759-a22f-b245216f37e3"
        },
        "item": {
          "id": "108105a9-5dcb-429d-a9e0-2c6c02f8930b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d6e20c11-c118-4bf4-a43d-64a6bc6bd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327f7fb4-346a-4097-ab6a-5186a71f85e3",
        "cursor": {
          "ref": "f2f78756-a955-4c4e-a328-724c5d1d508e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "217dc62d-8dc7-49ce-b88f-5966a210a4db"
        },
        "item": {
          "id": "327f7fb4-346a-4097-ab6a-5186a71f85e3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8881b341-0c5b-4753-9ea0-43ef8cb2e2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be34818-033c-478a-8cdd-fd6a5eacf61b",
        "cursor": {
          "ref": "da1cd2e9-af32-459d-ad4c-70fe369cefba",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "38eb336f-bc9a-497c-90fa-06fbdc7fb26f"
        },
        "item": {
          "id": "6be34818-033c-478a-8cdd-fd6a5eacf61b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5c6e0db6-9e10-477a-93c4-9aa28c8ee74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f25abc-dba1-43b8-86fe-31df459d39a9",
        "cursor": {
          "ref": "d96347b8-abb7-4f96-a061-4a176822a833",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d9ccf870-b814-43ce-b3a5-2d7120c802c4"
        },
        "item": {
          "id": "56f25abc-dba1-43b8-86fe-31df459d39a9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a067d620-dec8-4674-887a-fdd603cbdd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8647657a-530c-48d4-a2f4-44d33a6cd2ff",
        "cursor": {
          "ref": "6973dde2-da78-4d58-b579-9e1093fcce3b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d44ad2e8-d3ef-4adb-a584-df6f688385a8"
        },
        "item": {
          "id": "8647657a-530c-48d4-a2f4-44d33a6cd2ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2c929e5b-3805-432e-891c-66d92e05f85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32a26f-2c61-4369-89ac-1521262871e4",
        "cursor": {
          "ref": "ba18b62a-3cc6-4b82-aaec-fd1fa38bdc1b",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d1c087b5-f32c-4b64-9ade-a82c038248d5"
        },
        "item": {
          "id": "2d32a26f-2c61-4369-89ac-1521262871e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "87e0747c-ea58-4dc5-be91-8ba64368efe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d342c9-e361-4774-8e0c-d80ac4215a3f",
        "cursor": {
          "ref": "6db11bc1-6686-464e-b2e1-b33f277cd1d0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2db4c932-0fea-4df1-8449-9a7fb590083f"
        },
        "item": {
          "id": "42d342c9-e361-4774-8e0c-d80ac4215a3f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2a087908-2210-41a8-99db-c7e165b617f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d4cba-9a0d-407a-ad25-fae426aa81c4",
        "cursor": {
          "ref": "8bba9fda-fab6-475e-9d28-86020821e152",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "218edde7-da18-432f-9130-8affdccb8559"
        },
        "item": {
          "id": "b45d4cba-9a0d-407a-ad25-fae426aa81c4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "11adc215-d70e-413e-b5f9-c5602b8b339f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c878d2c4-685b-4347-aab9-3a08f9470e84",
        "cursor": {
          "ref": "d8dc08d4-78c4-4af1-92bd-b5d068415849",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "41d5371c-0a11-446e-a361-a8ed1cf61808"
        },
        "item": {
          "id": "c878d2c4-685b-4347-aab9-3a08f9470e84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "41c46688-221a-468a-9062-09459c269fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822e3bd5-e98d-40cc-b002-a7e0c932a1fe",
        "cursor": {
          "ref": "794a581d-d74c-4aa0-8ee5-2fa7bd7efb3f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e000c193-6369-4972-9def-3ed7dc912dfc"
        },
        "item": {
          "id": "822e3bd5-e98d-40cc-b002-a7e0c932a1fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4dad1aa4-4948-4d45-ac6e-40ea78343e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4486c826-b25e-42a6-85be-cff2075accd7",
        "cursor": {
          "ref": "6d10082f-5845-4193-92fb-de94504027e9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "28431c06-b3e3-449b-9f9f-18452c484422"
        },
        "item": {
          "id": "4486c826-b25e-42a6-85be-cff2075accd7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "46274329-f926-4966-995f-ef4386c40047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100e06f4-8e80-4aa0-8d24-0ef7a3c69a14",
        "cursor": {
          "ref": "9e057a96-08ba-484b-9c05-925e9fa013fa",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9c207452-7831-4a89-bf9d-c8b9d80218b5"
        },
        "item": {
          "id": "100e06f4-8e80-4aa0-8d24-0ef7a3c69a14",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a469bdb1-8317-419c-97eb-8839c25439fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cd21be-e882-4dbc-8587-a2756f246d40",
        "cursor": {
          "ref": "b5d5505b-5dfc-4c40-90ba-8c445a9025b0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7bc4bd17-d356-493b-9dbb-6eaee4bf1e36"
        },
        "item": {
          "id": "39cd21be-e882-4dbc-8587-a2756f246d40",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7604f548-847f-49fc-b177-9c035873796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd31955-8014-44a6-954a-d6bf63bf71cf",
        "cursor": {
          "ref": "9030b29f-123f-431a-9f8b-1627200d70fc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c5158092-7686-47a0-ac68-392a8fd2cfdf"
        },
        "item": {
          "id": "3bd31955-8014-44a6-954a-d6bf63bf71cf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb103fac-fc8f-4992-a0c7-563515797661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac9cec-b54c-451e-93ac-670b59b89454",
        "cursor": {
          "ref": "56ccb1ef-7bdb-4d86-8c04-77b15261bad4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2b85ab82-5a3b-45da-8a5f-87ac6dd0add1"
        },
        "item": {
          "id": "acac9cec-b54c-451e-93ac-670b59b89454",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8192e908-49a2-4c8f-9abe-1b4f849f29ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c67e0f-405c-47a7-acbe-a9c2fe63e3c4",
        "cursor": {
          "ref": "7e18162e-63f9-46de-8d78-3edf10ebd2a8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d4650666-8f8b-46d2-9342-a36807c3f053"
        },
        "item": {
          "id": "50c67e0f-405c-47a7-acbe-a9c2fe63e3c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8efb5098-4121-4fed-8870-b1000e180632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2f8dc6-80ca-4d6f-89db-309ec4f63f4b",
        "cursor": {
          "ref": "f24bf45c-7893-4d1a-802b-ff949cd01f23",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2d6822c8-4cf2-4beb-9de2-3800abb78c60"
        },
        "item": {
          "id": "bd2f8dc6-80ca-4d6f-89db-309ec4f63f4b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f321e24c-682d-4129-bd69-e73b8365cf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff36fb0b-4e47-42f9-8890-ce942bfbada9",
        "cursor": {
          "ref": "c853f5b7-56e1-4e01-b09c-1017ac504a94",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4b488242-d930-4f03-83a2-c5edd3e604cd"
        },
        "item": {
          "id": "ff36fb0b-4e47-42f9-8890-ce942bfbada9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "589d9eea-950f-4ae2-b403-2c1bd7ab98fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba97ed38-9a63-4c91-8b9b-a90deee4ec25",
        "cursor": {
          "ref": "40d17d42-3f48-4a79-8dac-292badba7e10",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d9cccf44-8cb5-4aae-b87a-f944d77afd2e"
        },
        "item": {
          "id": "ba97ed38-9a63-4c91-8b9b-a90deee4ec25",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d0533682-9092-4c3e-9741-f163f21ab976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb4f932-4ae8-4d1e-af73-61488f1bbc22",
        "cursor": {
          "ref": "a6607076-bea6-4acf-a183-dade30c8c327",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c20e30ac-a56d-4ec9-9119-da9e7dfa1f2f"
        },
        "item": {
          "id": "ebb4f932-4ae8-4d1e-af73-61488f1bbc22",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15ed8ac6-10c7-492b-8458-286460358aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09acacd-ad7c-47c1-a3d5-9aa7622dcbbf",
        "cursor": {
          "ref": "968e9d4e-fa0b-412b-8018-c5c4260adf62",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "03affba6-5617-46cc-9790-c1e125e146cd"
        },
        "item": {
          "id": "d09acacd-ad7c-47c1-a3d5-9aa7622dcbbf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7b0c9f4f-c1bf-49c8-978c-ef59b24cce14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6095ddc-a7af-45ae-9ec8-4517353094b3",
        "cursor": {
          "ref": "b90a959d-31d0-4c9b-8743-0ba4fad7b315",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5c9eba68-3977-4bb9-b69b-7197b599090d"
        },
        "item": {
          "id": "f6095ddc-a7af-45ae-9ec8-4517353094b3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7e54eab3-8ceb-40d2-a33e-0a4368edc9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef73f98c-a105-4382-a9cf-18447f91d7a3",
        "cursor": {
          "ref": "3c8f89bd-2eca-40e0-8afa-871ead5828f4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "95fa821e-0425-4ea3-b5b7-97126abd41a1"
        },
        "item": {
          "id": "ef73f98c-a105-4382-a9cf-18447f91d7a3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "07e6a45e-7f29-4069-b1c8-d241add254e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82937942-61a4-4bbc-bf44-dbc93957acea",
        "cursor": {
          "ref": "aab24b13-684e-412c-b5eb-a77ce9cf0e99",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7088aa73-cf64-4fc1-946c-7ea86b3070ba"
        },
        "item": {
          "id": "82937942-61a4-4bbc-bf44-dbc93957acea",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ad53746e-64e5-43d0-b261-4c93cb3c3662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fda95b-cb59-4519-8256-5976fb898cee",
        "cursor": {
          "ref": "7d33fd07-aa05-42dc-a001-0e726be706eb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2c7c5ff6-98ce-444e-a2cf-767e6216529d"
        },
        "item": {
          "id": "d2fda95b-cb59-4519-8256-5976fb898cee",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "aea24afe-ef37-467e-a538-73a067532f79",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb33cf07-1fb1-4c59-b074-cb9a3265fffa",
        "cursor": {
          "ref": "5b0f84d1-2d0d-4fb4-9b77-802b318d1807",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b5e1e41a-edea-4493-ad2d-885f214c5180"
        },
        "item": {
          "id": "eb33cf07-1fb1-4c59-b074-cb9a3265fffa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8c19e414-0d3c-48ed-a943-679a1a6caf1b",
          "status": "OK",
          "code": 200,
          "responseTime": 3642,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5725ef-e99e-4446-bffb-79e9adc5a4e3",
        "cursor": {
          "ref": "4154e8d9-6e53-45c2-8b7d-ed05d61b5988",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2c0e0619-66c5-408b-abc1-481d496210c7"
        },
        "item": {
          "id": "5f5725ef-e99e-4446-bffb-79e9adc5a4e3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8a474c75-b598-4dc6-9c2f-bc35235799f8",
          "status": "OK",
          "code": 200,
          "responseTime": 2479,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b5b47-1011-41c3-9263-6522adb1305f",
        "cursor": {
          "ref": "8b18953c-05dd-46ba-bce2-9a3f7db7c5bc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0d23e378-1b37-4806-9d61-ebf381f0d849"
        },
        "item": {
          "id": "750b5b47-1011-41c3-9263-6522adb1305f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86211482-3ca9-48d5-88c1-7b64f3197ec8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b5b47-1011-41c3-9263-6522adb1305f",
        "cursor": {
          "ref": "8b18953c-05dd-46ba-bce2-9a3f7db7c5bc",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0d23e378-1b37-4806-9d61-ebf381f0d849"
        },
        "item": {
          "id": "750b5b47-1011-41c3-9263-6522adb1305f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86211482-3ca9-48d5-88c1-7b64f3197ec8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609d3f6a-38d1-4d70-afc9-2f9c789ccead",
        "cursor": {
          "ref": "47941d21-8004-459d-82a1-1814e0550d61",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c9be6cb4-301b-48e2-80e2-051b391492eb"
        },
        "item": {
          "id": "609d3f6a-38d1-4d70-afc9-2f9c789ccead",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "21c59144-554b-49ea-9fc3-4b4a4dac4e77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb14614-25a6-4202-8339-12b3f2c24a32",
        "cursor": {
          "ref": "efd58420-80b2-4cd0-8f3c-f9fc9d0bead2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9da5ab38-de6e-4d95-9c91-8c72ae53761d"
        },
        "item": {
          "id": "bbb14614-25a6-4202-8339-12b3f2c24a32",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3fae8568-9274-4cc1-88d5-607b07ea48af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}