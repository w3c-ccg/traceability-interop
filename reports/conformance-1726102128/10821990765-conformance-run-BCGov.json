{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4e9f03b7-e36b-420c-90d4-d5bf5e775774",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7629d8f0-9456-49f3-a55d-014b0dd0703a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ae55ad4-64d4-4af3-a140-5ec53728d19f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1fdaaf3b-451a-4e07-b35b-5fdba7879d27"
                }
              }
            ]
          },
          {
            "id": "4b70cb47-81a7-4d7e-bc68-56cf7fd3464d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f61ab3ab-a68c-43b3-b73b-1796a03f4076",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b3b96e7-e3ef-45b9-b7dc-1282a52e8d94"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3ebb380b-f53b-47a3-9d4b-914788dc8950",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6471185e-0db1-445e-88f4-7f75c71d32ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8bbf0b0d-4c92-4b90-b408-3ee9bc6cbae3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c7073b1-6709-45fc-9d57-d30020f4e5b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f13e0a5-4f92-4ffe-98a8-4f98f5dbb90b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85204ab5-0241-4e39-9ad9-1c65bb6e97d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de8bb2b2-25b2-40ee-a20d-97526bce4ca8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e0f5522-0b33-49a1-ba8f-cbcfff87f461",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3ff1f02-7a59-44eb-b7b4-ec9b9388bc65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7753d606-0da2-4821-a036-4fa26665684a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "737aeeee-b2bb-484c-8d13-06fde3ce1fdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a83ee40-4ec5-449a-af89-0ceacbfc5303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f83115cf-21fc-47d8-9fb4-725953be79cb"
            }
          }
        ]
      },
      {
        "id": "ef1e58aa-c9be-441a-a0a2-d24a117e66d9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "add4823f-8e1f-429f-a474-cdad1ecf4619",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f111919f-a743-4f49-9b60-bc410c1c1e2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56c8bad7-aa2f-44ba-84b2-f1d5574603fa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68768781-13f1-4359-a470-8011b6dc3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b76026b-8c5e-45be-b48d-3163b83cd263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957af71c-314d-45c3-a771-a232d91f644c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942211ac-9324-41d6-8dbb-1d6c9a63a772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a2cb924-c0fb-4312-bfb9-deef6510f303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b282e4-9d95-4c75-b604-cc82b21f4b3f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601c4bc9-44ca-4da6-8ceb-d27d5c5448d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0694739c-4c09-48dc-a93c-5f7917c77122"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70c69365-bcf8-494d-b8f2-46bc663248a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d512f4f-a059-4c4c-87f4-f134518f8bce",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73571c61-d639-4155-9233-281deecbe10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b7b2d81-9ba1-470f-b984-705497d35c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1ecb24-e1e0-4dec-878b-81ceea9ddb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2291084-e0cc-4a37-b27f-0f0eaa0153b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9727e2f-b199-4cfb-8700-7a2867b72270",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b2c1d82-8b29-457b-bd30-071945fb4efa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bb6c9f5-0368-40b1-a489-0e7461f3a799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a681574f-8330-44b2-ba1f-27ccbe2c1115"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6161a67c-c872-459d-b7e7-0e7d4af4d8e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b6ad4873-6977-43a0-b2af-9301439a9bdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ea7cef9-341f-42b9-a703-2123f185ba32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b8d5559-7cfc-44d0-8744-4cb1f2284907"
            }
          }
        ]
      },
      {
        "id": "1251826c-3900-4707-ace0-0d88b0a20128",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f61896a9-1ca1-4efc-ad05-4271c27ea4e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89a35be0-7a87-4d95-966b-c668348edb76",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2d4892f4-71ae-4873-ad9a-71bebeeaf7fd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1292ec51-3e2f-40b1-bf7a-0dca9faecba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63fe962-0c62-4788-9964-a31c8023b239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd0711f-a226-41f4-bc25-c64ac75e22cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de00c090-fe0a-4c43-8556-411a8622c9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641f7f5-95f7-4d68-a4f0-6efa38634bc2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f47249-8a6c-4fe1-8cc4-99050a090623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3de4235-3a80-4231-bb35-21f494bef14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e0dfc0-d1ed-45e3-bee0-6c31b4aceb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb709bfa-6156-4705-939e-df9d89feea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd5bf17-2e93-4860-a82d-02c2ed31d711",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd482825-c598-449d-a612-7729bfa3e36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6957a492-f0b8-4a48-8cb9-33849a652eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06176f17-43a4-4c63-a27e-ee6953dafd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "225db43f-ff71-4ce0-8e48-75d3fb62e240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce13250-6e3f-499b-9e6d-7097bb5fac19",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c179d3-4112-4dfc-ad75-1c13e19f2de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3159162-6f6a-4b55-835b-1aea0de15ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d2de63-9297-4b69-b08f-f836579e5085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b1756cc-b268-4786-8a2c-9673e904733a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053d1e70-14f1-41a4-a44e-b3c7fc1578fe",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5029fa-f751-428e-9eeb-fb0618a268bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f31c4a2-e7e4-4010-885b-050044c15844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62f3a52-4c94-4c46-ba01-8741a283dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d958be4-22b3-42ab-b5b4-3168fc871a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e08e69-0675-4fec-9080-746b979ad800",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a01b90d-d5e6-4cd2-be80-461abd8a2d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd29d9f6-c178-4a25-97e3-af8b12e14d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8c3ef0-7c67-42d7-93b0-30ad687b358e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aebd798b-cca8-4487-9ba8-66f0b7d206ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d506fa6-5187-43fc-a437-279755315aac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009eec24-fadf-435d-9410-f6a9e08e3e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184c8a15-ddd1-4330-bb0f-6b4143f9e033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6198122-ad61-4a84-affb-bb9d8391e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c1a2f7-1e21-4dab-9f24-abac6a0eeb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2a07a-898f-4341-bb35-dabf2945908f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b463ed4-87f0-4597-b180-86d0c507f498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b6ff60-7760-4048-a98e-13012e69164d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70752a4-ca7f-4726-9c45-669cd21497f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b31ac5-6dd2-4d15-b99a-dd9acb3dc370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba04884d-5b7d-4aa4-af78-8204f7e17c8f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4420c1-3a3d-4f91-b690-9911deab2617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5791e50d-5f08-4b10-acfb-e23adf695bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91594c9-fc25-4463-b3f9-c9fa458aead9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7e271f-0301-44c9-bf5d-724e850a0ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16e84b-ccc2-4490-b9d9-a3810e5c1390",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db4b8cb-f96b-4957-a978-fc5bf9a8186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd369de-f8ad-4b6c-bde5-8310d6c6b068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53727205-b414-43d3-8cf9-199a8c96e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588ecb59-a51e-4bad-85f9-2dc9b361b182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd53428-9f8c-4b1e-ac14-77fd8937397b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bebe70-c43b-4afe-a588-31c4185285fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9211db-4295-4ae6-9f70-461793d94c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26db3f36-0c05-4efa-aa33-116eda2d050d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1de85c5-d0dd-4c55-a0c0-b2282495b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71414b1-a582-40f4-8ff1-797c30fc12ea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3b45c7-25b9-494c-b0d0-8c4bfd497340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf86dda-bd5d-4790-b915-ca5bbcbdcb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f905a89-7d52-4dca-9187-0d7a0d95d9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcb98786-3e70-44eb-be2f-094633a281ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a97bb6-0ea1-4f63-b0de-ed138e72b9d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2a9095-d117-4915-9b94-a35e3660217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b28120-299e-4784-8d5e-ca959aab5424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f037bf88-04b3-4b54-af7f-52e9aa038dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5e0188e-d7b8-4a5d-a8f8-3ef8d59466c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d4fc60-4558-426c-9d43-df939e87b538",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ea0053-dc01-4846-bc4e-99cd5b413c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d96418b-4f01-4f36-a232-f07ffa912d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fba4204-4613-4ee6-b339-694f75b07d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "626e722c-4462-4d54-8a29-5a96528d12d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac93302-7437-4104-9cf8-156277ddb262",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0334d0d-638a-4edc-8103-f20e3c85cd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c23f0f0-2d2d-4988-9553-fdcdfa1c4f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62727870-86bc-4ee3-8959-d48c2fdac697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1f8f21b-3cfc-4dff-9238-564ae5f2cf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75474113-a0c4-4ba0-a48d-0a6e73b8e7ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff98496-aaaa-41ad-80e9-adde30b27f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b87141-e7a7-403b-8a8b-73a4450f3b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29ede29-8248-415a-bea2-b576b99a7c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282f8d46-5bdb-4bb6-891a-3fbe9d950d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcd689a-6f1b-4bad-93af-7ec94ab22f2b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38118554-8112-4984-b445-264f258ac651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2b008d-27af-4b6f-8b09-ef7a6da18540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eb27b2-59b9-425a-bddc-1d9d70b4d338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df092e8f-811b-412e-8feb-f67c45ce29a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbbe3f9-070c-4e81-a373-f8a6b3110be4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc72e7e5-2c28-4a36-93c2-ce3de80ad29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3331950-38e1-4117-86e3-2f213e4cc3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4440a9-998d-4aed-b97d-29c8454a8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f27e07-439c-447a-86e9-d290cfc92c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c2acd-7aba-4a84-914a-0b294cea9a83",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393118a3-57f6-4367-8590-b7a746244ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d893322e-1f1d-4193-9e63-42fffcd17781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02921d78-077b-437b-ae5e-4042d7bc767a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afc1014-d4b4-453d-a0ee-0bc30475bb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2612ab9b-1654-4995-b12d-9731b20293cf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ac9090-7cf5-42c8-bca0-17e6dff6b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60148717-ab95-4b57-a1bb-f32fafa3de6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d69b98-b5ee-499a-bdae-3ecf09084305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a17649-8712-4a6b-9bd1-d5de012db2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37be822-0868-4c4d-ad52-bc18748fa65f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5bc5f0-0a13-4509-980a-b4a0cc1eef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383be164-a2a1-4625-becb-e648bf9f51ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd6f6d-b185-4656-8153-1cb2f8eedb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9968fc3-a113-4cf8-9032-08e7f81ec500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabca5c-bc2d-451c-8eca-a1c88f45604f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc25bf-3351-40ee-9b0e-b6754b65ada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9bb59b-edda-47d9-8cfc-e2511d768c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553ad6d5-1f8b-483f-af57-ca7c9dcc583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddb8848-02d3-4f27-a403-decd364667e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b1583-a9e4-4c76-861b-9ea2991885fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76c59f-816b-4e05-b60a-c51ebebd01a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589aace3-efeb-417c-913b-9b6b6520c57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fd79db-9e8c-419b-8c76-6afa1a2f78b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "500c34b9-3384-4118-b6fc-292f7df4a9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99918a9-1a9a-49a2-99b8-653d94455df4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60475268-8f13-450f-aa06-c75bd481b175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13007691-8f99-4ccf-867b-bece10de3357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b768cc-5f94-46aa-92c1-bbb84688fbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bd8c46-852a-495f-b8f3-58d6ba92f432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff66c96-d809-44bc-9683-8e83ecbca7bb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce0453e-f37e-4313-9f2b-f3e7b4730e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67bad55-6dc4-4081-b86f-a4360f583283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32d207e-37e3-48b0-bc36-48b6bfb9d168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9b2b6-2185-4a53-bb37-d44b32d387d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7497b689-8cdd-4742-86b6-0b0ca7eebf13",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aba2c6-687e-4641-93fc-09cf3ff843a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d08baa-c3f3-4a49-b06e-d1253eb5f2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4987d5c1-296b-4e2d-87c1-c2e75cf0ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1018ef7-8a72-460a-b590-aabde7e3b2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4676847-f590-446b-bb64-1efddaf56713",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8b1090-c557-4683-9f55-b9dbef55d563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348d4d80-9031-4f3c-9daa-0253f69b5f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f810988-14e3-44b0-831e-65769f29b7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b60943-0773-4358-9eb5-c1e8535cc5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1fb308-3a69-435b-9e40-b14017da8461",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a458c93-4bc2-4942-8eaa-8919174b36a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d122e8-4713-46ec-846f-96bb136e56ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b838e-ee0d-4a3f-bd5d-f0cae2b6ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0cb155-4ac0-4433-8262-236fad3b0257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459b47d3-dc57-4e2b-b397-b30c07c02ecf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebe94fb-dacb-4c54-b0db-91898e57f31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418c0eda-25cd-4a2f-ad63-b6fd935b65bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d946935-48e6-44ce-8866-c8f436c3e2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b12219-82a5-49e9-9f96-cbcb85a1b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a267483d-d889-4fa3-b78e-a5f78a029fb2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bdf3e8-cb48-4d76-adac-76adc570d84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc85fe7-5b6d-4b79-a582-9122c6d856cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb270fc3-7c47-4cb1-89d6-cbf438c8b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a209343-1f34-41ec-865f-eaf43c1aaaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af98e7f-1916-45d6-bbaa-96643cfdcc8c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34556542-044c-47b7-8713-986fbf2caf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1053c18-fc28-4439-82d6-26af92ee6d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de9bd8d-314f-4acb-9854-f71599e1d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ff2ea6-6352-4173-8ffc-533d0b057bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372930ad-f9ad-45aa-afb5-2cb7f5053bf9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dffcaf9-5535-4e0f-a145-33afd1a2112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc84a92a-14ac-4b32-9eff-9ce900d1d614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef38f96d-80a0-4ef8-8bf6-c95978504f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56e0764-4251-49bd-927d-76b94051e1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6684850-cb47-487a-b0db-fd190a997bc3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74eecdad-ad68-4c0b-b341-adf5563ef9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2a448f-50bb-4faa-9ec1-323302b38eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11882c47-31b6-4f7a-8e2e-4100e230bd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2fd1c5-f458-4f57-9e3a-67c0f51bbad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a406dc1-8853-4e7e-a72a-f21741f62ab5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e914b951-d29e-4471-a3a1-53341788631b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b70da0-abdf-4a8f-9d3e-453331dfc0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea8cd25-65f8-456f-8154-c9e6b84607cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ef9cdd-90c3-4740-afa4-b277afb857b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fdc7fc-899d-408d-a186-a1148d1ed6c7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32858053-7772-4fce-89da-bfdec550e265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7abdae5-7bdb-4160-9201-a681024a662b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b5be08-9b50-4c2c-be09-f0ea728ba4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e76d0db3-7bb2-4fe1-b959-45fa41f2d772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fb3194-05a4-4c3a-9e64-56935725ad0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdd719d-e54a-467c-83d0-310645b6552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db2ac288-12b6-401e-96e2-ecdc0a8813e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1200e-103e-4e84-8313-6857bad0074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "304db884-f3d0-45c2-87a1-24ca41b29fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb55312e-f081-4e8d-bf14-71703045bd51",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49732359-daad-4454-a286-7b763cb73602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03db7dd0-8d2e-498a-99d5-e622fcd3d744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3a9085-6e12-4df6-a4b0-feba02d51756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "220c6a25-e116-4f26-b4b9-052d6245dbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2299e02e-d839-4446-ae5c-5aff0dda9c7f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3af5794-a2bb-4760-a4ac-a213cd5e966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e95135d-fa77-4439-982a-f3167400a622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d738e12-1335-4930-883c-953b71747b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2ff37d-2626-4301-8ed0-def1a784ab36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb8664-0edd-4ecf-beb7-64f701fad165",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdab7dd4-8e63-4382-a2a2-23591a1e6142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aca34cc-86b3-408f-8f6e-a9601bc9d0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bae692-fe0c-4b98-8755-1169733087c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93227ad-76e2-49e4-83c5-6d761127408c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f9a581-8104-4cec-8511-c00fb2c160c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca63128e-0d75-4cd5-acf4-ade131d1d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b481cda4-a8df-4cf2-bc52-892f73e536e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d206bfba-47b1-4eca-87e9-0dd9133aa78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "85483254-ca4a-450b-84bd-16513564a4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9463aa52-bfea-4eab-9ebf-6cb56516780b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ac14a-32b0-49f5-939a-2b47e9574446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12922b3f-9e9a-41f2-8a6a-214cb83b2a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0eace3-a439-4297-bbb3-6a0301f54d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83f1f500-adde-4290-9942-2923ba50d165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e1c17d-f973-4e3c-b864-87026980e007",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e704d-8d85-4483-8f35-32fd0979ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d641787-52ac-4800-8fdf-3d737d4d838f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da80502-5ded-414d-b5f1-7e34a692918e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "273eb951-505c-4668-bd57-aa47427019d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13d5630-9d6c-4163-93a7-b136cbd10981",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ace07e-e180-4bc6-abe3-b2d5523dbc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0560f5-83f9-4c35-9826-06c01a4499e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80c5289-47d4-4ad3-9461-0b1e0250620e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbe63a3-06b8-4a32-835d-91086552083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e55a898-2dbf-457a-8206-13266619f63d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b386dd4-c356-40e9-8884-48b27182ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024d2515-57af-4afb-9792-e4cb9d48cdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d0ee22-a43c-462d-8db9-d178b60439f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ed37a8-8157-48e5-9e70-81e1cf25cca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31299993-26b4-4c5b-851b-7dde5ad08e01",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a035e8a-cd4f-46d9-a2b3-3b7f594e194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120094f6-420c-48ba-b241-a3984b8e1f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61175f6c-f410-4fd4-9e65-02a6a3035198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a5972a-8c5e-473a-934d-5121b8046a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e925d7f-35e3-4633-b918-22ccf9bf298c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20832c2d-d004-43f9-90c1-49c281c3dd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf9e7ef-a53d-418f-bd78-a8ec5c76c236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295d9c30-37e4-4afc-8670-b4d7e32c2781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8660933-fafe-42d9-b817-365f7515febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2c3c03-35d5-43f1-bec4-817ce22189fb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ea31a5-ab30-4788-987c-73714d7a066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452028e9-0e71-4c15-9a37-dc43ddd248ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112037c1-35f4-45b4-bb69-75b1ef1be61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5aa3a41-7e18-4852-84cb-9a17f3f752dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2409497-fbd8-4c73-8a55-58ed2890dcef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e57b5-31a2-415a-8a2b-20005cadf755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cbec1d-dece-4da7-902a-a2fc880a3b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355f106b-b9c9-4087-84d8-822a667697a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7eb43e-5ceb-4215-ba70-5fe5a508e6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de9193d-4566-4291-87b1-a238c4b27b54",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492c000-87b9-4a31-9a8d-f1fd95e2a647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99c949f-a110-4136-826c-9758c949c137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2407a471-e18c-48ab-948a-df55f15cfc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41aef64-a368-4c73-bc99-6aeaaa9af2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0a9e7-7367-4be8-9604-bfbc2c4f4157",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200c8ab8-b9b2-4adc-bdcf-deb565b612ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab04dfb-4288-48e5-9e5e-b881b2f410e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2999a5b1-056c-4e9f-8be9-7260a8c58428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a568a36-e53f-4f43-91e9-1355325e97dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17937702-d329-4f44-836b-6645f1692192",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7202086d-ec88-4adb-8a08-d83029f760b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cee2fb-27da-450f-a561-4cfab99343b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc72d2-400e-4071-9373-b12013ef0f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "489f18b2-0138-4a77-b510-1b8d19af2562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd82b2a-6265-40dd-851e-1dbd5f077f41",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc231b3-32ae-49e0-8c2d-de83f015d847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee06301-8dba-4d4e-b20c-fcccfaaf8972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f99efa-f660-4603-be61-c47acd5da150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e01e63e-4cde-4e67-9d82-4a4329feef02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa862c4-7e82-4bd6-bb74-d6fe892a0b8f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3bed7c-c62c-48cc-846e-7c6b430b1045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1128e998-e950-41b1-ad08-cc1bdfa27ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36e17d-7094-4374-af6f-4203b5236af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1161cb1c-b0aa-441b-997b-225ba7847d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfc8cb0-a7bb-41ea-979c-699fc55ba707",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed8de7c-3811-47b8-b933-5702594a14c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255175cd-817d-4303-a780-33255e404522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e80bd1-3f94-4e4e-8c66-e6247c020690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57159fc-2dba-4045-867a-41dff0ea472a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c0b4c8-ccea-4890-aef1-3cbc993687c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8d724e-ad63-4f30-85f8-0ec351c9bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d1fc3d-41a2-4c3b-8050-0a6bc6c14b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ef03d-1608-486a-a9fa-1d78f4902225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fa392d-9fa0-452b-bc3a-591f56324490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d34329-078b-4953-8601-26fd8aa0cc93",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dc4dc5-f5a3-478c-adda-856721a279b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3090407e-8ca8-4f48-ae5c-9329dc731c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ac339-f9dc-4699-a14b-06e372ca2891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0783cac0-e298-4433-b1e6-398c996d4741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3286e4-eb18-42f8-a22f-e8875ed15e17",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d57fdc-9385-4764-86b6-2c30c8dabfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102dd6bd-d137-4cec-b743-8470dbc37a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e790e4e-3edd-42e5-a933-c93dfc38c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db5da42-579a-4eb4-9eb5-21bcbde175e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d8d0f1-0fde-4ab7-8939-98a7a8ac82c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6706203-76ee-4d40-8d0f-59147c9af483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8799645d-277f-4dd3-98d2-bc7572850209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9693bd1-9816-405e-b4f5-30b36613815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b4b438-e76b-427c-9770-76e34c9681d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15971095-322f-4a35-95dd-0d7e6e39f86e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6c2998-b2be-4937-b103-870ed1923d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b508eb87-7669-44a8-b60d-41b9c9754ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32940309-cccb-4d9c-a582-9e000badb5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33706c02-f9ef-4102-bd95-16522e76bb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37c7141-1576-4ba4-9f01-7d49604933d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d229a025-3672-4e1e-bc74-23e8d55df658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8fc909-bbb7-46e5-948d-e9091d46720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f24d5ff-c94f-46d1-98c3-f6319ab4f922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "744a2e34-5c9f-4f31-a593-39681c13813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbc8596-f5d5-4533-b909-481c40b857ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4111a18-6eda-42f4-b93a-4a6011958c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f76a93-a176-457a-aa41-d726939b5872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f34778-0c8b-49b5-8f26-07196fb4b84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae6ae71-073d-4afd-b2bc-1ebd587e84e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adcaebb-49db-49ec-866b-58a420d8d1fd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bb4c5a-0ad1-43bf-aaf6-177db4265f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfae53f6-d55a-46ef-ba7e-4fce28349799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1e6c0b-b549-446a-b2f7-fb045c76aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6f2628-9a08-48ad-9d9c-459624f694bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50847df1-a780-4d4b-aacd-6592cb9741d8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6183ae10-5e28-42ee-a21c-6d7c76e0ec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95782eef-e617-42ba-ba9f-97bb9d7c535d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f230b3-3e91-4db2-ac3d-ed121f1febb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "653705f5-b719-469f-a45b-78c72beedb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b9e93-b8de-49fc-9bfc-3ab94465f3c3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6106ac62-2b40-4091-91e6-ce1a497eb27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1999e45-dbc0-4522-9fd5-eb2951856a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ef1d3c-007b-4a59-a84d-4a8d1865384a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1101e2a-ef8d-4917-b0f4-7a7ac0e77ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf6e606-4d06-45ee-ae76-dc6802675f5f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643f09b2-d03c-4e79-9d34-e6c547a55276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86588e83-81be-4812-8d0f-f0de4402c525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4092690-4a36-4997-97f6-218360acaef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ecaffa-8973-46e8-9ebb-f5e6633dd841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f679db6a-2d59-4faf-84a4-ab26d13975d0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753f0e0b-64c3-4a3d-8d54-dab2c26923d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea00d62-a82d-4ea4-9c0d-d3a1f7108522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdaf4b5-710c-4d7d-9f1a-a4d1c1448ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfe3762-462c-4296-9a81-88b904973c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f81c2b5-f25a-4095-b30b-53b90ddf2ecd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379cb404-3180-442d-a41b-8e37d75090be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbeb4c15-8f17-4287-84d4-19c9a1275b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac504a1-e758-4246-8764-4982dc1c5186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30657ddc-372e-4d1a-9dd0-14df2e6da685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6075a9bd-6759-4afa-91f0-e60decbdee23",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27752ff-dd44-420d-8556-cb633153674d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7899fe6-429b-4aad-9c54-b93e2325a5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573c44fd-9b3c-4184-b4bf-78ca44d4f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "769e9f69-1ef1-486e-9a72-f8c1fc40e864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c2dcce-9e43-432b-9c55-0cd3e88cd4a6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74a17a8-d0a1-4be3-b9f0-4a0b837bb71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c05821e-9156-49cd-a5c2-c6c2a9ffe9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3cbce4-b938-4da4-ac05-b877b2eca4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8911da2a-2fc2-4383-9a37-767a87fbf0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e10340b-529d-47a6-af7e-b98ccfc9a9f1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed90727-74b3-4d15-9d51-8d9a2601c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82716f8a-2a0b-4639-9a0d-b3eb9d6897f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac76df67-8fc6-40f2-ba30-99b14b2ecb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9ffc11-5d15-4544-8179-e49ed8e34338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9884f975-303f-4430-98bb-5e720732efd7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da6467f-206e-4309-b167-0a3cee5512c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3d5511-cfe3-4dca-af43-f69bf40e70f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834bcbaf-d744-487e-b4ed-90906c1a0d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d8db56-ef1e-4215-a650-a22e3ef36c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014728e-fbaf-4fde-8a00-1de7a5260852",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d089a7-f763-43bc-bf75-e975c3a092aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6699dc-0ff9-4397-af51-a275eb04b8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9411c7bc-6f5d-473d-b33a-084abc488138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e40660-38f1-43d3-bce5-339183dbdc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf5e331-2910-4ecd-888a-a992a2624faf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d17598-eede-49c9-9ec1-2d79e043e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a540975-21af-4790-8123-890609455932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103faa68-e5da-481d-99b5-d7b14ab7b89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4f04ed-9cab-4493-b643-fdc2027e35e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a26931-6d1f-4857-9a79-acb9123dfce1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c04b9c-5fd7-427b-93c4-e6983da4876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a110310-14c9-433f-95f0-6778ae96ef84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f49e72-ee38-49a9-a367-1ffafc908154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6667b3c2-6a82-4ab1-a7c6-25ff7b3713cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfafeb0-29ed-4d82-ab18-538d8476789d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330ffe4b-9a81-4b33-b63a-54461ea14670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389e9295-26d6-41f8-91ab-70f0a9bced5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c032d5e2-0040-4f42-b046-b6e230b06ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "89f02541-cb63-446d-8400-8e2e72243e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dce6333-7598-4c0a-a11d-565c98c60704",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363e7091-28dd-4d0f-aac3-c8ea75e7f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54c1b76-06f3-4436-b489-ea600bd91a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6654392f-fc8b-4b38-8056-77785557e9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5d3fe7-1344-401f-b857-e83bc89569a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9945b912-3320-4875-9c1b-2573dbecd250",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ecadea-9418-4c4b-a39e-6056d1549198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727ad962-4ea0-4228-a3e0-005e1dc690f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b7d5c-5ced-45ec-a44d-891f7d7ad77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dee8857-bba4-4da2-9942-8e5a29031868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc36121-397c-42cb-838e-8a04a82c6428",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6659a8b-7792-40aa-ae7f-b9a6ca177957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628c8cc3-43cb-4568-98f0-adb9431c87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f5f7c2-13b8-4c2b-9236-ff088fc9ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39a0252b-5255-4fcd-a0ad-2b47be142573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b5a8b0-e9c2-4e98-bd55-a1397a877474",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7698220a-4815-4bc9-9ee8-0751a3713074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c590c957-ffde-40bd-ac09-c8583653eea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccedfe60-5643-4419-99fd-b6f22ce40d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8ccfe0-549e-4ba8-b95e-8ea0c791499d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb33c54-873b-4cb0-ac88-b2ac0b2bb7f5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a20c403-f708-4db8-9618-6c40ffaacc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971e55de-e33f-4a3b-a14b-a74a109eef0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c68727-b914-478e-a4a8-3d29fc8bc6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "555ff341-a0ca-4861-aceb-c2db0ac4e4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece5cde4-62f3-4810-93a0-d55dd178887b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667f10be-7adf-486b-aa29-07b114f18cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecb1431-571e-47a0-99f8-bffa0dc04190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1806ccf0-008f-4ace-9c62-1f3b4633632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e560249-0d26-401d-9bdf-c26c8d129dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fdb834-2be2-49be-be1c-d87260df3e1e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e996f27-a3b5-458a-8d4d-9ddf92563de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d92588-3067-48be-a33c-3c1e48b85c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f484354-9a0e-4026-8ab1-8f512f48272c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36af0b5d-112c-4e26-8a6b-6b6980479521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b9dda8-2708-4ad7-8069-9f14fd62b9df",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c75a51-8f63-4b32-99da-9fabce919530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b1667e-534c-479e-b7d0-e050c4628015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff78b9-ed07-4273-8d20-8a04baba2026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed25630-151a-41ad-92ea-735aeea26388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc53df2-0538-497e-aad5-20c448c2169c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f472fa0-9a97-4186-b4ab-bf2397d9d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9497356e-9d38-48ea-96a1-beef77375377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917d919-d2da-4ce8-8fb7-87dc6df5a044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "725f7608-176d-47a6-9464-f15139c4970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00b01aa-2c3e-459b-88f5-a28f32078637",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde4b251-ec48-4c2d-a115-5aa7039d7096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360833e4-69ca-4e85-bade-d9ba3b874d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30813679-7762-43be-9432-43d12e849473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c42f410-5534-4263-affa-8e77e69a8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d9436-5bbe-453c-a8e8-60f2c1ec5626",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8b9c9d-6665-4879-a55d-a59dc98568ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6f9236-4669-485b-9161-51285e599957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810742a2-3e58-4e54-8ef8-31d3ea71d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cf1495-58ef-49d4-a043-e26607e0d994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe23073b-2c9e-4c7c-8910-8cae0494112c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511ae49-b92a-43f9-9180-4aa1e696db10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f12f625-2a43-48e1-a330-f550ae96498e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c60bf6-c33b-4032-9773-a0f3ff8a95bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab56b03-c02a-47e1-93a6-3b95aa0125ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df116409-f3e9-4bde-80a1-7613588b8249",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4931650-9aeb-4b5b-8e54-d671d18978c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046750b3-0a9b-4060-8cdf-aad36cb9490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f10966d-2ae2-4b92-9811-9fc7f79c8974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a70f7d2-4a48-42ca-9756-a07b95229e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ca576-95c9-46b9-9650-e91334407b98",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b517630-75ee-4eae-98bd-9fd62ac7642f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bcb19a-1858-4ece-a48b-2c3e374fc340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039d01c6-22d8-4474-bad1-df61e51a7403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "687da842-bb74-42ce-96ce-446c8cc48ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daea6a5-434a-49f0-baf7-3f2d00415cad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8992ace-3d0d-45c4-90cf-6f8c1e45e1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8ae1f8-6141-42fb-9069-e3725e2e6b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c0cfed-89e1-4b6f-8230-e57cfe306114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa999d5-76f1-4a90-9b16-375b992109a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99193806-c6af-4000-8a7f-502c57663ec8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d9d2b1-17a3-4779-84b0-cbe45d104bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b99dc9d-f373-4176-91a8-894f469bf366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63a49ee-09e9-4212-91d1-dfcdda311e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd6a80f-3fd1-42c8-a39a-8cef4bfc3464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3ce12f-01c7-423b-a31d-2807e6f97f64",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eb32c5-44de-4a15-8802-9a241ba66412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7ddad9a1-89c0-47c1-b905-1a894e470b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fd0f2f-aeab-4ba4-9115-524f633a4390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda86155-32cc-402b-8b81-50402df854c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cceafcc2-e050-4e57-af71-bcbdf3bf97a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d3f4514-91a9-45ee-b7a1-24f92d3e118a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ff2e7b-2c27-42ed-8c3c-eac9e0add8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12c6535a-98ca-4ce3-8298-1e726263c154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb17191-d560-44d4-a35c-475c9b109fc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7985c5a4-e50f-48cd-baa4-f56cb34270da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab5e66b0-89c5-4842-a5d8-1896ccaaf23f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d5c91cc-696c-41b8-9503-3e526d4ecd01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab85e7d0-ebdc-4945-a413-34a58561099c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98bd228a-e044-45e2-bf19-2f8b49669557"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bcbc21e-9c53-44e4-b729-6f8ba6a7e43c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b348edf-039e-41f3-948e-2f5631a7b89b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d18a3919-5b23-4052-b0f8-833b2c397657",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f18f43dc-e1e5-4183-9d23-ecb120cfd585"
                }
              }
            ]
          },
          {
            "id": "74908f8d-efca-42bf-af02-14a7b0fc12cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "501d316c-4f9b-428b-8cc6-81b1dfdd5726",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d96c3928-1637-48ab-a981-216f837f9ae6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a639519-fe1f-4529-9c6c-f341d7501ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1a8d7dde-b0e8-4ea3-a319-0ee2f777e618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a20da00-3f15-432d-8fc9-eb19b3b76006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041594ac-f22f-40ed-aab9-fe0053eb25c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5814aa29-4f5f-42ab-bfc6-28d03aafd5d9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dee0ebbb-895d-429e-bae9-9b294c99734e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a320779-8ee2-4315-a647-39f4ab4c9375"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc34c2b6-8179-4b66-bb7b-083811fd0d3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f01c3d85-5770-4d08-8bed-61780206160f"
                    }
                  }
                ]
              },
              {
                "id": "b85eac2b-55d7-4841-a30f-0e1e620d63f7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6550d0f-2847-4e56-beaa-22a727720cdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4285dc26-2c44-40d0-b9d9-b52dd8279f3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd89787c-ad80-4f2e-9a09-15ba9b9e9f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0998954-6138-4987-a7db-254883f680f4"
                    }
                  }
                ]
              },
              {
                "id": "4c8427a7-3406-4222-8434-31ba9a34a386",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e657890c-cd48-472f-bced-812d37a13ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac0cda02-1c35-4957-b0ae-1429ff6a9ab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "539d7a43-ef59-4073-a2aa-e8a64e555fbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4a38329-203d-49e9-9434-846111157320"
                    }
                  }
                ]
              },
              {
                "id": "310f3813-57bf-43a8-8d22-61a3f8cbe47d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e35e0b5-a0aa-4f3e-9e48-4ce6b01d8e41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff1c4b7c-1e68-4789-9a33-2b6b645c2104"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d134b982-f54a-430d-96d6-b20eb4a8bb53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ed896f87-1ba4-4dbb-9e9b-c63ca1cd15ec"
                    }
                  }
                ]
              },
              {
                "id": "aab01240-a5c6-41be-9813-c6a651f6c9b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2326b6c-a25a-4885-9d73-3695b4c54421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "703d75ab-9f20-4854-ac40-b5196b9a2abb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c524784a-e77a-4507-94fa-d1c2c10684d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28eb89e8-fb76-4a1f-ad2e-6a371643e12a"
                    }
                  }
                ]
              },
              {
                "id": "09b18d01-14b4-42a3-af0b-80a0cee83008",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef19f55f-0666-48e9-9db0-99add80963bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd79b0fb-ff76-4968-ab5e-f84c1a36b206"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb66e6d5-c25b-4235-97e4-1defe6045630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98e8f1b2-7b35-4c07-a471-3d0dd0111b87"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c4fb4b3-ab06-4e9d-911b-946a2ebb69e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca62a644-15e8-487a-a78e-e773b505a241"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "928725f3-2fe8-40f8-a042-b09d7606e35d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "196ecf58-13c3-4792-8a9d-66e4838b6785"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3096b341-5a02-4381-9d36-164b30399194",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1ace1bf-73de-4555-ae02-e64acc030352"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "360af361-b0c0-4f05-a1c9-5ccd394c8ecd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5ae1939-7cdc-43af-8755-67f483c9bcd9"
            }
          }
        ]
      },
      {
        "id": "429aade7-6c05-48f0-8688-477cee235860",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d03ef3aa-ef62-4c62-af60-8594b26aff2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4997f75-20fb-4d78-81b8-f38f4021239d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d66192c-9bdb-4ca0-a1f7-052ea12345b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61389133-2d49-4681-8922-799ddf379d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18e6b7f-10ab-417f-a2c8-3290f5f25170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26ed25-3401-417b-b22c-95842c798aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "44d3e521-8a3d-43c2-a6c2-11d9888c3f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd25da6a-74eb-404b-a4b3-f44e220834d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867fe36c-6729-401b-a121-6c715787fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c005d4d-651a-46a5-8897-4d790c6c85cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed09afb-83a8-47b5-bf81-20944903db3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "840d5cb5-5824-450b-8f1d-30c4b846e4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803f8e59-fed3-4fa7-b594-c3fd06b401ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ae4af8-4be9-416c-86e6-7b0000c82718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7887dd56-e452-4ef7-8242-a94566f543bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8033244f-6e0e-439d-823d-1d8a23552c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4ee8bc-fd8c-4904-a5b5-3e639807cf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f30e36e-a0ce-45bd-a997-9797cf75b2ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b3709b-15c7-4f72-b1fc-3cc9387d529b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ee655c-0211-4ecc-89a5-970d8b34872c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539681c2-6618-4c16-a04d-22c7166d01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7d3843-ef66-450e-bfa5-70c6b94f7f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48bdd58-dade-499b-b274-ef454c99d74e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06de1e4-7534-4813-a77f-d69919c7f3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b768ce41-1ce6-46dd-a7d3-7a42765c0ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d509d1-0f80-4cc5-af7e-72232fbe8620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a55277-7801-4013-9e58-463fabbe5f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e44badd-38fd-4234-9afc-8eb56bd40ac0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b466ce84-16ea-4c23-861d-4c4c496bcf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37c6040-d44f-44ed-bd4e-ad798e449f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a42849a-c06b-4fdf-9427-314d052c8f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2626032b-d1cc-48e0-9964-e14237807e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fcd14c-fde3-4eaa-b483-bc910fb20267",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7dc146-945d-4019-9b1e-b1f416795666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053bbdc0-4b7d-4aff-8c5a-c86669309049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42bcdef-6666-4b37-ae0e-1aff1ec49bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65d9a2a5-8b03-4085-9b57-9093e2966ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92edbf7e-ec48-41c6-be7f-c64d77ecb3dc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c03e74-7ba7-4bb9-a907-cecd4b782ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3decd7-e8de-4d81-b98f-166a73a5d9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73966e6-761e-4375-8229-c96c7120ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f2842d-048a-4a38-99de-b75765bdc490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86df9aa8-23b5-4163-bcf4-f2f405f0e5bb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fc841e-b86b-44f2-9831-fe5a32c2e341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fdedcc-dd8c-4c8c-8887-b67f104a1b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8837954-2055-4809-a60a-89e455cb9dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d40682-1b5d-433a-a05c-a1bd563a0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0278187a-b6da-43b8-9753-b18ab5f45e71",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83da7d8-27c3-470a-8dc6-71d8ac353d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b11cfe-e6ef-4d1d-8702-c61fb04484b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a0304-7233-4daf-b98a-dcc6eb957876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a98923-9c4e-46ad-8ccc-9ae156c58633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9fd712-310f-4d30-9ff6-bc41b0c37590",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33439036-5f6d-4cdf-b04b-faf7f3f21396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16128087-f8a6-412f-af38-711de9033886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b114a6-6567-4ada-8e1e-25544eb1b5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c2996fe1-4227-449c-adf6-7c1efa51d8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3977bdc5-855d-4eab-86b0-a8c3befd17b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e58eb8-e8bb-4e8c-9b1f-1bae56a6435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b335a67-7971-49d4-9b0a-59eef6ea44e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444ddb8e-478f-484f-ac73-50effc385f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6ae6b9-314d-4ac7-8b5e-31b87c855c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0720fc01-d2ae-4f0a-adcd-a22ada2141e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49099d5-3e58-4ccb-90c4-75a530f76a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f226032-e24d-4eb2-879e-553b71ee1a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4309625-cd22-4f33-9e77-7ffef58850f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a39359-2819-4f9f-8bfb-8cd01f9dd250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3803e5e4-ca92-4463-9bd1-12f8479161fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b86274-4773-42d3-bd8a-d4f265320268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504ad883-1bee-45aa-b580-452640698270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deadc81e-8fe0-46a9-8528-d42a40807382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7e45eb-53ee-493b-8728-c5f9ced5d142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6914a505-a0dd-4c4f-b473-697bea6fa866",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46201bc-eaae-4016-b23b-6f7e49d214dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6191b5e-0e00-44b1-9c8b-ebc7ff948d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fc882-c2df-4cb3-9686-8da1c816e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "938d8e7e-2ac5-4cd7-9acd-f0be644afe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b2fd0d-af6a-496c-9891-7d30d41def10",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ed8a27-9c1f-452e-a813-31a4b9663d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430c3d53-7bf5-4180-9210-4d7c6ba524bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7eec7a-3a67-4861-acd7-e1939e0af320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbeab21-a514-43cf-be08-de7f27b095fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e5f943-a465-46d1-9de0-579e40f4fa93",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ada123-f269-4ed5-b687-3b524fc3bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c668d9-27c4-460d-b032-87f87cf731b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941ab97-f89e-496f-8d16-15b4877f2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a42539b-3673-4a0f-8c9b-f83fb2e855c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fb117e-27c1-4a39-8cfb-c13e293d9e60",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d530a78-0b9b-4420-a5ab-d172a14cea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fb5a96-2170-40ea-91df-1a3f45bcd34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b116d57-a586-4147-bf43-4ecc0ab82e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aaa02e-9b9b-4f00-a792-31ab45b532ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c29135-0496-4cb2-8815-e91db6485345",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe99fa6-552f-4427-bc5a-a6c68ee8c3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93349845-aad3-40a3-ab2e-ade7cc5f75ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74558fd6-5b9d-4836-919a-0f48a54a0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e0ff84-e0ae-4f14-aeed-82f288c3ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63a37c1-da76-426f-b516-bd8ebe51a5dc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb7fe6-94e2-42b0-9525-e84685d03d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb94b28-f4c6-4aae-b2a3-2eaede652ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317f777-a9e4-4fe4-ad7f-074890c7e536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64898c8b-a68a-42ea-92bf-eb559d8f08d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690d8ff8-9312-4618-83c6-85b41480c803",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38203e-fcb0-4000-bc61-ce85562a4970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd796f3-7340-4779-aeac-ade148411715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa11b73-e3c7-4282-b09d-33e101b9c82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "809b81ef-71c3-40af-9919-4f828e4ee58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09433fea-1dd5-4453-ba1e-61fbd885e238",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f386b7a-b08e-4ca9-80b8-c095f4d5e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7c4e9c-0dca-458e-aa4e-cb27b6abf3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d99d708-7773-4d14-b022-01ee391542b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8550ea-d4e9-45a1-ae82-e5e8b8af243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e940078a-dec6-4b6b-afa4-55fa07f84d90",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cefe3e-5c8d-4c8b-9273-f7aeb27a92c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd8614-5881-4d69-ab18-a227d9c5d8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59ff93f-c5f2-4505-bb36-303393d8af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c0ff2e-7746-456e-9550-aa4519c85856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f800addc-5c79-4efe-aa00-83c3c0cdb7c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e03c5ba-0716-43aa-9bc5-c8743e8b0df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ffb4a4-177c-4e49-8e43-48b21c36702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b73d80-2e0a-4b0b-a8f5-e2f6d36b9526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4598255-58f4-4f50-be35-6a69764b172f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6e8fde-7890-414d-b1e1-532e06c5b4aa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b844fd53-a60c-43f4-9b48-51e9c9ae3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96e9dad-8b7d-4a32-9914-ed6ea364c5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c626d0-1888-4068-9911-4e4aa280b627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e1ecbf-3dc4-41a7-b3e0-81a815bd3ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c787a613-528e-4e22-8d0f-491ec0dca9bf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8d05e-82e4-49d6-b309-15bc54b70a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532fd3ea-fd40-4efc-b883-8624940111ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f94835b-7050-4a80-acd9-acbaedd26808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8aad0b8-9d8c-4f8f-8066-af700e4a81d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb2ce9-eeb0-47e9-a19d-614adf32918b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1ff4f1-f583-41ee-848d-a628fa6ab32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caad5668-46d5-474f-88b2-e2674d7bb883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8ed421-ce6f-4069-bd6e-a99b81861bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2bc7a4-4e0e-4aea-bd9e-8c77849db619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5330c9da-ef8e-4a98-9c5f-650161f12e05",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83224395-c0b9-4d5c-85b7-5f27f80f84ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2556129c-1a18-4ba5-9761-af7b49658b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74e2f73-c61f-47de-900f-29e285dd51cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed18ad2-cbcc-4ad4-8351-606ab50f3d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c3aa31-63e9-44e9-88f9-20793ebf593f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175f92d0-5a3f-46e3-bf0f-bfc72bb7d293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c412e75-3940-4cfd-8b9f-455c30d35f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06b71a4-b95c-4eb1-90a1-692c24c7c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c803cf-8280-4e6e-bdb1-ec7a01d44d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dae6e6-63ae-4744-8a9f-32bb824c793d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f77b3b-5832-4cf5-ba2d-924dbb0e6d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66de8920-9881-4e0e-9620-5d5b45a077c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5007b09e-77b0-427e-b806-95dd045d5331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a648942b-fdf4-439a-b47b-a1827c2c3a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83c8bf9-0f55-42f2-ac73-bd5d292075fe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ee78b1-239f-4925-b8a0-5a4cb1394a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc2e25f-331c-42e8-a517-e0d19523ae6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e92692-10d7-43bc-a152-ad9e321ff98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c1afcf-2714-4b6c-b249-fe430c08bde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8892a2-ba0f-4805-8bcb-2bb4ad4f118c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668c3500-a500-42eb-8840-8c95077dc7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57abe40f-532f-4169-a201-f7877072f23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f5cf23-966b-412e-aab1-6222be798285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b4ab69-05dd-491f-a834-f0427a122e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789a0b25-65ff-4476-b463-bbfaa08a4327",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8605d5cb-5a69-4df9-9ecc-f874b2a1be5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e18fbd4-c0ba-47f4-b484-6163c27d1b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e6666a-29b1-487b-be54-5145dc667935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68ecf451-d06f-4522-9846-4c3b4e8fecab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4767b78-d9d6-444f-bd42-5201395f11a3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfec5213-c43a-42ed-813e-144cf55e3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac05899f-cf65-4e85-be7f-da83c94139b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebcd6e7-a08b-4c7a-be48-a4ba0d1a13d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55257464-baaa-45fd-aaa5-e87642de8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c99b28-43fe-487b-bab8-3dcfc70c0a2b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbb0f12-d17e-409e-b73e-b8d2010955ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc566e14-bdd6-4d7a-bbf1-33cf3ffdc630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c78d75-9ac8-4e47-8741-26c4c1116171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bef1fae-f35e-4cd7-aae4-a971860a5b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d88e83-6a3f-46f4-96fe-2164be15841a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1d2efe-e529-43df-bbd3-ded917bdc20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6073b54a-fd4a-41bb-b20b-9d7889db72b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952909f1-86c8-4509-b7fb-7f2743c8b926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fab150f-b67a-4be1-90b6-861119492784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c577fda2-46f7-4580-95ec-e1f1c4298408",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72984cfd-ae95-4d49-90f2-8a386b6a8a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176bd748-e0dd-413c-af90-9a11a5c5b277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a3a1c0-5263-442e-8385-b4be65fe66d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf126155-c39e-4929-b7a1-5eac35149c26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d082047-32b1-4553-a59f-b56b01f42b19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "185dd871-f794-405e-8083-b14798e50cd6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e17a80b-a285-4398-9d09-8fc0471d833f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d721326f-6e15-4d90-b297-ef7c7ca6a66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a440c007-19fb-405a-867d-5b7f15858786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd772c90-9a3f-4274-bd48-462910cb1de4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eb1fed4-d26e-45e2-aa6b-a2f01ec24a23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ede3c13-8e4b-486b-868b-2c6847decfc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "930f1017-90de-46b7-a3bb-3fce149ea36e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5770bbd-47d6-4c00-ad8c-67249a85fbc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39d8beb3-d527-4a16-a6b1-409d4469f828",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "356bc2ea-f2a8-4420-8a98-b37dc880c0d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20131501-95e9-4917-8ed1-d2456a6114e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63352e4f-bfb5-476a-9d44-39a12297c004"
            }
          }
        ]
      },
      {
        "id": "21eaef35-70ed-483e-be54-d6304dd487be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fec1f1be-fa9f-41c3-8568-a1f540dea7b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9f23c4a-9dc8-4447-9d67-2d19255ac86e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ebdf576-81b0-4397-a99f-eba7d126be29",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19dad89-6e24-4388-acb4-e09351450911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c8ce84-a171-461e-9030-a15330c0ca63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fb6e0-083f-4357-9326-8e47602da754",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc66010-c554-4890-ab46-3b37dd7198a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f851b3a1-fb9d-46e7-a593-c851947e25b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914a034a-d4be-4ab3-a6cc-1ee4277991f1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0865d957-538f-4a86-9d37-8e7a61a832bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ebfaad-4874-4672-9e97-9486f6ae8686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8f5954-70bb-4eb0-bc9d-2ccd0278c888",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65127266-98e7-46ba-94f5-d7a8f99352ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90b39d7-b6a6-4474-807c-da9f79401943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc7269-04bb-45e3-9061-a6f60cf07831",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718282d9-86f4-4a48-8929-4ec39b8064de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3639c9c-3e18-4dd2-a815-2ee575a4ecab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93946c4a-fd9d-40e3-99bc-55b5585d11af",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65298f6f-adea-4035-9b90-d5cc02119934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989d198e-cb76-4028-82c2-18ce2baa2bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05128c9-20d0-4b9a-b2da-d782db7a576b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e620d0-fba3-4680-8cde-c361ab8125f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cb6313-c99b-489c-a3cf-956031c9de4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9687bdd8-d61f-4131-8061-0c190a1710f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535a02a0-1a0b-484d-8f59-79e87f501c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6c9e21-f898-4aa7-81a8-44c1c41a516a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2789861f-f4f2-4cdf-b325-ab6d2328fd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba46f9af-5694-4fb8-9743-8ada72f27999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01873c1-cb85-4f93-b714-047d2037e0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625bcf5-4713-4ba4-bdbb-8b09ee2804ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601c822a-f450-4036-bb5c-d1e9e88100bc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fa02fa-95b8-4aa8-89db-96c8b11866c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7f7a61-1f62-4a5a-a04b-378f8a1b37e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d2063a-cb0c-4ece-985b-862787e03a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb136a18-c7d8-4657-9681-8f33ebff6d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1066500-53f7-417d-b36c-9dbd015ccbd5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac45823-b899-48ac-b964-a53ba8494da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8690f522-0d4f-4407-986a-3335959d3b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bc544a-a917-4437-89ba-56c813d486ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e195415-0779-43c7-acf8-9dbe8e02ca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eadbff7-6431-4974-b8cf-12911bf65502",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e966eaf7-1a5f-48e6-81f4-32061128e456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1570d8-e2c7-4740-8ca6-8f6ab2bb54ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b040a1-8e1d-4d1d-ad43-d94ad28c1e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8621cee8-a518-41ae-989c-a3f6ca697ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d7e178-f8ed-417e-a052-06888e8b6c45",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76884ae-e2a6-4a09-af70-fc464b70115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbffbf0d-795f-487d-bef4-91956bd7f91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d82ff3-9a9e-448f-98cc-fb20de72f0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962f495b-c01b-48f0-8aaf-85a4a02bee1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d298768e-81bc-46cd-a2c6-cc8096c12a48",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c47e02-3a06-4a62-8271-cca5d855da78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e774eeaa-e127-4a7b-8360-9f3f7a892ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90da3bbd-002c-4974-a77e-eee78da7cf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc915ed-4982-4f48-b82c-c745f4e14518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a95d25-c618-494a-b324-cb233c8f837b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5929f28-add6-4752-b5df-e76106a5db1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8f35f9-9be9-439a-a507-d62fcc62c49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092b1f7b-e108-4d0c-b3b7-b493d1fcbc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06763ef2-dea4-4fc5-9fc3-cd5590752b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2d78b4-216e-4fea-b9cc-592620860893",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc697f0-bf8e-4af7-a0ba-20f01f245529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc0df9d-18e9-4c8e-b594-5a0bfc29063d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32751f26-035f-49a4-b3da-f0e9d441db90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6563f3d9-06bc-433e-9ecf-8bd3c26b4daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f896a600-9411-407f-9242-d14983c4fac2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b56d2ce-38f3-4c3e-8a22-bcd6c47ce846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36dddb9-06b2-4262-a9d5-4f0efcd60546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0a9e16-5554-4b7b-8d97-43869a695862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b208ff0-5597-486c-88bf-75917d36cbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4370cfd3-0522-4daa-b3ef-286c8eca4264",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680b1a2f-3e50-428d-91e1-af67f2ffe07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6443399-080f-43b0-835c-10a002e8a24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1528685-fecd-4a12-a8be-ef4efb4bb27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d8cd80-641f-47d4-8783-38189b1ecb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3c38ab-f29c-476c-b45f-3abbc2a6d972",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac930f76-33da-4725-a311-ee669d3db510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff3fb5b-7d93-48ae-a6a4-e2b3ee3152f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734358e9-a741-4d3d-a749-b99dfdad8ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400c58cc-a628-48b0-a434-70df622e2239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503f9d4c-46fd-48ad-ae96-c56fa0369bcf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a4b094-1b01-4bf6-8430-8ec152b39733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb249f1d-0f2e-408d-9950-6e1ca6205115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e7912-c97e-47c9-9bcc-6f0fb25635db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403e7a7f-61c8-446a-8cc8-ad991acda01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8d9d23-0170-4612-92f7-a2e79377d7a9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d95564a-d4a0-4a6a-8dd9-7569a8b5da1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe8bcf2-74ba-4921-8043-5600ff8bfe9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb9c360-902b-4e40-b97c-e114330b4cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15719e81-25e9-482e-b62e-23b2a335132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f60334-caf9-4ffd-9c8f-2d776d2bf66f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2926b6de-2d7d-457e-a40c-3a4687efe4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20099a67-26e7-4e1f-a03e-02948e36cd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42061c6-56f7-4f8f-9356-930d2548f676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84dbdc3-1f4b-4230-b282-2387a6508df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52000854-8165-4bc6-a0cc-ea206d4ccea5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c31e800-a3eb-4f2c-80f0-a196d5c2f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177a333d-8357-426b-97ba-2fce6b3ddf35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78c500-bfa0-4756-9bf3-dc9a8d9ad899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef0b39-abba-4432-b915-49edc5d4daa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56945443-ca5c-4835-b19c-88355ded7cc8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d87e516-bf79-4c38-b8bf-a95ef6b3b7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68af1d9-8d44-4295-93ce-ce943f83c951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46090cf-fd4f-4cf8-8f12-183858cd3021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f54cd-6682-45d0-b186-fd9d9d00331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f6007-ee09-41e8-a6f9-767df120de6a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3628b315-2eb4-40b9-9202-6d4a0361cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a94dab4-1733-4858-8edc-30039c71704a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eb305a-c003-4afc-ad88-8bccfcb98b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a0cd68-dc5e-4880-9bb3-f2a2c5621258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd35b74-e8dd-4125-9725-2b9760b99416",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d93ee-439e-4e57-9c83-fe836711d154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d721b004-9c93-49cb-9f6e-79309fcaa95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc435932-7da5-47be-95ee-82a0a5331ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96eee3cf-c1c0-4f98-8209-5a2b88981ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b98853-12f1-4ef1-8dee-c497fde16fea",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70cdb31-cf82-4120-851e-7a9bd869fe7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec244e24-8daa-4343-acfd-c10fbeb4ccac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbd634d-6af7-4297-ac5d-7cfe7ac5d8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45b483a-4950-424e-8d2e-30a1d602cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b9ba31-d290-461b-b89a-df44477cfee2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1767e8b-256f-463f-bc5a-bbbd52fe8f5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc538d13-6002-4673-8fc8-b9176de3fc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93c41e5-0863-4912-ba9f-696f2042523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069b2cf2-719d-45a7-abe8-9d396f8d4063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2444d2b6-1f8a-429a-a870-9dd4b8b941d0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78718d52-e874-4a0f-8d0b-f36891db16d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925e0c1d-4064-4c51-84cc-41ecb696e162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c850c04-6124-4279-ab68-6263da2838bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f0b54c-42c0-4854-87c3-3a9867a8329f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3bf3c9-ceec-43a8-8a26-3ae32f0aee93",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481c0904-d5b3-473b-b078-54aea4d6356c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a0c025-f563-4117-8db2-f246a85bdd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea7a6b9-6ea7-4506-a9c3-02688ffd56ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ceb6dd-84f7-45c8-ad46-15fdff72f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4aea8f-6713-462a-afdc-1a37e4af8347",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99bca76-cba9-48d8-a089-2c4b2eef4316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdba3a1-c40b-4e40-b651-6650d9b0f06e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b685200-a78e-4e51-8d99-128014e0ba01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e975eb66-d7c8-48ca-a4c0-7b890e0c461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f728fea1-ed2f-41da-8c50-fc1a24938c05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302f4f6-490d-4e58-ac3c-22689519978d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13eeff1-ceb2-43b9-8597-e8b222dbbd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd440f2-0ca6-42f9-b02a-655d2d9f0ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd82a5a3-cd12-44d6-891f-e63a45fc0a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f3fe9a-c3b5-463c-b2db-121bb4d1c6d7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8089f883-1c18-40e0-9496-f2cd978fe69f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f308f9-0db5-48e7-b8ca-e674c63df9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786acf4b-1568-4529-a284-e32ce81d115f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f9a1d5-a044-4577-a51a-5fa5adf6859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37be586-6fa4-4f8f-b469-2d1af8b40562",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cff0ad5-abaf-4ada-b7ae-5df86f62e483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2dc9fd4-2bb3-48d3-b107-f9719b62367d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81b7c00-7bcc-40c7-a163-250d6e2363e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2863be-9470-46b8-918a-3f11e580c690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a5f770-645e-4ed3-9af9-7cd531274006",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e17fb9-5856-42ce-9bb4-8d589eea9d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29976b7f-3e9a-4c15-babb-32f610d25966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ad1071-3f2a-4345-a1a4-f60e55dc35dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0af5d0-f04a-428d-a224-2a8767e873b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38c8f10-10ac-4280-8889-61077c123307",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573418d2-bd55-4fd8-b4cf-fb124205db81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b24e934-6de8-42cd-9753-addce2c5a454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36a1ded-faa3-47d7-aae8-361f808443a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec233630-0232-4f81-8f21-7e5059d489b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ab8822-7152-4066-80bf-0fb0ae2edd37",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54466b4-baa0-4517-af0b-351fca7c2e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72e76c9-ef21-4154-a57e-27dcf744be2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bfd7ff-fa7a-44fc-b908-29f13a87e444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317a769c-4c7d-436b-b62f-12df0ec4d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ebf029-46ae-476e-8df9-88f68b0d1b90",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ea306d-67db-45f2-9a3f-2e30d48e723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae280073-3826-4282-975a-e27c2624c37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e0a2de-7847-46ed-86d9-5bf3cc5ac4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5648dd0-5054-4262-969c-a50b32a8757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9459d37-04df-44d1-b64a-90d8ebcd2bc7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64446d24-4e63-4239-9daa-519d43e28e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e66722-0b12-461c-a722-64d58c16dd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5282dc01-c133-414f-bab4-253bc52e4eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1227a3e-bff9-4633-a958-7002bf269651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3b683-14be-458e-9c44-e66f038bfb60",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568873e0-6e7d-4dae-9d91-3a5e5c102417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb1a6ee-7913-4140-976e-1b8aec06e825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1633fa91-9421-4eca-b9db-9a8608e9b958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae3256b-6422-4f6d-b1d5-d37d9bea9820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bd0cfd-6fa0-404c-9e6f-ace615bca61c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4b1d17-e7b0-4d45-9e5e-eba69896b1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3c35d5-0811-490b-bbe4-556ce96ea733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b8c736-cdda-4141-b003-ecdfad226714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0f8192-f43e-4921-9284-7d9a4e4e16db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7551b0-fd2b-4a0b-8a49-d83f80820218",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc80ac-4ca3-42ed-8b55-3739f2f808ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cced84b1-f6af-4fe0-8098-c7f47b8fe5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c77483b-2515-48ef-8f53-0d7ae156c20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7040d88b-e1ac-4566-8035-882cefebb172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea2fb1-bd33-4d50-9036-b58894b84305",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c7f9e9-9c4a-4642-a3f5-13596fb17986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490be926-42fb-4675-823e-93ea32201daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2bad24-af09-451e-9e25-f1a795e7ccb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc2541e-b216-43ec-84e6-171a712427ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a09fa1e-58df-45ce-934c-6cf297ad1849",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320f6de1-21c4-40e2-a0ae-6c6f7de0d61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ebcc42-9d0f-481d-9b59-4885061812eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66829369-ecf0-4570-89ca-61238ebcdfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cc2e80-5197-445e-a283-fc09b4768959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8711c6b3-03a5-477c-8797-8dfcf79e288f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181a7b0d-8b34-4ad0-a11c-a24d2f47388a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1e11a1-80f5-498d-a050-2f9233d503d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce431f77-63c9-4b87-920d-f228e2192a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c3774e-5752-47fe-b428-6c682a3e2983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9d47dc-a0f3-47f7-936a-1a18526e0de7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab87ba8c-05ec-44e4-8deb-a0740b3cf72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb3c9a7-d5a6-4192-9319-1ae4567f8875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ca960-cd72-424e-8098-6c99f0d60e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafb4476-4716-43b3-8df9-e66379572a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ced57e0-c963-41a4-89ea-e9ff5c9a09f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b6dfa-0065-4a28-9cbd-8c79e61ecf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8b2ad2-f9a6-498a-a912-d4aec9907962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bde7c1-fcff-4375-b123-3eca63a8f70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67f60e3-1b3d-4744-aff3-ca1638ac2d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca4d15-1b1d-4bd9-a725-a4d48bbd956c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53302d4-2fae-4fc4-9388-bf02958aa01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0970025-8aa0-46b4-91d9-f1027da7c5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1100f3-e3fa-4645-9445-557e64008f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6773cfa8-e97b-4991-af88-9d3fa2b31c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0339ff-baff-4426-88c4-c4b60cfc8261",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156f37ef-40da-4d73-a164-0303bcda8173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bc7258-b801-4e62-8110-1be992bc9333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40795e55-8147-407c-b1f9-e99ed932b956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba5206-496d-4a7b-8e76-d406b2ffa022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06096a37-cfd8-4847-a23a-ea8459c063a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff37ab1-a02d-4162-9b58-727ac9ffeeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54b0b99-3fa1-4712-b2c3-2aca6342e572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a46ee0e-28cf-4856-ab62-570c81092017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ff508a-24ef-4f06-979f-684c8fb1802e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71049dba-c211-4ed1-b2bf-8b5f7f9686cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a53fba9-a260-4b42-8b65-1b77998cc7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08911d0e-9e5f-4984-bc6d-c53287fd3beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9f0587-0241-47bd-84b0-48a452563133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3697b49-aa29-48e3-ae70-ed617acb2bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6fd992-2347-409b-82d0-d694432e7234",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc83fc26-28d1-4b0b-b640-e72f14cf1675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8cc063-fdee-436c-8d73-8dcb78b6d1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d470fdf2-5b9b-4e71-875a-15a8a0cb65fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc663e56-c67c-4be7-acf9-93dcc4e62896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf8ac25-6963-4e12-9417-51018f7b8d0e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9210c3d3-e101-40cb-80a5-58204a905722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b694a8b2-0686-4e19-be3b-98e234992c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1eecaf-de41-4693-b0fb-af7c411e9a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46222379-cfde-4a57-bfb1-a9e29bf5590a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2b8e1a-216d-4d74-8883-a9c0545e057f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa4d24b-0922-43fa-a995-342b3a5d9d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2553b555-8e79-4e9e-aa0f-28793c2f6d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb18aa7-b906-4938-b42b-725c1b30b6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd368ef5-5b16-4d30-bf3a-bc5c41eca063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad054114-aa5b-4333-ab00-3c800c73322d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32bfa3-41d2-433a-bb2d-b5bfd8cd23d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76d142e-a42b-4f48-a827-e1c8655739e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04560b60-f7b2-408b-92fa-013402d19ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979f2c58-5ae4-45c5-9d2f-7f662cc65958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f1ff7b-8d23-47d5-8cb6-08cbb455ffa6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9aa5d0-e05f-4c3f-9767-04422f4d0bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a63dd3c-90cd-4693-a9c6-008cdcb7ffb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277a95a9-37a7-498f-879e-3cea49a8845e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86115e1-1631-4c4b-9c9d-aeedfea2a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5579ac8-47cd-4d23-b9ae-88cffd2f28c7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b511d0-24b2-42c1-9a70-b7eb91bd188c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788b682c-e56f-4cf6-b7a5-23bfefc0551e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559aff1-c080-486a-91bc-fbee3dab2235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad4e656-8675-43e5-b31d-05a30fb567ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9cd689-27af-46bd-8733-80bce8338e39",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fec035-4e90-4f38-afa6-e1a74e1a33a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cdbe95-5102-4781-ac4d-f23b59890116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e976a89-62a0-4735-9db2-4f99892de552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e84fd54-4ca0-4a50-bfa3-cf2108543aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac55572-75d7-4136-b738-c6fe9b5d3a37",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973f63e0-76e0-422d-b9ea-ae18b4c521ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3cccbd-29dc-4779-b1b8-c4d874b11529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523ff88a-a9c2-4ed1-bfe9-13c3da1d9142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba82cb-66a9-4c3d-9ac6-91b0098ac50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5745ea73-0dc5-40c1-9ef0-cb170b07919d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b0d08b-dc62-40d9-83f6-369bab9efc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659e370a-d2bc-4fb9-8aaa-785e7a1ab800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf000300-b0d6-4620-bd31-ed4d1014ae9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739dd093-a30c-4d97-a2ee-03d53b1f02dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc152a-f340-4931-9892-c61f86898e20",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cb1878-8bb4-4370-9baa-439de21a0d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1171c158-ab7f-4dcc-b565-c08d180fb909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55ee553-ed11-47b5-89cc-143c29954f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf590558-d252-4d6e-bfd7-b06a2ff0c4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7c3559-9eda-4ba7-896e-e71c135ce3ea",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d28a0b0-37cf-4764-aa2f-3bd7044f35b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2986f0ba-397d-4114-b28e-840bc36df684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e9fbc8-1272-43c2-9615-731872cc06b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca11482a-21b0-4ce6-b378-9abe32af1846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f48ca63-052d-4ec3-ac9d-00437092f7f9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8137df3-682b-4038-b5b6-0e8652b85b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749c092a-0676-4f1f-9993-69d751334947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40ea0db-82fd-41c1-a25f-d489a5a90529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b55edde-6a07-4558-b846-f9ccf02c25cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32180b5e-1303-44c4-ae0f-7a93f2123a88",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae5b025-fd24-406d-a17a-830805a69b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7682b03-88ed-4f8c-b617-025538d19041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d354fa31-2b9b-468b-bd74-6344bc13bd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95186b37-7b75-4547-b0f9-cdde41fb1897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8027821-cadf-4e86-93b2-317bff32703f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f55b443-abda-4994-b7a4-53b824dfaea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4cc5ed1-e577-473e-9d0c-8efc12863a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68aed2e-19f4-4028-92ac-a87f672e550e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3fa81f-769e-491e-b559-976fb3821395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cc253a-34da-4814-9776-559a775eaa0b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb043ee8-87e8-4119-b462-68a2c4550743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e9da980-14d0-4062-9f4a-44dd1c734cbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5a958c-ee03-4537-a061-640a69fc67cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812563c1-83f4-4d47-8b1d-1965fda79347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050c2623-3e06-4e24-a026-0ff200ae0981",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0cf42-efdf-421b-8528-774c354d9f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dad5c162-39c4-44e7-b97f-fe646469ad38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1635b287-212a-483c-bb15-86386103c7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d435b7cb-b480-495c-83b5-37a349af3388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57df7ba-8eeb-4717-b29f-ac387415438f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a732c5d3-9f3e-447f-a694-deb1e3ebed4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4853a86f-4001-41f9-a229-8672e6aaa3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35df8e59-4708-4cd9-aec0-7f87d9717194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f471bdbf-f9d9-405d-9601-c5359d92a23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399230ac-2030-49b1-9ae2-a61cb02bef7f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f732ad-4a6f-444c-85e1-026d416e907a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3475853a-0401-4f73-9de5-fea7487c7fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb6ef55-b35d-447e-80e1-401fb36a5e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bc5de9-607e-4596-9350-dc3fabc15493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7287183a-3734-44e1-ba25-c98e9b794c27",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f89b11-13de-42a8-839d-ae0477e139ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3132afe7-221e-49af-a922-83bc38a84440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d9a760-0fc4-42e0-bc24-0f5b7d1fe736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d717b6-f4d5-4b91-b840-43ea1eaf54d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ff3a88-f3ba-4db5-b9c3-55114b834868",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f2d342-03f8-421f-b8ac-12961f1851dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e829a995-b13a-401f-b667-b7478da600c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36297d-30a0-4fdc-ac7d-a2a182db0724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73708562-ffe3-4106-b550-93f06aa46196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90486a54-10c8-44e7-be7f-a24dbaa45523",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbd4446-945d-4996-ba81-43ffd756ec40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45655bde-1b30-419d-9349-e26c411da4f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54095d14-8307-4f6d-a0d8-f07eab01513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5953b80-5487-4500-875a-2fc3f7803af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194a6d0e-ed4c-4658-8e8f-0e8ea1499882",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b311a52b-b5ef-461d-8bb5-f6ef66246ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "123e5687-049b-4729-8082-20c00282278f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fdebaa-0b0c-4761-b66b-126063759d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6dccbc-d4fd-46f0-9227-75da82bf8bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc420c-7305-4a2c-96b0-5d6e908ab021",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49eadda1-4053-47ce-9e79-bfb51016ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a7feee-0100-4542-9d61-1f1ffea5548d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d00cc6-7e3a-4879-95f5-110b6bcda407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f97722d-77c0-4283-a564-b2aca4b10e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64648393-6633-4002-9b4e-44184eb713c4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70794c0-7de9-4979-9a4f-916da3c1f250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164e84b4-aac9-4353-8144-6ec519bac366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9865ca3-1654-4000-9f23-93c7672460b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c5c5a9-eda3-4d53-9226-6bc66fa7f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b2b3f-1253-4f34-9efa-9323569b4599",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d024afd5-118a-4e2e-b4a9-fb5778a0ed09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699619d3-1192-4a3f-abcd-5fe9942e1f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1dc2f0-0809-4003-a728-e677f3ea0e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218162b5-ccfd-451f-81ac-315c7466d10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ed50ee-0626-48c5-b5b3-5a1d143cdf95",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c4ed2a-8324-4132-85eb-f54e08f73957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d558f9a-5850-4372-9ea5-85e6345f1980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf0bb0-ec48-40d2-be87-3e3469edcb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42747859-52e2-4bd8-9264-03e433f6bd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a00cd00-6b40-4144-9ffc-99969349ce55",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aa7a93-6649-44da-9fe2-0896b855276c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c3ecc9-e432-4029-b827-b31ad73c69bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9170a53-6c0e-4cd9-98b9-99e8fa5ed443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf94eaf-dcee-4789-b976-573857314e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbae3d5a-e185-4ad9-a212-73c7ccfbd1f2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc668e8-e3a8-4bc2-862b-e264d10024f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67343097-fbed-416d-aec5-635374761a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5ae491-3d7e-4b07-97f0-d72dc25fb67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41f2ca2-147f-40b5-bd1f-e01b1e575aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cae8882-8b18-4b69-a95d-a2f73b4e8fcd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3646658-2014-463a-84d1-36599addde24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91fc80ad-3140-4a47-820e-05b4fa999b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a891ffe-0240-4bca-b0d9-3cb1f8e8c2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b26197d-7e07-439f-9d13-b41a0c91b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1452f9-5ee8-49db-ac9a-c9d56d226aae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369101b4-f195-427d-8738-6b3acf7b927c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a34c569a-073b-4b36-b432-52ad5ae42fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd17fdf-4638-4e68-9e5e-4b2b9df6bde7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2a65a1-4021-4f80-84d3-d59f6fb14a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeff908-8cf2-4f8f-bbcb-c7e300365b2d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9585dc-faa0-46f9-b8c6-094f7df8fdc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353b8810-85b7-436f-a9d7-80a99e008a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e781e1-611b-48fa-ab58-dbe0121f574d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b755d278-3719-4bb4-86fa-2742177903cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f1e971-8595-4af1-963d-f960482d1ac3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af91c85-5710-4bd6-88bc-29bca4abe6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b80533e-b223-4127-af02-f10fcff23ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39149bb-e264-40b5-9be6-f29fe0f54749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52b2209-47e1-46c6-ad54-c2c0df69fdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d98f56-68cf-414a-87c3-d4f8a7658911",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59282943-29f3-43e7-981b-418623d83f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6122d3e8-78a6-408f-bec3-1a903e756edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6095ceb-7c10-48eb-b936-cb8e969b9f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d175b9a-b61d-4ace-a092-6d324af085b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303374e1-1cfe-4d55-aa2b-a255c735a959",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2df20f-498e-41e9-b8bd-b03770bd20aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b68bb1-463c-49df-baef-ab36981b5dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b0199-7473-449b-b5fb-0df3da482060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c78579b-56f8-4a15-aba5-82d0e2b3e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8378243e-04be-4fcb-bb69-28a87ef58370",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a9bfb2-3e9e-4d5a-9ca0-5bfca7fbb1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abaf0041-734c-475f-a294-6ba38f8d9b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bcbb35-08ff-45a3-846c-49630b208b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e6c453-1f55-4794-b918-044784641b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b48af0b-b908-4490-abe0-c7f654c4b1fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc67143-246e-4af8-9564-8f8379c80cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ef631f-585c-4d44-81c5-4798acaa0d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca82a62-fa6a-491a-a9ac-4f36ec8b315c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57aaaa42-1f0d-42da-a45f-d379a3631d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b85a2d-56bd-431e-87f9-6d7c53d39e4e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07a8a7b-161a-40e1-be6b-722ad6c5b88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b116fc3-8ba8-4062-9905-69f450e4edfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd96c52-b46b-45a1-a387-f2ce2942fd98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259e4c9b-2dc9-43ba-856e-902813281092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fd1146-44f3-406a-9710-6beebd3f6635",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f2f1e0-c477-4d94-a20a-c76d4efe6144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecdff289-e719-4eca-a9e5-6d5ad3898fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47227f12-3861-4513-978c-381aa603af66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461ac648-20cc-46bb-8e71-081c29a5ab63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7929a399-b32a-42ee-bfbd-2999a5efd07f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a58bb2-11a1-4e6e-b883-4fd18c015731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a2b947-c625-4e36-b75c-5e07e13da291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cbdd37-7b82-46e8-a79c-9adf19dcda47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17b25db-83f4-4c7c-bd6c-2c943e94fc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60421c67-7a89-4375-8cff-9d5948f1c9c8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc0b84e-7c47-4a06-a835-8e56a277aefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170e3151-425e-4ee1-ac97-3203ca7e67cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1daa53-a547-404e-8774-dd88c03b3217",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20dcbc3-e241-4c1b-bcea-8d5de7b2bf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f92989-796e-4181-bed9-92a86d10f8fc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0672504d-a887-487a-88e0-5542d3dd7f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20ace17-f8fe-4467-a0b8-0b812858c473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d435fc0-5490-437a-86b7-70e523738ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4177a919-b771-47c1-926a-a6c1aea88998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0e310f-adf8-4197-9e24-446c47a4160a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc106b3-87c1-4f26-8c87-609c75d9bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7759f734-17eb-47cd-9d35-538c00409ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f5cbac-2b5a-4be2-97b0-87727be0bb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab57925-adbe-4381-b409-385aaab82e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1654b00-7dd0-4bc7-ac43-e32460f9f338",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c5e1f0-38ac-415b-af04-ef237e7b07cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc87568-7610-48bb-90c2-58582957da94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb05d5-01a6-434c-a655-c808f138c048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7763e55a-99c9-4875-b859-f5896cabb95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71adfda8-5a86-4b9d-b607-b403694d8c0b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddce6a8-b581-4345-98a1-08b7da59d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59d5f5d-3563-456b-9358-cc1508aa8596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fdc67b-50b1-4399-90f5-546bd3645bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0883a5-ff95-46cb-8d40-e7928b04465d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77102ce8-78ae-4963-ae1f-58434169c9c7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2a6050-4bff-43b1-91ed-d4e19d784186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e491cf6-c0a8-4427-8c03-32a2653fd378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b145f13-2371-49b2-a985-110b24fff956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e52b0c-be82-4fca-ae65-cc64cb4655f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edac72f-501e-4241-acf2-1f4aa18f23ac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5ff352-cdd5-47f3-9342-9fc7c6f9e511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf2367e5-cc08-4f92-92ae-8360fc951cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da22cd55-f63f-4dd7-8a82-d64ef073b088",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6f95c7-d42e-43fb-8242-f0975fc6c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e77cdc-ef0c-4e19-8c31-fff7920d1fd3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccb3ed7-cf45-4889-bf46-17712af698ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4760c875-8486-4e69-b80b-cb6fdd41a2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3aaf5c-5d02-41c2-a736-c0ff1b15384c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d462ffb2-9aed-4e0a-9cb0-e3db6e73d4c3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4968223e-ca7f-41cf-aa9d-165e50760152",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0e994ab-1cd8-4a65-8557-40c064375c52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d561a6c9-4a5a-407e-a0e6-f48877688bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37cf397-4fa7-4470-9e6d-c2d2e07fa547"
                    }
                  }
                ]
              },
              {
                "id": "67a8f06b-ea24-4dd2-86ef-0a2e1584828b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27369aa2-b802-432a-9f87-df33837aeb40",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8adaaf9-46ab-4cb2-b863-be0ee37d740a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "73d14438-56c8-400c-8676-46a12a578f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c7ea7-7703-4cf4-8d5b-fe7dec7403e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e2b034b-bce4-41be-a52f-e5eb288391ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c53b573-6ee1-42a0-a49a-f5084aab1190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1490b449-0f5c-4546-8bc4-ce698d850e27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2774bd25-333b-4bae-91d2-76ea10661cef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0bb65e2-6812-4a8c-9031-f70da97222ac"
                    }
                  }
                ]
              },
              {
                "id": "b5838106-8772-4161-b279-0c0d4a595cdf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "45a33957-c29f-4770-aca8-a543dbf4b58b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a2909d-d438-4592-9e2c-cdcd0ceb3286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fb8238fc-2a3b-4a5a-a823-ce33903c9819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88826c98-ef40-4618-bcad-f62a7e99c937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25fd257-0a15-4efa-9835-9eed4975421a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91c7275b-a12d-4bdb-93d7-84be5154af56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7f84da6-dc2c-454e-859e-8847c8f15dac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bae648c-a422-4ab0-89e5-12cd08c1e890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c3344c8d-4eaa-4ddd-9f2c-cee9932b0119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f58aa0fa-5a3f-42c4-bb57-b3b0b8ffcbbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ef120bf-ac49-4bfa-b3a4-8530d1ee48dd"
                    }
                  }
                ]
              },
              {
                "id": "16e88fe4-f155-46eb-a73c-97375f69131a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa8bca10-911f-4e7d-8e14-bcc6139b8b5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "54d8b145-7090-40e3-818c-e2748c0ad91a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c92ab90-29c1-4bfe-b0cb-27058b406def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e0e150d-cf44-423b-b802-964329e17053"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a99ee30-af3f-418b-8e7f-5335b8fa32dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "76dfff4e-6819-4001-b7be-b0caab0fbdd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2636ce7-12d8-4d85-987e-1d757303eab3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e034116c-37f4-454d-ae0e-08a6950e8b8b"
            }
          }
        ]
      },
      {
        "id": "4bb9f91e-ba88-4974-ab6b-e68b879b1d67",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f7d6fce3-0877-432a-bbf8-33499a4d48ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a333860b-20bc-4aa8-80f3-b72c1a4821a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1476cab-2872-4bac-aad0-97f655092aec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee6abd3-29ce-4323-a87d-d2b1a40f972a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bd93e71-a991-48a3-a75f-520c81194fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29f6a68-b18d-4e61-b2d7-71e78e71efe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "665f1a36-755c-4c3a-af2f-0c95307ed7a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c83f548f-8870-4ecc-a3fd-2ccaaad8d65e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856d9b9e-c0ec-470d-8aaf-39a3abca839e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d145d7-f9cf-46ea-93dd-3fa88b0d5734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "692d3531-a50f-42a0-85c3-0cdf46d10c5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36553fd1-5544-4198-b7cc-88156368258a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e962278-d4f1-44a0-a4f6-b56980386b6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bee5b49-300d-47a1-9888-9c430cda5e93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce526aef-4bfb-43ab-94b1-423ce6860b2f"
            }
          }
        ]
      },
      {
        "id": "9fb0ed30-48fc-40d5-89ab-d40757c18268",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2e0fdc27-d4b5-4b26-bb57-773cae5a5d34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a918b469-2c27-449d-ae07-37aa24f98729",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40c9b2d7-0d98-4f45-949f-a76272fe4a5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c34f0-4f78-48a0-a5d2-89db283975c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccf31e4f-a85b-43db-907f-31f38c71fff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13370874-af9c-406e-8d42-6bb8940017a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac30985b-958d-43ab-b480-c1acab08f580"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6926fb49-4f11-41da-b4f6-fc9d799af9ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c599476-90ab-4e3f-996f-1be049d62345"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8467bab4-52ea-41ae-9008-25439c5da6a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8e01d1-0663-4432-8fb6-45520cafe2e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b325aa6a-1638-4047-9031-b427fbffb5a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "489929a5-174f-4ae1-9fa7-66020c68cf41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57e76d5f-02ee-4cf1-8f69-425513414483",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c437f18f-2262-44a5-99f4-e2d5c40be535"
            }
          }
        ]
      },
      {
        "id": "ff705f39-10cf-41c8-a821-a1baee8cb29e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "51411942-5ae3-4b85-8f26-a26bcabcb10c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abc86bc8-f643-4621-9bb6-340dafe4e6c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f45c038-4d73-4ac2-84fb-bcbc6865746c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe87d5a-8883-4f7b-832a-da36ac253316",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2226b007-9cc8-402c-8f5c-3ef0055eebba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd77301-e641-4f5e-9630-08780700dc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83dd35dd-52c2-4e56-8098-d854a4077fe8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76fd34e2-7f0f-4429-8e79-1803af17c82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1eeb5e1-5f51-4174-ac1b-0d33a89f7685"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e00f7da-af55-4563-9d13-2669398eacde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a56990a8-c88b-4b14-b829-3b1829db4e18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2af383cc-f6f5-4e8d-90c5-70985490ba87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e512496-898e-423d-930f-b4d8b1cb316e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e2ea8f2-c492-42cb-88ef-536974c29a9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f20544a-93fd-4130-8622-4ed237e68107"
            }
          }
        ]
      },
      {
        "id": "d5d9f758-890d-47e9-8860-b0c00a812c4d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3aeb4fa-ee0d-4354-add4-fd42bccc5828",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f196aa02-c5b0-478b-88bd-aca1c9e95991",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f862dc05-7b21-4ba7-acb1-26dff4132059",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ff8b7ba-93db-4d2d-830a-ebd0a42e1b5a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9ae947d-483d-44ef-8bae-4dc1defe543f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 459.2420634920632,
      "responseMin": 6,
      "responseMax": 15321,
      "responseSd": 2266.003110361315,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726101791240,
      "completed": 1726101915397
    },
    "executions": [
      {
        "id": "7629d8f0-9456-49f3-a55d-014b0dd0703a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ba6fc251-252a-43ae-a4c9-69e9082c6e49",
          "httpRequestId": "6ee56d68-bb3c-4eb1-b7b0-5d17eea5a9fb"
        },
        "item": {
          "id": "7629d8f0-9456-49f3-a55d-014b0dd0703a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "95ae349f-4da5-4c2e-9028-9c313881849d",
          "status": "OK",
          "code": 200,
          "responseTime": 399,
          "responseSize": 0
        }
      },
      {
        "id": "4b70cb47-81a7-4d7e-bc68-56cf7fd3464d",
        "cursor": {
          "ref": "b938ee49-e7e2-4c35-bb6f-8cf909eefa39",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "68bbe8c3-1954-4a3e-8004-0024891ec200"
        },
        "item": {
          "id": "4b70cb47-81a7-4d7e-bc68-56cf7fd3464d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bed67246-f09b-4f52-b2a0-d8752aa9000e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8bbf0b0d-4c92-4b90-b408-3ee9bc6cbae3",
        "cursor": {
          "ref": "d041b893-8401-4a5e-b0cd-c327370d8ef1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "14f0cf16-fa37-4673-a181-38178c4309c1"
        },
        "item": {
          "id": "8bbf0b0d-4c92-4b90-b408-3ee9bc6cbae3",
          "name": "did_json"
        },
        "response": {
          "id": "21b7937a-50a2-446a-a808-7426923bbf26",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c8bad7-aa2f-44ba-84b2-f1d5574603fa",
        "cursor": {
          "ref": "abce60ce-f1f1-4c11-881a-312ec1b8e4df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86ddce69-1369-4acf-b1d1-8b56d2c6c3a6"
        },
        "item": {
          "id": "56c8bad7-aa2f-44ba-84b2-f1d5574603fa",
          "name": "did:invalid"
        },
        "response": {
          "id": "672d8c10-7bbb-4d29-afaa-0ac69aa2036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2400,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c8bad7-aa2f-44ba-84b2-f1d5574603fa",
        "cursor": {
          "ref": "abce60ce-f1f1-4c11-881a-312ec1b8e4df",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86ddce69-1369-4acf-b1d1-8b56d2c6c3a6"
        },
        "item": {
          "id": "56c8bad7-aa2f-44ba-84b2-f1d5574603fa",
          "name": "did:invalid"
        },
        "response": {
          "id": "672d8c10-7bbb-4d29-afaa-0ac69aa2036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2400,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957af71c-314d-45c3-a771-a232d91f644c",
        "cursor": {
          "ref": "6e48d576-6588-4740-9901-106e53e995c3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f87867a-fa4e-433b-a3da-adb7afd32e87"
        },
        "item": {
          "id": "957af71c-314d-45c3-a771-a232d91f644c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f2d9bf8b-e2ae-4750-847d-6f8ccd98fa0f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2694,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b282e4-9d95-4c75-b604-cc82b21f4b3f",
        "cursor": {
          "ref": "57462757-305e-4add-89b4-5a0933dfcc42",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2bb25a41-611d-4449-9e94-8ff6da125bc0"
        },
        "item": {
          "id": "a7b282e4-9d95-4c75-b604-cc82b21f4b3f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d41df608-ef22-403c-873c-fb325d8eb996",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2259,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d512f4f-a059-4c4c-87f4-f134518f8bce",
        "cursor": {
          "ref": "ed7c6f51-0195-4025-a149-81b82c136c49",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cf67c09f-c488-4be5-8442-b9b48043c6d1"
        },
        "item": {
          "id": "9d512f4f-a059-4c4c-87f4-f134518f8bce",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f59420f5-cc53-4de3-9983-1d892276c28e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2c1d82-8b29-457b-bd30-071945fb4efa",
        "cursor": {
          "ref": "e9a6d419-1b68-443b-b976-0bc80ba0f988",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "38d140ea-597e-4e4c-8e30-5faffd117814"
        },
        "item": {
          "id": "9b2c1d82-8b29-457b-bd30-071945fb4efa",
          "name": "identifiers"
        },
        "response": {
          "id": "f6d4d058-e5fd-41c3-8b0a-08ae377daef9",
          "status": "OK",
          "code": 200,
          "responseTime": 2344,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4892f4-71ae-4873-ad9a-71bebeeaf7fd",
        "cursor": {
          "ref": "dedd593b-6986-4b94-86e9-25bd369ceaeb",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b1b237ec-fa5d-410f-a8c3-1dd136a5769d"
        },
        "item": {
          "id": "2d4892f4-71ae-4873-ad9a-71bebeeaf7fd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bcfbe8dd-046c-47d0-8441-ba064c78d0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641f7f5-95f7-4d68-a4f0-6efa38634bc2",
        "cursor": {
          "ref": "58e069f1-4c62-4e25-862f-fa929d15cb40",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "27997744-70e0-4fa8-b921-0728c055925c"
        },
        "item": {
          "id": "a641f7f5-95f7-4d68-a4f0-6efa38634bc2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "582aff25-082b-407e-bf72-4201dff1dc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd5bf17-2e93-4860-a82d-02c2ed31d711",
        "cursor": {
          "ref": "57a30d25-735a-4dd9-b1b8-87f6e7a07c7c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "deeccd40-8be1-4142-afd3-1a005180289d"
        },
        "item": {
          "id": "9bd5bf17-2e93-4860-a82d-02c2ed31d711",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "61d69496-83b8-44f5-b3a0-de9c934dac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce13250-6e3f-499b-9e6d-7097bb5fac19",
        "cursor": {
          "ref": "b2549047-fd82-42cb-b103-3c5d1df55b3a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "95d65471-d84d-46f3-86f3-3d13aa8daa70"
        },
        "item": {
          "id": "dce13250-6e3f-499b-9e6d-7097bb5fac19",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c198f432-3014-4901-9880-637b41a769f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053d1e70-14f1-41a4-a44e-b3c7fc1578fe",
        "cursor": {
          "ref": "e0f224a9-6b38-406b-9a49-c67097698ec2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1bbb11b8-10dd-4a46-b910-5512069761e8"
        },
        "item": {
          "id": "053d1e70-14f1-41a4-a44e-b3c7fc1578fe",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dcf0f0d2-d398-41cc-9504-c9591041d8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e08e69-0675-4fec-9080-746b979ad800",
        "cursor": {
          "ref": "0345f097-1279-4172-b946-14616ebd4260",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9b1e38f0-87c2-4eb5-8d34-9d1149215375"
        },
        "item": {
          "id": "93e08e69-0675-4fec-9080-746b979ad800",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b7070e3d-9fb5-41f7-9a3a-d45116ec4058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d506fa6-5187-43fc-a437-279755315aac",
        "cursor": {
          "ref": "d370a858-c092-42a3-bc06-52a440c50252",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fef4201d-84d0-40d1-b40e-a206fb3e45d6"
        },
        "item": {
          "id": "9d506fa6-5187-43fc-a437-279755315aac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fcd8fe98-d248-49a0-a5a8-97472cbfaab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2a07a-898f-4341-bb35-dabf2945908f",
        "cursor": {
          "ref": "517fb3b7-1892-4f99-8a19-3de0e0b11ba7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b28b1f57-0402-48f1-99d8-33cb680ed27c"
        },
        "item": {
          "id": "8dd2a07a-898f-4341-bb35-dabf2945908f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1bf9bde2-1e76-49e8-ba43-dc32630a3cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba04884d-5b7d-4aa4-af78-8204f7e17c8f",
        "cursor": {
          "ref": "23d6f357-5bbe-469f-9ba4-8b2a4bdbd8e4",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e441b01c-ec14-4cd4-8cba-504b74512e13"
        },
        "item": {
          "id": "ba04884d-5b7d-4aa4-af78-8204f7e17c8f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "13a169c5-1026-4cdd-925a-7e9fc72468c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16e84b-ccc2-4490-b9d9-a3810e5c1390",
        "cursor": {
          "ref": "919c2938-606d-4d97-b342-b6b174b229b6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "07b5f4dd-4803-4f41-94ff-cc472837ba57"
        },
        "item": {
          "id": "6a16e84b-ccc2-4490-b9d9-a3810e5c1390",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ab15942e-3a26-471f-b891-b972979545d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd53428-9f8c-4b1e-ac14-77fd8937397b",
        "cursor": {
          "ref": "20ebd067-8cc5-4f19-95e6-7cea4536cd91",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5fcb66f-804a-4eb5-9e94-c718c0c2f1c3"
        },
        "item": {
          "id": "1bd53428-9f8c-4b1e-ac14-77fd8937397b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75d1d2bc-e0cb-48aa-99d1-b7ccf24444ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71414b1-a582-40f4-8ff1-797c30fc12ea",
        "cursor": {
          "ref": "127d78ee-9758-434e-9d05-38bc995c4a69",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c7839ee7-ff93-4a89-a775-8a8839637cad"
        },
        "item": {
          "id": "c71414b1-a582-40f4-8ff1-797c30fc12ea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f4daf374-a7e4-487a-b429-97013b0adb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a97bb6-0ea1-4f63-b0de-ed138e72b9d1",
        "cursor": {
          "ref": "be8e6a06-0c2f-45c3-9754-5ecbecbc9e7b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bf7ed56c-8bcf-4150-a4af-70b65e780d89"
        },
        "item": {
          "id": "a5a97bb6-0ea1-4f63-b0de-ed138e72b9d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b77410bd-69ab-4af0-91ec-ccf33867fead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d4fc60-4558-426c-9d43-df939e87b538",
        "cursor": {
          "ref": "38f68783-fc87-49cc-9113-52439b9e5a57",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10e582d4-df0b-4860-81fc-3864d20a3630"
        },
        "item": {
          "id": "d0d4fc60-4558-426c-9d43-df939e87b538",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7a71aea4-230d-4f31-b70e-9cb2b63ffa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac93302-7437-4104-9cf8-156277ddb262",
        "cursor": {
          "ref": "4f01eec5-97d8-4260-8a78-0b08c8f192eb",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c49572c-68e7-4b08-aa01-a4090ff40b6b"
        },
        "item": {
          "id": "aac93302-7437-4104-9cf8-156277ddb262",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0851af98-7d6f-4e2a-91b7-986c5aceca90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75474113-a0c4-4ba0-a48d-0a6e73b8e7ca",
        "cursor": {
          "ref": "fc6f5dba-2932-4b3b-9fcf-1cde1189184c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "33b1d4ad-984c-477e-bf76-2e3984e78e9c"
        },
        "item": {
          "id": "75474113-a0c4-4ba0-a48d-0a6e73b8e7ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb7867b8-82f5-489a-9e8c-d10084f28e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcd689a-6f1b-4bad-93af-7ec94ab22f2b",
        "cursor": {
          "ref": "5651ccfb-be01-4f0e-8b31-3f264f199c99",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ac79f206-0ad5-479c-a398-30477b29f147"
        },
        "item": {
          "id": "4bcd689a-6f1b-4bad-93af-7ec94ab22f2b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f1be8a84-99fb-4d70-bd93-b08286b2133b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbbe3f9-070c-4e81-a373-f8a6b3110be4",
        "cursor": {
          "ref": "38229942-edfe-43bb-a14b-0862c3c0df78",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2d4880b5-fe83-47e9-b3c0-85e208f586e4"
        },
        "item": {
          "id": "2bbbe3f9-070c-4e81-a373-f8a6b3110be4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "488f04b0-25c5-4534-86ea-d325f3aef572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c2acd-7aba-4a84-914a-0b294cea9a83",
        "cursor": {
          "ref": "e2f19b08-2649-4d29-a9ee-216f4bfc48e4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c51b7a99-e8c6-4819-ac8b-c485dac45a96"
        },
        "item": {
          "id": "ad4c2acd-7aba-4a84-914a-0b294cea9a83",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "68568a41-0686-490d-9007-2e86027b6bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2612ab9b-1654-4995-b12d-9731b20293cf",
        "cursor": {
          "ref": "260e62fe-25a8-433f-9c75-6336a981821b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "597d6f13-f8f3-4d12-8e07-d9678509a7c4"
        },
        "item": {
          "id": "2612ab9b-1654-4995-b12d-9731b20293cf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8e292ccc-1b1f-4a8b-81cb-938ca06bf1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37be822-0868-4c4d-ad52-bc18748fa65f",
        "cursor": {
          "ref": "f31cb7d2-8d86-4a2e-8cd5-9b29677831c3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "09324d2f-df3e-4c8a-86ca-c7b23ed97d2f"
        },
        "item": {
          "id": "c37be822-0868-4c4d-ad52-bc18748fa65f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ba345db4-b7db-4246-be8d-bae8f02f3f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabca5c-bc2d-451c-8eca-a1c88f45604f",
        "cursor": {
          "ref": "0cb6c8d9-7a71-4d57-a83e-7402ce9b5373",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d54e4fef-b5a2-4a45-9bcb-2cc9434d46be"
        },
        "item": {
          "id": "aeabca5c-bc2d-451c-8eca-a1c88f45604f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "27b0bd69-4caa-4b62-bc81-df4473e1b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b1583-a9e4-4c76-861b-9ea2991885fb",
        "cursor": {
          "ref": "b3066ef0-320c-4b39-b6f7-1360fb0d8e21",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ffaf77cf-5b6d-4b5c-9abe-f485bc8b01b0"
        },
        "item": {
          "id": "c08b1583-a9e4-4c76-861b-9ea2991885fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "026d7b71-43a0-4b3e-8fec-c47c6a6ab07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99918a9-1a9a-49a2-99b8-653d94455df4",
        "cursor": {
          "ref": "d6c7725e-67ae-4d01-b688-216f624eb298",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a4b91cbc-2aa4-46f9-a657-177d4b9a8877"
        },
        "item": {
          "id": "f99918a9-1a9a-49a2-99b8-653d94455df4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "42165fd8-d3bd-4318-af4f-4d495e175367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff66c96-d809-44bc-9683-8e83ecbca7bb",
        "cursor": {
          "ref": "14e74255-3b3b-4a89-a829-05ee9c7c3d63",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a5468060-69bb-4259-b023-451bc247553f"
        },
        "item": {
          "id": "fff66c96-d809-44bc-9683-8e83ecbca7bb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2fb0b6b1-e7ac-494f-aa7d-6e9fde1b94b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7497b689-8cdd-4742-86b6-0b0ca7eebf13",
        "cursor": {
          "ref": "3d96f8b6-218b-4c17-a234-fb11be854f0f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8f9664b5-0d09-45af-879a-686d8a76c6a5"
        },
        "item": {
          "id": "7497b689-8cdd-4742-86b6-0b0ca7eebf13",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa768351-9529-445e-80fd-39c9295188c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4676847-f590-446b-bb64-1efddaf56713",
        "cursor": {
          "ref": "2fd70a9c-3151-4f0f-a013-da25a9e22819",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "af0e25f0-3d2c-46c6-ad26-b4293c443c76"
        },
        "item": {
          "id": "e4676847-f590-446b-bb64-1efddaf56713",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38318889-e08a-4a84-b1f0-0ded6f820cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1fb308-3a69-435b-9e40-b14017da8461",
        "cursor": {
          "ref": "735edcb8-d636-4d16-9b8d-34c45ad9afbe",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2cd863c4-8923-47fa-9624-370e9f773772"
        },
        "item": {
          "id": "2e1fb308-3a69-435b-9e40-b14017da8461",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "91dd5c82-0f38-4c0c-80b5-1691d4e70e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459b47d3-dc57-4e2b-b397-b30c07c02ecf",
        "cursor": {
          "ref": "6491fb73-8f25-4a53-8ad5-eaeb08531f85",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e342c23b-dd78-43ad-8e33-a3b3658155ea"
        },
        "item": {
          "id": "459b47d3-dc57-4e2b-b397-b30c07c02ecf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2f250aa0-28bd-4b66-b01d-c10e587deb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a267483d-d889-4fa3-b78e-a5f78a029fb2",
        "cursor": {
          "ref": "fcf85c9c-3e1e-4e08-b005-27d64bd4dd53",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "418779e6-443a-455d-8be8-75854c45cf2f"
        },
        "item": {
          "id": "a267483d-d889-4fa3-b78e-a5f78a029fb2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2ed8c41e-762d-4a4b-b129-229315c6e813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af98e7f-1916-45d6-bbaa-96643cfdcc8c",
        "cursor": {
          "ref": "6b034961-5acd-4576-8f95-0cbef108c88c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0c9bf4f1-a6af-438f-b811-d064bb2b894d"
        },
        "item": {
          "id": "8af98e7f-1916-45d6-bbaa-96643cfdcc8c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1ad3ea18-07b0-4bb7-9c75-60720d26539f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372930ad-f9ad-45aa-afb5-2cb7f5053bf9",
        "cursor": {
          "ref": "af622a93-0ec6-4758-8b23-472a38f85252",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "17de9e26-7f21-41d0-b58a-f6ec232717da"
        },
        "item": {
          "id": "372930ad-f9ad-45aa-afb5-2cb7f5053bf9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "46b797cb-4276-45c6-b058-d66c392e917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6684850-cb47-487a-b0db-fd190a997bc3",
        "cursor": {
          "ref": "87b81a30-aa84-4c8c-86b4-5f8aa59f3724",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "13df2054-cd1a-4a58-ba45-7904cd983ff0"
        },
        "item": {
          "id": "f6684850-cb47-487a-b0db-fd190a997bc3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b5265cdd-c32c-44ea-9bb1-d507b2f620cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a406dc1-8853-4e7e-a72a-f21741f62ab5",
        "cursor": {
          "ref": "e1e30aa7-0ef4-4839-87ab-00ccc2ab0e95",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "512a293a-1476-4932-bec9-4da61c52af16"
        },
        "item": {
          "id": "9a406dc1-8853-4e7e-a72a-f21741f62ab5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d81c3258-9bf3-4abc-9c5c-741211af5975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fdc7fc-899d-408d-a186-a1148d1ed6c7",
        "cursor": {
          "ref": "a0ac31f4-cc43-4efe-94d4-89efd5624369",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "87d684ab-af4f-4576-b484-d83a637949f0"
        },
        "item": {
          "id": "44fdc7fc-899d-408d-a186-a1148d1ed6c7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2cbe987e-06db-4fdb-bee3-85c1ff5ca88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fb3194-05a4-4c3a-9e64-56935725ad0d",
        "cursor": {
          "ref": "7260c0f3-9154-41f4-9d91-f6301789e9ac",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fb8748f6-6d72-4210-8301-925efb2e7187"
        },
        "item": {
          "id": "42fb3194-05a4-4c3a-9e64-56935725ad0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0301be4a-ecb0-47ed-b8b5-4b3a6665bd03",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb55312e-f081-4e8d-bf14-71703045bd51",
        "cursor": {
          "ref": "4d833300-d1d6-4db6-b70c-90105e870f02",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6f0a2089-2d78-40a1-a619-2a83b0a32e4c"
        },
        "item": {
          "id": "cb55312e-f081-4e8d-bf14-71703045bd51",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "083e2c12-74b5-4c4a-83bf-c774938b4f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2299e02e-d839-4446-ae5c-5aff0dda9c7f",
        "cursor": {
          "ref": "0f22a7ad-0674-48ae-b021-1e08bef27500",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3bcb6f14-5faa-4307-9d55-3f0990e2551c"
        },
        "item": {
          "id": "2299e02e-d839-4446-ae5c-5aff0dda9c7f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a366c3ea-88cd-44ae-a90c-1b9e3c0f1f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefb8664-0edd-4ecf-beb7-64f701fad165",
        "cursor": {
          "ref": "492ded49-fea0-4d6c-a063-009420c2f371",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "48d78364-95c9-44a4-b982-9e502f82f17e"
        },
        "item": {
          "id": "eefb8664-0edd-4ecf-beb7-64f701fad165",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc1df22d-1fea-4a36-9aaa-81de9837c00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f9a581-8104-4cec-8511-c00fb2c160c0",
        "cursor": {
          "ref": "9b220ab1-8d71-48c3-87ab-2b6a6d82eee5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2bbbf1b0-764a-4a83-a2ae-1f1868563e74"
        },
        "item": {
          "id": "19f9a581-8104-4cec-8511-c00fb2c160c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ba000bb3-8197-46af-aa0c-2eba05e6aaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9463aa52-bfea-4eab-9ebf-6cb56516780b",
        "cursor": {
          "ref": "63d9ff3f-7842-4088-8ff6-dd151fed0b0e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7463607a-dc92-4733-ad87-1ba84ec24a4b"
        },
        "item": {
          "id": "9463aa52-bfea-4eab-9ebf-6cb56516780b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "572d91d2-80eb-411f-9c73-6ed17bcbf9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e1c17d-f973-4e3c-b864-87026980e007",
        "cursor": {
          "ref": "79835b25-b87c-451e-b91a-10dc0e9774a4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "41d171fb-89f6-4e8f-afcb-6c7701be37cd"
        },
        "item": {
          "id": "21e1c17d-f973-4e3c-b864-87026980e007",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a216d80c-3fd6-4477-a0af-19e88362755b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13d5630-9d6c-4163-93a7-b136cbd10981",
        "cursor": {
          "ref": "5ca4de2a-3e94-4d5d-861c-c440c901d76f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9add5e2b-d4e2-40c9-896c-d358af384ba5"
        },
        "item": {
          "id": "b13d5630-9d6c-4163-93a7-b136cbd10981",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e9c3b48-d622-4d92-a363-c45aadbff75b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e55a898-2dbf-457a-8206-13266619f63d",
        "cursor": {
          "ref": "de92c469-99c7-455f-bf38-385cec5935ad",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "897443c3-b4ba-42c0-be59-7fac5b15b045"
        },
        "item": {
          "id": "8e55a898-2dbf-457a-8206-13266619f63d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3dc6b899-7b22-491d-a369-ae558ccff706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31299993-26b4-4c5b-851b-7dde5ad08e01",
        "cursor": {
          "ref": "18b16b47-d780-42b4-9189-b794645e2c37",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ef31c910-2088-460a-b348-787bc9e2c222"
        },
        "item": {
          "id": "31299993-26b4-4c5b-851b-7dde5ad08e01",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ce9588b3-3137-4070-92d4-440c5f047901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e925d7f-35e3-4633-b918-22ccf9bf298c",
        "cursor": {
          "ref": "24c14a8c-8aec-456d-b013-f9a0076a5a56",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "74eec094-3bac-4e6f-ace1-30103de65257"
        },
        "item": {
          "id": "7e925d7f-35e3-4633-b918-22ccf9bf298c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13704e13-4c13-4d13-9adb-6a47c9b93ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c3c03-35d5-43f1-bec4-817ce22189fb",
        "cursor": {
          "ref": "2cdd72ca-3aa1-4e5f-a90b-003a6342a131",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e38f49c6-65fc-4a01-8e8e-814363073c2e"
        },
        "item": {
          "id": "8d2c3c03-35d5-43f1-bec4-817ce22189fb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "02eac9cd-b497-4346-a043-e778819f26ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2409497-fbd8-4c73-8a55-58ed2890dcef",
        "cursor": {
          "ref": "5b24e95e-2ea9-41e4-97ee-ac2e1d0b51af",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c9972c0-6e48-4ab9-9503-dce17e486d59"
        },
        "item": {
          "id": "d2409497-fbd8-4c73-8a55-58ed2890dcef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6acb26b5-f38a-4b83-8adf-02f59d06c05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de9193d-4566-4291-87b1-a238c4b27b54",
        "cursor": {
          "ref": "5ff50e21-09c5-41fe-be77-1252e47e81c4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9ef8f613-0a71-4766-8736-599491986898"
        },
        "item": {
          "id": "0de9193d-4566-4291-87b1-a238c4b27b54",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2b4dab3f-0ea4-429e-a3eb-b5de0d554532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c0a9e7-7367-4be8-9604-bfbc2c4f4157",
        "cursor": {
          "ref": "ef5672ba-451a-4273-be3f-2e4d8f73c137",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "11418b88-08ac-46f0-b201-ec1fdfc00d11"
        },
        "item": {
          "id": "14c0a9e7-7367-4be8-9604-bfbc2c4f4157",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c396641a-1aee-462e-bc7f-375d425f538f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17937702-d329-4f44-836b-6645f1692192",
        "cursor": {
          "ref": "ebe8a63d-ade2-4891-808b-c22a584e729c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6d0f0261-771d-485f-b4a9-d928dab17201"
        },
        "item": {
          "id": "17937702-d329-4f44-836b-6645f1692192",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c5b0da79-19d9-4075-93ab-51d41292c920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd82b2a-6265-40dd-851e-1dbd5f077f41",
        "cursor": {
          "ref": "fe985149-191a-4b68-8b5b-f951782a0846",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08e19d67-c8c1-401e-afeb-cff728c9e476"
        },
        "item": {
          "id": "ebd82b2a-6265-40dd-851e-1dbd5f077f41",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4822d96c-4f43-4cb3-bb51-2f4a6ddcde70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa862c4-7e82-4bd6-bb74-d6fe892a0b8f",
        "cursor": {
          "ref": "7a648679-23f2-4d84-8290-ebb4a9d4d8ac",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6d945e75-0e0d-44f7-866e-cc33352ec246"
        },
        "item": {
          "id": "1fa862c4-7e82-4bd6-bb74-d6fe892a0b8f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b5e26d8b-e9c4-4164-bf75-944c49d59eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfc8cb0-a7bb-41ea-979c-699fc55ba707",
        "cursor": {
          "ref": "a215a652-0422-4573-85c1-e5f4a198a1c4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "817dde9e-95a2-4a45-9eb2-14f3eee0d69d"
        },
        "item": {
          "id": "9dfc8cb0-a7bb-41ea-979c-699fc55ba707",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9eeab891-075f-4180-a0ba-c7b9f0352c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c0b4c8-ccea-4890-aef1-3cbc993687c1",
        "cursor": {
          "ref": "7a2f0908-33e5-4a38-bb5e-e46708d16317",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "405a4e45-5975-4526-a702-7eafef1a56d9"
        },
        "item": {
          "id": "30c0b4c8-ccea-4890-aef1-3cbc993687c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9db2bacc-1456-4586-a9fa-d5cc81ac0794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d34329-078b-4953-8601-26fd8aa0cc93",
        "cursor": {
          "ref": "cec4bbb0-0c58-4c92-8f3a-6fa10197e44d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6cbaf1a2-d8da-4366-9767-8dd5130cc845"
        },
        "item": {
          "id": "d8d34329-078b-4953-8601-26fd8aa0cc93",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3ca2d3b4-d119-45a7-9976-7c07af1cebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3286e4-eb18-42f8-a22f-e8875ed15e17",
        "cursor": {
          "ref": "9e812371-f74c-48f8-b170-e443a81580b2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "187ea662-7618-40fe-b197-a30356e39ae2"
        },
        "item": {
          "id": "6b3286e4-eb18-42f8-a22f-e8875ed15e17",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e003917-bd2a-4b1e-9f4a-3517563021d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d8d0f1-0fde-4ab7-8939-98a7a8ac82c5",
        "cursor": {
          "ref": "86a87223-8f4c-4904-b4b9-8943726f3e3b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee6c156a-cc68-426f-8439-5756fe109bdf"
        },
        "item": {
          "id": "65d8d0f1-0fde-4ab7-8939-98a7a8ac82c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6e18309-eeb6-40b4-bc7f-ea51f10cb63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15971095-322f-4a35-95dd-0d7e6e39f86e",
        "cursor": {
          "ref": "5285c5ef-925e-4591-8f46-63a912cbd1c3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8eb6c486-31a8-4a0b-95fe-6468dc2ac1e4"
        },
        "item": {
          "id": "15971095-322f-4a35-95dd-0d7e6e39f86e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d15d4cc1-e98f-4812-a95f-cb8183f12b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37c7141-1576-4ba4-9f01-7d49604933d1",
        "cursor": {
          "ref": "bc666349-5996-4fe5-83ee-b84cd14f8d89",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "86be938c-c212-4d35-9b6d-f85f66f71ed4"
        },
        "item": {
          "id": "d37c7141-1576-4ba4-9f01-7d49604933d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0bde6a29-f1ee-45b0-9e52-e9d0b171a11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbc8596-f5d5-4533-b909-481c40b857ac",
        "cursor": {
          "ref": "d82bf076-5b88-481f-9002-865fb7e84961",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3cf6c1f2-d59f-4335-aed4-c8962b25dac2"
        },
        "item": {
          "id": "8fbc8596-f5d5-4533-b909-481c40b857ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bc472f36-899e-4095-9cb6-320b3e18c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adcaebb-49db-49ec-866b-58a420d8d1fd",
        "cursor": {
          "ref": "8f01055f-5fcb-4159-9807-0711faf9d281",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "31c6a40e-578e-4242-8322-a17892b8a3b0"
        },
        "item": {
          "id": "3adcaebb-49db-49ec-866b-58a420d8d1fd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e8c3819-5670-4693-94ee-a3170bd31b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50847df1-a780-4d4b-aacd-6592cb9741d8",
        "cursor": {
          "ref": "b45b4c0f-1956-4235-ab8e-50fcedb37627",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4c36195d-737e-4256-b768-e27c5cd37619"
        },
        "item": {
          "id": "50847df1-a780-4d4b-aacd-6592cb9741d8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdbe418d-5a1a-4574-9ba4-7d8a7d39d108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b9e93-b8de-49fc-9bfc-3ab94465f3c3",
        "cursor": {
          "ref": "21f44d48-dc3a-47e2-970a-0ca0c6bd069f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e67601e5-42ef-4d0c-98b4-ff5635e3a6e9"
        },
        "item": {
          "id": "cd6b9e93-b8de-49fc-9bfc-3ab94465f3c3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e46693bc-a574-4cc6-9a61-0964e133f77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf6e606-4d06-45ee-ae76-dc6802675f5f",
        "cursor": {
          "ref": "95a12597-9315-4c12-a7b0-e13c8b99e22e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dd7b8682-b20b-4325-8d8e-9d5b61d6e5ae"
        },
        "item": {
          "id": "cdf6e606-4d06-45ee-ae76-dc6802675f5f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "170c2927-aac7-40f2-9b49-60c8f77e539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f679db6a-2d59-4faf-84a4-ab26d13975d0",
        "cursor": {
          "ref": "98e9eb72-2f51-4534-9ea8-630a5f138d59",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4b55ced4-6389-4169-8b27-333555d7b11b"
        },
        "item": {
          "id": "f679db6a-2d59-4faf-84a4-ab26d13975d0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ef8a325-eb77-41d2-8d5a-786c8bde4f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f81c2b5-f25a-4095-b30b-53b90ddf2ecd",
        "cursor": {
          "ref": "162dda33-43c7-4b00-bde4-278bde19f648",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ed645050-1a66-4f85-a4de-ae0565fdfcb2"
        },
        "item": {
          "id": "1f81c2b5-f25a-4095-b30b-53b90ddf2ecd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "46eef55e-e6d4-488c-a251-65215a5fa559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6075a9bd-6759-4afa-91f0-e60decbdee23",
        "cursor": {
          "ref": "1a36c248-ecf2-4e0a-b798-ef5fa5c92f97",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0c587909-5c88-4856-ab60-dc0913294ea5"
        },
        "item": {
          "id": "6075a9bd-6759-4afa-91f0-e60decbdee23",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e6f67d49-782c-4d3b-8136-6b5dfa969502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c2dcce-9e43-432b-9c55-0cd3e88cd4a6",
        "cursor": {
          "ref": "b9be94aa-9fa0-4d2d-a200-cfe3632f3004",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "058f69e0-b59a-4005-bbfc-dff32c28f220"
        },
        "item": {
          "id": "b4c2dcce-9e43-432b-9c55-0cd3e88cd4a6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4e5ca213-ded4-4590-99dc-fa8b427c9b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e10340b-529d-47a6-af7e-b98ccfc9a9f1",
        "cursor": {
          "ref": "357e3381-408a-4ae8-8823-b67118cd9091",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ecdba3b-744d-40ab-9c01-d53331ae097b"
        },
        "item": {
          "id": "2e10340b-529d-47a6-af7e-b98ccfc9a9f1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f3160f31-3612-46cc-b140-cb88ce8ee677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9884f975-303f-4430-98bb-5e720732efd7",
        "cursor": {
          "ref": "725d0617-a518-4f3b-8b3c-27debbd5910e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "50bafcb2-d012-40b4-8a64-380ae6bdfd44"
        },
        "item": {
          "id": "9884f975-303f-4430-98bb-5e720732efd7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a742f340-dc63-4cd7-b098-0aea12004257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014728e-fbaf-4fde-8a00-1de7a5260852",
        "cursor": {
          "ref": "50ed18f3-ead5-4691-889b-98bf29d292a1",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0e521ec4-e3a0-4c1b-9c28-872b0cc2baee"
        },
        "item": {
          "id": "e014728e-fbaf-4fde-8a00-1de7a5260852",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "daeed380-ce52-4a8a-aa27-740e6d96c716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf5e331-2910-4ecd-888a-a992a2624faf",
        "cursor": {
          "ref": "3ae01e05-6d54-4456-8638-4820c79f14e0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "52cf370f-483b-4849-8a1c-b5d574aae382"
        },
        "item": {
          "id": "4cf5e331-2910-4ecd-888a-a992a2624faf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1d751601-435b-4256-88cf-ab519b9b440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a26931-6d1f-4857-9a79-acb9123dfce1",
        "cursor": {
          "ref": "840aa8eb-d0c1-4406-b04d-f492f8772ade",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8e2629ae-a6e9-4041-9c9c-10c6434f8a8d"
        },
        "item": {
          "id": "54a26931-6d1f-4857-9a79-acb9123dfce1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "020fadd9-0708-4a79-91b7-10e1a55ef74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfafeb0-29ed-4d82-ab18-538d8476789d",
        "cursor": {
          "ref": "a7c674e1-7c45-45f7-aeae-3d68d6b74764",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5564e19b-34f6-466c-8e33-22aceadb7ee8"
        },
        "item": {
          "id": "fbfafeb0-29ed-4d82-ab18-538d8476789d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0d9b3657-320d-41f7-b131-9e456fcb08d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce6333-7598-4c0a-a11d-565c98c60704",
        "cursor": {
          "ref": "68f8933f-a18a-4cb3-9e99-e7d6db5e62ee",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b80f0054-7cbb-4310-8fde-4af689ecd27f"
        },
        "item": {
          "id": "7dce6333-7598-4c0a-a11d-565c98c60704",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d6a96c5c-6b5e-4091-a5f4-54759d3b5a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9945b912-3320-4875-9c1b-2573dbecd250",
        "cursor": {
          "ref": "ee457452-5e16-49f0-aa80-51eeb61176c4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "468d25aa-5088-4d5e-bdaa-245d964a155f"
        },
        "item": {
          "id": "9945b912-3320-4875-9c1b-2573dbecd250",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c962901d-4e9c-4a26-9a9b-4c2d90261398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc36121-397c-42cb-838e-8a04a82c6428",
        "cursor": {
          "ref": "3aef8766-f619-4281-a888-fc580b455b08",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d12177bb-4c9d-48a2-bc6e-0eca20646c32"
        },
        "item": {
          "id": "6dc36121-397c-42cb-838e-8a04a82c6428",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "028bab42-02c1-4118-bd2a-885ad92404d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b5a8b0-e9c2-4e98-bd55-a1397a877474",
        "cursor": {
          "ref": "ce21c8ab-3de7-44d9-9614-0fe25698a7cd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "43372606-9417-4046-9d1e-2254be003028"
        },
        "item": {
          "id": "c9b5a8b0-e9c2-4e98-bd55-a1397a877474",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "858db53f-af39-4e4e-9658-84ab8e739052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb33c54-873b-4cb0-ac88-b2ac0b2bb7f5",
        "cursor": {
          "ref": "e1431544-ca3f-48a9-ac0e-b8bbc1acc98e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a593431-9e96-4141-99ac-f2867cb84e6c"
        },
        "item": {
          "id": "3bb33c54-873b-4cb0-ac88-b2ac0b2bb7f5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9bc69052-edb3-4e0c-b14b-e40e895b1e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece5cde4-62f3-4810-93a0-d55dd178887b",
        "cursor": {
          "ref": "89ce4b1c-e027-430c-bc9a-bd89a4890617",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5589f7a4-14f8-45f6-ae8f-436b087158e7"
        },
        "item": {
          "id": "ece5cde4-62f3-4810-93a0-d55dd178887b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8f8a94d8-2226-4ba6-bf7d-95db9343ac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fdb834-2be2-49be-be1c-d87260df3e1e",
        "cursor": {
          "ref": "7c0c978a-2dba-45e4-8b01-3d452507890c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b7bc49eb-d517-431a-ae6c-ae308430125d"
        },
        "item": {
          "id": "56fdb834-2be2-49be-be1c-d87260df3e1e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a1bd71c8-73f1-45e8-9e4f-d5b466fc3cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b9dda8-2708-4ad7-8069-9f14fd62b9df",
        "cursor": {
          "ref": "3b352515-421b-4b68-ba88-c946eabc5a1c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "17f50d27-02f6-4a49-b37e-5fc83cd24592"
        },
        "item": {
          "id": "b8b9dda8-2708-4ad7-8069-9f14fd62b9df",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3b5a6727-8be7-4930-ac16-4a4c6797e27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc53df2-0538-497e-aad5-20c448c2169c",
        "cursor": {
          "ref": "68b5d1d7-2f2e-4394-8711-f06896705169",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6b813a20-39b4-4ff6-a806-515abb8503ad"
        },
        "item": {
          "id": "ecc53df2-0538-497e-aad5-20c448c2169c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a9679285-1eb7-4ebe-880f-9f1871e98493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00b01aa-2c3e-459b-88f5-a28f32078637",
        "cursor": {
          "ref": "a93f2ec8-326c-47c8-b6e0-24f53b4a3952",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "32bd2193-4de6-44d9-8b27-19865f650ed7"
        },
        "item": {
          "id": "b00b01aa-2c3e-459b-88f5-a28f32078637",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bf7b3128-7d45-464c-91f1-a3e26de476c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d9436-5bbe-453c-a8e8-60f2c1ec5626",
        "cursor": {
          "ref": "7711c690-981b-49f2-8ecf-ae71c46e4c99",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11177270-5d50-4e98-8f57-2a49b3318177"
        },
        "item": {
          "id": "845d9436-5bbe-453c-a8e8-60f2c1ec5626",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8f9715aa-e6d6-4d9d-98a5-e2a23a5252dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe23073b-2c9e-4c7c-8910-8cae0494112c",
        "cursor": {
          "ref": "0fbce10a-57b8-4e72-ab2e-51e3b6e616a2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "10630fc7-767d-4f04-b4df-65b0f92fca18"
        },
        "item": {
          "id": "fe23073b-2c9e-4c7c-8910-8cae0494112c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e871d478-5e70-4e79-99af-04c1cc64d5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df116409-f3e9-4bde-80a1-7613588b8249",
        "cursor": {
          "ref": "58011800-3026-4d7a-84fb-691c7d4d629c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cfef41d9-5068-4405-b451-37976cb3bee6"
        },
        "item": {
          "id": "df116409-f3e9-4bde-80a1-7613588b8249",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "61ac6cfe-b21f-4ed2-9eaa-32958e007397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ca576-95c9-46b9-9650-e91334407b98",
        "cursor": {
          "ref": "40af9055-40e7-484f-ba63-298a53d90f03",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "56c1ce38-5807-45fa-80f5-b8b3ac85dc46"
        },
        "item": {
          "id": "896ca576-95c9-46b9-9650-e91334407b98",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "949fdea7-9b93-484d-ae3e-3d96c177eba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daea6a5-434a-49f0-baf7-3f2d00415cad",
        "cursor": {
          "ref": "1c27cd72-a73c-4e65-8791-dbdd0be97f70",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fda683b8-691d-4b3f-b924-3d56a26852af"
        },
        "item": {
          "id": "7daea6a5-434a-49f0-baf7-3f2d00415cad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "98999a9d-ced9-4515-8ea0-980feaee7cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99193806-c6af-4000-8a7f-502c57663ec8",
        "cursor": {
          "ref": "4b8c62ae-68ee-4134-9d8c-40a4b97e4c20",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e17b3036-d861-43df-aa2e-7566dea009f2"
        },
        "item": {
          "id": "99193806-c6af-4000-8a7f-502c57663ec8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "12e64358-dfe5-4a3a-a270-d602d0008d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3ce12f-01c7-423b-a31d-2807e6f97f64",
        "cursor": {
          "ref": "420507c7-925e-4198-adb4-516c5ef78816",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e9aafa03-d501-4983-a4f3-a88e0a4474d6"
        },
        "item": {
          "id": "fd3ce12f-01c7-423b-a31d-2807e6f97f64",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d2a1c9e-45eb-44cf-a61e-ee02adfa9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3f4514-91a9-45ee-b7a1-24f92d3e118a",
        "cursor": {
          "ref": "fd2882d1-68c8-43fd-816d-406f394394c9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d895ed04-dc0c-45ac-aafb-c07186fce1fe"
        },
        "item": {
          "id": "7d3f4514-91a9-45ee-b7a1-24f92d3e118a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b19f737c-0675-43f0-8d99-e7acd2a67788",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96c3928-1637-48ab-a981-216f837f9ae6",
        "cursor": {
          "ref": "c4950f50-694b-42c1-9491-2fe8d92b5935",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "23c592ca-433e-4f62-a894-67730427602a"
        },
        "item": {
          "id": "d96c3928-1637-48ab-a981-216f837f9ae6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "33de37f5-6f70-49f3-9f3b-4c9a0cb453fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5814aa29-4f5f-42ab-bfc6-28d03aafd5d9",
        "cursor": {
          "ref": "b1d3da2e-e2fd-460c-a595-65ec7e967575",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "17260353-0775-4d32-90df-513d2e959333"
        },
        "item": {
          "id": "5814aa29-4f5f-42ab-bfc6-28d03aafd5d9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c408b19-9518-48c7-89eb-0e0d777b534b",
          "status": "Created",
          "code": 201,
          "responseTime": 14406,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85eac2b-55d7-4841-a30f-0e1e620d63f7",
        "cursor": {
          "ref": "40e0b5cb-d735-4d5a-a3b0-48118160e47d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "15431fd8-476a-424e-ad51-47d218fa809f"
        },
        "item": {
          "id": "b85eac2b-55d7-4841-a30f-0e1e620d63f7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee97d713-233b-4998-80b2-88562a304f3d",
          "status": "Created",
          "code": 201,
          "responseTime": 14290,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8427a7-3406-4222-8434-31ba9a34a386",
        "cursor": {
          "ref": "39edd08c-b726-4104-a2ad-eff21869d43f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2ca38ffc-8b93-4f1a-b06d-b8697224dd96"
        },
        "item": {
          "id": "4c8427a7-3406-4222-8434-31ba9a34a386",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e33a8055-7071-4287-aa34-6ba0c5ed15bc",
          "status": "Created",
          "code": 201,
          "responseTime": 14703,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "310f3813-57bf-43a8-8d22-61a3f8cbe47d",
        "cursor": {
          "ref": "38b233f7-eb19-45c9-a672-ac1508225f57",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3b623f2b-9a1c-4d1b-8289-5f8627fd8ff4"
        },
        "item": {
          "id": "310f3813-57bf-43a8-8d22-61a3f8cbe47d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "210b7d73-1000-4ad5-b399-aa4c745911bb",
          "status": "Created",
          "code": 201,
          "responseTime": 15321,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab01240-a5c6-41be-9813-c6a651f6c9b5",
        "cursor": {
          "ref": "b4fd4c37-b618-4798-be7c-76ea6172cda0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fce9883d-fda4-4c0e-b72a-d8dd46a23d4b"
        },
        "item": {
          "id": "aab01240-a5c6-41be-9813-c6a651f6c9b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4a660903-f56b-41a1-8870-4671d281c2f4",
          "status": "Created",
          "code": 201,
          "responseTime": 14531,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-12T00:44:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-12T00:44:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "09b18d01-14b4-42a3-af0b-80a0cee83008",
        "cursor": {
          "ref": "f366f8d7-0883-44cf-ad73-15e872cb7ff1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1faf3f82-3570-4902-9249-240f15a81247"
        },
        "item": {
          "id": "09b18d01-14b4-42a3-af0b-80a0cee83008",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3651cabe-f324-4ed4-8a31-2da06820c93b",
          "status": "Created",
          "code": 201,
          "responseTime": 14935,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d66192c-9bdb-4ca0-a1f7-052ea12345b3",
        "cursor": {
          "ref": "4b65f183-d776-4b74-bf11-e2a37a88316b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d1bb5e87-5f00-419f-a6a6-817a0d20297e"
        },
        "item": {
          "id": "9d66192c-9bdb-4ca0-a1f7-052ea12345b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9f23a48-f32d-4093-9cb3-b00856c5613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd25da6a-74eb-404b-a4b3-f44e220834d1",
        "cursor": {
          "ref": "2b6498cc-686f-4aad-8a34-d48b41b4bbc2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f353ae30-0b8a-4d76-a087-1ddaa1c3bb5a"
        },
        "item": {
          "id": "fd25da6a-74eb-404b-a4b3-f44e220834d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "80b4bb4e-7b5d-4759-a89b-8e56102ba4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803f8e59-fed3-4fa7-b594-c3fd06b401ae",
        "cursor": {
          "ref": "0e43eece-d149-46bd-b9b6-ae6969448501",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b63d6658-cf24-4e8d-ac76-83620a937a4c"
        },
        "item": {
          "id": "803f8e59-fed3-4fa7-b594-c3fd06b401ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8286a0d4-5bdb-4406-a938-80fcdf191741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f30e36e-a0ce-45bd-a997-9797cf75b2ae",
        "cursor": {
          "ref": "0a879483-8136-43ba-90e9-fb8503a1e755",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3f71e139-38fc-4d1f-b7ee-8bd5d81621fe"
        },
        "item": {
          "id": "3f30e36e-a0ce-45bd-a997-9797cf75b2ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d87e3845-5bdf-4041-9627-79cf3d915b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48bdd58-dade-499b-b274-ef454c99d74e",
        "cursor": {
          "ref": "cedfbaf6-f3f2-43c3-a443-9c7cedd5d69b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a4f5af4b-b81e-496f-842c-1ea6577f7558"
        },
        "item": {
          "id": "f48bdd58-dade-499b-b274-ef454c99d74e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7ee70ce-f835-4e3a-82e5-9e3d226049c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e44badd-38fd-4234-9afc-8eb56bd40ac0",
        "cursor": {
          "ref": "77d99492-9e41-4795-a00f-897b7d228432",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e3da5da-1232-44b9-8da4-8f86dceb7856"
        },
        "item": {
          "id": "0e44badd-38fd-4234-9afc-8eb56bd40ac0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "da1f38c0-8f4f-4aaa-9042-34be48e5af7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fcd14c-fde3-4eaa-b483-bc910fb20267",
        "cursor": {
          "ref": "7d61281e-374d-4b4e-9b37-8b65b4e0d137",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b22bb4fc-34de-4e94-936b-707767968324"
        },
        "item": {
          "id": "98fcd14c-fde3-4eaa-b483-bc910fb20267",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e2d2c7e5-4c9a-4298-a371-e1e2f85a4d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92edbf7e-ec48-41c6-be7f-c64d77ecb3dc",
        "cursor": {
          "ref": "16cc55cb-5445-440e-99cb-e343409433a0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be6fc6c2-9355-4fcf-abb2-c3e55697acfe"
        },
        "item": {
          "id": "92edbf7e-ec48-41c6-be7f-c64d77ecb3dc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5259104b-10db-4a77-83fd-29074250b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86df9aa8-23b5-4163-bcf4-f2f405f0e5bb",
        "cursor": {
          "ref": "92274c90-6ecc-4a97-afe1-c8f87ded5b3a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "42b2a5d9-b83e-407c-b243-4509202986b8"
        },
        "item": {
          "id": "86df9aa8-23b5-4163-bcf4-f2f405f0e5bb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38c4cc54-a8aa-45a0-b64e-00da35b47bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0278187a-b6da-43b8-9753-b18ab5f45e71",
        "cursor": {
          "ref": "6d7c71f2-037e-4fe6-a479-02cc3a22b572",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f4a391d-3aee-4228-9042-21579885958c"
        },
        "item": {
          "id": "0278187a-b6da-43b8-9753-b18ab5f45e71",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a7c16817-cdf5-47a7-8ba6-769864fe517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9fd712-310f-4d30-9ff6-bc41b0c37590",
        "cursor": {
          "ref": "9b2d7b94-42af-408b-a6f0-eb489ad6e469",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "20577412-4707-47bd-96d9-48543ac4b7d6"
        },
        "item": {
          "id": "1f9fd712-310f-4d30-9ff6-bc41b0c37590",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "467b180d-e87a-43c4-bf67-9df1c3d9dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3977bdc5-855d-4eab-86b0-a8c3befd17b7",
        "cursor": {
          "ref": "1f0c7428-bd4a-428c-8452-7896d264c0ff",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9b3c30b8-069a-44dd-aa20-39e498be4207"
        },
        "item": {
          "id": "3977bdc5-855d-4eab-86b0-a8c3befd17b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fb03a1bf-c329-4ef1-ae04-6a0733bc3b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0720fc01-d2ae-4f0a-adcd-a22ada2141e5",
        "cursor": {
          "ref": "75d144c7-23bb-4eeb-a8d2-3d6b3e02f85a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e3ef4c1-ca1a-4a37-aae8-de011fee3da1"
        },
        "item": {
          "id": "0720fc01-d2ae-4f0a-adcd-a22ada2141e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cda78300-ef8c-46c6-ba2f-56f4f8e3672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3803e5e4-ca92-4463-9bd1-12f8479161fe",
        "cursor": {
          "ref": "d1dfc25d-6ee2-4c85-a808-552e35d98441",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "05499a1d-5c75-480a-8499-41e59f27dfd9"
        },
        "item": {
          "id": "3803e5e4-ca92-4463-9bd1-12f8479161fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "084e4c48-54bd-4130-b8e9-2ed072e5f89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6914a505-a0dd-4c4f-b473-697bea6fa866",
        "cursor": {
          "ref": "b0164444-e85c-4f85-9f3c-388823c3a073",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c7899bc3-ac0f-48eb-a0dd-bb1b9635b9ca"
        },
        "item": {
          "id": "6914a505-a0dd-4c4f-b473-697bea6fa866",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0112a63d-1399-4f95-8b75-bc76a443e7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b2fd0d-af6a-496c-9891-7d30d41def10",
        "cursor": {
          "ref": "5620c35f-d2f7-4384-b23f-1040324acef8",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0c493336-7fd4-4bc0-877a-9ddc4b9ab98d"
        },
        "item": {
          "id": "f1b2fd0d-af6a-496c-9891-7d30d41def10",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd497dd4-b347-467d-a9f3-0a7e5dadbdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e5f943-a465-46d1-9de0-579e40f4fa93",
        "cursor": {
          "ref": "fe18674b-c93e-4bb9-9a82-55a1aaef3bdb",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0334e018-9db7-48e6-8644-2218018e7b32"
        },
        "item": {
          "id": "a2e5f943-a465-46d1-9de0-579e40f4fa93",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81a2d7be-14e2-48e5-b759-4ddb5dea348a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fb117e-27c1-4a39-8cfb-c13e293d9e60",
        "cursor": {
          "ref": "406829ad-68b8-4d68-948b-767a54a37037",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f2478df7-688b-4f6f-afd2-9156206be7d5"
        },
        "item": {
          "id": "79fb117e-27c1-4a39-8cfb-c13e293d9e60",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b27fdefb-cf54-4573-9843-1439f63a5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c29135-0496-4cb2-8815-e91db6485345",
        "cursor": {
          "ref": "2de1c00c-9181-442e-ba86-6b51468cf3dd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8bedd56a-d8b9-4bfb-b61d-6bf959b7478b"
        },
        "item": {
          "id": "62c29135-0496-4cb2-8815-e91db6485345",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "17443391-3078-442c-92da-e3e59b0d61e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63a37c1-da76-426f-b516-bd8ebe51a5dc",
        "cursor": {
          "ref": "70f7e28e-f319-4f88-90bc-dc77ceba4633",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "82d48918-3fda-4900-a995-4306cef1983f"
        },
        "item": {
          "id": "e63a37c1-da76-426f-b516-bd8ebe51a5dc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "881c315d-7f06-453d-bfe8-852484da9b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690d8ff8-9312-4618-83c6-85b41480c803",
        "cursor": {
          "ref": "93e762e0-e57b-4fae-9afa-5b740fd37bac",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ba091f3d-16ba-418c-96a9-cefb7a8c128f"
        },
        "item": {
          "id": "690d8ff8-9312-4618-83c6-85b41480c803",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "687282d3-7edf-477f-bfb0-cd9fb42f438c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09433fea-1dd5-4453-ba1e-61fbd885e238",
        "cursor": {
          "ref": "673829de-91ed-42a8-b0ef-eefd568a2f41",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2cfc9303-4614-404c-8bf0-b0b388726218"
        },
        "item": {
          "id": "09433fea-1dd5-4453-ba1e-61fbd885e238",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9dcf2f28-7773-4240-be4f-5b78158fba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e940078a-dec6-4b6b-afa4-55fa07f84d90",
        "cursor": {
          "ref": "ed68b257-e83a-4f9e-b4bd-9b4698c3b232",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6e5e78b9-e801-4225-b7f4-b157ea1b5dd7"
        },
        "item": {
          "id": "e940078a-dec6-4b6b-afa4-55fa07f84d90",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d50404e1-99d5-46cb-b3c2-89c53f236149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f800addc-5c79-4efe-aa00-83c3c0cdb7c7",
        "cursor": {
          "ref": "7f88f12c-9d96-4324-b702-719458bb47d1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ff0ea447-48f8-4b10-a007-c2bfe092db2d"
        },
        "item": {
          "id": "f800addc-5c79-4efe-aa00-83c3c0cdb7c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "705e51ab-a48d-4eac-8055-d6c49991b059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6e8fde-7890-414d-b1e1-532e06c5b4aa",
        "cursor": {
          "ref": "e95a29e5-3ac2-4103-b171-37d1e78b60a2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0f7c823-e133-4232-b634-6025c7719f8c"
        },
        "item": {
          "id": "5f6e8fde-7890-414d-b1e1-532e06c5b4aa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6a67a0d-79ea-44e1-b596-a15fc0f89403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c787a613-528e-4e22-8d0f-491ec0dca9bf",
        "cursor": {
          "ref": "e71ab069-d82d-488c-91d1-a17879a63f75",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4c802307-8eb5-4db3-98da-489491a830f4"
        },
        "item": {
          "id": "c787a613-528e-4e22-8d0f-491ec0dca9bf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "14c1e6d6-e5ba-497e-97e7-94da7c4744a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb2ce9-eeb0-47e9-a19d-614adf32918b",
        "cursor": {
          "ref": "5c9f2471-67a5-4dfe-9e49-bf9e93cb4912",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdeff4dd-5dc0-4765-8d35-215054810b9a"
        },
        "item": {
          "id": "cbbb2ce9-eeb0-47e9-a19d-614adf32918b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "72e9cbf8-645c-4a72-a258-ffce1aaccfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5330c9da-ef8e-4a98-9c5f-650161f12e05",
        "cursor": {
          "ref": "903fd6bb-fa93-410d-9119-53f87c41ee71",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f839c2e-a881-4f95-b855-de79d9ba0c73"
        },
        "item": {
          "id": "5330c9da-ef8e-4a98-9c5f-650161f12e05",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cdd47133-9e80-4c1a-8dae-68735a1bfc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c3aa31-63e9-44e9-88f9-20793ebf593f",
        "cursor": {
          "ref": "188db64d-544b-4e8f-8551-8c25b6f7c018",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7389831f-e801-4124-a2a3-0e9607310879"
        },
        "item": {
          "id": "e1c3aa31-63e9-44e9-88f9-20793ebf593f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "49316ac7-d3b1-4284-82db-d5b659e2ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dae6e6-63ae-4744-8a9f-32bb824c793d",
        "cursor": {
          "ref": "93287390-5dc1-44e8-b17a-fb361c157270",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "89c8e3e3-91da-49aa-a147-e83c8fe508fe"
        },
        "item": {
          "id": "f0dae6e6-63ae-4744-8a9f-32bb824c793d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fb3ba117-89b3-479a-826e-8f5583d0a934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83c8bf9-0f55-42f2-ac73-bd5d292075fe",
        "cursor": {
          "ref": "5a8ece0d-3a01-4f82-8f46-3a945847a3b9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1818325e-5c24-4e04-b59f-b4c8f6153a3c"
        },
        "item": {
          "id": "b83c8bf9-0f55-42f2-ac73-bd5d292075fe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "544cb439-1637-4d90-9f92-0a9f891b7233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8892a2-ba0f-4805-8bcb-2bb4ad4f118c",
        "cursor": {
          "ref": "1b64bece-bf97-4a8c-92f7-e41412f0e2fe",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7d79c918-d3f2-4c32-af79-64e11eebd772"
        },
        "item": {
          "id": "0a8892a2-ba0f-4805-8bcb-2bb4ad4f118c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d770935b-e26d-4ffc-9db9-2efb071a7ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a0b25-65ff-4476-b463-bbfaa08a4327",
        "cursor": {
          "ref": "88bb5916-05e9-4c5b-9640-256fdcbc3573",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "366c9763-084d-466a-b936-20cd842ad59f"
        },
        "item": {
          "id": "789a0b25-65ff-4476-b463-bbfaa08a4327",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4b93e224-d6fa-41a2-909d-13dc746ac54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4767b78-d9d6-444f-bd42-5201395f11a3",
        "cursor": {
          "ref": "ca682b86-070b-41bb-8fa9-62a09b85e7ea",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "885b23d6-3aab-4f12-b5a9-308812a9bd84"
        },
        "item": {
          "id": "b4767b78-d9d6-444f-bd42-5201395f11a3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "70661467-f8a9-49a3-b72e-8c1944af5e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c99b28-43fe-487b-bab8-3dcfc70c0a2b",
        "cursor": {
          "ref": "8d7ddf44-3c62-4a0e-83d9-d07974ffd904",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ba390915-c160-4419-a75a-2139f863a7b1"
        },
        "item": {
          "id": "05c99b28-43fe-487b-bab8-3dcfc70c0a2b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "881a450c-83c6-4b07-9161-f33b6c7a36f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d88e83-6a3f-46f4-96fe-2164be15841a",
        "cursor": {
          "ref": "3967ecee-7aab-4577-b11a-7247813b0854",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1ba7d924-c1b0-4130-b2d1-7c45855415b0"
        },
        "item": {
          "id": "81d88e83-6a3f-46f4-96fe-2164be15841a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "85b9c46c-c5ae-46d0-a168-6eb99c7e330b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c577fda2-46f7-4580-95ec-e1f1c4298408",
        "cursor": {
          "ref": "497dacfd-3974-4bd7-81b2-786b9a200295",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bb1f3ffd-5c9e-45c4-a09c-530f02d0c4e4"
        },
        "item": {
          "id": "c577fda2-46f7-4580-95ec-e1f1c4298408",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5c74ac16-c6a5-480f-bbd3-7cbff2e3d805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185dd871-f794-405e-8083-b14798e50cd6",
        "cursor": {
          "ref": "9677ea92-1f69-43ce-8a57-fbd621b4fdda",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b9f45473-da01-4be1-b9b6-e63a5894b447"
        },
        "item": {
          "id": "185dd871-f794-405e-8083-b14798e50cd6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06248ea2-edca-4854-8e79-ac8f7e9f0c4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebdf576-81b0-4397-a99f-eba7d126be29",
        "cursor": {
          "ref": "84bfb4fe-5c37-4004-a811-e82884f77bb1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "36740e33-2f4d-4729-9044-8281d66288f4"
        },
        "item": {
          "id": "6ebdf576-81b0-4397-a99f-eba7d126be29",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4dcc550-281b-49ef-b2cb-fd59f1569e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fb6e0-083f-4357-9326-8e47602da754",
        "cursor": {
          "ref": "59b3b6e9-c34f-4ba9-adae-6bc542cb633d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8daa3dc8-b370-4a9d-b8bd-31bf08b27020"
        },
        "item": {
          "id": "b55fb6e0-083f-4357-9326-8e47602da754",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "91066676-7c09-4233-89e0-6d166152602f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a034a-d4be-4ab3-a6cc-1ee4277991f1",
        "cursor": {
          "ref": "ea1035d9-9dbc-4b96-b721-6f7e653e9550",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "80298038-8eb2-4efb-b590-2cb2afeff985"
        },
        "item": {
          "id": "914a034a-d4be-4ab3-a6cc-1ee4277991f1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "479154e3-e962-4ca9-9cab-4dcf1d875db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8f5954-70bb-4eb0-bc9d-2ccd0278c888",
        "cursor": {
          "ref": "2b045b5f-7dc8-4f46-a5a8-1a03cf45b087",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e13f0fed-4563-476e-8568-e0db17f7d9c0"
        },
        "item": {
          "id": "9c8f5954-70bb-4eb0-bc9d-2ccd0278c888",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5aa33b99-e90e-43bb-b30c-5bd35091bada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc7269-04bb-45e3-9061-a6f60cf07831",
        "cursor": {
          "ref": "b8921fbd-72c5-45c9-815c-c6dd4004be1c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "611c3c2e-46a9-434d-abb9-1ad3e4643c2a"
        },
        "item": {
          "id": "fdbc7269-04bb-45e3-9061-a6f60cf07831",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "929c13a2-cb9e-4c90-9481-6ba0e08d1896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93946c4a-fd9d-40e3-99bc-55b5585d11af",
        "cursor": {
          "ref": "32424ccd-84be-4539-b59c-f2be90a10b38",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7ba1f93-ecf4-403f-b667-0a5830d58ae8"
        },
        "item": {
          "id": "93946c4a-fd9d-40e3-99bc-55b5585d11af",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3160fc67-975d-4b3b-bc0e-2f11a91aeb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05128c9-20d0-4b9a-b2da-d782db7a576b",
        "cursor": {
          "ref": "44f2b9bf-8504-4d21-a650-831ffee0ab25",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6694eade-ab12-4385-9472-45c1d5e67f21"
        },
        "item": {
          "id": "b05128c9-20d0-4b9a-b2da-d782db7a576b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b1225b14-8f7f-4824-84e7-0d3676b38a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6c9e21-f898-4aa7-81a8-44c1c41a516a",
        "cursor": {
          "ref": "4c7fa2be-f6a6-4ddc-89c1-f7824394a682",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "71b3b34a-8f2e-4606-9565-04dc85a69641"
        },
        "item": {
          "id": "9f6c9e21-f898-4aa7-81a8-44c1c41a516a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f95067b1-b6f8-490e-bb2a-daeafd0115a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601c822a-f450-4036-bb5c-d1e9e88100bc",
        "cursor": {
          "ref": "c9f78238-1aa8-439e-856d-c47c3d74432f",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6436049c-dbc9-4425-9639-5d2803491bcf"
        },
        "item": {
          "id": "601c822a-f450-4036-bb5c-d1e9e88100bc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "21b54946-8b1a-4148-968a-7b7989a3dae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1066500-53f7-417d-b36c-9dbd015ccbd5",
        "cursor": {
          "ref": "37890842-0acc-4854-a999-08cedc1b70e4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6be47e82-d310-41a4-905e-0ff7266b6b77"
        },
        "item": {
          "id": "f1066500-53f7-417d-b36c-9dbd015ccbd5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f3f555c3-77ab-4d0e-9202-250205a3e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eadbff7-6431-4974-b8cf-12911bf65502",
        "cursor": {
          "ref": "981a67b2-c937-46d3-bb31-d040d1560e41",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3fbaa1a7-329e-43d5-b499-9636cec3ebbd"
        },
        "item": {
          "id": "7eadbff7-6431-4974-b8cf-12911bf65502",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2ffa5f9e-3f99-4bb7-8437-8c280f869139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d7e178-f8ed-417e-a052-06888e8b6c45",
        "cursor": {
          "ref": "17f2cf10-7e5b-4f9c-85b8-d092204e2018",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b32e4a1f-a99d-47b2-80bd-27aa9179aeda"
        },
        "item": {
          "id": "85d7e178-f8ed-417e-a052-06888e8b6c45",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "098daebf-84c8-4ab2-a559-7520c3662247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d298768e-81bc-46cd-a2c6-cc8096c12a48",
        "cursor": {
          "ref": "f8d47dca-6098-41ee-ba89-9658bc120401",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4b9db3bd-3fcb-428f-8488-cb79c0ab85c7"
        },
        "item": {
          "id": "d298768e-81bc-46cd-a2c6-cc8096c12a48",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f9e0da96-99e6-4ad1-9780-bc5f30e29e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a95d25-c618-494a-b324-cb233c8f837b",
        "cursor": {
          "ref": "4a9933a7-c5a5-48a3-bdbc-f4ce05759c4d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2847a058-bd15-4ba3-9d56-7a74a2ca497b"
        },
        "item": {
          "id": "65a95d25-c618-494a-b324-cb233c8f837b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b1f7d041-9e04-49f6-8d6f-ca1fab8918ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d78b4-216e-4fea-b9cc-592620860893",
        "cursor": {
          "ref": "fa8a18e7-5bb9-4e57-8867-ed57dfdc14a2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "52f777f5-4610-4986-8cc7-9fcf985b361a"
        },
        "item": {
          "id": "fc2d78b4-216e-4fea-b9cc-592620860893",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "785e5015-0154-49ab-b303-d51e32f4d4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f896a600-9411-407f-9242-d14983c4fac2",
        "cursor": {
          "ref": "a6452836-9a4f-4146-a1d8-6ddac6a82570",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "26d642a9-2361-40d1-934f-d96b76e23356"
        },
        "item": {
          "id": "f896a600-9411-407f-9242-d14983c4fac2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "93a014dc-7345-465c-b332-7a29e689bc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4370cfd3-0522-4daa-b3ef-286c8eca4264",
        "cursor": {
          "ref": "e6e6ebad-8278-4beb-9384-91cd1b40f6c9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "292f8664-4d7f-4099-b12f-9f7fb6658c95"
        },
        "item": {
          "id": "4370cfd3-0522-4daa-b3ef-286c8eca4264",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d42cf9c5-9d2e-486a-b710-e4637db35f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3c38ab-f29c-476c-b45f-3abbc2a6d972",
        "cursor": {
          "ref": "c76bdad4-2ba6-4e8b-bbc9-db695e95d914",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c80039c7-bdb1-4e8b-8f49-454e0cb436fa"
        },
        "item": {
          "id": "fa3c38ab-f29c-476c-b45f-3abbc2a6d972",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dae2e726-2439-4b7b-8c22-593d05c4eb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503f9d4c-46fd-48ad-ae96-c56fa0369bcf",
        "cursor": {
          "ref": "4f173bfc-203f-4ab8-b38b-549723affcd5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3da4fc3f-3e48-446e-9619-bc41e98e5a63"
        },
        "item": {
          "id": "503f9d4c-46fd-48ad-ae96-c56fa0369bcf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "65829809-4271-4036-8725-b6ea943fa45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8d9d23-0170-4612-92f7-a2e79377d7a9",
        "cursor": {
          "ref": "f8b58496-f93e-4304-81ce-c810bbe15a1b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "850c95c3-1cce-438c-a7bc-99ddba92a2f1"
        },
        "item": {
          "id": "4d8d9d23-0170-4612-92f7-a2e79377d7a9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d8c513f3-ed4a-4207-a777-50768f29cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f60334-caf9-4ffd-9c8f-2d776d2bf66f",
        "cursor": {
          "ref": "40769a21-a273-440b-a4a1-b058564c89f4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f296071-2ccf-43b8-88f5-1c18251ebdb2"
        },
        "item": {
          "id": "46f60334-caf9-4ffd-9c8f-2d776d2bf66f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9416aa2f-2cd2-41e1-a1ad-0ac45eb8c2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52000854-8165-4bc6-a0cc-ea206d4ccea5",
        "cursor": {
          "ref": "dd557149-740b-43d8-8cee-91c9407ba30f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8fccf68d-e9c6-41bf-9dda-93574d169d44"
        },
        "item": {
          "id": "52000854-8165-4bc6-a0cc-ea206d4ccea5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "695d9f5a-6358-49de-964d-a4988b6f0aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56945443-ca5c-4835-b19c-88355ded7cc8",
        "cursor": {
          "ref": "a65ee45e-6633-4cfe-bf74-b553757189cf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "97b7a925-5b5c-40b6-9e86-8abbe2736d91"
        },
        "item": {
          "id": "56945443-ca5c-4835-b19c-88355ded7cc8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "44c4f320-c1ca-4c92-9c2f-02b81ae1366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f6007-ee09-41e8-a6f9-767df120de6a",
        "cursor": {
          "ref": "c9075fd1-2522-451e-b532-71576ab89207",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "14085e5a-b71e-4cad-941b-4854fc02ce52"
        },
        "item": {
          "id": "cc8f6007-ee09-41e8-a6f9-767df120de6a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7f043fca-47fb-4116-8d8d-04421d2704b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd35b74-e8dd-4125-9725-2b9760b99416",
        "cursor": {
          "ref": "b06a5513-210f-4b43-bdd4-dd784b668647",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f4082dd-0708-4d43-8f33-0e3a7e0244ed"
        },
        "item": {
          "id": "3bd35b74-e8dd-4125-9725-2b9760b99416",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9780542b-17bd-484c-b1d9-86403c5f4f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b98853-12f1-4ef1-8dee-c497fde16fea",
        "cursor": {
          "ref": "71db6429-c25f-4de3-8e00-29ac817cebd0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7cc3527c-9428-4414-adb4-4de6fbf6d1a4"
        },
        "item": {
          "id": "31b98853-12f1-4ef1-8dee-c497fde16fea",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7e341fed-c171-4297-8ef2-b41058e2ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b9ba31-d290-461b-b89a-df44477cfee2",
        "cursor": {
          "ref": "e134343a-56fb-4f16-a62d-4ad172f110bf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "86a6f8f9-8c2b-4fab-9d7a-c838a3f050ea"
        },
        "item": {
          "id": "05b9ba31-d290-461b-b89a-df44477cfee2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dfd83b31-7451-4b29-b438-6c4a98ef694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2444d2b6-1f8a-429a-a870-9dd4b8b941d0",
        "cursor": {
          "ref": "59fbd367-4b4b-40ae-b636-d396ec309f49",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bd995b04-29a2-49e7-b2a7-b3d6ba59315e"
        },
        "item": {
          "id": "2444d2b6-1f8a-429a-a870-9dd4b8b941d0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "25fe104e-7b80-4931-af81-064e11f470ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3bf3c9-ceec-43a8-8a26-3ae32f0aee93",
        "cursor": {
          "ref": "9f514dfb-5da9-42bc-9489-3c838886e0a8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "32f46a77-330a-42de-9854-dda5e6f25e7d"
        },
        "item": {
          "id": "4d3bf3c9-ceec-43a8-8a26-3ae32f0aee93",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "55820ec7-ac9c-452a-9dc5-c1afdb9a1d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4aea8f-6713-462a-afdc-1a37e4af8347",
        "cursor": {
          "ref": "d58f6249-c496-41fc-b7d2-4d535fd714fe",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "270aeb52-4682-4dd8-83b0-b21a5413309f"
        },
        "item": {
          "id": "3b4aea8f-6713-462a-afdc-1a37e4af8347",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "67412ff7-b56b-47fa-810f-5cae56dd6312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f728fea1-ed2f-41da-8c50-fc1a24938c05",
        "cursor": {
          "ref": "db9b65ea-c216-4d28-9ffe-986efa906207",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e89c913a-eda3-4fed-b6d1-bcb1f23a5d56"
        },
        "item": {
          "id": "f728fea1-ed2f-41da-8c50-fc1a24938c05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "637daf8d-de8c-4de4-b52b-a5b4615efcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f3fe9a-c3b5-463c-b2db-121bb4d1c6d7",
        "cursor": {
          "ref": "3b4dd76e-3d8d-4a4a-943f-2059013aa13a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bb63ba2a-f7b5-4eee-8859-7133aacca2dc"
        },
        "item": {
          "id": "80f3fe9a-c3b5-463c-b2db-121bb4d1c6d7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "83a417f2-8fa5-49ed-9491-2203e04cbbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37be586-6fa4-4f8f-b469-2d1af8b40562",
        "cursor": {
          "ref": "57da5512-078d-42ab-80ad-ce0eaa9c6e04",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "be6985db-59ca-450f-ba5e-1432c58923ea"
        },
        "item": {
          "id": "d37be586-6fa4-4f8f-b469-2d1af8b40562",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6c56e84b-7665-4415-90f5-dc53ee859133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a5f770-645e-4ed3-9af9-7cd531274006",
        "cursor": {
          "ref": "6808d98c-84da-4e26-b24b-141e08a80cb9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1266b242-e444-4803-b0a7-72f9c1296205"
        },
        "item": {
          "id": "94a5f770-645e-4ed3-9af9-7cd531274006",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b9fa6085-9b6f-47d5-aa6d-cb0319ea00c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38c8f10-10ac-4280-8889-61077c123307",
        "cursor": {
          "ref": "ce2565dc-4d3b-42a4-90e6-43dc352ec37d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e272695d-6964-4a1d-bba6-29add1e1f4be"
        },
        "item": {
          "id": "a38c8f10-10ac-4280-8889-61077c123307",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "efbc4406-5004-449f-b98c-392d25a09d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ab8822-7152-4066-80bf-0fb0ae2edd37",
        "cursor": {
          "ref": "5b4848b4-ce59-4dc1-a609-056ac6944d78",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "54c26423-24a0-4d2b-bd4d-605a5840dabb"
        },
        "item": {
          "id": "41ab8822-7152-4066-80bf-0fb0ae2edd37",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7895de02-b017-4915-8dce-ed5f7a4d028c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ebf029-46ae-476e-8df9-88f68b0d1b90",
        "cursor": {
          "ref": "05f7ded8-18da-4d8f-8faf-11dd45c20034",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "80fda36e-ae5f-40b9-a678-a7b89fe1d078"
        },
        "item": {
          "id": "81ebf029-46ae-476e-8df9-88f68b0d1b90",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fb09ff0f-9f0d-4fc4-946c-8b45f3ea0a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9459d37-04df-44d1-b64a-90d8ebcd2bc7",
        "cursor": {
          "ref": "9cd7b463-49ac-4475-8d8b-bb1cfff2e190",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7d4c2a6a-5a93-4ff8-a23b-5ee25bffae90"
        },
        "item": {
          "id": "c9459d37-04df-44d1-b64a-90d8ebcd2bc7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f8d2273-795d-4ca9-93b7-2e3e660bf068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3b683-14be-458e-9c44-e66f038bfb60",
        "cursor": {
          "ref": "38025ce7-bb10-4294-b0e3-d94d701c2ef3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4294b31c-615c-4f35-8709-4140a8c72f75"
        },
        "item": {
          "id": "78d3b683-14be-458e-9c44-e66f038bfb60",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8cf5d845-fea8-4973-9cd4-df92509bce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bd0cfd-6fa0-404c-9e6f-ace615bca61c",
        "cursor": {
          "ref": "9fa00aa2-5cc6-4f2a-82cb-fad28ae2a4da",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "787a2d52-91a4-423e-baeb-f438ad728bee"
        },
        "item": {
          "id": "d9bd0cfd-6fa0-404c-9e6f-ace615bca61c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1a9308f8-bd85-4808-a85a-6bed2a082de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7551b0-fd2b-4a0b-8a49-d83f80820218",
        "cursor": {
          "ref": "e817b6c8-432e-4cb8-944a-05c7ed421ca6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20030f52-086d-4fd4-a2c0-8e8effb6b9ba"
        },
        "item": {
          "id": "0e7551b0-fd2b-4a0b-8a49-d83f80820218",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e61cbb8a-e1a8-4fe1-a83b-19b7556c6fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eea2fb1-bd33-4d50-9036-b58894b84305",
        "cursor": {
          "ref": "56e649cf-5819-449d-b732-9614833b4cab",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1bb11f04-1bc4-457e-947c-67ce0fedb16f"
        },
        "item": {
          "id": "8eea2fb1-bd33-4d50-9036-b58894b84305",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2bf8497e-ed49-4b93-ad6b-18101dd51e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a09fa1e-58df-45ce-934c-6cf297ad1849",
        "cursor": {
          "ref": "6c532fb8-7acf-4ab3-b23a-26f2d7e52a96",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01d706fa-204b-4b54-90f2-e88d55112088"
        },
        "item": {
          "id": "5a09fa1e-58df-45ce-934c-6cf297ad1849",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4dcb92e6-9d52-412f-acd3-c537d1786c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8711c6b3-03a5-477c-8797-8dfcf79e288f",
        "cursor": {
          "ref": "31f8ff8f-8310-4b59-a305-00db1ecd5448",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "61751599-2cda-4f1c-b100-d586f060a1a7"
        },
        "item": {
          "id": "8711c6b3-03a5-477c-8797-8dfcf79e288f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "816b1d30-6225-4e72-ba49-fbcaac23397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9d47dc-a0f3-47f7-936a-1a18526e0de7",
        "cursor": {
          "ref": "fc5c1756-973d-4bfe-ab7b-546f16ab0238",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "617a4f9a-44f2-40fe-af44-5c863e6ee4b1"
        },
        "item": {
          "id": "bc9d47dc-a0f3-47f7-936a-1a18526e0de7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5ad44038-4fb4-4c6c-8bf6-a41dc5652b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ced57e0-c963-41a4-89ea-e9ff5c9a09f6",
        "cursor": {
          "ref": "f70e10e4-5e85-4ed8-8be6-bf4a7202c0fa",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "65c9b46a-88e4-4f65-8b3b-6ba88fe8bd69"
        },
        "item": {
          "id": "5ced57e0-c963-41a4-89ea-e9ff5c9a09f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7ac6c0d3-a234-476c-91e9-5f60ea43ba9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca4d15-1b1d-4bd9-a725-a4d48bbd956c",
        "cursor": {
          "ref": "5f41d95c-2ced-4596-a7dc-0bc78a59b9b8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4da7201d-2278-4da1-a70a-18becd3adaa7"
        },
        "item": {
          "id": "beca4d15-1b1d-4bd9-a725-a4d48bbd956c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9c284c2-dc6d-4874-9c6b-52e15df6d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0339ff-baff-4426-88c4-c4b60cfc8261",
        "cursor": {
          "ref": "8abf8ad1-76e2-4b82-ac88-dad4fcb1be4e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "369dbbba-4364-4932-b390-d1eb89e6cf18"
        },
        "item": {
          "id": "6b0339ff-baff-4426-88c4-c4b60cfc8261",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "11591fa7-3399-497d-8564-6f06def21479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06096a37-cfd8-4847-a23a-ea8459c063a4",
        "cursor": {
          "ref": "5bc5f0a6-997f-4458-9221-2acc2b31f24a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1dec6c53-3432-401d-9f98-d23d5765e7ea"
        },
        "item": {
          "id": "06096a37-cfd8-4847-a23a-ea8459c063a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dcd5f2b9-cb30-48d1-92f6-71feec67b91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71049dba-c211-4ed1-b2bf-8b5f7f9686cf",
        "cursor": {
          "ref": "eb64ef26-0e63-4271-9acc-040a13c85a96",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4c6c4735-da40-4dd1-9023-32d0bdebaaeb"
        },
        "item": {
          "id": "71049dba-c211-4ed1-b2bf-8b5f7f9686cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7de2d7b5-4ce7-4fd7-97d9-3a65fa5fdabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6fd992-2347-409b-82d0-d694432e7234",
        "cursor": {
          "ref": "b7871f57-88b5-4aae-9111-c48276f82a74",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "944098f2-3bda-47c7-9764-8c2f61d543e1"
        },
        "item": {
          "id": "ea6fd992-2347-409b-82d0-d694432e7234",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7cb193d1-7da2-4f23-b0da-3a746bd6254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf8ac25-6963-4e12-9417-51018f7b8d0e",
        "cursor": {
          "ref": "411af41b-3030-4958-84a1-0adfc3045a41",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5a5dfb87-c3ac-43af-bc8b-efb72c587576"
        },
        "item": {
          "id": "abf8ac25-6963-4e12-9417-51018f7b8d0e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f783cc5b-411c-42c4-aea5-3d6476442335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2b8e1a-216d-4d74-8883-a9c0545e057f",
        "cursor": {
          "ref": "181ca0e6-4e26-4744-9716-cb8282af4f68",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "88f4d89c-e938-4bf3-816a-dd5e6a7a5156"
        },
        "item": {
          "id": "3a2b8e1a-216d-4d74-8883-a9c0545e057f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a73a703e-bb61-4d11-ae80-ba1163dca400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad054114-aa5b-4333-ab00-3c800c73322d",
        "cursor": {
          "ref": "8d0ca4b5-aa32-4246-ab43-0d36069892b3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cb9fc38d-f628-46a8-84cf-98bbe159ab94"
        },
        "item": {
          "id": "ad054114-aa5b-4333-ab00-3c800c73322d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "679c8b29-23b6-4e80-a1e8-e68dc68c37ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f1ff7b-8d23-47d5-8cb6-08cbb455ffa6",
        "cursor": {
          "ref": "75027aa2-8963-4eac-b883-848eef095a72",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b11939fb-349d-49ac-b549-2f0d7eb8cb1a"
        },
        "item": {
          "id": "41f1ff7b-8d23-47d5-8cb6-08cbb455ffa6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a17a684c-eeac-4bf7-bedb-26d3c6cf5379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5579ac8-47cd-4d23-b9ae-88cffd2f28c7",
        "cursor": {
          "ref": "7815c972-155e-41b0-b310-73b726b526f5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "854a7e2c-e00b-469f-99ba-a9529ed2a83d"
        },
        "item": {
          "id": "d5579ac8-47cd-4d23-b9ae-88cffd2f28c7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ec23d80-e82e-400b-8576-9bcdd2be0d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9cd689-27af-46bd-8733-80bce8338e39",
        "cursor": {
          "ref": "561282be-1d64-4c2e-8c78-3b82f0a1fe74",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9b592dad-3f6f-413f-a0cc-e08d921ac64b"
        },
        "item": {
          "id": "ee9cd689-27af-46bd-8733-80bce8338e39",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "413bd78c-be18-4e62-8165-e816c1a7888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac55572-75d7-4136-b738-c6fe9b5d3a37",
        "cursor": {
          "ref": "23f17ba2-cba2-4227-aa73-bc987e64e1c9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cd2b31f2-df7b-4a3d-a74e-c63b6723f649"
        },
        "item": {
          "id": "bac55572-75d7-4136-b738-c6fe9b5d3a37",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ef0948bf-0a7b-44e5-9f53-6edfacd3c6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5745ea73-0dc5-40c1-9ef0-cb170b07919d",
        "cursor": {
          "ref": "642231e4-4841-42c3-999a-725719ea3ae1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1b7aaf08-4668-472f-bd80-c148e6545826"
        },
        "item": {
          "id": "5745ea73-0dc5-40c1-9ef0-cb170b07919d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "03d5e7af-4737-4538-b3f7-a25599a60e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc152a-f340-4931-9892-c61f86898e20",
        "cursor": {
          "ref": "7b9ca7d6-8474-4c44-acce-50ac5b288b51",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "94d8c905-71d2-4f06-8200-4c7c5c032089"
        },
        "item": {
          "id": "c7fc152a-f340-4931-9892-c61f86898e20",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6efa3e49-b6f0-4623-9fbf-7e9364141f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7c3559-9eda-4ba7-896e-e71c135ce3ea",
        "cursor": {
          "ref": "9d6fbb19-5779-424e-a229-bd6143f1b885",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5a01d0ee-e33d-4505-8cfa-cc182378a853"
        },
        "item": {
          "id": "8b7c3559-9eda-4ba7-896e-e71c135ce3ea",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dd730954-b4a8-4e2a-90ad-5541f75f5a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f48ca63-052d-4ec3-ac9d-00437092f7f9",
        "cursor": {
          "ref": "7b3f512b-a8ae-4237-95be-4375f8c0b6aa",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7f0528fa-0c4c-4547-9155-897a1e45d34a"
        },
        "item": {
          "id": "0f48ca63-052d-4ec3-ac9d-00437092f7f9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "663ac3d8-d48c-41f9-a251-17b358d50005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32180b5e-1303-44c4-ae0f-7a93f2123a88",
        "cursor": {
          "ref": "10b9ba34-415f-427b-b047-0b5eab724df1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1bacf6b0-fe9a-448c-8699-bd4152f7e8ac"
        },
        "item": {
          "id": "32180b5e-1303-44c4-ae0f-7a93f2123a88",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cf717fca-34b6-4328-a29b-3acffdd08742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8027821-cadf-4e86-93b2-317bff32703f",
        "cursor": {
          "ref": "ea089963-df3f-4d4f-8f76-b9eb21a549ab",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3a135e4d-3c15-4506-877e-9de1da19832d"
        },
        "item": {
          "id": "c8027821-cadf-4e86-93b2-317bff32703f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d61e6043-ed6a-4c5a-9335-24a2936b848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cc253a-34da-4814-9776-559a775eaa0b",
        "cursor": {
          "ref": "9bac4224-0650-499b-ba92-d45200404427",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8dd4f066-648f-4778-8980-42b92f668435"
        },
        "item": {
          "id": "a6cc253a-34da-4814-9776-559a775eaa0b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5f327171-97c1-4b61-8c4b-860374e89a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050c2623-3e06-4e24-a026-0ff200ae0981",
        "cursor": {
          "ref": "6b3683c6-d24d-410b-932a-da954809ac00",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "434a4464-03cd-4c51-94af-2bfa7fb7d8b2"
        },
        "item": {
          "id": "050c2623-3e06-4e24-a026-0ff200ae0981",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "62d852a3-9d1e-4150-a4ff-9e6b15598c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57df7ba-8eeb-4717-b29f-ac387415438f",
        "cursor": {
          "ref": "073599e8-2f85-44eb-a710-05ebdb92d2a7",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26e60700-a81f-4064-9128-2061f90300f0"
        },
        "item": {
          "id": "f57df7ba-8eeb-4717-b29f-ac387415438f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "81abf837-eba7-42a6-ba30-a219b5948292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399230ac-2030-49b1-9ae2-a61cb02bef7f",
        "cursor": {
          "ref": "06ca99e1-fe8b-4555-956f-3ea6b147655e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "622dce9c-380f-4b9a-b31b-3a8859e62772"
        },
        "item": {
          "id": "399230ac-2030-49b1-9ae2-a61cb02bef7f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1a35be8d-ddf2-435a-81d0-c308591961a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7287183a-3734-44e1-ba25-c98e9b794c27",
        "cursor": {
          "ref": "4a393380-eba6-452c-87f2-90714b9523e4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6617e36d-50db-4c11-95f4-fa6339e59e96"
        },
        "item": {
          "id": "7287183a-3734-44e1-ba25-c98e9b794c27",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "74b684f1-6612-4b46-8083-2c05958dcdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ff3a88-f3ba-4db5-b9c3-55114b834868",
        "cursor": {
          "ref": "2584b286-0221-4767-ae26-1142e1e2a369",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d86f5970-680d-4950-9836-73061607ec2e"
        },
        "item": {
          "id": "c5ff3a88-f3ba-4db5-b9c3-55114b834868",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "605ef94a-6c14-4074-82a5-87091a07ca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90486a54-10c8-44e7-be7f-a24dbaa45523",
        "cursor": {
          "ref": "179e9909-7a86-42ad-a2e9-66c149853159",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b29c943-d671-4b37-a7d2-6911a8f32356"
        },
        "item": {
          "id": "90486a54-10c8-44e7-be7f-a24dbaa45523",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b9485b8c-ec14-4d96-8735-3e0f55def972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194a6d0e-ed4c-4658-8e8f-0e8ea1499882",
        "cursor": {
          "ref": "df02e63e-f496-4494-a958-7d237c5a765e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "98ad371f-688f-4917-b1ae-2507926ff09f"
        },
        "item": {
          "id": "194a6d0e-ed4c-4658-8e8f-0e8ea1499882",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "43ff70f0-6b7f-44b4-99c0-09538f5f119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc420c-7305-4a2c-96b0-5d6e908ab021",
        "cursor": {
          "ref": "15ad5cf4-8faf-4e1c-a808-4c38d444b118",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fdcc408c-5835-46a4-aa38-6a3a376295a5"
        },
        "item": {
          "id": "40dc420c-7305-4a2c-96b0-5d6e908ab021",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aee3fc2f-9684-4a57-a052-da43e4195b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64648393-6633-4002-9b4e-44184eb713c4",
        "cursor": {
          "ref": "391dabfc-ed03-45ce-b415-ca73bc8beced",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "efdb0134-bfff-48db-8431-5381b7f5acc5"
        },
        "item": {
          "id": "64648393-6633-4002-9b4e-44184eb713c4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8997d702-9317-44ee-9e67-4d34e6bc60ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b2b3f-1253-4f34-9efa-9323569b4599",
        "cursor": {
          "ref": "1e2be0b2-b8f5-4017-a7b8-cdc91d2f5be3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4afc33a9-5dc0-44c9-9e40-18748ccf905f"
        },
        "item": {
          "id": "284b2b3f-1253-4f34-9efa-9323569b4599",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f04dda73-587f-46fd-b2df-d99d681c68d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ed50ee-0626-48c5-b5b3-5a1d143cdf95",
        "cursor": {
          "ref": "48a55349-d41c-4444-bcd9-6958ba4ef270",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f9925095-2a5e-49ca-9c46-8bd08772ee54"
        },
        "item": {
          "id": "b0ed50ee-0626-48c5-b5b3-5a1d143cdf95",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a311498-c64c-4d2d-a4d0-e21ed084db28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a00cd00-6b40-4144-9ffc-99969349ce55",
        "cursor": {
          "ref": "ea7ef1a0-cafb-4265-9d03-521459ceb6cb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dacc1e72-8fe9-4eda-81e1-50a7dfaaa82f"
        },
        "item": {
          "id": "9a00cd00-6b40-4144-9ffc-99969349ce55",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "734f624c-75b5-4163-ba44-257c4e8ff4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbae3d5a-e185-4ad9-a212-73c7ccfbd1f2",
        "cursor": {
          "ref": "f09d2f50-3077-4bb7-a4d2-1452c68586d5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f82b2cf3-7e03-4ca8-b52a-fbd57bbff52f"
        },
        "item": {
          "id": "dbae3d5a-e185-4ad9-a212-73c7ccfbd1f2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f7d9bb89-3cf9-4c04-84d6-ab42247b869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cae8882-8b18-4b69-a95d-a2f73b4e8fcd",
        "cursor": {
          "ref": "b8e0d3d9-3a6f-4890-b990-8fa34551aa35",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "460a8a44-7ba0-42d8-a78a-fd079ca75f58"
        },
        "item": {
          "id": "2cae8882-8b18-4b69-a95d-a2f73b4e8fcd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "277a7562-34a9-4d6e-a903-8cbe1e19a528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1452f9-5ee8-49db-ac9a-c9d56d226aae",
        "cursor": {
          "ref": "54f8712b-fd15-486d-ad3a-6847cc289781",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5f628a8c-9c07-42e2-afcc-9080a4a51513"
        },
        "item": {
          "id": "6f1452f9-5ee8-49db-ac9a-c9d56d226aae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c3064975-e448-4722-ac0d-08a812db937f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeff908-8cf2-4f8f-bbcb-c7e300365b2d",
        "cursor": {
          "ref": "698af4ef-9a08-48a9-bbe4-ec8a9104fa85",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c2e8980-a1f2-4067-900a-a85fad2cd671"
        },
        "item": {
          "id": "eaeff908-8cf2-4f8f-bbcb-c7e300365b2d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84a43263-4036-4e96-94b5-be39b3dac69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f1e971-8595-4af1-963d-f960482d1ac3",
        "cursor": {
          "ref": "d8a042ba-1ff3-44f8-a2e4-d5cb2dacda0e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e4d9cf54-eedd-43fc-bbd5-66277af8dc21"
        },
        "item": {
          "id": "04f1e971-8595-4af1-963d-f960482d1ac3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e86349cf-d0d0-4fcf-a08b-a3d498d4cd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d98f56-68cf-414a-87c3-d4f8a7658911",
        "cursor": {
          "ref": "125767e3-b46c-4362-a8a0-06abd11b5cee",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e1e1aa38-a93b-415f-a103-a6453bd8f72b"
        },
        "item": {
          "id": "f9d98f56-68cf-414a-87c3-d4f8a7658911",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1ab83ea9-b565-4605-a1ae-1f4a9697bb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303374e1-1cfe-4d55-aa2b-a255c735a959",
        "cursor": {
          "ref": "fbd896e6-eefe-4b70-b4cd-25387cb71283",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fbc8c14d-7a04-4906-be9f-b22cb24a5564"
        },
        "item": {
          "id": "303374e1-1cfe-4d55-aa2b-a255c735a959",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "993bdd4d-2e30-44d7-9c52-1bb4e1d8fae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8378243e-04be-4fcb-bb69-28a87ef58370",
        "cursor": {
          "ref": "2a9ecbde-73a2-4635-9154-f79975a054e0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "58d6e0ee-7926-4a74-8732-6a0a97bb6eed"
        },
        "item": {
          "id": "8378243e-04be-4fcb-bb69-28a87ef58370",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e2f43e46-f0f7-4b3e-8c93-f9bb1b129adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b48af0b-b908-4490-abe0-c7f654c4b1fc",
        "cursor": {
          "ref": "946ec4bb-ee47-4647-b313-4f911a775999",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f17a26a-c570-4669-85fe-0602956931c6"
        },
        "item": {
          "id": "9b48af0b-b908-4490-abe0-c7f654c4b1fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3e4c3f81-45e4-4751-b55b-e0ef1ac837e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b85a2d-56bd-431e-87f9-6d7c53d39e4e",
        "cursor": {
          "ref": "7f999d1c-315b-4b6f-8844-cf229fec0b3c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ae5283d-0335-42f9-8944-15fef14e7bc0"
        },
        "item": {
          "id": "f5b85a2d-56bd-431e-87f9-6d7c53d39e4e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f727ae8-1639-435b-994f-9d31520c4854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fd1146-44f3-406a-9710-6beebd3f6635",
        "cursor": {
          "ref": "c9875293-386f-4545-8583-6a3340ec21ce",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "40268db1-be55-4579-b43f-cfeab9395faf"
        },
        "item": {
          "id": "46fd1146-44f3-406a-9710-6beebd3f6635",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1ba64eb4-7140-4b3e-86e6-446315de5e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929a399-b32a-42ee-bfbd-2999a5efd07f",
        "cursor": {
          "ref": "9d3f190a-76fa-408d-815f-36a0f0c83411",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3a044c14-911f-4d45-996a-e4b64775b3ca"
        },
        "item": {
          "id": "7929a399-b32a-42ee-bfbd-2999a5efd07f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "366099f1-b50d-435e-82ad-4dca80bd6416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60421c67-7a89-4375-8cff-9d5948f1c9c8",
        "cursor": {
          "ref": "1344361b-332e-47e4-a105-114be1a8c2b9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7e794afc-9c6f-4161-804d-1cad9a9d1ea1"
        },
        "item": {
          "id": "60421c67-7a89-4375-8cff-9d5948f1c9c8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "38ed5b3d-5584-4814-9d12-fbad6ccf4541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f92989-796e-4181-bed9-92a86d10f8fc",
        "cursor": {
          "ref": "8249456e-8daf-4161-982e-2f58f67f1ed7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "89fba41f-1d7d-4a3e-8130-1f2a95f71e31"
        },
        "item": {
          "id": "90f92989-796e-4181-bed9-92a86d10f8fc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "55b4eb6e-ff4c-4884-9515-7fdbb1dbb56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0e310f-adf8-4197-9e24-446c47a4160a",
        "cursor": {
          "ref": "316c91b5-4f31-4524-8665-352d7270d826",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a4213b00-14c9-425c-9c13-cee01fccd945"
        },
        "item": {
          "id": "fa0e310f-adf8-4197-9e24-446c47a4160a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "39484a97-7946-49ba-8e64-8a442a175ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1654b00-7dd0-4bc7-ac43-e32460f9f338",
        "cursor": {
          "ref": "867d628a-4444-43b5-b998-d23f69101572",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f2d01501-a67f-484c-8124-12416d6769dc"
        },
        "item": {
          "id": "f1654b00-7dd0-4bc7-ac43-e32460f9f338",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "37e88cf9-b82b-4dff-a9d2-afe475b60883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71adfda8-5a86-4b9d-b607-b403694d8c0b",
        "cursor": {
          "ref": "f4899b6e-3e64-49af-b28e-4fb5cf5acb2c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2dfc2d79-a715-4d11-af62-348a3219050b"
        },
        "item": {
          "id": "71adfda8-5a86-4b9d-b607-b403694d8c0b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "839ee3de-47b4-403c-93d0-e6c7bc545fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77102ce8-78ae-4963-ae1f-58434169c9c7",
        "cursor": {
          "ref": "a556c362-f349-447b-8e26-ee278f5ed18e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8096398a-e675-4af3-b4a2-6d7f9f175e6e"
        },
        "item": {
          "id": "77102ce8-78ae-4963-ae1f-58434169c9c7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "38545d5e-cd7e-45da-97bf-7ece54b50cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edac72f-501e-4241-acf2-1f4aa18f23ac",
        "cursor": {
          "ref": "79123acc-b45e-4d4c-92d4-04a974e4169b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52566f60-091f-4bd2-8950-c7a3a86b1adc"
        },
        "item": {
          "id": "6edac72f-501e-4241-acf2-1f4aa18f23ac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "45234805-cb60-4beb-9106-5c5e74cb4144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e77cdc-ef0c-4e19-8c31-fff7920d1fd3",
        "cursor": {
          "ref": "887a3387-38cb-4e42-ad58-25f7b261582f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "664a509b-332c-4727-8843-18fe201e08b0"
        },
        "item": {
          "id": "d0e77cdc-ef0c-4e19-8c31-fff7920d1fd3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fc4b7ba0-734c-4d50-af24-eb8f71589d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27369aa2-b802-432a-9f87-df33837aeb40",
        "cursor": {
          "ref": "c938c804-3858-4a3b-bfd4-c12733ac6542",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "95090b87-ce6e-4038-91ee-97aa5938a395"
        },
        "item": {
          "id": "27369aa2-b802-432a-9f87-df33837aeb40",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5c6cc7cd-921a-4de7-8c59-46178c8055f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a33957-c29f-4770-aca8-a543dbf4b58b",
        "cursor": {
          "ref": "dcd331fb-6cad-4dd9-baa8-cbe2ca12ca0b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f24aeceb-352a-4020-a753-1582881d887f"
        },
        "item": {
          "id": "45a33957-c29f-4770-aca8-a543dbf4b58b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8229d225-c91f-46ed-8534-ee5d47dcc336",
          "status": "OK",
          "code": 200,
          "responseTime": 2531,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f84da6-dc2c-454e-859e-8847c8f15dac",
        "cursor": {
          "ref": "0f8b4139-a9e1-4065-8bc2-7ffcd4248a85",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "894ac75b-6f62-4345-b2df-2c7fc504b86e"
        },
        "item": {
          "id": "e7f84da6-dc2c-454e-859e-8847c8f15dac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0e173de0-b434-47d6-a7d3-2617bb54a1ac",
          "status": "OK",
          "code": 200,
          "responseTime": 3277,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e88fe4-f155-46eb-a73c-97375f69131a",
        "cursor": {
          "ref": "8d21348a-394d-4468-a38e-329b9a1670af",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9e86b59a-cc47-44c6-8bed-653631cc88a2"
        },
        "item": {
          "id": "16e88fe4-f155-46eb-a73c-97375f69131a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "816bc05e-349e-40df-a1c1-4e1e6a108913",
          "status": "OK",
          "code": 200,
          "responseTime": 2985,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1476cab-2872-4bac-aad0-97f655092aec",
        "cursor": {
          "ref": "ad839fd2-9dd0-41eb-aaf1-d7bbd522bcc5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44688759-58e4-4dcb-b02c-a6408c5e00ac"
        },
        "item": {
          "id": "e1476cab-2872-4bac-aad0-97f655092aec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "274bb075-c73e-4a07-827e-981510793d71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1476cab-2872-4bac-aad0-97f655092aec",
        "cursor": {
          "ref": "ad839fd2-9dd0-41eb-aaf1-d7bbd522bcc5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44688759-58e4-4dcb-b02c-a6408c5e00ac"
        },
        "item": {
          "id": "e1476cab-2872-4bac-aad0-97f655092aec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "274bb075-c73e-4a07-827e-981510793d71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c9b2d7-0d98-4f45-949f-a76272fe4a5f",
        "cursor": {
          "ref": "529777a8-d714-4e3f-b10f-86028bf5ea31",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8adf0b2b-5851-439a-a318-7fb7f7fbea38"
        },
        "item": {
          "id": "40c9b2d7-0d98-4f45-949f-a76272fe4a5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "26b38db8-546a-4a12-973e-a9d490ad2764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f45c038-4d73-4ac2-84fb-bcbc6865746c",
        "cursor": {
          "ref": "bade6060-375c-42d5-b8ff-1834f99a741d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "831c67e5-901b-4f88-be80-4c8305524037"
        },
        "item": {
          "id": "0f45c038-4d73-4ac2-84fb-bcbc6865746c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0dc9e427-9799-4f51-b7b2-93ed6c44707e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}