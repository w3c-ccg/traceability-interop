{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "eb75516b-0809-4ecc-85dc-46e8ef0daf17",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ba240ca6-4d66-4eaf-a5ee-3412533ff8bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27656506-0ad1-41ba-9964-b03c4567b454",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0b4a5a2-7a59-4abb-9da2-d2b9a4ebd963"
                }
              }
            ]
          },
          {
            "id": "3328b01a-ce3f-499d-b4e6-c40af5f4f23d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9b2fb61-5f5b-40ae-853c-6ae2b995fcd1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5021af5-2e45-482e-b55d-069f8bed868c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "031adbfe-02a5-4ab2-b1fb-698ad7486285",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a9d45ca-fb9a-456c-acc2-38b6ec83936e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a0533e0-8333-47e7-a7e2-3a280593dbfc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d46734dc-3711-4942-bf1c-8ddc2fa83404",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a469b45b-3d16-44b1-8e11-e1285b8e1a20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "435b2f89-a334-493a-8a85-40c559069319",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85c0cfd2-7ec0-4b6f-afd6-251ef2a48d12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10ea1b79-115a-45f7-9e47-657c1433e2c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62004fd5-fe70-4d39-8910-6dddb4c62536"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "859aac81-9882-48dc-98ed-2cfdf95c3b11",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1249c6ed-ee33-4091-a90c-1d17b467a4cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0185026-7265-413e-aa07-3c66fca65cea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed614572-a499-45f0-942b-3b08d31be007"
            }
          }
        ]
      },
      {
        "id": "bbba6a53-ce22-45b5-b705-e5371c129673",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "88e8ccf9-dab6-4234-8594-e8045e693a7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86c24836-9eae-4be4-aab4-e794fbaf6187",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8ac95e2-0607-45c9-8ec8-7b82315a1a8d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233488ad-1162-4a7f-9171-50d5b929eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a0bd761-23b2-49a5-8501-c913a957e0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c42e4ce-5fee-47c1-b621-2c8e7e3f4bc5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60595e3-5f4b-413f-a4fb-7ba1a1561082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9ac0546-a836-4ffb-890e-6bca1edb0ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97a4927-ff84-4a97-8c0d-6d0a6099a3fa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2008fe6a-4104-498c-9329-a719ce8de5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "698b7d43-dd78-4de8-8eb1-a868c688061c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a1b1df2-0dd1-4a82-a89c-abb42065fc52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1d1b4c5-a706-40fd-bf39-1fb7b43d8b88",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953bc2e9-9788-447f-ad9c-02b948955f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6619f270-64ca-4c15-bbc9-6cba096abcb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0628051-2a80-409c-a538-7e623a5ddddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be085b4b-4482-4844-b7eb-a0ee1d6ba16a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae9b3029-6054-497a-b446-1f70e0a3f600",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5da79497-d9b6-4c80-b5f6-8413cced23f6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefa9531-14f9-443d-9c69-64f5bf2b8e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cfff1638-ed36-4336-9c7e-e0c9139f91f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b56fb2cd-670f-4274-b121-bfd20be160a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7401e005-9ea1-425a-a1dc-2e4ba4b51c26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37ab7e8b-1f74-4a29-8e5f-2184214780a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60050728-09b2-4621-8259-0959cefbb39b"
            }
          }
        ]
      },
      {
        "id": "a212c5c2-6ed3-443f-9f6a-a5c9f5b0deca",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7cbb591b-f77d-4efa-8344-cbb8caa21549",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7af5c094-f4b4-4067-abc1-1109c6e9eaa6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad2ca5d5-8d6c-4f43-8b09-169ba0b50fdd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a515a0c-8525-4143-9ef3-46fb2542032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb450499-f610-4123-b1d4-4b6ad995476f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a4af4d-1ef3-40ed-9e8c-da065089e828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ed6d44-1052-4c3b-bc81-99927815e598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bc2624-ce1b-4bdc-bff0-c6931bee0172",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c4b96d-16f7-4eff-b637-d04171d52524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4926d5-8d8b-4f8a-8a36-75d9b0f773ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1677b19-360b-4cbd-87b0-057bb71baa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3613d3f2-921a-4775-9225-a9a2a2f54016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cca6077-3f12-4203-bd1e-2aed9f1e643b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a65d32f-f052-405a-8c26-6ee4582c87b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b337b8-7589-4b2b-ae51-e954ede43c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94410d8-4d8a-484f-a80e-ecce847f7c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9a798c5-e133-427c-8742-294997d3d72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbac40-7920-4904-99b1-647c4282ebb9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c91af06-2b2f-4797-ad05-9513545ae875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa86af1a-c1e1-45f3-8849-e261346acb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf87d8fd-c2f2-4ee0-ac73-6825365676bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29666293-e5a7-444e-845c-c1ce994c4016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef48aab9-2371-4eff-9d99-2e89d195217a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d49274b-8c20-4d0b-83de-ce56c9c32c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d26f370-ee00-4c37-96e0-d3b13a703608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b82140-e1d7-4950-992d-8274c81e4eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8baed697-9e0f-4de1-8fd0-833aba183667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a523666c-c87f-4231-b51a-ebdb4fd0bbdc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da450e76-ddfe-41fe-81ec-56137b584ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481aec2a-76e3-4a89-815d-95e926426c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3635c252-4a30-48a9-b266-ce2e8272fa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb31956f-62b9-4aec-85cf-bde509b35b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d883645f-5a7e-4967-a4ee-c0f656c70675",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc0723-45b8-44ea-8b7f-d73e2ac7530a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ff4cd3-d9ca-4276-a41f-49ad674bd3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b503588-3e71-4cb4-9a0e-6cd4f5185361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "062e7596-ac79-4227-b8f7-5b81f7144ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4f322-9492-4825-af12-766748f7b371",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a9d77e-2dd4-4a1c-83ae-96f16ff3f83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58de1f45-3dbf-4ed4-9159-921904b58ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0f5dc0-2d75-4b7c-8529-3a83beec9def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac4e4a0-d887-4762-8f33-5219a9d3bfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066fdd71-3f5e-4392-9977-d51f79152556",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1a160-3b1b-4c6b-82c1-50be890b076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f27fc8-ac06-42ca-bea5-3aa721a150ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4083db8-064a-42dc-a45b-684e7e2ddb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d699bd-eca7-42bd-bdd4-2228f405a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e420cd99-c4f0-484f-9857-656becf6d18a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ec8ad9-87f7-4e83-be7f-1237e4e455f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381a8bfb-ec14-4c06-a5ba-e58f68950e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb728be-6e9e-4f62-88f3-03b59b5048d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "732a0d47-568e-4373-b34e-1f5478c6a6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6154eb-7c95-4fb8-a0e0-c43d98c16bb6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7e953f-75a8-40ad-abcf-6d924627059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2f8e60-5381-405d-9275-04e014fb34f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99e6b32-35d7-4087-b24e-d0fc84545d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42a4293b-970d-4aea-a1ad-baa04a0a522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd3aa0-ff02-46b5-b62b-a26019698691",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefe87b1-8d58-4c0d-b6ed-9f955aac67e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861b5ceb-be78-434b-a5a9-682dd7a0c644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ffc7c9-f22f-487d-bd82-3ac266041282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "239b45b1-a953-443c-9639-883550a2fd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8740e9b3-63e4-4c51-9daf-adf9c80b3a99",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6f8541-3e0d-4285-acbe-8085addfe172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec555da-61a9-4e81-a628-bb3e93cc1726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d49115b-7992-45c5-b9f3-60a046d420ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaab72f7-7f5a-48db-9a54-e81968db1c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d496cf-73b8-4309-8b5a-9fca15a7eef9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127da8a4-585a-4008-ab74-aac0b57e541b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3dcd80-dafe-4fdd-9f5d-8cb9d0b80e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7de7bf-7f3f-41e0-b69f-10f198eca0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d82d168c-7c84-458d-9c53-543fbc0e0308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afb6f4b-c1b3-4f4b-944f-a8b994ed9f52",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ab9b9f-1594-493f-add1-144c80f03149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908803fe-c5ec-428a-b71f-f6cd8709c79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb37c16b-11f2-4e05-86ac-ed47d9d2bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730ee3e9-6f88-4eac-bcb6-e386b13ea752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a82a7e-a81f-45a9-a19c-d5a263470cc0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac176c-05b1-4485-a292-564ce4e24119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0e0bce-e003-4006-a43e-f27894f8ac35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ef72f4-6364-4520-ab31-059131ad8cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b41c0f9-067c-47d1-b899-d7d6215f1a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd394420-7855-4d0f-b7fc-4a5929db16e0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2a8e37-c2db-4e91-a1ea-5c0bd4310463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb87d18-ea50-4c95-9187-d04a6ab3ac45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e9b55c-2a4d-40b4-96d5-428b97a3ced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e654a116-8029-4b48-8239-008fdd02109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cade40-474f-4a42-98f1-699cc58bd18f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac0b21f-ffcb-4ec5-8761-7170959592c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3ea119-3893-4313-a7ff-f8fb0ceffe1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e531fc-2e41-4df9-9120-3573c59f8350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab414559-58de-4b36-b690-0dfebf5ad907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dea837-d1a5-420e-9f43-45c02b5647bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32822b05-a99b-4792-b3d1-b71b99906df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d31f239-d8b5-4bcc-92dd-5cb3bebb5053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30f5bab-e865-4c64-8a01-a2058a8b26fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bce3b14-f53d-4af1-a468-5c4ec9f0128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a019611-fdfc-4142-aa52-86ebffa33af4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce61c621-44b0-41ad-8956-86447af45455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c535c748-efe4-49fd-bb26-d32271ec7160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da0cc26-f016-4803-b0e4-59ea7e768fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d819bcec-1bf6-4002-adbf-934d3221fb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d359cffb-93d9-4fd2-a935-704b84838d7a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe36578-7b17-4d6d-af8f-b9b2be1285c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03694bb-19d0-405c-a956-f428e70cd069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bd6a50-23cb-40a9-924a-40f03409bd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8feb150-89e0-41c2-a1e8-6e878514d2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435b2c33-87da-4397-83e0-9acd9342488c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884b7e6b-15fa-4e5e-95b5-78c15be66eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e9c789-8713-444d-8cc6-52133aa29478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c8a7e6-5340-4ebf-a347-4313336a90d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f83b552-e0b7-456c-90cd-153d6341561b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e2950c-1d39-4954-af60-b3d83ac166ec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f903fd-6b84-452c-a039-088b7fe693be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e655b0-449b-4ffe-a17e-6b06d722bf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0953f970-9393-4b09-83f0-aad765a0811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0c400d-ed00-4789-b571-4a2a9a1243c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528dd2a7-a789-4956-9eda-1fb1bfb15956",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06b6090-737c-47d7-8c04-02234afc388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf440653-44a2-43bb-80fb-71a6da0b191e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f76c4bc-9c9f-49ee-920a-edd356377248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e45014-aae8-41bf-8ea4-0fc99930b231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616801a4-2936-42dd-a875-a04b8e21a9e2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7a0f7f-6e16-4c62-9b08-7c8176296370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4897ce96-5e60-47dd-8496-6b501f468666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df0c975-850d-4874-b189-7e0d5d3986b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d26048b3-6024-443b-a026-a22ba12497bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b425f0-74b6-4cf0-8598-7b7a13065bf8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65edd72-a0d3-48b4-a660-f2520ed09d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e295677-351b-4bc3-b1df-221a5d9ff651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a5b6d-a4f0-4fb0-a74b-743f98f21414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ed60f1-9e55-4927-94f2-2f81583ce83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4229c061-39ca-492d-97d4-e1687ad708f4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc501c0c-de48-4320-baa7-5a4ad5853e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baae03f-0162-40bb-8873-6eb37488f91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f509e1f-f0b6-423b-adbc-292c31dc6b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e4ae33-a212-4412-9589-6a7bd01a4832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2881a3-bcaa-4ca0-aabc-fce55bc12492",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36faee39-4137-4850-a439-336e3492818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef93acd-b065-4779-804d-7890fa9907a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b9dd6b-2e7e-4926-a3d3-ecafbce77fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "926af292-09b9-42d5-9ea3-418d8e660e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a4ba2f-acb2-46f8-b378-358392224227",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a9333-b221-4c8d-8060-959d8ee91290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0a16ef-9247-483e-88ea-23bb29f1ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c7370a-c023-42e9-89a7-b418f2e7d8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3a8384-8e12-4f43-9d2d-0ff8e391cdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b260b3ee-c358-4105-b069-5ae3f38f05ed",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abe3319-1c13-4aa9-a347-7b242618e7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f57db6-c377-47f0-992f-80ee3437e3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03f6f60-00d5-4838-91ce-397d9ae78e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c9d559-22e1-4fb6-aa6f-8eff344c4c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46efda-b5f8-421b-a209-b20b7bd0769a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b16d1b-cc8c-4bb2-96c2-60d6aedd5059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73c4005-97c2-4b40-b0c7-a6fd0a492bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ae0d8d-d3ca-4a01-817b-d39eb8c363d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f7aac0-0c5b-45e0-a559-8330df265ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a3fd12-c8f1-48b7-9bf2-649642a4de6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da5a483-7806-4bf7-981e-36ed59abd2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb96188d-e903-461c-886a-59c3f7c55acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8650de-4143-4373-916f-4851c0d6d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3533ac-4c18-4394-8e6a-53ecd47cda36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707326bc-9f2b-4c1b-9c5b-45bb043e3b42",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3640437-a452-4fc3-8b75-695f2b9d7875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c49bdb6-7f73-401e-8322-6cc83f25b5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce94908-73fa-44b2-b8ec-3814809fd974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca5abf2-f726-46cc-9989-ba5487bb47b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4e8a01-b9d7-4614-af71-626f8e27ac8f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0dbcbc-1520-4189-a5d9-6254eecf08d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1aedb3-6536-4054-b0f9-62ca825f9f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcafad23-d4d9-4cc1-8dd5-2a69c2bd7c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ade6cd8-39ea-4785-a967-918fd6937a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6095c03-9526-4394-9ed7-b2d338ff7c04",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ca204b-f2cd-45d6-ad07-6b8acd1a81f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7602b077-219b-4389-9d1c-f72553e96460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe52ab1-6697-460b-9ed7-ca0d51717500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59d8ef6c-8ceb-4a56-b005-61d40c3c3780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25435da1-7a82-4b5d-8672-2cc456f3eb9e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bdf490-111d-40a1-adea-292d5cfc9b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c5ee8cb-248b-4d9c-8066-d69111cbe112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6a7bc9-95d0-4259-a864-2060c918c6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a37488d-90bb-43c7-ae6f-7d3b9faedc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c7b544-ecd2-45d3-a58a-c82b0dc5be92",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09503648-a4bb-4cf1-ac51-af811369d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10f8c5a-f719-4263-baec-4bd275b61937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90df1816-acc3-4df2-8b4b-b664fe46949b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1268b6-fd65-4087-9a35-ae927f7e279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a3c67b-c2f1-4ef6-832d-bb57f4e0292d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b075e63-6b87-43a2-91b9-0a29c541d082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a3b5af-7a81-4757-b735-5ec3a097ac33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d6c410-0d9f-4462-9be6-5563f986a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db89f246-a9ab-49d0-9a90-0f45fc763514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1d9253-f9fe-4c90-a8a6-841f8b52da41",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe39077-a367-47a3-bcca-11ff4bf91a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f75705e-0877-4fe0-8e93-07ea2085ee78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5052b62e-9342-4e1a-8bce-61eb19536545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "494d97c7-a2fa-49ff-80e7-8722e1e82e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12aec2f-a73a-4ac2-8bfe-6eeffa19110a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437b0731-c224-42f0-b899-61f1e087b90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948da993-8a98-4d8d-a241-37c056e08005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9759ee-aeec-417b-83ce-4d5dc86ae8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d4e1cf-6555-4501-99d9-f077bca16a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80771a0d-733e-4c3f-a3cd-9dae829e52d1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749f3e5c-a172-4233-a561-ed50ddbe4bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55feb05-0569-4e61-8aaf-f9c8b77dbd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea347f8-317c-41d6-8144-856b521de32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7a0ac4-e2c3-433a-9c6b-543b33a65a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b5e737-b40e-4607-b927-eaee92ef99ad",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3979770-59ee-409c-b8db-a83ed5cbc482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcbd9f0-a1d3-4260-ab4e-2e2ec3c131e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c396ce4b-456e-42d9-baac-2b008e3ba9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5da96b10-cc30-4d66-aeda-4067164c4e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88cc46e-07cb-42af-beaf-e0c2792446b2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26157dfa-c5de-4f7e-b623-0acef1dbebf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615545a8-e1bd-46cf-bba9-3e39d3c08cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff22a96a-d2d0-418d-9374-0fa5119dd5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc70c41f-f3e4-4eb7-81c8-363cd8420674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86372d7b-ca76-4d8e-ad94-70a38e8a09ec",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6a77cb-305b-464c-bd28-d9e2d305c85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cbc2bd-c5e0-45a1-b461-fe33614b5d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d17cf34-7f2a-4e7b-adf4-53fb2e64d1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c3b157-3a26-4afe-9787-ad377986c298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5665ea-a266-4d56-88a5-acde3de23e88",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5649fbc-2e90-4161-aa6b-fc9db3c64b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd5a1e9-860f-4c50-af53-94aae874fbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc0967-a42b-4f47-b3be-f380d9dcbb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a664cbf2-16ff-4d1d-9d20-07e6590ebf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143b6813-3db9-4416-b63f-26985bd72310",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b407da30-aebf-4fde-b219-fd27227f6daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8130a0-ca0d-4712-919a-500ad340c2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee69607-6614-448f-97d2-4b1e251b3922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffd9d9f-df55-4758-ae5b-fb713d16691c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dd2ead-887a-4432-bb26-e1634c1df141",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdcca1d-ca79-4a85-87be-4f21782d5ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5604da-f683-4c7f-83e4-b5fbd323cdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec833484-ef59-4d88-949e-95efd251564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d17353-6d32-4a29-aa23-0695d3a6e8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fc00b0-e9f2-4a15-9f0a-4d2618eacfd4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ead50cb-8475-43de-a256-264db7807583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b0373a-7dd0-4ab1-8ed3-b59d474a22a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b3498c-2db7-44b3-a165-4de12959c988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcc7407-61f2-4e65-960e-1631c87a14ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb630bc-4ce3-4516-b52e-5b53d3d6c274",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62770073-be76-4336-a0ed-11e055deda0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d8d2d0-2ab1-40fd-a716-0af7f4c50d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b77405-f047-4301-94e6-ae023c1f42c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc5a44c-5408-47e0-b97a-663676c1f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21835885-32d2-4887-9800-dd0c3fa75b59",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5391e7b-b2c9-4858-b1d4-01996e7e80e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26586e7e-1986-471b-ad09-844360338a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f473c022-1a19-4a74-8a96-a494ebd64485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23df781b-957d-490d-8b77-b36f939b72ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f23075-6cae-46b4-ae9b-d0a634c4bcb5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a37841-cf86-4303-8bfc-e7954eb8f9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2eec690-fb60-46db-bc8e-a493851abc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9236a26c-d69a-4228-9bef-cb28e094a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8938c447-b764-4ff5-b005-52a055523204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfb2b71-840e-4ff5-af50-db72455aa91b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f78cbd-eaeb-47f1-a01e-e98190baa038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c07f40-2653-4bb3-a7af-a729c2953d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a535b0-c57e-49a4-9e0e-341fb548c7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a40fd26-1955-405b-a0dd-573ea47dbb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff69bd24-c671-43d3-927e-f1bb45dda2e2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2540bf28-38d9-4ca8-adc7-551b4690658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e45ca9b-e5f0-4ac7-a50e-ec1355027a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e62880-609b-4fec-b476-00ebdb37fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2e447a-672a-4a69-b30b-74ca33482435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e18209-718a-432f-805a-0ae508b8046d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db79a4-eed5-4646-a6dc-1c7bdf4cac2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baa5837-6cce-44f1-97df-6373b911096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09ff46-817c-42a2-a4be-f2a09fe97f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8452aa7e-7508-4ff9-91b2-00145e5e3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbf237b-e4d2-4632-92b4-4eb941b9bfd5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08612c66-e010-458c-94fe-0f943b8d1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aacb8f2-8ee2-4bd8-80ad-60b23f479b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5980ef-a403-4616-bd3c-f3e3837d277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82f63996-6e73-4582-9acc-8e616b8a7166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151b9337-e9d1-435f-9a53-a194978853a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d294e3-e392-4b3a-b796-95c2a53bcc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a30d9a-a092-4b7f-aef3-fb6b37e629c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c26794-6f87-4afb-8cae-d10e8a50e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "465ffafc-b2cb-4542-8151-f9cc81563aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b05ca6b-0447-4ebb-bc08-62636ee37d6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611dc609-5086-4001-9e22-8c50ed488231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299c396b-6de8-4ee4-b1a1-027094f16438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9967ed92-8854-4d68-9efd-f6b736cc4c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80551bc2-3ebd-4558-9d20-cc9611d13c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d28dae8-0937-47c1-9ddc-9e48d0280ea5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81299a2e-7e2d-4eb2-8f77-e913c965c868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce15d04-e04a-46c2-94e6-79f4fe0369ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6790c-9991-49e3-8127-b48d85b8ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d372c8-54a4-4bb4-a03b-1e4d800b437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0c0e52-02c5-42d2-9c6e-287f4ff11df4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bb8264-784e-4277-a7df-252d0ab68405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0ebb15-3c2a-4e06-9dd3-4823341b4db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c4272-fb00-4ce3-ad57-7581692667b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe470bf-1a76-4a05-9188-f9852f227b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8080c772-8f81-457c-a1e2-e19665c3875f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d9b3f1-d21d-4172-9cde-bdc4513b3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5378fbc-e94d-4a19-afec-54239d5d4797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eff455f-24e5-458f-9272-33a0e6d0d43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b2cbf7-f51b-46c7-b1dc-7dfe1dfbc418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b96b432-1500-4c7d-8d70-2dba6f0853d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e82973-eacc-47d7-87eb-3e925d3c9caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7abde8-567e-4a5b-96a7-2119cd8ba845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae731e5-18b5-4d21-aff0-b5376a8b0c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9eae6f1-62f5-43a9-99f3-28f52bcc878e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e3102d-82f4-4030-960c-318121e25849",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bafa40c-5f4e-47e2-99c5-1a8ec2ede020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada59c0b-0114-4d89-bf73-40a74683915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05269815-f36c-4d66-abda-a7acbbf780eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e77f0a-e050-45f7-bc87-810f5d414b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9306cb85-b8b0-4e0a-b77a-adc9baf660a4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf00d8-5ecc-4fe2-ac49-43780457fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb6db4f-c421-4258-b988-dc09407d11df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e19c6e7-2a93-4b9e-9998-58c6ecaa9e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f35793c-ec83-43d3-a0a3-62cc2faa65a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53becd5e-cdf6-441b-8e96-db5499d23883",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31a6dab-5791-47eb-be38-e061a98de9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cfc20ee-1a5d-4f23-99b6-05a058562240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b291f7-12ac-430d-ba30-cb91fa0204e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4e073b-e391-4140-a9a2-76a877357a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12827a1c-6b6c-43df-babe-4ef12cb03222",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868bab5f-f1b0-494e-a9b3-5ce3d032c36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd30b49-9f6d-442c-8a32-64b71b0a52f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dc7c6f-a5a3-46e5-8534-3877fb31c701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "529cb76c-fdd0-473e-bfd5-38c7c5bacd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10578f4-6e67-4386-8b31-5b7f81af0fc6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a204b44-53b3-45be-8645-eea5d782e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10beaf34-f552-4731-afa8-9577e14be1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad86ea76-9a69-4dc2-b4a8-22e520f86e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad470a1-f333-4e6a-b369-4834a748868a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52206c7d-3317-42eb-8557-74edd5d3a995",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f1e6f-6ded-47b0-be5d-dc5d19245bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4b35f9-e1d3-4683-9811-d9f994719d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6edd2f8-896a-46fd-8904-855aa1fd6e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8844c5-67c8-40d4-9bbd-a1d270048053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fb5008-091f-4baf-8e7f-ee7103be845e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8202702f-bca7-4137-ac2a-8bb4e47d04c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e048fb-d84f-4abd-af2f-72b5278eaa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef920e5-cf8a-42c5-a3a4-196af5a2438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d640fabf-aaf3-4407-9668-13536b8e595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2623a8a0-04d7-409a-a79f-ae5fb8ac37b0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe978556-fec7-4c41-88ba-28ba9302717a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c25b34f-06e4-4a87-b518-8402fe37d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02418fe0-2b0a-439a-ad99-46683dbc833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b3fffa-23d1-4eff-8259-ead8f1a31100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f287c51-5d19-41cd-8db3-f32b42b6a3a8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ef4032-6897-498e-a857-8ef17bfe39a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be15dc9-47be-4f4a-bb19-f6fc6d195ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad3bc75-4c1a-4deb-9376-c613521d15e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c69562-f50d-4929-b191-801906c7f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691a70ba-3846-42ef-945f-71a4bb283180",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7dcb2c-7b21-49a5-8be9-a30abe51cd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09f716b-e953-42ce-add3-36e6d965f8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5901265e-8c5c-400f-bb47-81cadc79f332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "881ab950-afe8-48de-8fac-3d5f292d99d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141a76de-bbad-4bc0-923d-a3d3987638f7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c27d13-f05c-40bc-8662-3a00a58b3055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b36d4a1-a092-4cda-8f6e-14c6977ad880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e61230b-667e-4e77-8b97-11d17a8d5072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6b95e9-71b1-4fbc-b850-f18ed60574ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a777f92-f393-4df0-a0cc-6699b0114a6c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ff1f77-fd7c-4073-bde4-e9c5f5f078c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9735660-f9c7-4c8f-80ba-649de1341379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a283c9cb-177c-4b92-8da7-53e7c40618da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c90e38-e213-46a6-805a-b6860e7ce5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652da0e5-bc9c-4ee9-8dc7-9ae59100c681",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a301746e-1184-42f6-bdba-15aec46e39ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7327fa2-a82d-4071-8285-4053ebbb8eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb07e75-2705-4861-8bfd-e8048af11284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81645423-3caa-48b1-9836-220cfb102c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f527d-37de-4c5c-b4b9-c102ee9fb907",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d503c9-c11b-4850-88da-eda40b47f52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d1410b-34f4-401b-87fd-c18604730481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420477d0-cbc7-4452-82ab-f21bf37b0146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fa56e0-5b34-465c-b324-ab57270f3d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c392b6-8aaa-4e0c-a51e-36da172ca1b0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb28b0e-4b41-4103-b0cc-4dd7a920fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19306b00-5acc-4f4b-a57a-182ba86f2f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5db97a-fb00-4a9a-92b5-f82d005b950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c19e63-b94f-44ae-b2e1-33fa1989656d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7920c601-b60f-4c67-a2b3-54bb33d4c02c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f0b34-3ab8-4d9e-b168-ee232654720f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52d7b73-86c9-431f-a751-c3d499229d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a706a5-1485-4e84-a230-0cf95583f076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "080b5532-6e97-4329-aae2-42e4e8fb0a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d687ef-6b8b-4f69-b0fd-b1c54baa26f1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d141b2e-8ac7-4e93-9ec0-a9c6afd2284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d9175a-2519-4506-89dc-f899052deacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493faec7-3c06-402a-83d9-ed18db6ba56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6adcaa-72a2-4bd3-924b-31fa60abe538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670207d6-6f21-423b-affc-c755b9642d56",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186f5c77-5535-427b-9c85-37b4018e69ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533d8d02-4446-4be2-9474-89934f748c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12fbf23-15e5-48e9-bedd-6c127017c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "343c32a8-5659-416e-ba42-486f654ca1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333fa851-50a9-4e98-b462-ce69c3650200",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822a7dfb-0a04-4b19-a61b-2ca817485488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6a7612-ff6e-453f-8d5a-8624bae93e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d89e51b-9581-4551-9c72-03604ef9f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "429e62de-f56c-4ada-a634-279cba3a7ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf8e34-ac05-4199-afb3-af6ef6521e85",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8633f3-bf0f-46d6-8449-468772e3ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff6c050-33e2-4d63-96b0-7fc58ff84bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d4ff98-de04-4b30-b427-0fe75e1c5aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5929069d-224f-42c8-a7df-e1f5a962f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c933b91-92bd-4d18-90e6-0cf972cd9d99",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4d33fe-991e-4c22-ac22-6f2a40915cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e670421-c4fc-4cb2-9f76-73d1be50ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b008eec8-52d1-488c-ae62-0c0fa58ad7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03e83ac2-1021-428c-9b93-8e4bf3f5794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae05b70-a590-4796-96cb-19007c6b8dea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8e9d32-eaaa-4ff6-80db-4900720c82f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c2ab42-1fed-49b6-a3a2-07816ca4b1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8087e749-e0a1-46b6-9d66-38d66da085c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb93392-f8ec-4092-b7ed-9d1ab32556fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6ede80-4a78-40b5-ad96-90e09d80e382",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b69cd-afba-4640-b855-0f25d7fd63bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c08cf9d-60b0-402f-b66f-40c1fba45e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958cc063-39c2-436c-bc27-81f9816cfe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f45fdf2-6cbb-482a-86b8-9de927edec53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e09c635-9c22-4882-8f36-6a163cf1f86c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4dc924-ded8-4382-b6ff-fd9a040c25c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e3abbd-dd57-4f1e-a347-95d0937b0f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f41c1a-9ae4-48ba-8ac8-3e3df41b6b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "531482f5-822e-4cdb-a7dd-4415423d3152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9533c98-ae32-430e-89f0-c4ad8058a371",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5d78c6-4c6f-4436-800d-cac1c95258c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b80e072-9a7e-4dfa-b58b-bbe4a262b059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f65c29f-f4e1-4dbc-9718-92b7580be998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c75a64a1-b9fd-4354-b9a5-53ac5d0909a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65b8bbc-2656-424f-b05b-963bd4cd6ed0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4193eaa2-d69c-46c5-b571-4a6f5f84507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bacf0c-c6c2-4cf3-9f25-9c757147e311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2035d1-1406-45eb-9418-f2c85eaf7328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ad83af-db42-4329-823f-c5a194a7efa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e353aa1-deaf-4119-a75a-1a5c8070152b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33b7ff4-575f-40c0-a716-c2bd5c919bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41008963-67f5-47d6-b126-f3b0fb6e41e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847384ad-882a-4b94-aad2-0ae843c0f99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7583af58-515a-4ae7-897f-6b01f852f053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf014055-824a-466d-af56-98a94f7858a4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d0dbbc-11f2-4a31-8c82-6d6b5f15d904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46b3d8e-9139-4753-a690-37b5622bda17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2658c5-d81c-40d5-9451-41538a2942d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b71879f-82f0-4237-a566-bb07b4d35e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b7336b-61b3-4ef0-a7a8-d39f5f0c3cf2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69390705-7f94-4f52-bbd0-e4f2a034721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701383ed-0f81-4683-8878-a712748d8a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e651db24-fb61-44eb-a808-63f6d44ef51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e30cf2-82c2-40fc-94a2-9361f6997cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5403da-74a4-465d-8bcd-cab7fe09ce98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb8d686-8ab1-49c9-b46d-ee300c4e4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a953e91-e8f5-4565-b9fe-e52a109d15d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cf7d7e-e9d1-4c12-9c65-8473e6dcb911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbd47b4-d0f7-4bc1-9322-8cf3369dcf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bafe00c-f785-4bf5-a75e-30e250cd6def",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3fce81-bfee-43d8-b83d-97b2cda4e20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6a13f64c-6a63-41ad-a2b8-eddc67750007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d799d6b-177b-43ae-98df-bf581c61f93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b19b4c9c-7ffb-4884-ba48-05b897d53ba1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4de9e470-e008-44f1-a4a6-03abd2b0b91e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e877a472-b3ff-46c2-87d1-7f8d59fe11c6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25443a95-e122-4e86-a9e6-28fb5c4de31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "115ff1c0-5d5f-4d93-9e61-b30dd78d50ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db3b5b4-d1a3-4071-a531-f22703bfdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e58a928-b45d-4669-a7b5-29c364995b17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c710915-51ff-43cd-98b4-54e834a067d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f57a6524-d640-4884-a0df-45fbec68df49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47d2cfcf-f035-446d-8947-6e11040790d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04789427-b10a-4171-b51b-1c73bb39aace"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "93e4df0a-82d2-419f-ae68-b67040e0b693",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9dc93a1-77ff-4477-8475-234e22582991"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "601dbe18-65f0-4ea0-9eb1-b94e09faeff4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "901cc219-a6c8-4ba2-8949-26cf5887a99c"
                }
              }
            ]
          },
          {
            "id": "264954de-8c8e-46de-893b-4a745650e925",
            "name": "Positive Testing",
            "item": [
              {
                "id": "113fcf3b-8ddf-49ea-9735-264563fe9240",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "38e4d1d7-2a6d-4ca1-9b2d-c37d4a322f97",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4294c0f5-f3d3-464c-ae3f-a9f3a054dd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "de9eca93-6a97-4250-a063-e641d6112649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f5364e-8087-4d4b-9522-d013454a20dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86fa4da-6384-468c-b909-c32775a14fd5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a0a5e26-0260-4e2d-85c0-dfcc1d38db22",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cc0371f-e4af-4462-826a-aa01594afa00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "822f4a2e-503b-422b-90dd-4e4a813d1255"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2719e721-8900-47b2-8bb9-401238d186d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47d78b0e-c62b-4fa6-bc7a-d998077f8647"
                    }
                  }
                ]
              },
              {
                "id": "274313c8-5c02-4a08-81f7-bd488196ba7f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25364ae5-0a27-4121-ba9d-23e8e040dcc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c0bb21d-e853-45ff-a0d8-c79645a06d72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91e9a727-c4a2-414c-8f47-2540c9a6fb18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7cf12805-d75d-4793-a54c-9a49c2301d22"
                    }
                  }
                ]
              },
              {
                "id": "9ff27227-cf8f-428c-9389-48f88f71c3ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3fb5bd1-7f7f-4084-8671-16a958211b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3debbaa-bc95-4fd9-aba5-79bad614bebf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60c7266a-0edb-44ff-a14b-3240ef4872f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9de2c5f3-1f57-4717-910c-cc8a1582c24f"
                    }
                  }
                ]
              },
              {
                "id": "9118ef91-8e1e-4a10-a760-3cb5ef776d58",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d921880c-d63d-462c-a110-5436eacafde9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6aea65d1-d587-44e7-9848-c37ca664a675"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f431ec99-e7ea-49af-8eda-f31449baf035",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "25575bcc-407c-4548-b502-ba0da54fa1c7"
                    }
                  }
                ]
              },
              {
                "id": "444b7e95-9368-4f7f-a720-cfd94f680703",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41c8624-46cd-48a7-994e-6cd143188a49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f7a6da3-96a2-427d-9c5c-173c847c85d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0af095f7-8766-4831-818c-1cf806eb42b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b635ce37-780d-4310-83b1-f89415252979"
                    }
                  }
                ]
              },
              {
                "id": "e63abb2f-bc6f-4f6b-a75a-65a5b0e17959",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a96cdde2-0b81-4cf3-97e6-6b9784e0b995",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1479d7f-e483-4108-88d1-516e9ad4435f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "984a651b-955f-4a6b-a2c3-357bf13485cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92d6f312-36d6-444e-8740-a28bfd98ab2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d9b3c4f-c56f-455f-963b-23be3f5a1e8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2342ebeb-485f-4f24-be38-60048e034ea7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9411ab05-2d67-4bac-8bb9-ec7b382590d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c87fc36-b027-467c-b436-d1465db1f90f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c47130f-b12a-44ed-a5f8-358566169cb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e1e1ea20-9589-4a16-b6b0-f13f13605ff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc2a76d6-98a0-4372-910a-f12f0d351b7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ffbc169-29de-41fa-974a-10471fb6832a"
            }
          }
        ]
      },
      {
        "id": "d3d66eb6-ae3d-4536-b704-2b270d4f0ae7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "79fdf8a3-0941-4b1f-8824-b69c10175142",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7ac87ab-6174-4fb0-94e2-f05b3319a36c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c03c4c25-7215-4e38-8195-69238d2b4034",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200e5bcf-576d-4726-8c57-b17adf6c6fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94af535-ad2d-4e4c-8eff-9fa3e6c87107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350f8e0c-bd81-460c-b099-3ee9b09b0442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e71612-afd3-4a78-9de0-f8e3ce9ed1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c233e9b-0e3f-4270-a39a-47fc1feb5572",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd14d7fa-40a8-4d2e-8aa1-9bd66ad2f635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cedc28-da37-4b55-a2ef-62fd40b22b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4793a5fa-dd2e-4d2f-9606-01d9bc049ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da16324c-11df-4f93-b1aa-f9ee1185481f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95bfef4-cfe6-47e1-8056-41f8f23ab737",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca04cfde-4fd5-479f-879e-facb9492e98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e640fded-6b6d-41a0-9af1-2ed4601c3070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999dc93-6b10-4868-ba98-b0b074cf66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e3d9fd-35f7-4c9b-9dae-2ec9243036a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b610fb43-ee53-4a93-b067-879f885a2528",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6263bb34-20e2-48dd-ac43-29bac131728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7248f05-506d-431f-9c2a-8621e725f498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd01dda1-8ca2-4d6f-8763-a964ab58528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c90620-5fff-4b68-a588-59900408ebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2c2f4a-f11a-4efa-a14a-cf0749a63e88",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb425cf-3187-4f09-98b9-fee72e6e1582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1854a0f5-90a0-45c0-824b-1de26fdf7e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4f6c10-4b19-4ff0-8145-d25af28d74c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec7e84f-1258-4fac-8f44-6944463351a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f5bc00-3dad-449c-80aa-ea6315479a21",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e648d60-c1e7-4e8c-a8bd-8c3804bafdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af0b687-cc0c-497c-a923-c84f279c0838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fe54de-a5f0-472f-948e-06cfe3605c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ff1ca3-bae8-44c9-87eb-1f8d4479c13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c91fe0-ab62-4815-9185-09aaa6cfaadc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7489eb17-befb-4030-826f-d71c737ddf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a134e652-fdee-4d3f-be5c-c9bfa9cf8f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81547329-1bb1-4d0b-9549-a3f3afa9f5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "967354f6-f318-41d0-b675-1cc478c07293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5ec6fe-f423-4f43-b0c8-d0bb9a4ae41d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c533b0-0279-4a55-9864-0dc700b43ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5e3040-4914-4e48-8d46-8374dbc3509a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6764f7-8b6a-4da5-accb-98526e9d716e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "834517a1-6aef-4c5e-85e4-8dea9fa97aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de5d04f-aa3e-4ba7-8259-b4ed262e9cdc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0758a1-7278-4f8d-9994-23cbb30b3ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad11f70-fa58-42d9-bc3e-7cb6a83f682e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f9be87-bc99-42dd-9d17-25f6c8131a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c679a226-fa57-4ef4-8d08-fd39a3ac3ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a85ca8-adae-4ac0-b0c7-90b25f480cd7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545f3826-009c-4746-91a0-d4da705af377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d25f13-1638-4b72-b79d-7b718d4948b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce459c08-2b83-47e2-9bd3-f4e08b3f27a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79bcc5b8-dc75-4ce1-b738-cc7b33a7fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6cdbef-4fdc-42fc-9b67-62a2d28647eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f298b9-bfaa-440a-84da-6a7f00d2ff69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ae1458-d1bf-4389-b017-a2042e578c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab84f0ac-0792-4667-b442-8a0934672157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81b00e5f-3c26-4c6a-9774-d8b7c50f255b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a457a7b6-089c-4d5b-81e3-9766b618a629",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a2872a-aa31-4696-a284-c74f64358f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69700cf2-afbf-4434-90c9-765c72b22080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153da44c-56ef-418c-ad43-391616d6ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d16b98a3-8651-472f-b609-58c80fdbd23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e606c92c-fafe-4d63-b332-f859e4e44287",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff6b7b4-2f47-403b-b7bf-983933fd364a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66911f0-3457-4b83-b1d0-ddabb283e1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c33a6a-86d5-49a5-9ce4-9fc1c57a62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e328322-2da2-4489-978d-20ebcdc91887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5353d1fb-d31a-4573-a639-b90c40b993e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254d66b9-ff70-41bd-90d7-529d474e87ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa3c1ac-11b2-4ffd-a238-babc40c39bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa4efc4-0674-4ac3-bb8c-0f474832fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c184a7-cb87-410e-9ad7-1f878b95e48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b544dd78-4c26-4cab-9b26-95dfc9821ae9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59be8319-0193-4fdf-b861-1086d6eacf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c216b790-b551-44a9-b501-68554097166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a69f95-8d59-426b-b5f0-b39bfa2b89f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "641e3425-297f-4f2c-9473-8378c680f9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e1446-e431-48ee-8778-c15fbd56339e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8128dac5-7b9c-430d-b8f3-40194be64ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9dd363-930a-4e5a-a47b-6852fff24d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff02eb20-5b23-47e2-8812-fd15b8a3de46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8921717-d47b-4373-818f-71755d95bace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae440a6e-ad64-42c3-a578-35191724576a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2afd1fc-b131-4eec-a9f3-42f1288900e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c97a93-25f2-4ef2-88a3-b35e10bc6e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc4c5c6-dffd-4822-b3ca-816fc76a9111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e560b4d7-382f-4435-a215-64a7a452e353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5b74df-70ab-4022-bdac-dfa820f94b51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e69f59d-887c-4cc6-b76c-e4d85c96a0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a52f6c9-e730-425c-8d2a-73ffdd38ed94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0af2f4-a364-4117-b454-406e24383fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda77a21-a896-4d56-baa2-d32cc3fd8b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb65b5b0-4352-42db-ac73-3f982362a454",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d03e31a-d728-480a-ad42-ca7be061073e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b54f90-713e-4dfe-bdc4-65495b9d4598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16b74f0-38bd-43b0-9bf2-7350e26487f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28d2ef5-c21c-4d34-93e5-1496f386c043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee1d3cf-cc2f-40a7-a694-497c90f23a17",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b21e810-c11f-475e-8e17-5454e66a3f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b9771-3343-44c2-b460-be0511c19def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f58f8f-b9f8-4b9d-8912-f1fa56162991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00186eb-9f83-4059-9d53-9aa29be21a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e5d1c-4577-4dbb-8379-51b75f4de05d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341a1b6e-6250-4ba2-9ee4-92f4daa80afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eed45b-0ede-41c8-8eb6-466a2d80db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd06eb04-dec7-4e1e-83d4-5f182ed526bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8746e2ab-bb7c-4be8-89c7-073b18ac45ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaca39b-366f-47e7-9196-ae65a84f8e97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc77747e-acf3-42b4-af7d-23625e2c6b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ab1980-a409-4d99-a832-289c15e1445c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ca20d7-0023-4664-b78e-14f3e0e4a7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "394bf5de-a468-4aa2-9603-9cc67949e57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8beac3-688e-4dbe-9040-4b3a5395a2f4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a941cb9-a501-49f0-b343-a0e9746446e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef0c82d-a0d9-4f02-a479-1510b16625b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70257ec-9f79-4979-acee-da50768b579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e23853f-8fdc-4ad8-8133-f0bd82852f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd7cd88-8096-4695-be24-d8d4a4d9cd66",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8607f87-3b01-4e8a-8631-86ea3596e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59410105-b16d-4596-869e-5714dcae7e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffe9d4-5785-4902-9333-6ab987a49da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2703ec4-da2d-4609-bae3-e9dbb6a0e157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b01dce-b178-4a94-82d6-9b7670b1ccc0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b542f808-386f-4c85-ac2d-beed6a636242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1945ff0-34fd-4a2d-9a2b-5f474d586bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4134882e-7b17-41d2-a62b-1b901500beba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31518ace-4bb5-4053-8575-781918cce0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d258d82d-3e46-483d-a203-d9af30fc8c0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80a812-a11d-415a-b3ae-771bef903c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fec4e5d-74ee-4629-960d-450484da7737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27577a8e-3857-49a7-a4db-9ba70dc8b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0090327b-70f9-490a-a9c5-b88c976bc642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de775d3a-801b-4c4e-8b35-3e4fbfe95eac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa01228-c1d3-4120-a3d3-214d8b3caada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74443cfb-fd3a-41f9-bb34-66003a553742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5436b-e7b5-44ad-8d3e-feb2ad5626cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1f61b1-0af4-4f2a-8d2b-2ea9a49a56cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89d61f4-2c38-47f1-80b3-76e25ccf9887",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a7e3e1-5950-41f2-9b58-c40286226a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb001464-e470-4134-a6fc-38c4eeec77f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdde3d13-c4f3-41fb-bfc4-79747a0bb43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01081e7a-2e38-41c5-b3a4-a3f14fc8bcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3694ddf-89e2-4c5b-8e1b-ead7ca89563a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc642bdc-50a3-4ec8-b110-3fc2a8e8528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fce607-6346-4e6d-a9f5-230fb8fae564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06db00e2-8533-472e-9ea5-aa9d029b1af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba93d3f-c5b9-4328-82b1-2c46abc7884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b602b43b-8069-4e2d-8741-c535628333d9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc04b42-547d-42a6-9b0c-5b8b3c01c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e479c5ad-d971-4fe4-a390-9c43c5a37db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e8d67-7220-4c5a-b204-bc04d39b4230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddcbf62-4b39-41f2-ba03-1f05137bd587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9584efb-2ed1-437d-a8e7-5e4c93fd6c08",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d238912-d030-4723-bb0f-21b640b3aee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f107be63-9e87-4d8a-8403-4b747f446bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f09ab80-e77e-4fda-8de2-7a6a12e07153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1d9899-02d0-4fc0-ad00-247ceb74cffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271266cb-d8c4-4c89-b814-10845e59ad7b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac495ee1-33be-4214-8f05-98148fa09016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aff18e-17e2-4a06-94a8-e5ca3f840b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a4e403-ec75-4d63-bbb9-f1dfb82f7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4757da80-f9d4-4c40-8931-b420b5e8d264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becc38f7-eb45-48b5-9877-4ed0cd95a2e2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ecdccc-d9dc-4d69-8e8d-e1db6a371200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8995d6c9-4d19-4fe2-bd04-e06d3babc2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f67b68-604a-44cf-9ff5-d9b2e9aaadab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a3121a-6982-4cd7-8432-2aad64e79b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3e4b17-a316-473e-89d5-52fe585ff95d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cb39be-3b01-4535-87e8-1f82fd1c3116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6492fb3-d045-4486-a9d3-58819c761347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68ad7bc-77f2-4ec7-81de-b7c9f99db282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1874f9-a00f-4791-9b8f-0c27e7bbe7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f275a0d-cf33-42fb-a2a4-99be0786832a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4fc4fd-e665-48dd-914d-bbd849aaab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25dfe57c-f100-41b2-937d-5696175f1aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5b814-465c-4e9a-8f0f-f7e69283a3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5973b0a4-bf69-429d-b9ed-288fd09a5012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6639ff-2c23-48bc-90ee-286f9ce827bb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0aae36-9aad-4e79-aae7-272baaee14ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec3e152-2f8d-4503-9249-b12e87d74d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b85455-4bd8-4c1d-997a-24acc09ea754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128979d6-f48c-45cc-9c97-a5cc477c3ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61a8ec6-e2e5-4575-8d18-60bfa911b7fa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbe20ec-f16e-4c17-80ea-246f10a97c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc72446-ab99-49a7-91ef-26d9dd76c0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f855abaa-3895-4030-a740-b502c5a96dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "339d7cfd-fba7-4ec5-a1fb-b0729c1c3996"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1302643f-c497-4a09-b26e-272de8bf12b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d29bf25-7b3b-4c91-8188-bd76b2ec3dda",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25231cce-33e3-44bb-ab9f-1c1811d1915d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2379fdc-6de1-4c84-a110-f0ca89ef43ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572dfdda-d4d5-4e9f-a8f3-be5b6af657e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea1acef-574f-4b9e-a9dc-cd13aeefaa52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c321575-218f-4056-a014-653dbf7ed05b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd6e6587-6fd7-41a3-9057-c1fc99f43ea3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb51c320-abba-4a4a-8744-37e7d7a3ae60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e29044d-2d48-455e-8e37-8e90a0f9cf5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b4cca2a-11c3-493d-9296-386e94692de3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16bc6776-904d-4adc-bb95-83821f6c790f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27c228c2-e983-478f-b01d-abb5bf2ca4f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58680cfc-e44c-4722-bfeb-72b33ef4503a"
            }
          }
        ]
      },
      {
        "id": "d9326ec5-c207-499d-898e-47aafab0d9e3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6116aa3f-427e-4c5f-ad9e-2deb46e16027",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4df94122-61f5-4860-b19a-c9f275c2feb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d58abd51-4e35-4b04-b56b-3e0c2fdd268c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76365abb-02d1-444f-b957-f5574bc86576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa38b9e1-b5bc-4710-a19c-fc51f5cef8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8e3fc0-5117-4b35-b770-58710447416e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1915e9a1-d5a3-41f2-bde6-ab091d22514a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b5ff1d-cf82-42b9-b0e9-ab6dd009a190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfcc8a9-c8e7-464a-90a2-e08dd81b5df3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc371bdf-9bfd-4e00-81cc-bf5941e7eb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe0b0d1-81e5-4cd0-b198-e34f9072e1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d53f96-a49c-4210-a522-886ead996d14",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ab3853-72ef-40f5-815d-3f73b5e2a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d25b1bc-c606-49d5-aa6f-102cc80d1236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d727f975-169c-4ffb-8543-d2812b93baa2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab271d88-00bf-4de4-a0f0-766545e4a0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906046db-7182-41e5-ab60-fa5bdb675397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc065b9-fbd7-4a28-8505-077811a95b52",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e235df-4ad7-4267-b7d2-ec201704d10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fb2444-7dda-4952-89fe-cce11cd83bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b682582-6ce3-4c7b-b491-83066ff8320d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0bcd69-87f4-4953-900a-60d8cc680c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86664864-b49f-417e-a3a8-fe6937272e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb79d4-e29e-472e-a16f-384c104516f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180602e5-856d-482d-ace2-adce53c52b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3118e93-7819-4e03-ba03-d0b445171185",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b750e473-ec0f-419e-a51c-00ca2bc0648c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4ed01a-2d1d-43a7-9a41-1923543627dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b753815-d3ec-4767-ac82-b7085f314ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8ddcce-4dc8-4ac3-8628-058d1f6c5583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5a9a31-ea84-4003-82f2-f3bcfc9315ec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabbd30c-9c5e-4a3a-999c-cbb176ca8f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e17f565-6f54-4206-a474-427044d450cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ec1762-6214-4a07-93a0-25ec08224fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a0f408-ac65-42a7-a0b5-829fcf3e4753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5070227-0dad-43a8-8005-9b04daa16e32",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc62af0c-3639-4a4f-af61-903411060c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "015953f6-5e71-40e7-8017-a22b04188f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171bf3e8-8718-449e-8be2-b589ec55403d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2505106-6a15-4251-b4c7-86c1c3841d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8595036f-857f-47c1-8f6a-d5ad9bf98cfe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5616cf2-e702-492e-a37a-c35199ea62e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2351bf7f-3dad-4aa8-b4af-ae9f5430d284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f77ad24-0bf5-4c7e-9290-15beb9cd8dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f634db-365d-4ed2-8409-86ea4972f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d36fe-1a3c-4dfc-8a19-5944983f4b86",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dbd5a4-4674-4905-8759-8aed9271a661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8be055-2f8a-4813-8565-917e7311e849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228fd494-abe5-4b75-84d1-aa2ac7271369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a89dd-155a-4f41-9e46-7d8b56819ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cf3bbf-a5e5-48a6-af07-0b731967f649",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee505baf-b92f-4ea0-8c37-d8b7f107dadc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99be1a3e-9dc0-4eac-bf74-6a97a26aa89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee83050-7357-47bf-bb80-9026ac977f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f41f90-2204-4c63-ab59-6a57b3e8859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c289fa64-59c3-4871-a54f-3da5cb0bb008",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693d6124-e787-4dcb-8498-b67ac4c69d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef059624-5326-41f2-82ed-b7dc7a4b9fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af485e1a-f63b-4883-b91d-e971e35fcda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6530e42e-63d4-4379-b263-5b94e9ec8faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7f7bcc-4b15-4bdc-b2a4-0f532a7e9ddd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf6b0b3-91e2-428c-9198-557bd85675c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d67b4e-055d-41cc-8b7e-09c22756c37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111b96c0-fb4c-49d6-b5da-c419ecc94c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d45c08c-2320-406e-8feb-3749b7bbcc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9a3689-0f26-40d8-ba8a-e0fe54758301",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743ec3f6-46ff-4246-9271-851df3106b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8830d61-4d77-4ca6-a5ea-1a32dcd87fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3901f5-fc66-4a0a-b481-6f476a9acf6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0cd6ca-4459-467c-8249-369f5e3d560d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f28bda-1d78-4401-97f8-2a81667d578f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a707e8a-f293-4b7c-8035-c1d985f3374f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50de56aa-36c0-4bba-95f4-b54cce8477b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e2b372-fe78-46c3-8e6f-95126d9054f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71f3121-4372-4d7e-b9dc-55fb70a2dab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613b4342-1598-44e9-b925-e41888795b25",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f424ad-7129-437c-91f7-92a63fe37bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e9ab66-98bd-4b95-8cbc-67e72010c2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097dd008-c9f7-472c-949b-3c4df02a9eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5809b34-d730-463b-8010-0619389bb3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c8bf2e-8a90-4cb7-bbd1-2d4af8c783bf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e948c5b-205a-4574-9cdb-1196d26ba02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95db44f0-b764-4f83-ae17-7cc8061ee156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7189fbfa-af96-4e25-88b9-47feb8128144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f735116-d459-4c63-be2f-f274e0908af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c00bd3-8747-4290-be45-5b4bef844111",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76add5-88b1-4995-9054-317f871e2d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c95053-4a23-4871-babd-a243195a4462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f5fc2-2ee7-42f7-abbb-f28a2969a93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d76c51-09df-4d80-b48e-78bd6459997b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee0576c-64b0-48c0-b143-1a4c728be57e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbfcd63-37b5-4865-a760-978fcd29c68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f4d232-b24f-4fdd-86f0-514dc32a8cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe707e-75b2-4929-876a-067bfeeaab20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52559ed3-b29d-4cb3-9ea1-f5a80c77769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff16dc5-f610-403a-a2b0-b02e703292d6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676e0276-1ec0-472a-8fac-a74871623798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2001d021-af88-4c26-9259-ca957c2516ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67167550-24e3-42d5-81ab-0f86d28a66dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d10621c-529a-435e-bb7f-d038248b36b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c236d53-e117-430a-b85f-44e301fb91e0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8ec854-3be1-423a-b8b3-8a16d2526696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65019237-2cde-4c2d-a6ce-8b864bfd24d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6aced2-c431-446b-b3cc-1151f9d77620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f125063-d0bf-4650-905d-1b51eb0bb43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552d8f36-65c4-4f31-a236-2ebcf41b78dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba26aaaf-ef9a-46aa-bec8-b8efaa0848a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde0b4a8-e8d0-4bbf-8c5a-d69daa356bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0d671f-8a23-44d9-b302-5ac23d08a37b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091406eb-5963-4093-af2b-df6b92ddd242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17ea427-04e3-4e07-920c-c1b80f79e8e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df101eb9-cc99-43e9-a9b3-59ad88d0b35e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5b6f3c-9ebe-413c-ba75-9253f3a5bb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353b97e-ede1-408d-9fce-33a744d5dc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db83e357-66c8-4331-97d6-5092ca5920dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057de0d7-60cf-4b34-8930-5923ab637c4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d939372d-6c55-4c6c-ac71-d9f040a144fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0441c748-e707-4cb0-ac3e-0d25f2f294ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef8622f-45da-43c7-ad53-91537d3181d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf25ac7-ec48-4a64-986f-f70432effd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24284df-520f-46e1-ac2b-405694b7b70a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6f7a0d-9008-4aae-b33e-01d258ed23a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24352691-6c5f-4eed-a747-f93c744ea1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfcac31-d75e-4646-a3c9-e10ac30c8c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b984623c-b7ee-48c3-affb-89b3d2e82f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2724d7-a03b-4d64-b3db-8be84ba70481",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ab9d56-9ea8-432f-873c-03e7a2d8cd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe5592a-db81-4c10-8dc4-286c12f7f688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56c0d3b-9969-487b-8947-03bed991945d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284bb1c2-01c7-475e-84aa-38ce1cdce589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6639a2-74cd-4ed1-9254-d5ed558e204c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59165dff-c284-45a1-a0ed-bcdea3d6a76c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757ee868-4db6-4eca-b340-d8b944345f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c48f4b-142d-461c-9dd6-46fbbf0013e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07df30e4-390a-4a8e-a2e5-3dd499333bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5467aed7-d85c-4171-aed9-0443a15737db",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4f9d51-5b7c-4cd8-a65d-a1afabd1b5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3196e117-75af-40f2-8beb-56635b9942fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9fb25c-dbbc-4cca-8a71-52e6cbfd62af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7205b3-1852-479f-aa6e-6c130279415d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12231b9a-102a-4f37-b7dc-5aaeddc1b3a5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4156d7-86b7-40a6-83d6-555dc3fe353f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "713af4ad-a6cd-4b9a-8835-cf718a5f0b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e32737-3cf0-46b4-b67b-5cb72aff4f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d290ed-0a79-4412-9ad3-936a01a970be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4879fb8b-811e-49fb-8bec-8952c727b5b3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7053a-db0c-4584-9d09-14c02da651e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c988da-999d-4093-afd3-599447b39072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b61c7da-efeb-4e9a-aa5d-e448efd8d4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca3f459-3722-4067-a161-90244072709e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c38895-2f45-433f-8d08-d989da780d98",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3f1162-aec6-4e1b-8680-2751fe7c9352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78365f4c-4019-4340-9d24-dd2adc3d0b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82395dc8-ef38-4301-9507-bca3c26e35a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e62d85-0c62-42b2-ba79-3d72c3a5dde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7df0d-a9f1-4b9d-a728-6eb3c3fbaef1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab92b7-1f00-4b75-8825-d069dd7d0d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77885b98-b486-46da-978b-863cd8acf3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9fbc7a-0867-4352-872f-ac64383280d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cfd06c-b244-456c-b930-d0e766a53299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb54134c-15c7-43f8-aea2-4b20d99f0010",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719c2a4e-fc98-4825-b843-944414ec2687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970152e1-40c2-4d6a-85e4-a76cfa0e21dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009ba290-fc61-4bee-b7a5-157ed64d4f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922795e2-5932-413e-94bd-90b8a786fd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bd5782-ac07-4f78-b4d5-31f5e78b17a2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aba7ed-a99f-4d15-9ab1-bbd31469eaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b59815-a2e8-4d37-869f-eacd5dc7f357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686d57ab-a5b3-4229-aea7-19a514ae9cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143e908f-47cf-4ef5-a17b-05a376ba65f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9705fc1c-e418-4ce3-82d1-c33849f292c0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8572c5-1abe-4ed6-9715-007278639519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197ca53f-0297-4dea-878e-8284ff9df1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c6b4c-3ba6-433c-88c8-091ff537ca48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efdf230-73ce-412c-b5c2-36cb3d6916af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8047878-b70e-4dee-a5c0-6ace132eaed1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad2cc48-6d98-430a-879c-aa18032a7bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f4a9a7-7f8f-49c3-bbd8-3edcc99b0555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0fe7a6-5db6-417e-a435-5d958a1a8a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a630b784-e7b9-45cd-a4c2-8504cb6270e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdd0f99-210a-4fed-8a54-46b2a7d74449",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced07206-30ac-43ff-b0b5-71f920e76921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0d481a-2b6f-4600-844b-23228f708ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c9ec05-2e69-426f-ac45-c159b2785bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44dd8d6-d8e0-43b8-8900-625777b62afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa83346-f4e1-4c02-b933-213bd261a597",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2992cb-a573-4514-a47f-26dac756a108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ddb13c-23d2-476a-9232-f5fe2693c295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2155aa-3987-407d-b950-140dca41fac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db4071e-13b8-4dc2-8072-31cfeb6af430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11abb7-4a29-4901-8bc0-6bccfd4bee9c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f1be5b-2a55-4d50-a534-670efe201c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5b4ac0-321f-4e38-8450-e49a982fe560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e085d5c4-eb17-4398-b816-9b1ce06fb205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446fd559-f671-48fc-86b4-7b7701c0cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c2986e-98b0-45b1-ad43-525e1049408b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65052d38-f8f6-433c-aea3-8572044b1dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc654414-6bc8-4e71-a85f-e71e7c1f8c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdb22fc-b47f-4c1d-a44e-451529aaa8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad985c3d-802e-4da6-9585-352007f9a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93eb5b4-c64c-4da6-9546-362948265eac",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0a68be-3012-42b9-b4f3-6ea2a8cf63f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cd2b4f-4fde-42f6-9c48-3b6dfde95c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be0170-559f-4ff9-a17d-197adf7fc6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a469f-f431-4a73-a5a4-7794718a1a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1080f5-1391-41c2-acba-cada9fb348a9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0f0cf7-4648-4fbf-aa7c-60f846eced30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372ec75c-42e7-4f4e-8990-cdfd782e217e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218e7154-bc81-415a-a123-9ebb0d3231a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef2aff3-129b-4b5b-8d8b-2f60d9bcb015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b9697e-054a-409b-afcb-f03e7d98e022",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d512def8-ab20-4156-9ada-975936a7d198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893d9e37-fa1e-46b9-be7a-d6db887d0d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cd494f-c39f-4b8b-ab38-6a16e6bbabb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89321d8-588a-42e0-91f9-70df185a0710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef66d4d9-e8c5-413f-8796-98ae558469ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7517ca-6dcf-47bc-ba4a-1d48e70e12bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbd8332-67ff-4cdb-9acd-34a7729fc60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f91ac9-9244-409f-8b04-8d2867f75a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f330d2-e9c4-4da0-bbc7-573d2365a62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ac0325-05f1-458b-aa56-f4943f6067dd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc09b29-d00e-4185-8310-366dd6d3afb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55255fa-2eec-468c-81fc-616b59e4c821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4028c29e-80b8-42f3-b864-7eb36422dc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efc5b35-881b-454d-9984-44d983759673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aa842b-ab4e-40ae-91c4-d0919326e8ef",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce15fc-4053-4bc7-9cdd-529b59357860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25172172-8530-4cb1-925b-0caf0b104ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f586f14f-1811-4ac6-9541-10d0caa100f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5439dc22-653a-4427-b993-22ed410dc621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da45c464-bbae-44c0-ab13-5d20bed00668",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0531a2-bb0c-44df-8fbe-35915e1218e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a46c68-d82b-4ac0-8cab-25e239e6d5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fceedb3-543a-4658-a434-42dbce6dbc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda29824-0135-4d50-a0d2-df36068fd042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aa67ab-b7dc-4c08-a558-725afe2feab5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6656ad7c-380d-46ce-91f4-2f61a22c1f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdddad0e-e9e3-4d1d-897d-ea35f406759e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf4657-71eb-4a15-9311-074812de7ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31de566c-b519-4328-94e7-722b1f858421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8e8697-acae-4fbe-817b-705785458604",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b5ff28-e8d5-435e-81c4-d0eb2f08c7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6deea6d-46a8-4d83-b98b-f2be40b30724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4221b5e-2b2a-4262-aa42-c0449480c19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acf220f-ecac-4296-abda-726a291b6f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd175a1-4ff0-4fef-a002-bc1bb0127c69",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d46054-6896-4b2c-b4c7-640e48140d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7c4c5a-6528-401c-90cb-656247d8512a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cceb664-bcb8-4013-bd9c-9de599d837c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b7b882-3efa-43e8-8d2d-666e2f6ebf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708c962d-57d5-4441-8894-803401c6e522",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47036830-1262-4956-99e4-2a0225d530e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8efe617-198e-40e4-97c5-7ef85d3079f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f586f61-f771-47aa-8795-548dc309a40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143740c9-1e31-49e7-9695-c77c62f0da7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db40898-6584-404a-b752-2e3507bbd765",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2206b0e5-e54b-4678-b832-a62df4ada05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c69f5a-0f19-4662-9841-bd674e438149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d54bab-5ef2-46da-9380-bc95a21fd0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517802f2-c8f6-4cfc-b1b9-4196c77137ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcc8e1f-bea0-4b36-b296-afde7ea12075",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b712f0c-268c-4d32-bdd7-88de63ddd672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b135e40d-41e1-46a5-8890-5a17935a61cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dc4296-f069-47ab-813d-b9f009d29be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2320c9db-9a3b-462b-9a29-e1d35186afd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc29335-4cd4-4f0b-bc66-dc1910a858ca",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a79ee7b-d130-4e0b-af80-1ad5e66fe7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c92d5b-290d-4173-bff9-e4e525947c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c9e74b-0852-400e-8ebf-66a6cc27cf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ef04f3-abb2-43ab-9655-7dbae8bb777d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a438e02-ffc0-4815-91a4-cc09a0d52564",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dfec14-6140-4485-ac63-dda8e66c6d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6179fc-7724-416c-9e6b-9008ec48328c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1bc5d8-a7bd-4fe7-a963-ef1b226c8733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b898845-84be-44eb-8e17-23f9f11797bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51899c-ed13-4991-8a47-6d71087a3f31",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeaa574c-668c-411e-a41b-b139c29ded8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4099f89f-ff1b-4a77-8c65-20aa8d4c1b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd5f27f-e7f5-4edb-9c27-dbf4fc804c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c00d279-8b37-47cc-a1a3-5d7d2e418c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a84cfec-35b9-41d3-88f1-c85297450b37",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9147f594-e132-41e0-b70b-f91887595d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a546c97-f693-4208-8a2a-e55c6ee983f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccddbcc-0b5b-4e8e-9e7d-fccc1daeeb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711077cc-adc6-4c6b-8592-e4c8f1858379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3e9eac-11dd-4aa8-8144-129500c263a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16439349-6cc5-427f-88ab-682edb386d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3651a402-aa37-43b5-8339-d984d7c42a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8e2632-4d40-4b14-ac8f-8e25229dbb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492ae015-67d3-4034-81ff-657b85e1ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea0abdf-bf98-4b40-b058-33813d6b6803",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f86829b-aac1-4dc6-8629-46f34a82a37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f22127-9907-4692-94e0-4bf461b54d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33374523-69fa-4d37-aa8b-0a2a43aa0b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5413ef80-d927-4e2a-aa9a-3220ef586063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b458a848-4415-4cf2-9dcf-c4240b333f39",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6b96a3-6c32-4798-9557-e1502293913a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc55df3b-4f9f-4139-87a7-b707a3a5116d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04d4528-6892-4c5c-aa3c-7fe22fb159dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d298f4f1-497d-41fc-ba56-821af5db23db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba088bc-f4e8-48b0-be1f-62290549e9c4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb79cdf1-eeae-42bb-990d-389f6dc79412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054fed38-57f9-4011-a39c-4a66314979d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e65396-463d-4248-ab46-0de15c91cc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae77aa4-c503-4763-ae41-4884f698fb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2133848f-bdfe-423c-89f8-a1428c7c23fd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa750ea-cea3-4449-87b4-b1741c3e5e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e001b5cb-dee1-45ca-88ae-30f5eaa11839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b8b30c-4cb7-4055-826f-110640369d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ebafc4-3fd9-4b1e-9b6e-c86fea8f460a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ad46ee-c382-4b4b-919e-04bf7978cb7e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c8b19e-910c-438d-ab35-3e2c7f04791e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a5eb40-2b0f-4310-80f4-f5a5c74b232b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbbccf9-c6e7-4f51-83f6-9b652e6bd720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3895c9b9-8ae7-4106-ac9b-1e47e83940d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8e950b-54a4-429f-a55b-d65690ad2f53",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c8baf7-32c7-4c91-bc58-01791a1d8cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3386bd0-34cf-466a-813d-46dee47bae22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdc59f6-1aab-4a5a-8b39-7f8a793f5976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35ae0b5-cf97-4a44-b264-742cd7a0860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8e9d72-3976-4c81-b095-409e3fa1789b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1843ae3-4586-4e9a-8ff8-536024718175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f1e9bd-ba26-439a-9348-da31262d4aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4108f5-6424-4feb-aa74-bc50e2b3e1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d96ae05-50a0-4b72-8376-af7d9a5be4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c965cdf6-b2c7-4dd6-a662-0c9ccbd65c3e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae7f18b-e31b-4cdb-9dde-4895f2045972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f10fe3-de05-43ce-a777-ba15548c92e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d9c527-853e-4686-b7db-5cc94f970e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3708e118-5b5d-401f-ab85-372a161762ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede049d2-c723-49b4-ba60-353267f48a74",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6c137a-7cf8-41cd-ad72-2a46009bdec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d964273b-f4f6-40f8-b592-e4accb39e4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3fdd49-a94a-4c2e-9f6c-8f92d292936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668fa3f5-922e-463a-9899-0a2e468946dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14550cb6-d54c-44d7-8fa1-113bd4186286",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c14ce-147e-402f-ba19-6b2ccbc36eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9729e39-d6d9-4ce9-90b5-9138ac36aec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c70e6b1-c107-4948-b8a6-26a70960a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dc9d08-9fc6-4c6e-8774-6d47e0b9f5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05dc943-eaed-4ce6-95e9-ee17f376e18d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0965f9-bd9e-4eb6-aa01-a984dd97ba77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d9beb8-f9e4-4065-afc5-1a54fe23431c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86020ed-ce39-4cbc-b3a2-2347ef73cdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d232c0-bf8a-4c7d-9e1e-dcd0710de7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b56b29-dcee-4aa7-9c91-49fe8f963f76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd5e4ee-608b-441e-b2ae-47dbb62bebe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e57e57ee-3116-4e83-a157-6e8e3093a5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e994be4-61d9-45d0-9d60-84dfd68fafe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c08128-0118-421c-b1ed-f2dec60eac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c1c5ce-680e-423c-b7e8-7832b0987e76",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c728fe-802e-4f62-bb2c-16fde3043bb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfc41f4-5ea2-45cb-a387-8b9656c7ed49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345b2cd2-1f91-4055-91ff-44b2ea118d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a520e3b3-6c1b-4cb0-aff1-882ad70c117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49df8c30-3ef7-4003-ab9a-cafeeb038be7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7130f8-e322-48d0-89d2-358ddd2434d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61444ac9-d03f-4e8a-b0dc-253c0c6c38f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37730fb2-5a16-4c11-bfa8-b33157b3f848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b9566e-6ea0-40b1-bd9e-b903f2e0e8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b74118-072f-4c3f-93e8-56cd2f892e2e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c23464-889b-430a-ac2f-4ecae3f5eaf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99657526-44ef-4c85-bd97-54c9a02bc541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bd963f-e025-40f4-b925-cfa4c4d8e01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9108f908-44b1-466c-8efa-03c0e2248edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66827d99-4a0d-43c1-8f27-d56fd5808332",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd03b401-6200-493d-a9cd-215c2828bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386e7d21-d8cc-426f-bf55-6dd9663e0d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f97d213-5db4-4777-af24-7194daf12423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d871e50c-5dae-4f48-832e-a8d5b203f801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f497e17-ceb6-4ffa-ab57-d571e2f47121",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e9e17-91af-422e-94a5-626d86b5ed72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298b5d00-0218-4af7-b265-d6f0cfb4e30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27493fac-8ae6-4591-901f-e91631bd3717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2061bd2-bae4-420f-a02a-42ff91d8db79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a051c13-d3da-46ab-be4c-901df3bea644",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a3c49-f3a7-469d-8f8b-5033b4ef237c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61cce333-d761-4bf9-98e5-098bb4073596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b407a40e-6276-4288-8b21-aed63a8bfca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6092fe3-06c1-4b21-bc03-a25198377283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976ba96a-7d78-4b66-a053-e7456b9f3374",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dffb44-841c-409c-b6e1-9381dda2beab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c13a6a-ee8a-46ea-a476-56aff489671a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776cfee8-cc39-48f9-9a0f-decb7b6ee084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac67dbe1-188d-41c0-8de5-cf8e4b6402d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b93d70-4aaa-4ddb-ac01-44bb6a1ff8a2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321ebfa-e3ea-4012-9163-26149a0cddbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b457cecb-4f77-4946-ac54-7235fcfde4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b078316-1f49-4f15-803b-f2928cc45f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2918ac69-2f53-4653-b41e-a6a77556abd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d13a45b-cfed-4ea0-af8c-1ec3b9fec78f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567f3c1b-c393-473e-a595-5a121abfaa03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d35c08a-e793-478a-85cb-82eacdd7a5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4f464e-d600-48a2-8391-a6f1ad487fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e50f2a6-cc0d-4b67-9a52-a944ee8714ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03729bd5-20a3-4bf5-9edb-541ce4ae9850",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b76cd5e-aefa-42ea-9ec7-8e2a8d69ef53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c58be33d-0f18-4cab-b7f2-80d53ffbf33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85738339-4482-4cc9-ae69-3b1559d8fe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a942d8ec-2e19-40b6-bf17-702d8988ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f36324b-53d7-4381-83c7-cb8346535375",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9ec01e-405b-43cd-a24b-7cf673a400d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac53893-24d5-4961-83f2-6698881a0fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111c8e0f-2c58-4ea7-9bdb-a1f1698ab6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd94c716-7cc8-4654-9930-b5afa7ebec82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa7ef99-1089-4b00-ae5f-6d85a33103fc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc7670-6086-47a3-9256-44af1eec173c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20892326-c443-4c72-8200-f42559e89d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21833c91-c4c2-4af1-ae6d-0c24f123f337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb0a521-e630-4986-b408-c941c2881e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf61bf83-8099-4bf7-be7f-f7a04a5f95e9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0057c687-bcca-4ff3-aef9-0a38228ff1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af239af-3337-468c-9cfd-9e66ec1f1014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686aa9da-02a9-493a-afd9-9ebb17aad14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dd0fd0-c975-4639-a208-c374cf9b7812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7d6a89-dfc1-4ff3-80b0-c2ef3b8ead87",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5489b3f-0773-4666-ac80-a459badac1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0668a95-2136-4619-9992-1c5e45a2510a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f2faca-d6d4-4ee9-939c-a2284f04ed5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fa1d47-9aa2-4a6c-8fa8-6e93137239b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e94ede6-8474-488f-80f1-9da37f3fa28e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082901e2-e0b2-4676-a335-b9b10691ce73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6dae778-18db-43d6-a065-ce965ffded50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1f09c4-26cc-4934-9a05-165d3d1543d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673aa647-becb-4353-a925-4942cc14f809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a68c0-0f8d-4b25-a06a-c06535c79a58",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7c9d2b-ad64-45c9-a29d-34d226e6a869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673b367d-f9e7-4e30-9704-291e25d63a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c80211b-dbfc-4867-8ad3-51b4ca27cec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d05490-59fb-46a3-a7ec-0778d00c63b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff7792-40ef-4bcf-a34a-430f17e61085",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d271fc-533c-48cf-b9f3-725e406081fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c80ada-9ec1-4776-81a0-b7fa278ca676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b61b25-cb02-432a-9778-be03624eecf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6f3132-17de-4d33-96cf-ef840b4076e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205ad3a2-48b6-4e71-93b4-47798548a1dd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f7e995-38ae-41c5-a03d-1f662e849c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1fa01ae-3463-4372-abeb-6482ec7d714d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a44911-f7cd-484a-9952-52bff1f45a7f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce10040-991d-42b8-89a8-7d158f33cd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87b4b12-9119-4008-9f8c-5efd5c869bfb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03874fa1-8e1c-4643-9c06-3fb328667076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9185e97-03d1-4bd5-b5a5-28077c1bcedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1140f39e-7e36-4e3c-b86c-7709246857d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff27ecaa-5761-4102-837d-c3b630ab74f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5b7eb8-1004-4004-8796-122d6fe8bbd5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a450d8-2f69-4c97-9f5b-2f0261e17ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27f5b7d-a3cf-44f1-b7b8-6e91f912311e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80feb1d-91f6-4223-8785-3ae5d3339e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d321a54-9421-45d4-9ae0-77afda8709b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce82b94a-01de-47dd-aadb-13f2e2ff4c95",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f3efd9-6a8f-4aef-9f18-fcf7ad2f4906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d421dd56-bc7a-4f4a-b215-949721018f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8011e132-d50e-4569-b626-2b25b8a88832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66922986-2d3a-4a8f-8586-e3e36368fa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2889603-041e-4ea4-b8fd-c53fabd6155e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48ca0c-7bc9-488d-a1b6-8b9dc6826adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1640f716-a5b0-4293-8f55-e5a71f87948f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65db53fe-2be9-4724-af66-d7970389867d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e942cd-3c04-47d1-9592-695553e18cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8e99b-81b5-4f3f-8dcf-8e168926ba1f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85627655-9e42-4551-8133-ece2e52a1ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d788298e-b98a-4556-9df7-bf2b11ee6e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0dc2e-928e-497b-8bc9-d11148b58113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cabc7a1-2c17-462c-bc15-944148422b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea31830-dfc9-40a5-8538-305c3c1b4320",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03705151-be79-48e7-8ea9-ae6a842b5944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc19062-96a9-4984-902c-a4dd82ac7c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc63c81c-1a83-459a-9014-640a546b4464",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c341eb-fe0a-48de-841c-922b90aaa03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644e58b1-80f3-44ee-8ea8-5d9178a8ce5b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d8cb6c-786c-4904-bfea-90628f5e2e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fa65ee-e675-48b7-a7fa-837ee1768164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8419d2-ee45-4ffd-bdf8-4c77cf2d7797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e240038-4c32-4791-86eb-4426d27bab12"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4a7d381-4f9c-4f8f-8751-2664955eedb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53ec3cc9-e93f-4f0b-a421-b5a4a7443230"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaf6fd5b-fdcf-45e1-b10f-e9e252cea7b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4e98133-7668-425d-bf36-d5d4a213a1db"
                    }
                  }
                ]
              },
              {
                "id": "a3ebdf73-097b-4b7b-9ded-f867f64140ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7acfae8-79a4-48f6-87bb-53ff585dc64d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f0562e-99ed-417e-b7a4-af243e1f2051",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "07b5914f-2991-43bc-b29e-9de6dae56442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1970c0e5-0b1f-419f-a783-6b94c66ae857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c057bc66-f384-40c2-a8ee-286910891346"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46ac332c-0cb3-4e82-b479-024182e3fa85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc34a03f-361d-46fe-a710-07b231522400"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c36de07-859d-48f1-81ee-121398c1b5c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dcb40fe-fb5a-4bdf-af7e-e095abe4cb69"
                    }
                  }
                ]
              },
              {
                "id": "4c8f8756-b5c6-49b9-bc93-3e3969a70817",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "87dff0c2-9f9b-41fc-a8cc-78882f8e928f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b101e542-238c-4dcc-ae7b-50606ce177ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e879040e-7d55-46ef-b394-da28b98918c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f92b17-aad8-436e-a990-455b7be10286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaf0ed7-ed93-4939-b661-098b6f61ecb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a51e9028-99f3-4798-bc3a-f173a562368c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4c96c55-2ce4-4a38-9227-6de58bce7735",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4da312a-bb63-4df7-9420-10875836260e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00cfc474-25b7-40b7-9258-1aef80086a2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aef2829-c71b-4bcb-9fc4-8ec5a55539f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff4c0c7e-983e-4fa0-a31f-61bd2eb4ffb3"
                    }
                  }
                ]
              },
              {
                "id": "f9c6e207-5f42-4121-8e29-7a29d03b64d8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da1fd5ad-598a-4187-b438-8feb5ee12067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf0a6d8c-403b-498b-9cbf-bfd6c4a3512d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e77ff89a-d918-4fc7-bd57-f2040dc5eb0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6f3dddc-b06a-4382-9016-1870797cc9ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a6d1d40-d5e8-407c-a7dc-0c1c8c8c76ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "97af08e6-c5c0-4950-869b-0f93a27f8d0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "791b0d75-6f1f-49af-8bca-04bceb53cb49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc28395f-7214-4fe5-bf7e-438eef1d9755"
            }
          }
        ]
      },
      {
        "id": "c94c3168-b8ce-4dcd-b4da-5c30a1557393",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2c16e303-bf8e-4414-988b-b380b5367267",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42532f11-3ea5-49a5-b424-89ac61e61941",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26e9e0b8-d155-46ed-bf3f-a931e5e8be75",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d37b06-d177-456d-ad0a-ef4cc68959d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc6cdb5b-7e1e-4b13-bb0f-41391215b7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2592b242-6916-4372-a6e4-361ce1088f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "840cfe09-7585-4a88-acfb-814884d902c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5567e388-a1d2-453b-8d37-bcf560360a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2478a68f-e3c3-4c67-8d7c-4921e98d16cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d32aac3-a65e-436e-bb59-aaf2e5fc8011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f996fdc4-5143-4868-86a2-b011012bbfc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3722605-b8c5-486b-8a85-c818e87c4e9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e36141b-8e92-43f3-b384-cbf6ec4ce979"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7e1b7da-6b30-4c05-9665-f69685212f30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "130f2b1e-9a63-4559-8bd7-cbda066d52fa"
            }
          }
        ]
      },
      {
        "id": "ecc5d794-6841-447d-ab84-bdea9ec212b2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "386f4935-76c0-4689-9e5b-ede0989e6db1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2dcd3f9f-eb74-467d-a61b-a35feb6fa3b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e62c2200-e347-4e5b-9f6d-b6245e955998",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdecafc0-d732-44aa-8c70-bd2b70a40e4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce8c928-32ea-4df0-86cd-2e5ef6227f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da82788d-22a7-4448-84c0-272e1b619670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9a34c0d-f768-49c7-90de-d240412a4032"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "752e56b9-68c4-4963-b7aa-255c807e36a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54659dd2-609f-4c15-96fa-28e1516f0be5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc15a72c-c615-4b48-8daa-266bc2083cb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3ae8b68-d391-4d26-9fe4-bd0c1dc7e9cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ed3f126-1c36-4f3f-a277-8e6137e66108",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29908110-e3c9-4d05-a9fe-cac104c389c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a51ab0bd-ad73-4c38-8dd7-d0aa2e762c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c971ebf7-d727-4d29-bc41-ee963c8a83fe"
            }
          }
        ]
      },
      {
        "id": "a62bceeb-855c-4ac6-939a-ef6e97d5e351",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a2b7eb1e-4c2d-41f1-980f-49d95fdbe27e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19c532bd-f2ae-4bdf-9e15-ae89d86f6466",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6a19937-95f7-42b1-aeb2-51ee3b8af8f7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335ede3-c3c2-454e-aec5-4c25a01695a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3e59d78-7ffd-4632-ba45-4d51c08dae08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56373c09-3e42-46ed-9796-c3a5877154b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd4758b1-f1f1-4dea-9c1a-ff1f5c3a3fb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f74fb1-d765-4d87-86db-e4c5c801bcd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d0160ab-509d-4a6d-9e91-69addc40c61e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd32fd39-42f4-4db7-be37-419dcbeffeaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "042a7557-948d-4b82-bc51-99009d38cd8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d775ea30-1ba2-457d-b819-bb96ff238e1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8806590d-25ce-42e5-af77-13296e953019"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa44309e-1274-4da9-977c-de355121043b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5902dfb4-88f5-477d-9b5f-65f3fd0fef94"
            }
          }
        ]
      },
      {
        "id": "752f6a9a-67bf-4a74-b869-15724b9f43f1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6cdab26-80ca-4a80-ac6d-356a229d347b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8146ef1-008d-4fed-aef4-2091195313c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6608c11a-08a0-40d6-b32b-502cb4706b0b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a101970-3d8c-4352-99f3-29024d1d9107",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4fb4278-0525-4b2f-85ac-4e04131590d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 60.72222222222219,
      "responseMin": 21,
      "responseMax": 630,
      "responseSd": 41.11002250810966,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725929010121,
      "completed": 1725929033851
    },
    "executions": [
      {
        "id": "ba240ca6-4d66-4eaf-a5ee-3412533ff8bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "af1a196e-ec8b-4ad9-9127-5c475cb73441",
          "httpRequestId": "18730018-4cd8-4305-bb45-fdeec395c16e"
        },
        "item": {
          "id": "ba240ca6-4d66-4eaf-a5ee-3412533ff8bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "092a5140-beee-4025-8c93-52914b574c70",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "3328b01a-ce3f-499d-b4e6-c40af5f4f23d",
        "cursor": {
          "ref": "bfea76ad-d2e1-4f1f-bd63-19bebb7a0b4a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b776ec34-db26-4d6d-a41e-5a65fd653b9e"
        },
        "item": {
          "id": "3328b01a-ce3f-499d-b4e6-c40af5f4f23d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "63f86f41-7b66-4a2e-be6c-33d38142c4f7",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8a0533e0-8333-47e7-a7e2-3a280593dbfc",
        "cursor": {
          "ref": "87ab3d62-24e8-4163-9901-ac4860271a35",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4b6bc329-98b0-4cbd-8cea-1974c989f646"
        },
        "item": {
          "id": "8a0533e0-8333-47e7-a7e2-3a280593dbfc",
          "name": "did_json"
        },
        "response": {
          "id": "9ebd9526-e033-4b36-8ea2-6070f557ada2",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac95e2-0607-45c9-8ec8-7b82315a1a8d",
        "cursor": {
          "ref": "b8a086a2-210b-4c20-aafe-386cd55b772d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "901555b6-8fb0-4b91-bb91-ff54b98f0730"
        },
        "item": {
          "id": "f8ac95e2-0607-45c9-8ec8-7b82315a1a8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5baf706-7258-4f53-be5e-4fc6cc1303b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac95e2-0607-45c9-8ec8-7b82315a1a8d",
        "cursor": {
          "ref": "b8a086a2-210b-4c20-aafe-386cd55b772d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "901555b6-8fb0-4b91-bb91-ff54b98f0730"
        },
        "item": {
          "id": "f8ac95e2-0607-45c9-8ec8-7b82315a1a8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "d5baf706-7258-4f53-be5e-4fc6cc1303b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c42e4ce-5fee-47c1-b621-2c8e7e3f4bc5",
        "cursor": {
          "ref": "066bf53f-d928-46ce-9d79-222ca4cf219f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1a99f080-b64b-4049-8ded-2552c83df607"
        },
        "item": {
          "id": "4c42e4ce-5fee-47c1-b621-2c8e7e3f4bc5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f613525-522a-4cb3-a23c-92cb6694b325",
          "status": "Not Found",
          "code": 404,
          "responseTime": 188,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97a4927-ff84-4a97-8c0d-6d0a6099a3fa",
        "cursor": {
          "ref": "fb385dbd-867e-4857-ba9e-3cc8e2d8d03a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d626ed4-e6e9-4ef0-977c-3c21161db4a3"
        },
        "item": {
          "id": "a97a4927-ff84-4a97-8c0d-6d0a6099a3fa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38bb4308-a473-4002-b86d-b3c0e564d253",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d1b4c5-a706-40fd-bf39-1fb7b43d8b88",
        "cursor": {
          "ref": "46b6c9a3-cf10-4f82-8bc2-f102e913bbb8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0dcdf75-ab3e-48d4-9f44-961028bc0082"
        },
        "item": {
          "id": "e1d1b4c5-a706-40fd-bf39-1fb7b43d8b88",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3476ee49-d2d4-4dec-a3bd-86c09d086b2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da79497-d9b6-4c80-b5f6-8413cced23f6",
        "cursor": {
          "ref": "88f04998-165d-4408-a714-a75ab9ab296d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4eacb85-6e2b-4670-b261-c3ccc8bc03bc"
        },
        "item": {
          "id": "5da79497-d9b6-4c80-b5f6-8413cced23f6",
          "name": "identifiers"
        },
        "response": {
          "id": "419265d1-d534-4d13-afa6-c3724145fec1",
          "status": "OK",
          "code": 200,
          "responseTime": 128,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2ca5d5-8d6c-4f43-8b09-169ba0b50fdd",
        "cursor": {
          "ref": "9a7b5b0a-d394-4d49-b819-c254cb47f481",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b5ed2b3a-8ee2-49f5-9357-13bf18944ec8"
        },
        "item": {
          "id": "ad2ca5d5-8d6c-4f43-8b09-169ba0b50fdd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "acb4bdb4-9f17-42f1-be02-20f405b07bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bc2624-ce1b-4bdc-bff0-c6931bee0172",
        "cursor": {
          "ref": "cc246cff-cd78-4c1e-a018-d3d83bc9a970",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bdcc9490-fcb9-490a-9cf3-cfc2093fd7fc"
        },
        "item": {
          "id": "86bc2624-ce1b-4bdc-bff0-c6931bee0172",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8604a9a2-0538-4ca2-8a56-c6d1983b1442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cca6077-3f12-4203-bd1e-2aed9f1e643b",
        "cursor": {
          "ref": "2645fedd-5839-4072-a387-98ef2de8308e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a05b7ec3-9d97-4d84-8864-d11d8459a953"
        },
        "item": {
          "id": "2cca6077-3f12-4203-bd1e-2aed9f1e643b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "89aa8d6c-cb93-41d0-b646-c1afe73d25e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbac40-7920-4904-99b1-647c4282ebb9",
        "cursor": {
          "ref": "c837ee2e-91b8-45b1-aad8-9687bd0789d1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab7ff3b7-682a-41d8-9277-af6af26ba12b"
        },
        "item": {
          "id": "addbac40-7920-4904-99b1-647c4282ebb9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0c5b0ff5-e339-474a-a01f-56e6206c7525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef48aab9-2371-4eff-9d99-2e89d195217a",
        "cursor": {
          "ref": "6d176faf-f794-45a8-ad1c-238ed6da923b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "781c7243-d160-4498-9b9f-8db2dc2c93f2"
        },
        "item": {
          "id": "ef48aab9-2371-4eff-9d99-2e89d195217a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5c0d3895-e794-4a2a-8e75-85aa95f43dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a523666c-c87f-4231-b51a-ebdb4fd0bbdc",
        "cursor": {
          "ref": "d1f48356-c2a0-4eb0-a9c6-6e3061a83ef9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ddce1802-ddb7-40b0-ab93-55c48dc5bb7c"
        },
        "item": {
          "id": "a523666c-c87f-4231-b51a-ebdb4fd0bbdc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "68506c9f-06a3-464a-8564-2e2ac82e3b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d883645f-5a7e-4967-a4ee-c0f656c70675",
        "cursor": {
          "ref": "c52d1414-6f47-4dcf-98c3-41cdfc9fa3b5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f14fd27c-e760-4798-a0b0-bfa169eec593"
        },
        "item": {
          "id": "d883645f-5a7e-4967-a4ee-c0f656c70675",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "872a7d43-de35-4663-93a0-4790247993dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4f322-9492-4825-af12-766748f7b371",
        "cursor": {
          "ref": "1e5ed1db-6200-435a-aedb-13578e6b2517",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f548a7c-9cf8-4503-921e-a20c78722c99"
        },
        "item": {
          "id": "6ad4f322-9492-4825-af12-766748f7b371",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "17a86c17-55c1-4942-a5c6-e493610857fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066fdd71-3f5e-4392-9977-d51f79152556",
        "cursor": {
          "ref": "6083c6ce-2b61-487e-acf9-79ed45b683bc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a65fc54b-3ffe-454e-bac1-5adb17947c98"
        },
        "item": {
          "id": "066fdd71-3f5e-4392-9977-d51f79152556",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4ecd3ed4-a793-4fce-abba-6200be3418af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e420cd99-c4f0-484f-9857-656becf6d18a",
        "cursor": {
          "ref": "216d27f2-fe6d-4bb8-86c2-ee0437ca9e42",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "41551a8d-a3ea-4d25-9745-ce459f1434ca"
        },
        "item": {
          "id": "e420cd99-c4f0-484f-9857-656becf6d18a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "89edd7a8-3aad-4da7-a418-e5a76e014111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6154eb-7c95-4fb8-a0e0-c43d98c16bb6",
        "cursor": {
          "ref": "28270a55-db34-459c-8b9f-4410a4461048",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "984f8a2a-8964-4eb3-a222-48de11ae0292"
        },
        "item": {
          "id": "8f6154eb-7c95-4fb8-a0e0-c43d98c16bb6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d0f48ed6-c74d-415e-b65f-5b28a346b0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd3aa0-ff02-46b5-b62b-a26019698691",
        "cursor": {
          "ref": "5ace71db-b42f-4ac1-8159-848fcf64ec2f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ce179a66-1f7e-4df3-8481-10759c7421aa"
        },
        "item": {
          "id": "8bcd3aa0-ff02-46b5-b62b-a26019698691",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "02372229-d57c-4d32-b5ab-d081b6fe325a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8740e9b3-63e4-4c51-9daf-adf9c80b3a99",
        "cursor": {
          "ref": "f572c74a-53c9-44aa-b73e-6b052f36d6d9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bc4b187d-7fc1-4995-876a-2636c4241e45"
        },
        "item": {
          "id": "8740e9b3-63e4-4c51-9daf-adf9c80b3a99",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "526827d0-3d5e-449b-a188-d95e7c129d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d496cf-73b8-4309-8b5a-9fca15a7eef9",
        "cursor": {
          "ref": "63147471-5fe3-4904-92e1-ac27d5bf0cac",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ba5b46e-0b27-423d-86f3-47bba9725e99"
        },
        "item": {
          "id": "e8d496cf-73b8-4309-8b5a-9fca15a7eef9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58ff9550-58e3-4d85-bff2-b554e534bcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afb6f4b-c1b3-4f4b-944f-a8b994ed9f52",
        "cursor": {
          "ref": "9b3c68b1-9592-496b-a3ab-af4537d0b0ea",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "419c943e-a1b1-4fac-b173-82f37605ec92"
        },
        "item": {
          "id": "4afb6f4b-c1b3-4f4b-944f-a8b994ed9f52",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "af710740-c0dd-46e9-bc8d-9a2a9e41bafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a82a7e-a81f-45a9-a19c-d5a263470cc0",
        "cursor": {
          "ref": "a2f95a35-fd20-49c3-b9f6-73d60083eb4d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db81c3b3-e151-4831-a49b-96045ec406bb"
        },
        "item": {
          "id": "b4a82a7e-a81f-45a9-a19c-d5a263470cc0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "04c5aaaf-3bc9-48e1-a3b7-290b0e4ea5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd394420-7855-4d0f-b7fc-4a5929db16e0",
        "cursor": {
          "ref": "751830ee-d7a1-4346-807d-8368f45fad0d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "010b86e4-2dfc-4570-b244-96486d4219a7"
        },
        "item": {
          "id": "cd394420-7855-4d0f-b7fc-4a5929db16e0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "27745e6c-b839-497d-a2aa-a615cf5a1123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cade40-474f-4a42-98f1-699cc58bd18f",
        "cursor": {
          "ref": "e0d865e0-d53a-4c65-826a-f96a6002852e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9a39c391-b2ca-4c15-b02a-38385cae8d72"
        },
        "item": {
          "id": "32cade40-474f-4a42-98f1-699cc58bd18f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "44b71765-8215-4fdd-a225-8febd68c71c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dea837-d1a5-420e-9f43-45c02b5647bf",
        "cursor": {
          "ref": "b8c8a8be-556f-4c13-bfa9-bdba7e0e89e3",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "02001291-6d69-4fb8-bf8e-4b7530e47364"
        },
        "item": {
          "id": "99dea837-d1a5-420e-9f43-45c02b5647bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bca02914-7050-4d64-b0e5-05adcbdf787a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a019611-fdfc-4142-aa52-86ebffa33af4",
        "cursor": {
          "ref": "c0ad9bcf-fc01-4dcd-a268-7eb39464cecb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9d9c1fdd-192c-42d8-a568-03d78960e171"
        },
        "item": {
          "id": "4a019611-fdfc-4142-aa52-86ebffa33af4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c1f2e8b-f27f-4c40-9d6d-230a88daff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d359cffb-93d9-4fd2-a935-704b84838d7a",
        "cursor": {
          "ref": "831a2a7f-67f3-4bec-8248-ea9b51495ad2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "612d4db1-325d-4919-81f0-08298a7cbeea"
        },
        "item": {
          "id": "d359cffb-93d9-4fd2-a935-704b84838d7a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5b0a679a-2b70-4d34-9d67-5a1734c525e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435b2c33-87da-4397-83e0-9acd9342488c",
        "cursor": {
          "ref": "74014b58-ee71-4e00-995f-aee99f2b488b",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8bde770e-f74e-411f-a612-4dc30dbcc354"
        },
        "item": {
          "id": "435b2c33-87da-4397-83e0-9acd9342488c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "11f0e9cd-afe3-40a5-bb8f-40016568cdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e2950c-1d39-4954-af60-b3d83ac166ec",
        "cursor": {
          "ref": "315351d0-ecbc-4fe4-90cc-32c45981aa17",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "98cbb535-e4b6-44ed-bb6a-1a7ac6a8a32c"
        },
        "item": {
          "id": "c2e2950c-1d39-4954-af60-b3d83ac166ec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "48dc7a15-c291-4ae1-9b0a-0955eb76aabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528dd2a7-a789-4956-9eda-1fb1bfb15956",
        "cursor": {
          "ref": "b186a927-7aca-4d67-9911-ee37068a17ec",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "78b84291-f673-4974-bc82-6169bb2f7eaf"
        },
        "item": {
          "id": "528dd2a7-a789-4956-9eda-1fb1bfb15956",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7dfe49f1-9ca3-4ee2-8ef6-9768dde524c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616801a4-2936-42dd-a875-a04b8e21a9e2",
        "cursor": {
          "ref": "08d4ed59-4f68-4eb9-a7fc-6d4a4c05cafb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de8ad875-4457-439b-a4d6-d88e7757a8ba"
        },
        "item": {
          "id": "616801a4-2936-42dd-a875-a04b8e21a9e2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1b4c4173-5991-4942-b565-246e58481860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b425f0-74b6-4cf0-8598-7b7a13065bf8",
        "cursor": {
          "ref": "73a79873-2488-4935-b1b9-ed6a32ad86b3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f8c38fd-4ab5-4861-93f4-c4374da4af60"
        },
        "item": {
          "id": "27b425f0-74b6-4cf0-8598-7b7a13065bf8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ed7b7b96-c87c-4141-bc91-293d66027f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4229c061-39ca-492d-97d4-e1687ad708f4",
        "cursor": {
          "ref": "6baaad70-120b-4eb8-b31b-a12a66f7b910",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ad06c027-743b-4cc8-87fd-ec93e2a7d3d3"
        },
        "item": {
          "id": "4229c061-39ca-492d-97d4-e1687ad708f4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5461c1cb-2986-4ca7-881a-3200bb2e28b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2881a3-bcaa-4ca0-aabc-fce55bc12492",
        "cursor": {
          "ref": "55576c44-1d74-4684-a00e-afa0b555cb4a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2f2b3a6-fea0-46a7-8521-384869760d6e"
        },
        "item": {
          "id": "fd2881a3-bcaa-4ca0-aabc-fce55bc12492",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8783450-b971-47ed-9d68-b7de6b08a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a4ba2f-acb2-46f8-b378-358392224227",
        "cursor": {
          "ref": "d3f027e4-7f74-47ed-99ba-79fd03757eb8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3a55fc59-2664-4209-a374-6f3cfde9587c"
        },
        "item": {
          "id": "b9a4ba2f-acb2-46f8-b378-358392224227",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2fb3da52-6885-4493-bb8a-3abbdd2d4297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b260b3ee-c358-4105-b069-5ae3f38f05ed",
        "cursor": {
          "ref": "44ca263f-f10c-411a-a5f3-cde7428756b4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ff9769e0-3de9-48b0-bdb8-1055610395e5"
        },
        "item": {
          "id": "b260b3ee-c358-4105-b069-5ae3f38f05ed",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0aa0eb54-9af7-4bab-b6ce-2d58931bd6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46efda-b5f8-421b-a209-b20b7bd0769a",
        "cursor": {
          "ref": "2a0ed9ca-3747-413b-8c82-13d68fcd6f0d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e014096a-d3b0-477c-9202-a09a14e3138d"
        },
        "item": {
          "id": "ad46efda-b5f8-421b-a209-b20b7bd0769a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a6395233-d761-4031-8a8d-3550607ca023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a3fd12-c8f1-48b7-9bf2-649642a4de6e",
        "cursor": {
          "ref": "d13b2f91-d5be-40f4-baaf-d5c4e09107ce",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19f4b2ec-1fe0-4926-a767-9abccd0c2db9"
        },
        "item": {
          "id": "41a3fd12-c8f1-48b7-9bf2-649642a4de6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f80d314-1946-46a0-8af8-8cd84a52ad1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707326bc-9f2b-4c1b-9c5b-45bb043e3b42",
        "cursor": {
          "ref": "9a30b00e-c855-4165-a126-c52cf92c36c0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ed0661ae-0bf1-4f87-a237-a92a7d592e14"
        },
        "item": {
          "id": "707326bc-9f2b-4c1b-9c5b-45bb043e3b42",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9584b73f-4e7b-4ca2-92d5-17636bd3a737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4e8a01-b9d7-4614-af71-626f8e27ac8f",
        "cursor": {
          "ref": "6f3e2458-5b02-4eb9-b325-9e7d72344422",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2cfb31c8-5c73-4ea1-8a25-e3e0403331ec"
        },
        "item": {
          "id": "8f4e8a01-b9d7-4614-af71-626f8e27ac8f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "304663c9-0017-49d8-94bf-ffd1eea69832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6095c03-9526-4394-9ed7-b2d338ff7c04",
        "cursor": {
          "ref": "47b2904d-2190-4c99-a5f5-d9deeb50d3c0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4754ec77-4a21-4da3-badd-867bb482e65e"
        },
        "item": {
          "id": "d6095c03-9526-4394-9ed7-b2d338ff7c04",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0d5bfed1-d7d6-4e14-b7db-ab65c4db69de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25435da1-7a82-4b5d-8672-2cc456f3eb9e",
        "cursor": {
          "ref": "e7b32286-6bd9-48a2-9dd6-74686903953b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81d43848-cb27-4300-8ae6-6b75f0154393"
        },
        "item": {
          "id": "25435da1-7a82-4b5d-8672-2cc456f3eb9e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bd8de808-63a3-46d0-904f-a3b1ff8acc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c7b544-ecd2-45d3-a58a-c82b0dc5be92",
        "cursor": {
          "ref": "31e33d83-a3d8-45eb-86ed-a7f9b77d771a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d8c96723-8e8b-488e-baf4-fea8f32ecadd"
        },
        "item": {
          "id": "d8c7b544-ecd2-45d3-a58a-c82b0dc5be92",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d516c466-2aea-4c64-bd5c-f2c587797d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a3c67b-c2f1-4ef6-832d-bb57f4e0292d",
        "cursor": {
          "ref": "b43fdbce-176c-437a-8b04-34baba794c92",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "df0033c0-2306-483b-9dfc-9225d4c3abf6"
        },
        "item": {
          "id": "80a3c67b-c2f1-4ef6-832d-bb57f4e0292d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd37edee-c556-4ee4-9f22-5c1fcb8a152c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d9253-f9fe-4c90-a8a6-841f8b52da41",
        "cursor": {
          "ref": "caa29773-5d33-4307-bedd-a951da751713",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "123bbeb2-ffbb-4c89-a4a3-317c073aa37a"
        },
        "item": {
          "id": "0d1d9253-f9fe-4c90-a8a6-841f8b52da41",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cda053e7-f958-4f90-9ba1-1cc57460610e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12aec2f-a73a-4ac2-8bfe-6eeffa19110a",
        "cursor": {
          "ref": "6c34c1d2-7de9-49c0-a05c-07e590ea1db8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8753793e-b838-4c19-93cb-c7db1cb89ea2"
        },
        "item": {
          "id": "f12aec2f-a73a-4ac2-8bfe-6eeffa19110a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ef50ad2d-83bd-40fe-a37e-fc839831a557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80771a0d-733e-4c3f-a3cd-9dae829e52d1",
        "cursor": {
          "ref": "70451d9b-da89-4ff3-aba9-8e24ff39c317",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cc4e16de-e564-48a9-a63f-5697a04d1c00"
        },
        "item": {
          "id": "80771a0d-733e-4c3f-a3cd-9dae829e52d1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3951ed6d-a1bb-4f99-9958-82bd3ce432c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b5e737-b40e-4607-b927-eaee92ef99ad",
        "cursor": {
          "ref": "05badfa5-d561-41f0-8c25-fbd7ee43b487",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "960e0ed8-b044-42e1-8825-0c444f3b32ca"
        },
        "item": {
          "id": "29b5e737-b40e-4607-b927-eaee92ef99ad",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "df46247e-b27d-42cf-a397-30b38a6e5184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88cc46e-07cb-42af-beaf-e0c2792446b2",
        "cursor": {
          "ref": "66f2e30c-9112-4c4e-a884-45f7a87054aa",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb3eabd3-7da0-475a-b457-2b2a569b0ce0"
        },
        "item": {
          "id": "d88cc46e-07cb-42af-beaf-e0c2792446b2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a79e0c85-f339-41d3-bda1-a2978be67168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86372d7b-ca76-4d8e-ad94-70a38e8a09ec",
        "cursor": {
          "ref": "bd0e8106-818b-4222-9e3a-23f6d44d0242",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b0671352-a627-4310-ae19-c47b0889751c"
        },
        "item": {
          "id": "86372d7b-ca76-4d8e-ad94-70a38e8a09ec",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c2242e5a-7eaf-42bd-8a31-c14f48a5e0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5665ea-a266-4d56-88a5-acde3de23e88",
        "cursor": {
          "ref": "0069f46d-a6b8-4280-9eb2-28764fbdf08c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "09ad3a7f-9685-4735-85cd-a0e322bcf7b5"
        },
        "item": {
          "id": "be5665ea-a266-4d56-88a5-acde3de23e88",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1eed2cd-b596-4d83-b814-99a32af1e7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143b6813-3db9-4416-b63f-26985bd72310",
        "cursor": {
          "ref": "7134b6ec-5f0c-4760-ada5-02b81d7990c5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7f8a3f78-fb5d-4020-976f-212a2b1f7852"
        },
        "item": {
          "id": "143b6813-3db9-4416-b63f-26985bd72310",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "059a3a99-e66c-4035-9196-75ee234e523c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dd2ead-887a-4432-bb26-e1634c1df141",
        "cursor": {
          "ref": "32fce28a-419d-4aae-93cf-573e9de4e23c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1699f959-1562-4dbf-bb1b-43065d31fadf"
        },
        "item": {
          "id": "94dd2ead-887a-4432-bb26-e1634c1df141",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "76bfbcbd-8861-4b29-9a3a-553223405a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fc00b0-e9f2-4a15-9f0a-4d2618eacfd4",
        "cursor": {
          "ref": "ce5d274a-c153-4dad-bb5e-5c17f52ebb9b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7d8fa134-3800-4a60-a777-5d505a038794"
        },
        "item": {
          "id": "36fc00b0-e9f2-4a15-9f0a-4d2618eacfd4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99cd87b1-a29f-4537-9f75-738485ab744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb630bc-4ce3-4516-b52e-5b53d3d6c274",
        "cursor": {
          "ref": "4099675d-d243-449a-a24d-f344fdec98ae",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6652e637-faf3-4cd3-b8f7-d33ddab233ec"
        },
        "item": {
          "id": "7eb630bc-4ce3-4516-b52e-5b53d3d6c274",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a82d64f7-da21-47b3-ba5b-58473146faca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21835885-32d2-4887-9800-dd0c3fa75b59",
        "cursor": {
          "ref": "ca195442-9812-4350-99e1-44f8fb9f7d8a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a5dffc31-8469-4762-85bb-16a6b99fb34c"
        },
        "item": {
          "id": "21835885-32d2-4887-9800-dd0c3fa75b59",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "36d33619-0741-44e7-80a2-c036a638d381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f23075-6cae-46b4-ae9b-d0a634c4bcb5",
        "cursor": {
          "ref": "b0b7d52f-aa3b-42d0-9102-cdfb828e42ec",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ddea4d12-b239-405c-bf42-f55492a4d7c6"
        },
        "item": {
          "id": "50f23075-6cae-46b4-ae9b-d0a634c4bcb5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43dcb6e5-dbe7-41be-9f9b-de56a385c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfb2b71-840e-4ff5-af50-db72455aa91b",
        "cursor": {
          "ref": "e3d50839-98f0-48c4-ad5c-5495b848917c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7402b35d-44e5-471c-9443-b06e0e7d19b6"
        },
        "item": {
          "id": "adfb2b71-840e-4ff5-af50-db72455aa91b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf242bca-f129-4bfd-83c2-82d7d352484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff69bd24-c671-43d3-927e-f1bb45dda2e2",
        "cursor": {
          "ref": "bde1a4e0-b47d-4969-b8a9-cd450be1e8ba",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0125a982-6cb1-4946-96e6-2e3f0f80079e"
        },
        "item": {
          "id": "ff69bd24-c671-43d3-927e-f1bb45dda2e2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9eaf1521-ff64-4478-bc07-00814e3722c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e18209-718a-432f-805a-0ae508b8046d",
        "cursor": {
          "ref": "e2acc3cf-a1f5-4e7e-8b3b-a85eecc037f4",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "87457d35-9226-45af-971c-88e2e1384066"
        },
        "item": {
          "id": "d8e18209-718a-432f-805a-0ae508b8046d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dd1181c4-39b1-442e-bc9d-f08488168897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbf237b-e4d2-4632-92b4-4eb941b9bfd5",
        "cursor": {
          "ref": "78b7fc34-c24b-4b1a-8a0b-bf1b7beaa305",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d161cfe7-12f1-4e85-83c4-82a4912f21f2"
        },
        "item": {
          "id": "7dbf237b-e4d2-4632-92b4-4eb941b9bfd5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7037658a-45fc-4a5d-939d-aed3e3e57cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151b9337-e9d1-435f-9a53-a194978853a7",
        "cursor": {
          "ref": "8514c944-813c-4b9f-9cbb-e570015ed99a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "356d9f88-dfc9-424b-b089-bbe720bb37bf"
        },
        "item": {
          "id": "151b9337-e9d1-435f-9a53-a194978853a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8863a1ce-37fd-4312-bef7-caaf983e08cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b05ca6b-0447-4ebb-bc08-62636ee37d6b",
        "cursor": {
          "ref": "22220fb5-2a30-4838-8eb6-22adeec239a4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7ea91320-f6ed-48ca-aafe-34232a54867b"
        },
        "item": {
          "id": "4b05ca6b-0447-4ebb-bc08-62636ee37d6b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "22e39d7d-ad18-469c-a310-ecaf65c4b7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d28dae8-0937-47c1-9ddc-9e48d0280ea5",
        "cursor": {
          "ref": "acb28714-59df-4133-8d57-3fe766b756cc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3973c90d-ca3c-4e20-b24b-7978ac8073e1"
        },
        "item": {
          "id": "5d28dae8-0937-47c1-9ddc-9e48d0280ea5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a9093a91-116d-4fff-971d-3cc7316e0d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0c0e52-02c5-42d2-9c6e-287f4ff11df4",
        "cursor": {
          "ref": "d26ada06-d792-4234-a94d-fd0aa5002d99",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "797d7fca-0a3d-44cc-afab-f7982b450f55"
        },
        "item": {
          "id": "4d0c0e52-02c5-42d2-9c6e-287f4ff11df4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f9d8c29-88e7-4d11-9610-d1d0f84a451b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8080c772-8f81-457c-a1e2-e19665c3875f",
        "cursor": {
          "ref": "0fac35fb-ed55-40ca-808d-fbef6d85327c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22816bba-e5ea-4440-b6e8-256b948d79bd"
        },
        "item": {
          "id": "8080c772-8f81-457c-a1e2-e19665c3875f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e7dedb8-c7dc-425d-bb72-f954f51b27a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b96b432-1500-4c7d-8d70-2dba6f0853d6",
        "cursor": {
          "ref": "a6933b77-98c2-41e4-9279-3d64dc4bdce9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1a19798c-8e0d-4044-b417-00da3f4c546e"
        },
        "item": {
          "id": "0b96b432-1500-4c7d-8d70-2dba6f0853d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "84ef3913-c736-4dbf-b0b6-0b92b98cdf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e3102d-82f4-4030-960c-318121e25849",
        "cursor": {
          "ref": "2de603ff-2083-434d-ac19-ffe61d0bae26",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4974c7a2-d92c-4444-910a-ebcfa2cced75"
        },
        "item": {
          "id": "20e3102d-82f4-4030-960c-318121e25849",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "acce839f-92bd-4ddf-9a4b-fe8e6003641c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9306cb85-b8b0-4e0a-b77a-adc9baf660a4",
        "cursor": {
          "ref": "bfb44b6d-d767-4ed0-9ea3-7bad4ecf7f18",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "727b5f4c-14a7-451a-bc93-489b41638b4d"
        },
        "item": {
          "id": "9306cb85-b8b0-4e0a-b77a-adc9baf660a4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "71c1a94f-2208-44aa-b292-d587b1e17eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53becd5e-cdf6-441b-8e96-db5499d23883",
        "cursor": {
          "ref": "3c04df0f-a749-47ee-aba5-15e2fbce0ac2",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f31425b-32f6-49d0-b08e-098b55bd8f9c"
        },
        "item": {
          "id": "53becd5e-cdf6-441b-8e96-db5499d23883",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a0e6ae7a-77c1-42e5-ada8-825c9cfa236c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12827a1c-6b6c-43df-babe-4ef12cb03222",
        "cursor": {
          "ref": "fbfcbb03-e224-45cb-a24b-c5ad7dc57094",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a553813f-8455-4ba5-a2e9-f4ff87fc8626"
        },
        "item": {
          "id": "12827a1c-6b6c-43df-babe-4ef12cb03222",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "385dee5a-b3c4-42e5-ba60-0ede8ceabdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10578f4-6e67-4386-8b31-5b7f81af0fc6",
        "cursor": {
          "ref": "22112c90-390a-45d6-9576-62472f7cb3f8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c336b438-bdd8-47f3-ad81-82ecd2d3b4b9"
        },
        "item": {
          "id": "f10578f4-6e67-4386-8b31-5b7f81af0fc6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "956f8a37-dfcc-4c70-bcac-5b5eff6de486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52206c7d-3317-42eb-8557-74edd5d3a995",
        "cursor": {
          "ref": "d658e106-b593-4470-8d2d-7a4ed446a302",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "743fc922-daf0-4c92-93eb-a986dc84e67d"
        },
        "item": {
          "id": "52206c7d-3317-42eb-8557-74edd5d3a995",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c915345-2050-4bb7-a44d-4e14185230d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fb5008-091f-4baf-8e7f-ee7103be845e",
        "cursor": {
          "ref": "56b2dda5-413a-4be3-b0c6-8352f97d2b64",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "18f1aed9-f5ed-47ff-967c-bdace0de6f1d"
        },
        "item": {
          "id": "e2fb5008-091f-4baf-8e7f-ee7103be845e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "28073205-362d-481e-91db-62cea5802365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2623a8a0-04d7-409a-a79f-ae5fb8ac37b0",
        "cursor": {
          "ref": "301e9aca-09cc-45a4-b603-7cdf4a8beb8d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed2c91d8-2bc0-43b5-b57a-9e8099946e3b"
        },
        "item": {
          "id": "2623a8a0-04d7-409a-a79f-ae5fb8ac37b0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "372a07fe-12ff-4082-a496-580140227ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f287c51-5d19-41cd-8db3-f32b42b6a3a8",
        "cursor": {
          "ref": "3dd9b0ec-78f8-4c0f-9293-7109902f5c82",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "678558b6-a4cd-4878-a5b7-c5d2ca3f9cde"
        },
        "item": {
          "id": "9f287c51-5d19-41cd-8db3-f32b42b6a3a8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb34c85b-993d-4505-a94e-fd3b101bf51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691a70ba-3846-42ef-945f-71a4bb283180",
        "cursor": {
          "ref": "49067b24-a71c-400a-9556-5219e87796c6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "35cefafd-2b11-4ed3-bcba-f55d03441767"
        },
        "item": {
          "id": "691a70ba-3846-42ef-945f-71a4bb283180",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "759066e2-a868-439e-b029-a4c3691b6818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141a76de-bbad-4bc0-923d-a3d3987638f7",
        "cursor": {
          "ref": "3a63e250-0efa-41b5-a8d5-fad8932db50f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a2c94945-2297-4c9f-99a0-e125a575468f"
        },
        "item": {
          "id": "141a76de-bbad-4bc0-923d-a3d3987638f7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fa15024b-5bed-48db-8594-a9e58c348d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a777f92-f393-4df0-a0cc-6699b0114a6c",
        "cursor": {
          "ref": "40052819-c719-45d3-974e-8fa807c1435b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "870cccc0-9aad-476e-a8a0-86467fd351e9"
        },
        "item": {
          "id": "0a777f92-f393-4df0-a0cc-6699b0114a6c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "863b1142-0b11-4425-b0bb-1d68ad65df6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652da0e5-bc9c-4ee9-8dc7-9ae59100c681",
        "cursor": {
          "ref": "54b4820c-fa25-44e9-8a8b-29cf21cb9afb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dcc204cf-be0f-4389-9f30-4281f76ab76a"
        },
        "item": {
          "id": "652da0e5-bc9c-4ee9-8dc7-9ae59100c681",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "41aa0e09-cd1a-40b3-b453-9da6e7d73c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f527d-37de-4c5c-b4b9-c102ee9fb907",
        "cursor": {
          "ref": "3dca9102-7365-49ce-bb25-1c5e5277c920",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cb4d8508-6629-4749-8b12-7c9ebb971ad7"
        },
        "item": {
          "id": "6f9f527d-37de-4c5c-b4b9-c102ee9fb907",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0e7dabbd-27c3-4d48-a198-5b9d5235904c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c392b6-8aaa-4e0c-a51e-36da172ca1b0",
        "cursor": {
          "ref": "3321e03b-7975-4e61-a148-fc14840757d9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "273c6a5f-7d49-49f2-b999-309b53f16a06"
        },
        "item": {
          "id": "80c392b6-8aaa-4e0c-a51e-36da172ca1b0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6c470692-de5b-4a12-a6bf-417dd05e67d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7920c601-b60f-4c67-a2b3-54bb33d4c02c",
        "cursor": {
          "ref": "32995068-f14c-4782-b639-4425e1d34b78",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1224b25f-8186-435e-9b2c-077817c09154"
        },
        "item": {
          "id": "7920c601-b60f-4c67-a2b3-54bb33d4c02c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9dc0b6a5-41a8-48f0-9e9b-d3d925a601e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d687ef-6b8b-4f69-b0fd-b1c54baa26f1",
        "cursor": {
          "ref": "5bf14c46-1533-446f-9470-a4f4b096df32",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "138dc46e-deee-4d05-851a-bb409f54476e"
        },
        "item": {
          "id": "46d687ef-6b8b-4f69-b0fd-b1c54baa26f1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a264173-4f43-4527-a701-ae18bb609165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670207d6-6f21-423b-affc-c755b9642d56",
        "cursor": {
          "ref": "1a90754c-a291-47de-9dbd-3b7989b6c460",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aec1a9ad-5a21-466a-af7f-b590b9333efa"
        },
        "item": {
          "id": "670207d6-6f21-423b-affc-c755b9642d56",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e6208e0a-1543-4c90-803f-6dcb92af18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333fa851-50a9-4e98-b462-ce69c3650200",
        "cursor": {
          "ref": "75b8c18a-2322-455d-bc24-146982d5e028",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21554307-e993-4288-ab66-d2d54f365628"
        },
        "item": {
          "id": "333fa851-50a9-4e98-b462-ce69c3650200",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9940d6a7-c974-4f86-a206-332fa36b8050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf8e34-ac05-4199-afb3-af6ef6521e85",
        "cursor": {
          "ref": "f6e488f0-e45e-4400-9a87-ebb940f0223c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c9e718c9-4eb5-46e2-afe2-6f25c7e86dc5"
        },
        "item": {
          "id": "91bf8e34-ac05-4199-afb3-af6ef6521e85",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "67a87afa-13d4-4915-be47-ce5c74ebaabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c933b91-92bd-4d18-90e6-0cf972cd9d99",
        "cursor": {
          "ref": "23d81050-e602-4d19-a7b4-47150a04b035",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1d14900-98fa-4e75-9093-bf19310136e4"
        },
        "item": {
          "id": "6c933b91-92bd-4d18-90e6-0cf972cd9d99",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a54b7d4b-ae59-47ea-b71b-15bca78c39a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae05b70-a590-4796-96cb-19007c6b8dea",
        "cursor": {
          "ref": "411dff16-741b-466e-92db-987a51df44ff",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "954283a9-40be-4458-bb51-ced07a107eda"
        },
        "item": {
          "id": "9ae05b70-a590-4796-96cb-19007c6b8dea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e85ee1f5-ae3a-4f39-b022-42fedc76c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6ede80-4a78-40b5-ad96-90e09d80e382",
        "cursor": {
          "ref": "12f4354b-40b3-47a8-a2ff-353573bfd0a9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9b069832-f615-4a1f-b3f5-cd134de1c68d"
        },
        "item": {
          "id": "fa6ede80-4a78-40b5-ad96-90e09d80e382",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa312883-58f5-4965-ab29-768910e56c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e09c635-9c22-4882-8f36-6a163cf1f86c",
        "cursor": {
          "ref": "4c061d91-b790-4921-8414-ad5f19d10312",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a8e853c3-3afe-4770-8319-38313c72326b"
        },
        "item": {
          "id": "9e09c635-9c22-4882-8f36-6a163cf1f86c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f37c4b49-aefe-4b8a-92c6-71ad63768d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9533c98-ae32-430e-89f0-c4ad8058a371",
        "cursor": {
          "ref": "1ead6462-6e02-4ee5-89df-dea9363ba324",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8e625760-c53e-467a-afce-e0bde00b9ad5"
        },
        "item": {
          "id": "d9533c98-ae32-430e-89f0-c4ad8058a371",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9281a07f-cf10-4cc9-8eca-85dc0cef75c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65b8bbc-2656-424f-b05b-963bd4cd6ed0",
        "cursor": {
          "ref": "1582a8cd-6004-4387-85b6-f891c0aea7df",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "cb9dc041-8ee7-4363-9734-229fe5363d79"
        },
        "item": {
          "id": "f65b8bbc-2656-424f-b05b-963bd4cd6ed0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cced1bd4-d613-4de2-9d88-83d93c815fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e353aa1-deaf-4119-a75a-1a5c8070152b",
        "cursor": {
          "ref": "ca4f3e5e-efeb-4734-a9a8-277db16b5eb8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d0f1268-09dd-49c8-af7b-34a5d5292628"
        },
        "item": {
          "id": "5e353aa1-deaf-4119-a75a-1a5c8070152b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f8739007-c9b7-4012-a62c-835d507d22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf014055-824a-466d-af56-98a94f7858a4",
        "cursor": {
          "ref": "eb7a4f2e-d969-483d-8621-0f4a5f20619e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "40b2ade6-0f52-47e3-bafe-7566648aa744"
        },
        "item": {
          "id": "bf014055-824a-466d-af56-98a94f7858a4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2adbe237-8114-47cf-8b53-75177bdbaa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b7336b-61b3-4ef0-a7a8-d39f5f0c3cf2",
        "cursor": {
          "ref": "f10d5917-1cc4-44b6-bafd-e4162c0020a8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "996c7b73-986f-46b9-8749-1608090b398e"
        },
        "item": {
          "id": "57b7336b-61b3-4ef0-a7a8-d39f5f0c3cf2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2d9d821e-4d06-4561-bc52-79ac3da37455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5403da-74a4-465d-8bcd-cab7fe09ce98",
        "cursor": {
          "ref": "c7ef3b17-5f58-49d8-ac8f-6049c8750d40",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0b94e1cb-d9ab-43c9-bbf7-47c528985237"
        },
        "item": {
          "id": "3e5403da-74a4-465d-8bcd-cab7fe09ce98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b1853c1f-c68d-42bf-8c95-a3a089897222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bafe00c-f785-4bf5-a75e-30e250cd6def",
        "cursor": {
          "ref": "cfbdc17c-fc13-4e3d-b4b6-65950f5908a0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9403a1ad-47d1-46d0-9cd9-8433df6bd57d"
        },
        "item": {
          "id": "2bafe00c-f785-4bf5-a75e-30e250cd6def",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "84720443-2fc0-40da-bd2e-420a0bfc5d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e877a472-b3ff-46c2-87d1-7f8d59fe11c6",
        "cursor": {
          "ref": "64e9b2f6-8c3e-44be-9a9b-df6681da7a5c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "da2410e9-2169-405d-a065-497498ccb3fc"
        },
        "item": {
          "id": "e877a472-b3ff-46c2-87d1-7f8d59fe11c6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "42f4e235-0b5e-4978-a092-ae93fc6ae3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e4d1d7-2a6d-4ca1-9b2d-c37d4a322f97",
        "cursor": {
          "ref": "c6582fb2-0572-4c75-aef2-e91a00a273f8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fc395013-6e57-45b9-8a56-aa6a33c2a771"
        },
        "item": {
          "id": "38e4d1d7-2a6d-4ca1-9b2d-c37d4a322f97",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ba289424-adb0-439d-ad17-4dc507a6bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9a0a5e26-0260-4e2d-85c0-dfcc1d38db22",
        "cursor": {
          "ref": "44393c7f-98c4-409f-81e0-828d019bfa20",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b508dbfc-26f2-4369-9d29-1b2e28453c01"
        },
        "item": {
          "id": "9a0a5e26-0260-4e2d-85c0-dfcc1d38db22",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cacd2304-c069-4693-ad08-4e7a640729fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "274313c8-5c02-4a08-81f7-bd488196ba7f",
        "cursor": {
          "ref": "7ccdf406-da06-4f81-82a8-a5335fb70b47",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "77d7a3d5-5fd8-4a6a-990b-a10fd3a41009"
        },
        "item": {
          "id": "274313c8-5c02-4a08-81f7-bd488196ba7f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ef01426b-4d5e-4abb-bd7e-d321cbedb544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9ff27227-cf8f-428c-9389-48f88f71c3ac",
        "cursor": {
          "ref": "62d2a514-321e-4483-9898-badd0cb84833",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eb4cee53-0acd-4adf-96f2-562af763bfc9"
        },
        "item": {
          "id": "9ff27227-cf8f-428c-9389-48f88f71c3ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5be0be10-ee35-4b03-83c4-66d987bac027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9118ef91-8e1e-4a10-a760-3cb5ef776d58",
        "cursor": {
          "ref": "56483433-03cf-4f3c-9565-e49dd6e9b6cf",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "738f9ccb-3102-4422-8622-5585739abd38"
        },
        "item": {
          "id": "9118ef91-8e1e-4a10-a760-3cb5ef776d58",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "096a03f8-02ec-4645-b7a0-09800d665d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "444b7e95-9368-4f7f-a720-cfd94f680703",
        "cursor": {
          "ref": "41958f06-2a5c-47ce-b57c-0641ebaa47bc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "beec56d9-d6f6-435e-bc42-54a59a99f836"
        },
        "item": {
          "id": "444b7e95-9368-4f7f-a720-cfd94f680703",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "45e7feb4-d2cd-4260-be77-89f780793c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e63abb2f-bc6f-4f6b-a75a-65a5b0e17959",
        "cursor": {
          "ref": "ab50b184-d153-4375-9312-3d2d1d8ecd97",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "05e1b26e-4bc4-4788-9823-17d80c1da1a4"
        },
        "item": {
          "id": "e63abb2f-bc6f-4f6b-a75a-65a5b0e17959",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cd9fc8ad-dbbd-45f6-a46e-e4e74efbef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c03c4c25-7215-4e38-8195-69238d2b4034",
        "cursor": {
          "ref": "99f5df2e-1785-4648-b7a7-8c64f4cad0ab",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3ff9b551-336d-4b13-b2e7-5f11c976b20d"
        },
        "item": {
          "id": "c03c4c25-7215-4e38-8195-69238d2b4034",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4b86bb53-7125-4ef8-970c-957d9df7d42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c233e9b-0e3f-4270-a39a-47fc1feb5572",
        "cursor": {
          "ref": "3e2735c6-4c24-4af0-98cc-21eb92301631",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "37d83aed-d497-4247-ab89-c30be910d415"
        },
        "item": {
          "id": "9c233e9b-0e3f-4270-a39a-47fc1feb5572",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27196bbd-7ddd-422d-9866-40df9b56eabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95bfef4-cfe6-47e1-8056-41f8f23ab737",
        "cursor": {
          "ref": "9c99cd7d-d2f6-49d2-8c73-799459daeb8f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "58629f86-7aee-4f4d-b402-02b0a1175444"
        },
        "item": {
          "id": "c95bfef4-cfe6-47e1-8056-41f8f23ab737",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0fff98ba-ee53-4e08-bdb2-0f0f14f77cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b610fb43-ee53-4a93-b067-879f885a2528",
        "cursor": {
          "ref": "9181e887-7349-43ac-a56b-7aff4ad2a118",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6356ed5f-1c39-4c2d-8151-29b13271a819"
        },
        "item": {
          "id": "b610fb43-ee53-4a93-b067-879f885a2528",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "87f20d93-41d1-4b98-bbd6-7c45c356895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2c2f4a-f11a-4efa-a14a-cf0749a63e88",
        "cursor": {
          "ref": "138c543e-84a7-4d53-8b03-c1f0c9355638",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3cff3722-715d-4043-970c-a57f9308f9c2"
        },
        "item": {
          "id": "ea2c2f4a-f11a-4efa-a14a-cf0749a63e88",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f681e478-567a-46e6-aaab-a7d9bc410fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f5bc00-3dad-449c-80aa-ea6315479a21",
        "cursor": {
          "ref": "2294d105-c67a-4bc5-bb0d-83170880daab",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "94a14d79-1b64-40cd-beb5-deb70771c401"
        },
        "item": {
          "id": "c4f5bc00-3dad-449c-80aa-ea6315479a21",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "172c9256-1fd4-4530-9e54-d4dfbf9f5c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c91fe0-ab62-4815-9185-09aaa6cfaadc",
        "cursor": {
          "ref": "ae5afbdf-95ea-43fc-a8e9-70768a44ec67",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a53b5d99-f4d6-42e7-9767-1708cc728e91"
        },
        "item": {
          "id": "46c91fe0-ab62-4815-9185-09aaa6cfaadc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc4eba42-ae59-4afe-a3d1-c449a1407f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5ec6fe-f423-4f43-b0c8-d0bb9a4ae41d",
        "cursor": {
          "ref": "03ccc4c0-6e44-4374-9e9e-23b2a985cd44",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ccc14820-3d0e-4520-a0cb-a1ccd72ace7b"
        },
        "item": {
          "id": "5d5ec6fe-f423-4f43-b0c8-d0bb9a4ae41d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b500efc6-a9ac-4cc7-8ee1-642893786407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de5d04f-aa3e-4ba7-8259-b4ed262e9cdc",
        "cursor": {
          "ref": "2ff5dfa5-1695-4f49-84e8-1c3b74ba2e6b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7fdd4cee-54a1-4c0b-aef3-4eed816cc7bc"
        },
        "item": {
          "id": "6de5d04f-aa3e-4ba7-8259-b4ed262e9cdc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e3969d66-a0aa-44c4-9e20-6c8797c0b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a85ca8-adae-4ac0-b0c7-90b25f480cd7",
        "cursor": {
          "ref": "1215d6e1-efbc-4b28-9fc9-1fbea02eb4ef",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9d910a0d-6885-44e7-9ccf-ed122fb4388d"
        },
        "item": {
          "id": "f7a85ca8-adae-4ac0-b0c7-90b25f480cd7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fec5a250-b747-4d83-9893-0eeb5bc6681a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6cdbef-4fdc-42fc-9b67-62a2d28647eb",
        "cursor": {
          "ref": "9f97d742-200e-42d9-af4a-b904af4594af",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c3d9538c-05c6-49da-9281-1a07b34388c6"
        },
        "item": {
          "id": "0f6cdbef-4fdc-42fc-9b67-62a2d28647eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5b1d6f9-7fe0-475f-982d-dd2906b5a4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a457a7b6-089c-4d5b-81e3-9766b618a629",
        "cursor": {
          "ref": "0993b690-9b72-4bb9-9e0b-88638149e02a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d56460a1-4f56-4d08-8c63-452a1c9dcae9"
        },
        "item": {
          "id": "a457a7b6-089c-4d5b-81e3-9766b618a629",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "846cf2ff-90ec-4640-9e22-1825492cf6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e606c92c-fafe-4d63-b332-f859e4e44287",
        "cursor": {
          "ref": "500fa858-3abc-44ab-91da-13bfc9e60813",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fe540981-ddd4-4886-9d5f-c6cacbf90db6"
        },
        "item": {
          "id": "e606c92c-fafe-4d63-b332-f859e4e44287",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0f353d8b-3faa-4666-8474-5a9c1980a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5353d1fb-d31a-4573-a639-b90c40b993e9",
        "cursor": {
          "ref": "81276b0a-39d3-4f8b-a75d-edc1b1ebad0c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "55555145-00f8-411c-af4d-e92903b163ce"
        },
        "item": {
          "id": "5353d1fb-d31a-4573-a639-b90c40b993e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3fbb83b0-d7e9-4202-a729-a89e80e95ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b544dd78-4c26-4cab-9b26-95dfc9821ae9",
        "cursor": {
          "ref": "939da47a-1703-4e4f-b09e-24cfbc03617f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "65b5f986-e4af-4532-bd96-0c5a3d9c9040"
        },
        "item": {
          "id": "b544dd78-4c26-4cab-9b26-95dfc9821ae9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42ab9637-50ca-4714-bc10-6bdd3cca9df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e1446-e431-48ee-8778-c15fbd56339e",
        "cursor": {
          "ref": "08f9b799-1631-4cf4-820d-3a5b68fad342",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b6c2e428-d310-4e91-aaa8-307abed76a68"
        },
        "item": {
          "id": "659e1446-e431-48ee-8778-c15fbd56339e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1befc93-2cad-46a7-89a7-04d2cc55700b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae440a6e-ad64-42c3-a578-35191724576a",
        "cursor": {
          "ref": "e3844561-9b9e-4d1b-afed-2e3c9bd81033",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7d2aba00-5f6f-4bd1-b18e-e6fdc23aa545"
        },
        "item": {
          "id": "ae440a6e-ad64-42c3-a578-35191724576a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb6e7fe8-9954-4cd8-ba15-41dd0903f285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5b74df-70ab-4022-bdac-dfa820f94b51",
        "cursor": {
          "ref": "8652ea8e-ae2e-4326-812d-0a8df4ed4f30",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "832eaf41-54ee-49a9-b847-2a102dc5be9d"
        },
        "item": {
          "id": "8b5b74df-70ab-4022-bdac-dfa820f94b51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d86e29b2-b031-45ed-a271-67e6560a4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb65b5b0-4352-42db-ac73-3f982362a454",
        "cursor": {
          "ref": "f36fcc28-39ae-4651-9994-27e31620cb4a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "23f1949e-6a9f-4420-9de3-f3306f8408c9"
        },
        "item": {
          "id": "fb65b5b0-4352-42db-ac73-3f982362a454",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f3b555ea-e1b3-4045-802b-0edc52d34f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee1d3cf-cc2f-40a7-a694-497c90f23a17",
        "cursor": {
          "ref": "752b891f-68ed-4572-ad62-1938644e6baf",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b5f4051f-47a7-4ac1-b510-4de8d1385f74"
        },
        "item": {
          "id": "aee1d3cf-cc2f-40a7-a694-497c90f23a17",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "039054bd-9be4-4a99-9d8c-37d10f12291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e5d1c-4577-4dbb-8379-51b75f4de05d",
        "cursor": {
          "ref": "ae78bbf9-b81e-4eb6-b7fb-ce64a36708ce",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3409d4c8-6e01-40a8-92a1-1fead2e7aac0"
        },
        "item": {
          "id": "5b1e5d1c-4577-4dbb-8379-51b75f4de05d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9f77bc2-322f-4e51-b3b9-0701b9c7265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaca39b-366f-47e7-9196-ae65a84f8e97",
        "cursor": {
          "ref": "d0460a81-c28b-4665-994f-87757b6880cb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6139037-1c96-4818-83b0-4c914f4d3b68"
        },
        "item": {
          "id": "ceaca39b-366f-47e7-9196-ae65a84f8e97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1b38848b-f40f-40ae-b511-acebc59b9854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8beac3-688e-4dbe-9040-4b3a5395a2f4",
        "cursor": {
          "ref": "95145c80-93fd-41af-a689-cd1afc1f2e8a",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bea680f6-e9d5-4d7d-80f6-f2932b736a6a"
        },
        "item": {
          "id": "fa8beac3-688e-4dbe-9040-4b3a5395a2f4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8811598f-9168-4c2c-bfcf-f3e8183ca784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd7cd88-8096-4695-be24-d8d4a4d9cd66",
        "cursor": {
          "ref": "f3860788-db1e-4806-bb2a-e1900545037a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e10218fa-50d2-46c3-976c-a913e87057c7"
        },
        "item": {
          "id": "1fd7cd88-8096-4695-be24-d8d4a4d9cd66",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "78f4e67f-9ba2-4e8a-ab50-2384e8d9605a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b01dce-b178-4a94-82d6-9b7670b1ccc0",
        "cursor": {
          "ref": "cda55ca6-4ddf-4f4a-bca1-94de63e37a2d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd73ff5e-a7d9-4545-8813-3eaebbc8a3d8"
        },
        "item": {
          "id": "d3b01dce-b178-4a94-82d6-9b7670b1ccc0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72304b33-e84d-4f22-81bc-f8cbb72b3f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d258d82d-3e46-483d-a203-d9af30fc8c0c",
        "cursor": {
          "ref": "d0365da6-0ea6-456a-a4df-5a562bc7d8e7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "68f059e8-9c45-4222-98ee-68d3a922bb1e"
        },
        "item": {
          "id": "d258d82d-3e46-483d-a203-d9af30fc8c0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57273940-e576-41a3-b2d1-bd49bfd973e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de775d3a-801b-4c4e-8b35-3e4fbfe95eac",
        "cursor": {
          "ref": "d452274d-4e1e-4165-81ad-5ca9dcd60dc2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "15e81f85-862c-48e0-9452-6205fe730412"
        },
        "item": {
          "id": "de775d3a-801b-4c4e-8b35-3e4fbfe95eac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc068687-82e8-4f57-95d5-1d3dc0fa1e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89d61f4-2c38-47f1-80b3-76e25ccf9887",
        "cursor": {
          "ref": "83394622-ff1b-491f-9fc5-307125976947",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b02952c3-71b7-4aeb-990c-8bedeb113cf0"
        },
        "item": {
          "id": "b89d61f4-2c38-47f1-80b3-76e25ccf9887",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d063dfb8-3e31-4c93-9352-d74927acd342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3694ddf-89e2-4c5b-8e1b-ead7ca89563a",
        "cursor": {
          "ref": "f0794a8a-14c4-4e55-8259-5748da31d452",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "46e36dc7-f3f6-454e-8d64-910343ffb4ab"
        },
        "item": {
          "id": "a3694ddf-89e2-4c5b-8e1b-ead7ca89563a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ecab791b-06d5-4d8b-a501-d15baba2a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b602b43b-8069-4e2d-8741-c535628333d9",
        "cursor": {
          "ref": "ca8f0e54-5945-4126-9661-4ec4ac9c76e4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c364a6ce-a82b-4657-862c-245ecb77e51f"
        },
        "item": {
          "id": "b602b43b-8069-4e2d-8741-c535628333d9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "643b4e4d-59da-4c2a-ab3d-9c1a5d266270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9584efb-2ed1-437d-a8e7-5e4c93fd6c08",
        "cursor": {
          "ref": "8634c9b3-7c75-4aed-8983-7a7c15e4989a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "94dcb974-c309-45f9-bd66-2dd14a34b40e"
        },
        "item": {
          "id": "f9584efb-2ed1-437d-a8e7-5e4c93fd6c08",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "352ad6d7-2f0c-4fde-a966-72eb894661b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271266cb-d8c4-4c89-b814-10845e59ad7b",
        "cursor": {
          "ref": "001457de-654a-439f-a518-de113392fa25",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3451cd0a-7a33-42b4-88ce-44f26f8dbf59"
        },
        "item": {
          "id": "271266cb-d8c4-4c89-b814-10845e59ad7b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ee553ae6-f78c-4efc-a195-24ca513ef38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becc38f7-eb45-48b5-9877-4ed0cd95a2e2",
        "cursor": {
          "ref": "06a4178a-9574-4421-bdc2-7180762fb806",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c1c069be-80ac-4e08-9dc5-38c7c79d0702"
        },
        "item": {
          "id": "becc38f7-eb45-48b5-9877-4ed0cd95a2e2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b10eb4c6-d707-4a07-8fee-5251cec8bbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3e4b17-a316-473e-89d5-52fe585ff95d",
        "cursor": {
          "ref": "5c4035f9-ef81-4949-854a-009222d3863e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "780cca48-b67b-4ff7-8813-78a3bbb51a0c"
        },
        "item": {
          "id": "1d3e4b17-a316-473e-89d5-52fe585ff95d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "861450e7-af77-450a-b071-343dcbdfb7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f275a0d-cf33-42fb-a2a4-99be0786832a",
        "cursor": {
          "ref": "23b7f177-4b04-4e1d-ac8f-39bb642da7bc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6829a96d-9e16-45dd-a688-c2722d200a25"
        },
        "item": {
          "id": "3f275a0d-cf33-42fb-a2a4-99be0786832a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ab183861-b2b1-4260-b38b-c2d5ecf5bed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6639ff-2c23-48bc-90ee-286f9ce827bb",
        "cursor": {
          "ref": "b3744e8b-5360-4f5c-b9eb-916cb74aaa3a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47ccc21d-352e-4c38-b1ec-2c084d84445b"
        },
        "item": {
          "id": "fa6639ff-2c23-48bc-90ee-286f9ce827bb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "da6d9638-f1a3-46bf-a05d-8e9315fedc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61a8ec6-e2e5-4575-8d18-60bfa911b7fa",
        "cursor": {
          "ref": "e0d172c6-3046-4806-b224-f4327a95cc86",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "771b6395-ae99-47a9-8acf-3881db547aea"
        },
        "item": {
          "id": "c61a8ec6-e2e5-4575-8d18-60bfa911b7fa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f57c9fdc-7a94-4ad1-b5bf-70ddc2a4b60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d29bf25-7b3b-4c91-8188-bd76b2ec3dda",
        "cursor": {
          "ref": "1e296e12-4ae6-49d6-aeaa-b3bd578588f4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0fd97e86-1f93-47ae-aa2a-3fe6f80e000d"
        },
        "item": {
          "id": "1d29bf25-7b3b-4c91-8188-bd76b2ec3dda",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4bdedb11-475b-4243-b6bc-2505abd10953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58abd51-4e35-4b04-b56b-3e0c2fdd268c",
        "cursor": {
          "ref": "bf4e9fda-8543-49e0-9bb2-ed8f80e91e98",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d757372d-e666-4fcb-897d-2bfd3cc5527a"
        },
        "item": {
          "id": "d58abd51-4e35-4b04-b56b-3e0c2fdd268c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cf679a94-5398-40a4-aa84-64e173b1fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8e3fc0-5117-4b35-b770-58710447416e",
        "cursor": {
          "ref": "7fbc8920-abcc-40f6-9e05-673938cc792b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f01712d6-25ba-40e0-80a5-020b69f86f97"
        },
        "item": {
          "id": "7c8e3fc0-5117-4b35-b770-58710447416e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eaf69327-c636-40ce-a1cf-49b8158a1731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfcc8a9-c8e7-464a-90a2-e08dd81b5df3",
        "cursor": {
          "ref": "f694ea7b-19a8-4225-8462-1d5eb5f3db6a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "48603bdc-7bda-41b5-9b58-ecd991577cc0"
        },
        "item": {
          "id": "4cfcc8a9-c8e7-464a-90a2-e08dd81b5df3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9cf18e90-1c30-4b49-846d-5094ad72f2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d53f96-a49c-4210-a522-886ead996d14",
        "cursor": {
          "ref": "6e4ed9ab-27ab-4097-8861-05b3cba8e265",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4bc4c165-961a-4c55-8d70-e4157756bae3"
        },
        "item": {
          "id": "77d53f96-a49c-4210-a522-886ead996d14",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a87bcdad-368c-4c1e-8206-0ec252db2a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d727f975-169c-4ffb-8543-d2812b93baa2",
        "cursor": {
          "ref": "e0fd257f-6aa9-4d81-b79d-433de38e921e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b3700dd0-7f2e-4600-b3e6-1a4f70f76d63"
        },
        "item": {
          "id": "d727f975-169c-4ffb-8543-d2812b93baa2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dc0053c4-97e5-4530-9879-8e3401810433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc065b9-fbd7-4a28-8505-077811a95b52",
        "cursor": {
          "ref": "9d11c8fe-fc94-4cae-b47c-a72ef9e8d536",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "524b3a84-2a7b-4e1e-921d-7c306efb35a1"
        },
        "item": {
          "id": "0bc065b9-fbd7-4a28-8505-077811a95b52",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d49d5ae4-d6db-4b69-b9c5-011023236bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b682582-6ce3-4c7b-b491-83066ff8320d",
        "cursor": {
          "ref": "de974e36-674d-4c4f-a391-cecd6dddbe08",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f5b26ce8-bb06-49af-bb99-aeec5fcb00b7"
        },
        "item": {
          "id": "2b682582-6ce3-4c7b-b491-83066ff8320d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6aef592f-b388-4024-a043-ffb85cb59d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3118e93-7819-4e03-ba03-d0b445171185",
        "cursor": {
          "ref": "26a1813c-5960-4655-a630-754753e15bd5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0102ac6f-d8d3-42d7-8d84-6374fe06ddc7"
        },
        "item": {
          "id": "e3118e93-7819-4e03-ba03-d0b445171185",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "38e9f688-e35c-4ac6-81fe-00b187721d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5a9a31-ea84-4003-82f2-f3bcfc9315ec",
        "cursor": {
          "ref": "f622db89-53f1-46dc-9370-2c77ca19dc7b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e220fa5a-e8df-4732-bf11-7e9add132132"
        },
        "item": {
          "id": "ca5a9a31-ea84-4003-82f2-f3bcfc9315ec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c7ad4e1a-3e96-4424-872c-e359b75ec787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5070227-0dad-43a8-8005-9b04daa16e32",
        "cursor": {
          "ref": "c04b7c5e-acc3-492e-893d-88b4d6b7ce05",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa84a102-a36e-47e8-bbba-9a1098663efa"
        },
        "item": {
          "id": "b5070227-0dad-43a8-8005-9b04daa16e32",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "39836ea7-c408-4e5c-b0dc-bfa554597704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8595036f-857f-47c1-8f6a-d5ad9bf98cfe",
        "cursor": {
          "ref": "139fd33c-67a0-4dc3-bd68-588fdf9e5de5",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fb110e34-d8bc-4aae-8b31-1d719c83fd62"
        },
        "item": {
          "id": "8595036f-857f-47c1-8f6a-d5ad9bf98cfe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0180ec43-2233-4d61-83cd-1920afde735f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d36fe-1a3c-4dfc-8a19-5944983f4b86",
        "cursor": {
          "ref": "9913276f-a5d2-40bc-8633-42c152828709",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f0c31217-748a-4982-b4ca-1cecbb8b2f4d"
        },
        "item": {
          "id": "f62d36fe-1a3c-4dfc-8a19-5944983f4b86",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05eaca2b-05ca-40d6-880c-03428350d9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cf3bbf-a5e5-48a6-af07-0b731967f649",
        "cursor": {
          "ref": "7f23fee2-d9ba-4a76-b801-f0f227aec8b0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8c7da825-ee68-4112-a258-84abbcb91cc0"
        },
        "item": {
          "id": "81cf3bbf-a5e5-48a6-af07-0b731967f649",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6cdc66f7-5014-45e5-a26f-9cb4d5d27bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c289fa64-59c3-4871-a54f-3da5cb0bb008",
        "cursor": {
          "ref": "8af32ea2-460f-450c-841d-795e15e8c210",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a306ffbb-4d11-4a79-bab3-d9920001387c"
        },
        "item": {
          "id": "c289fa64-59c3-4871-a54f-3da5cb0bb008",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cf2c952-26cb-4ebe-8708-118197d38617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7f7bcc-4b15-4bdc-b2a4-0f532a7e9ddd",
        "cursor": {
          "ref": "c6da106c-4f3e-4fec-b1c3-a250dad185c2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "37b2c50f-0258-424b-bd62-73dbdd11ee2a"
        },
        "item": {
          "id": "3b7f7bcc-4b15-4bdc-b2a4-0f532a7e9ddd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dd1f82cd-de88-44ba-be80-9256c7fce980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9a3689-0f26-40d8-ba8a-e0fe54758301",
        "cursor": {
          "ref": "11b12554-0e52-4e65-b8f6-71fa1a1e2cca",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "531d93f2-e205-408a-8ac5-c25f54f42190"
        },
        "item": {
          "id": "ba9a3689-0f26-40d8-ba8a-e0fe54758301",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5606ca6e-c9ae-4ccd-8c10-0779bcba3b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f28bda-1d78-4401-97f8-2a81667d578f",
        "cursor": {
          "ref": "4d979d3a-53ba-4b1b-95ad-4c29616eb738",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "78f5f94c-24d1-49d5-b374-1c618eb3fa27"
        },
        "item": {
          "id": "f9f28bda-1d78-4401-97f8-2a81667d578f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d3a05661-8249-4e2c-8214-39711d3344b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613b4342-1598-44e9-b925-e41888795b25",
        "cursor": {
          "ref": "beabc08e-1b00-4a9f-9c9d-71c90cb32d32",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "59d54c99-978e-40f6-a2f5-9ab0a4d675f4"
        },
        "item": {
          "id": "613b4342-1598-44e9-b925-e41888795b25",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c56dcbc4-7ec8-44f8-a8ad-ae2fe6024d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c8bf2e-8a90-4cb7-bbd1-2d4af8c783bf",
        "cursor": {
          "ref": "40818425-085a-45f5-81f9-3484ff3ead53",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4dd611d4-09c4-4057-97cc-597e4403aa5c"
        },
        "item": {
          "id": "b7c8bf2e-8a90-4cb7-bbd1-2d4af8c783bf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ca4bd66a-95b2-413c-bd06-4d6fd85afab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c00bd3-8747-4290-be45-5b4bef844111",
        "cursor": {
          "ref": "0b0d0cc8-aa4a-48bd-acb0-ed3f0a3cb203",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bab37bf4-c268-43a2-aa6d-75b74aa8ff86"
        },
        "item": {
          "id": "37c00bd3-8747-4290-be45-5b4bef844111",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2c2ef4ca-2e23-4c30-b7a7-20f58e475bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee0576c-64b0-48c0-b143-1a4c728be57e",
        "cursor": {
          "ref": "377bd449-79b5-4596-b1c8-be0118064049",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b8fa1145-9a2b-4675-958c-fc4eba8ca4c4"
        },
        "item": {
          "id": "2ee0576c-64b0-48c0-b143-1a4c728be57e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "90e4a429-b191-4f26-a8df-5217c088725a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff16dc5-f610-403a-a2b0-b02e703292d6",
        "cursor": {
          "ref": "f2fe9163-c6c9-4b05-b66e-eb57201f7b75",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fee6cf8f-939a-483c-b48e-beda9f50eb63"
        },
        "item": {
          "id": "0ff16dc5-f610-403a-a2b0-b02e703292d6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "734a70f8-923b-4fae-904e-8fca6b2118d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c236d53-e117-430a-b85f-44e301fb91e0",
        "cursor": {
          "ref": "3c3f2707-134c-428a-88ae-d4bae616d0af",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1ae1b87b-99d7-4712-b10a-9c7d3d89e93e"
        },
        "item": {
          "id": "2c236d53-e117-430a-b85f-44e301fb91e0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8775a452-efe5-4769-9216-e610d4671115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552d8f36-65c4-4f31-a236-2ebcf41b78dd",
        "cursor": {
          "ref": "3b7302fd-44b2-4b61-8ac1-69ecd93ca207",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ec8da77-f191-4863-af70-ef9c06bfe20a"
        },
        "item": {
          "id": "552d8f36-65c4-4f31-a236-2ebcf41b78dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "98bf2674-a068-46a2-b4dc-293afd65ae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17ea427-04e3-4e07-920c-c1b80f79e8e8",
        "cursor": {
          "ref": "089641cd-078d-4a8c-9485-168ca7f001cd",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eaf135ab-9727-4420-82a1-2f71e0037839"
        },
        "item": {
          "id": "f17ea427-04e3-4e07-920c-c1b80f79e8e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9466f8c5-93e4-42ee-a62d-52607a05ec72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057de0d7-60cf-4b34-8930-5923ab637c4f",
        "cursor": {
          "ref": "e1c43420-4dbf-40d2-a03a-5e62efb69c4f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "00cf7bda-135f-41ce-831a-5b25f0299128"
        },
        "item": {
          "id": "057de0d7-60cf-4b34-8930-5923ab637c4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57d016f5-f307-4861-bf1c-0c8c51c198c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24284df-520f-46e1-ac2b-405694b7b70a",
        "cursor": {
          "ref": "fef88efb-6413-42bb-ad43-a3bb08079b93",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "590a0da9-2121-42cf-94c7-68b49c3d5255"
        },
        "item": {
          "id": "d24284df-520f-46e1-ac2b-405694b7b70a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6e1559a0-4067-4c86-912f-d9564cb8e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2724d7-a03b-4d64-b3db-8be84ba70481",
        "cursor": {
          "ref": "6365666f-24e7-4bbd-a7e5-3116be701f3d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1678ba3c-8294-4060-8522-8b5858bae2cf"
        },
        "item": {
          "id": "ec2724d7-a03b-4d64-b3db-8be84ba70481",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4660ff55-db21-4195-b002-0b35fd6eaf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6639a2-74cd-4ed1-9254-d5ed558e204c",
        "cursor": {
          "ref": "1525bc1b-6f41-47dd-b506-b9a2a351889d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "34f724bf-6a40-4b9f-9244-7d4fc4c01487"
        },
        "item": {
          "id": "aa6639a2-74cd-4ed1-9254-d5ed558e204c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9da33857-e112-4311-8f23-ea3108906718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5467aed7-d85c-4171-aed9-0443a15737db",
        "cursor": {
          "ref": "3f0cbf9b-ecce-45b0-af44-85cadc5d86c3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e37066cc-1eff-484a-a4d2-8210536998d6"
        },
        "item": {
          "id": "5467aed7-d85c-4171-aed9-0443a15737db",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "63d59cf8-985c-464f-aebe-4962be33eebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12231b9a-102a-4f37-b7dc-5aaeddc1b3a5",
        "cursor": {
          "ref": "a75a7b4c-284d-4966-86ec-814a78b66971",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ca289fb4-42f4-4104-a80a-cd2fe7bc0284"
        },
        "item": {
          "id": "12231b9a-102a-4f37-b7dc-5aaeddc1b3a5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1c1d8f12-cf20-4cac-9372-49122ad6c451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4879fb8b-811e-49fb-8bec-8952c727b5b3",
        "cursor": {
          "ref": "44976410-1d18-4093-b61a-2002b835cf6c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de15e59a-ae7d-46dd-b437-41371308d48e"
        },
        "item": {
          "id": "4879fb8b-811e-49fb-8bec-8952c727b5b3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba32a98e-c9f1-4973-a21a-47271a1c8c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c38895-2f45-433f-8d08-d989da780d98",
        "cursor": {
          "ref": "63cf8a73-47aa-45ba-be6b-c03f8f24d0d8",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cd92cb4e-22dd-491b-8712-6b1ef0967de1"
        },
        "item": {
          "id": "22c38895-2f45-433f-8d08-d989da780d98",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fcb005c2-1c00-4164-9445-e64bfc7315b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7df0d-a9f1-4b9d-a728-6eb3c3fbaef1",
        "cursor": {
          "ref": "953b44a6-64e6-48cd-beda-5fc79541341f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "31bca217-d3a0-4849-9d08-a3cbe12e271b"
        },
        "item": {
          "id": "28c7df0d-a9f1-4b9d-a728-6eb3c3fbaef1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3117ab4a-8ca4-4fdf-a512-762baaa5a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54134c-15c7-43f8-aea2-4b20d99f0010",
        "cursor": {
          "ref": "4f679f76-dde3-4616-bbd9-8a6ea5fca5e8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "21069ee8-1118-4e3a-8916-c6c10d4c95ac"
        },
        "item": {
          "id": "bb54134c-15c7-43f8-aea2-4b20d99f0010",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8881092-0368-4711-8282-3a1e57583914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bd5782-ac07-4f78-b4d5-31f5e78b17a2",
        "cursor": {
          "ref": "e0d4a411-2ca3-4bbe-934a-2f7f174337d9",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "86109020-3168-41e0-88cc-1e217bae2837"
        },
        "item": {
          "id": "a9bd5782-ac07-4f78-b4d5-31f5e78b17a2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ca7dc749-8760-4555-8fb9-9daccc5d821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9705fc1c-e418-4ce3-82d1-c33849f292c0",
        "cursor": {
          "ref": "175fc753-1a9c-4f70-85fb-f286405e90b8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f977661-6c36-4e23-845c-ffcf0390523e"
        },
        "item": {
          "id": "9705fc1c-e418-4ce3-82d1-c33849f292c0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1c3c6493-bc79-4047-9952-1101e4fa90bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8047878-b70e-4dee-a5c0-6ace132eaed1",
        "cursor": {
          "ref": "12d7f817-625b-4b24-a1ed-7ca6897b11e2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "67895a9b-c4a5-4679-88df-bc9807c89316"
        },
        "item": {
          "id": "f8047878-b70e-4dee-a5c0-6ace132eaed1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aea93ba7-f46f-4e25-83a3-9808a5fc0630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdd0f99-210a-4fed-8a54-46b2a7d74449",
        "cursor": {
          "ref": "90392e94-d91d-48ea-afcf-e4b913e4cb78",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8d517c14-3745-443c-8958-bad64aa78284"
        },
        "item": {
          "id": "ebdd0f99-210a-4fed-8a54-46b2a7d74449",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ccc4590d-7633-4ee0-9857-fb9b01f4f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa83346-f4e1-4c02-b933-213bd261a597",
        "cursor": {
          "ref": "94dd3d7e-c1d9-4154-915c-ea8c6c4b89e6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c4ce2805-4825-4ee1-be22-500b324774d7"
        },
        "item": {
          "id": "eaa83346-f4e1-4c02-b933-213bd261a597",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6912e37b-49a6-470b-a76d-cb554ac782d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11abb7-4a29-4901-8bc0-6bccfd4bee9c",
        "cursor": {
          "ref": "df00a287-d53b-48a9-b6fe-354d721dffab",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eda30af1-2793-48e8-9432-443ae5a15527"
        },
        "item": {
          "id": "0b11abb7-4a29-4901-8bc0-6bccfd4bee9c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c37417fb-7def-40d2-9e97-f1c97a9cedcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c2986e-98b0-45b1-ad43-525e1049408b",
        "cursor": {
          "ref": "5e602eab-33bb-452a-a12c-802064b12631",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "00e40256-979f-4c1d-9d2a-f2735992d17f"
        },
        "item": {
          "id": "d6c2986e-98b0-45b1-ad43-525e1049408b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "76c7936d-42ca-42c4-9f73-38fdc9ed9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93eb5b4-c64c-4da6-9546-362948265eac",
        "cursor": {
          "ref": "959de05a-c0e3-4469-94ff-579b33b7a385",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4310a930-779c-493a-be91-9e2455b806d4"
        },
        "item": {
          "id": "e93eb5b4-c64c-4da6-9546-362948265eac",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "773a1d5e-fd88-4626-94f4-0bac584fa833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1080f5-1391-41c2-acba-cada9fb348a9",
        "cursor": {
          "ref": "387a4a0f-625b-4227-bb49-2c5b952fb09f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "552f7cdf-0b5a-446f-960a-a9304d93f439"
        },
        "item": {
          "id": "2f1080f5-1391-41c2-acba-cada9fb348a9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c71ab31a-e653-4834-b968-e6f0d1a2ad68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b9697e-054a-409b-afcb-f03e7d98e022",
        "cursor": {
          "ref": "66517033-eaef-4830-853f-12869fc2b054",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9f4481fb-251d-427c-ad3b-36b347765487"
        },
        "item": {
          "id": "39b9697e-054a-409b-afcb-f03e7d98e022",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2a400067-604c-49cb-a8b9-43463cab360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef66d4d9-e8c5-413f-8796-98ae558469ac",
        "cursor": {
          "ref": "585a4a08-8b0f-4376-b23f-7bb65a695ffc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6902f8a5-7c35-4640-8181-d9ae3c06e15f"
        },
        "item": {
          "id": "ef66d4d9-e8c5-413f-8796-98ae558469ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1868de04-c0c1-4342-88cd-ed7b37171ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ac0325-05f1-458b-aa56-f4943f6067dd",
        "cursor": {
          "ref": "ba46191f-f69b-4634-9364-830695a32209",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb291435-b0ac-4d42-9c5b-5bebcadba803"
        },
        "item": {
          "id": "09ac0325-05f1-458b-aa56-f4943f6067dd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ddaaf2ca-7f31-499b-8cf6-7a5068ee7763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aa842b-ab4e-40ae-91c4-d0919326e8ef",
        "cursor": {
          "ref": "8013209e-0ec4-4565-bd5e-8cf6b1eaa060",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "16e140a2-0a2d-4cf9-92ea-6e5dbeb7f836"
        },
        "item": {
          "id": "45aa842b-ab4e-40ae-91c4-d0919326e8ef",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4fc8c60f-8e4d-4c52-b8b9-244cd1cf3dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da45c464-bbae-44c0-ab13-5d20bed00668",
        "cursor": {
          "ref": "50b78788-07f4-4897-aca2-ffa9ddaf9bc2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1a3b67ef-483c-41f7-b3e4-f8b12b1fb537"
        },
        "item": {
          "id": "da45c464-bbae-44c0-ab13-5d20bed00668",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1dfe35a0-fa7c-4b17-813f-9140bf7d14f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aa67ab-b7dc-4c08-a558-725afe2feab5",
        "cursor": {
          "ref": "b10022e6-0648-477e-b17a-36b6295c38e0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67064271-5641-4880-9496-f25fe1688e2d"
        },
        "item": {
          "id": "15aa67ab-b7dc-4c08-a558-725afe2feab5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "598b8d70-d1a2-43db-85e5-d251cc9810af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8e8697-acae-4fbe-817b-705785458604",
        "cursor": {
          "ref": "75d2f32b-d88f-4a88-bacf-4571573306f7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef11b977-21ba-423b-becb-1b6f777c69f0"
        },
        "item": {
          "id": "9a8e8697-acae-4fbe-817b-705785458604",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "11f9b523-7f14-4133-84cc-535e0bd1e7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd175a1-4ff0-4fef-a002-bc1bb0127c69",
        "cursor": {
          "ref": "1223bb43-efe6-43ef-bf6e-7b10161e6a86",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c506b728-d55b-4021-a521-c96366a43cf4"
        },
        "item": {
          "id": "0fd175a1-4ff0-4fef-a002-bc1bb0127c69",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7f6397c1-d045-4286-92a8-66b06ae77640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708c962d-57d5-4441-8894-803401c6e522",
        "cursor": {
          "ref": "b0b7fef1-beae-4d53-aa88-051af12ea7e2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "755edbb3-4072-469e-b16e-9d0889a15767"
        },
        "item": {
          "id": "708c962d-57d5-4441-8894-803401c6e522",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c00449b5-d463-4ac0-947e-fe5067ac5a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db40898-6584-404a-b752-2e3507bbd765",
        "cursor": {
          "ref": "b16223eb-5d80-44a5-bdb0-959f73d34ca5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "519546ae-5913-4ba1-a4c9-0f2762645621"
        },
        "item": {
          "id": "0db40898-6584-404a-b752-2e3507bbd765",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "55503d53-0c30-45d9-b4d4-e8291c4a5387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcc8e1f-bea0-4b36-b296-afde7ea12075",
        "cursor": {
          "ref": "32982275-e2cd-45f9-a2c8-52ba0dbb583c",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "20b9e368-df99-4d9e-9078-42f323be3226"
        },
        "item": {
          "id": "3dcc8e1f-bea0-4b36-b296-afde7ea12075",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0ff5065c-89db-4ba8-93d8-e6a514a623ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc29335-4cd4-4f0b-bc66-dc1910a858ca",
        "cursor": {
          "ref": "84db1953-e048-4eef-9a73-7f649eba3cce",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "de4ce366-d6e6-4f1e-8f6b-b7123bc4bed0"
        },
        "item": {
          "id": "7dc29335-4cd4-4f0b-bc66-dc1910a858ca",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b5994124-c764-4687-a2af-d66a60cd7949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a438e02-ffc0-4815-91a4-cc09a0d52564",
        "cursor": {
          "ref": "488c533e-caab-4c5e-a651-fc8fa219d648",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1d0cecf2-69b8-4ae2-8641-fdd8192cad1f"
        },
        "item": {
          "id": "8a438e02-ffc0-4815-91a4-cc09a0d52564",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dc6ebb4b-2f3f-4fba-9062-30ba2731e4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51899c-ed13-4991-8a47-6d71087a3f31",
        "cursor": {
          "ref": "e88d1d02-9acc-4982-81fe-ffd8d78f5ed6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60ed1024-d972-4b0b-a03a-7e50467e2ed9"
        },
        "item": {
          "id": "ea51899c-ed13-4991-8a47-6d71087a3f31",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "483e6e66-0c84-435d-ac6c-202c592e8fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a84cfec-35b9-41d3-88f1-c85297450b37",
        "cursor": {
          "ref": "9e24da12-9f40-4262-9179-ee3cdd62fd05",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "72ca8b61-d6ee-4c41-90cf-e3441405831d"
        },
        "item": {
          "id": "5a84cfec-35b9-41d3-88f1-c85297450b37",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6510ff8e-439b-4e82-b6aa-2dfbfc2ef1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3e9eac-11dd-4aa8-8144-129500c263a5",
        "cursor": {
          "ref": "ca835eec-168b-426e-ae37-bb9537634c40",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f39bc42-6c28-4112-b309-960723811e72"
        },
        "item": {
          "id": "fa3e9eac-11dd-4aa8-8144-129500c263a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b99156c9-3225-4766-84b5-1e537fed1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea0abdf-bf98-4b40-b058-33813d6b6803",
        "cursor": {
          "ref": "a8f3ae00-38a9-4f06-b53e-23105d51d6b1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bffdfb20-a4ff-4221-a360-092ff46d00f1"
        },
        "item": {
          "id": "aea0abdf-bf98-4b40-b058-33813d6b6803",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "85eb07ba-0257-4842-a4be-3514cd9181ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b458a848-4415-4cf2-9dcf-c4240b333f39",
        "cursor": {
          "ref": "c02d1a90-4540-4848-ad7f-f97ff05bbf9a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "72c56b49-aa6a-4e29-b45a-22547a93b92f"
        },
        "item": {
          "id": "b458a848-4415-4cf2-9dcf-c4240b333f39",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f3c33edf-b3bf-4155-a118-9e9c42465dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba088bc-f4e8-48b0-be1f-62290549e9c4",
        "cursor": {
          "ref": "8d0fa53d-0a76-4549-a9bb-47f86807c6e8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "046dccfa-cb7f-4a8f-9188-ffb6dece0430"
        },
        "item": {
          "id": "eba088bc-f4e8-48b0-be1f-62290549e9c4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a8f57c30-06ed-4f62-be6f-c5499d55561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2133848f-bdfe-423c-89f8-a1428c7c23fd",
        "cursor": {
          "ref": "3636e090-33d6-4bf6-949a-23062e64e43e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a4187ac-5fa5-4ee2-b1de-aa91cffd634f"
        },
        "item": {
          "id": "2133848f-bdfe-423c-89f8-a1428c7c23fd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "71742100-1824-4e4c-89ff-b0d60990ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ad46ee-c382-4b4b-919e-04bf7978cb7e",
        "cursor": {
          "ref": "826b360e-8504-41aa-a09f-38452f76a2a0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a057422d-d2b8-4bc8-971e-0468a6b76ea6"
        },
        "item": {
          "id": "c6ad46ee-c382-4b4b-919e-04bf7978cb7e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "611c335f-decc-4d2e-a390-f11d467f5e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8e950b-54a4-429f-a55b-d65690ad2f53",
        "cursor": {
          "ref": "4dad2d96-b379-4e5a-bc63-6399622298ae",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c5c30b65-3c78-403f-92fc-0c1503313965"
        },
        "item": {
          "id": "fb8e950b-54a4-429f-a55b-d65690ad2f53",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8869556c-863e-4e15-973a-af1181dbe55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8e9d72-3976-4c81-b095-409e3fa1789b",
        "cursor": {
          "ref": "ee67aff9-4ff3-4a8c-8818-a2a2fdfe52d8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "876028f9-5739-4a54-95aa-27b6e3995e60"
        },
        "item": {
          "id": "ef8e9d72-3976-4c81-b095-409e3fa1789b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9746afa8-6d0f-43ee-b620-ddc498f863e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c965cdf6-b2c7-4dd6-a662-0c9ccbd65c3e",
        "cursor": {
          "ref": "d70e7c90-0823-41ad-b1ea-9d74bd2bc059",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e33e7a80-238e-4a0f-8cde-699a2bae8913"
        },
        "item": {
          "id": "c965cdf6-b2c7-4dd6-a662-0c9ccbd65c3e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a07923e7-69a8-4afc-b633-bb84e5d2f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede049d2-c723-49b4-ba60-353267f48a74",
        "cursor": {
          "ref": "6e1b9f13-9d5f-4b13-b33c-421f5225768c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2a9008b0-a403-47c0-a2fb-6e041bba00ca"
        },
        "item": {
          "id": "ede049d2-c723-49b4-ba60-353267f48a74",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9e22ffeb-4f29-40ff-b5b6-c11a45920ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14550cb6-d54c-44d7-8fa1-113bd4186286",
        "cursor": {
          "ref": "da375b32-4f51-4c4f-b150-186d3adbf390",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "90623f33-073a-4610-bae3-1ef4b8c3a88e"
        },
        "item": {
          "id": "14550cb6-d54c-44d7-8fa1-113bd4186286",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "011d28f1-d4c4-4720-9cca-5d7f2e2d729b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05dc943-eaed-4ce6-95e9-ee17f376e18d",
        "cursor": {
          "ref": "d0c96477-4ba7-4509-ac14-35b55ba4f48b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5bd61a8e-0f70-46eb-9287-3bd313aea5eb"
        },
        "item": {
          "id": "a05dc943-eaed-4ce6-95e9-ee17f376e18d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8d99cd78-b937-4cc7-a2f1-ebd63b2971b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b56b29-dcee-4aa7-9c91-49fe8f963f76",
        "cursor": {
          "ref": "eb246b6a-cdce-4eba-a9cb-30ae83a2f8eb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f9a78f56-c508-4d9c-b935-fdf7739022fb"
        },
        "item": {
          "id": "a2b56b29-dcee-4aa7-9c91-49fe8f963f76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "937124a8-3f00-4cb0-9429-df2b40893d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c1c5ce-680e-423c-b7e8-7832b0987e76",
        "cursor": {
          "ref": "643bd2cc-33aa-48f8-8868-fab80784d225",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "480f6ad9-1487-4320-8a66-cf43a762ec7d"
        },
        "item": {
          "id": "76c1c5ce-680e-423c-b7e8-7832b0987e76",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "74795cb7-1110-4fa0-b975-a3959fa4e419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49df8c30-3ef7-4003-ab9a-cafeeb038be7",
        "cursor": {
          "ref": "5077306a-c21e-44b4-b244-2ffffb77d936",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9200f838-dda8-4c87-b959-d222d9415aea"
        },
        "item": {
          "id": "49df8c30-3ef7-4003-ab9a-cafeeb038be7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ffef6704-08f4-4cc4-bac6-aac2e5791f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b74118-072f-4c3f-93e8-56cd2f892e2e",
        "cursor": {
          "ref": "7c5a13a0-a269-4b8b-8229-94867da09b6e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "65596577-0f77-43f3-9635-aafc16657076"
        },
        "item": {
          "id": "56b74118-072f-4c3f-93e8-56cd2f892e2e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c6f7f45f-253c-4187-b626-c54155285e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66827d99-4a0d-43c1-8f27-d56fd5808332",
        "cursor": {
          "ref": "96756194-8562-466a-9d3f-5348c7cc067d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf610544-5066-4db1-ad3e-c78c3e79e41f"
        },
        "item": {
          "id": "66827d99-4a0d-43c1-8f27-d56fd5808332",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4a424c14-34da-4a73-b926-1330a50da876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f497e17-ceb6-4ffa-ab57-d571e2f47121",
        "cursor": {
          "ref": "242d9830-108f-4aff-a41f-02fee9f23383",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fba04e30-a473-4191-90ba-3ce5665e8070"
        },
        "item": {
          "id": "5f497e17-ceb6-4ffa-ab57-d571e2f47121",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "34f75ca7-7ac1-441d-b810-53a9cffefb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a051c13-d3da-46ab-be4c-901df3bea644",
        "cursor": {
          "ref": "6a9edc1b-1f3f-4d75-92a5-8d2937f96234",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fc6cf44d-269d-43b5-9657-3f62247abd4f"
        },
        "item": {
          "id": "6a051c13-d3da-46ab-be4c-901df3bea644",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "20afee68-685b-47b0-b161-4a9931ee9b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976ba96a-7d78-4b66-a053-e7456b9f3374",
        "cursor": {
          "ref": "af079f5d-a726-4973-a7e5-8c71054cfbf8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c065d061-6eea-4d61-89b6-a884285da793"
        },
        "item": {
          "id": "976ba96a-7d78-4b66-a053-e7456b9f3374",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7503f69f-65f9-4f29-a656-05970591ac96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b93d70-4aaa-4ddb-ac01-44bb6a1ff8a2",
        "cursor": {
          "ref": "66e9d7c0-ee02-4132-a292-fcf916757b28",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "60a069a9-3f5f-4682-8b17-e27e7343fecf"
        },
        "item": {
          "id": "a8b93d70-4aaa-4ddb-ac01-44bb6a1ff8a2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b0bebdba-3139-4f08-ae83-1ef9a21e7c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13a45b-cfed-4ea0-af8c-1ec3b9fec78f",
        "cursor": {
          "ref": "67703b35-016d-4274-8ba2-d31f18836800",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "882b296b-c329-4e0c-9cc9-a92774facb8b"
        },
        "item": {
          "id": "4d13a45b-cfed-4ea0-af8c-1ec3b9fec78f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "35469a0c-038b-4c4e-babd-2f9f6932f498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03729bd5-20a3-4bf5-9edb-541ce4ae9850",
        "cursor": {
          "ref": "8a503da4-1e9a-4276-acc9-33fca20ef32c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d4ee3705-7d81-46bb-8ecf-e730fdf9932c"
        },
        "item": {
          "id": "03729bd5-20a3-4bf5-9edb-541ce4ae9850",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7edbd2f1-39e7-45af-8431-c66d7d8b9649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f36324b-53d7-4381-83c7-cb8346535375",
        "cursor": {
          "ref": "ff9a7642-32b4-4e25-875a-95abc26b988a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "73dba9f0-d05a-4636-ba78-d230bdff2642"
        },
        "item": {
          "id": "9f36324b-53d7-4381-83c7-cb8346535375",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f3aab1ad-e3a1-48f7-8561-7caa0a7fbbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa7ef99-1089-4b00-ae5f-6d85a33103fc",
        "cursor": {
          "ref": "f68b7352-6562-47c6-b1ed-71c81dc40545",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "39405101-1671-4bda-9210-68357a9918ac"
        },
        "item": {
          "id": "5fa7ef99-1089-4b00-ae5f-6d85a33103fc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2fd05cb7-9f1c-4b41-af75-a0fc9e4bf8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf61bf83-8099-4bf7-be7f-f7a04a5f95e9",
        "cursor": {
          "ref": "b2b4e1fe-e95d-43cf-a4d1-8fe1025d2796",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a90ae387-9ccb-4bea-aea1-e69b0331bc33"
        },
        "item": {
          "id": "bf61bf83-8099-4bf7-be7f-f7a04a5f95e9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "29d38494-377a-49a4-aa95-b3ddb4800fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7d6a89-dfc1-4ff3-80b0-c2ef3b8ead87",
        "cursor": {
          "ref": "fa30d5a3-a8df-495e-833a-737e25162a1d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b24f3bf8-d53e-4cd9-b8ce-17d3c8773b75"
        },
        "item": {
          "id": "6f7d6a89-dfc1-4ff3-80b0-c2ef3b8ead87",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d5d7f763-c1ad-4239-ba33-e06a29c45992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e94ede6-8474-488f-80f1-9da37f3fa28e",
        "cursor": {
          "ref": "402a50b4-9f23-491a-bab9-71b99800274e",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1bf39df3-dc4d-4832-b60e-991c6a57e74e"
        },
        "item": {
          "id": "3e94ede6-8474-488f-80f1-9da37f3fa28e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "73989acd-7e28-4e98-8a20-01b0e1118283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096a68c0-0f8d-4b25-a06a-c06535c79a58",
        "cursor": {
          "ref": "a1378fa7-660c-4da8-ba3c-3040d2e0aece",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5961d47b-ee22-41d0-b464-de2985a41ad3"
        },
        "item": {
          "id": "096a68c0-0f8d-4b25-a06a-c06535c79a58",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "403d85d2-a40c-464d-bd5c-f840271f2845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff7792-40ef-4bcf-a34a-430f17e61085",
        "cursor": {
          "ref": "de3e7684-efe5-4767-abb9-68bf74809857",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0bcc9a40-f67f-42e5-828a-115bfa1f5fd0"
        },
        "item": {
          "id": "b9ff7792-40ef-4bcf-a34a-430f17e61085",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "383c7aef-d8cd-4054-979a-2d28830e2f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205ad3a2-48b6-4e71-93b4-47798548a1dd",
        "cursor": {
          "ref": "08cd5c65-6643-419f-887a-a99d6f5137ec",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "119171c5-1a0f-4a31-879a-7ea2b1e1f982"
        },
        "item": {
          "id": "205ad3a2-48b6-4e71-93b4-47798548a1dd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e50bab11-e7a6-40e8-848f-c6175376bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87b4b12-9119-4008-9f8c-5efd5c869bfb",
        "cursor": {
          "ref": "fec3ec59-5810-4518-9a31-919138c00ccf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "99c4cbdf-ab28-4f59-88f7-440ac75bc90c"
        },
        "item": {
          "id": "f87b4b12-9119-4008-9f8c-5efd5c869bfb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a36f6290-e913-4daf-97e9-0c8d6e24a4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5b7eb8-1004-4004-8796-122d6fe8bbd5",
        "cursor": {
          "ref": "f8f3c633-7805-47c2-89be-7e1f78b664e3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ae429967-a74b-4ae0-9751-117c60f31c68"
        },
        "item": {
          "id": "3e5b7eb8-1004-4004-8796-122d6fe8bbd5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a4409f46-68c1-4ec8-a628-19449ba932c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce82b94a-01de-47dd-aadb-13f2e2ff4c95",
        "cursor": {
          "ref": "e957353f-90c9-42de-a84b-a4355a931338",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b1df7e4-11f1-4481-a263-20fb3c3d29e9"
        },
        "item": {
          "id": "ce82b94a-01de-47dd-aadb-13f2e2ff4c95",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b6ec456d-3249-48c9-9d2b-abbb6ad26e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2889603-041e-4ea4-b8fd-c53fabd6155e",
        "cursor": {
          "ref": "ae26b667-1cd1-4c7f-ac14-352f92e9170f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "74fc7353-4aee-42e2-be47-a93a6c99b95d"
        },
        "item": {
          "id": "d2889603-041e-4ea4-b8fd-c53fabd6155e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a917f7dd-dc83-491b-984a-938dc9abc9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8e99b-81b5-4f3f-8dcf-8e168926ba1f",
        "cursor": {
          "ref": "393e7c17-8cd2-4ad0-a237-8ac5b5213f1f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f1eeb2d0-e3e8-4b9f-b932-cf512aa8670b"
        },
        "item": {
          "id": "aab8e99b-81b5-4f3f-8dcf-8e168926ba1f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc8c341f-7c6d-460e-8df1-3a4452c38ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea31830-dfc9-40a5-8538-305c3c1b4320",
        "cursor": {
          "ref": "49fe9873-b1e8-48bc-ab3d-674c9c47baa3",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cddcaebd-d9e5-48c1-803c-e09415d08513"
        },
        "item": {
          "id": "dea31830-dfc9-40a5-8538-305c3c1b4320",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "668163d3-c2e2-4987-b653-c0a8fd1739b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644e58b1-80f3-44ee-8ea8-5d9178a8ce5b",
        "cursor": {
          "ref": "d305578f-88f0-4beb-a292-3501ef40dbd1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a7c8f16f-730a-4864-bde4-7e893ef14ec9"
        },
        "item": {
          "id": "644e58b1-80f3-44ee-8ea8-5d9178a8ce5b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "42a5abb2-1dab-4427-8f7d-e3e110579852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7acfae8-79a4-48f6-87bb-53ff585dc64d",
        "cursor": {
          "ref": "30aba71e-5c19-4787-808b-ab3492fd7831",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a7490342-6f51-4e76-bf89-f9d5bf4acb31"
        },
        "item": {
          "id": "e7acfae8-79a4-48f6-87bb-53ff585dc64d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6a108143-4547-4ac8-a2f7-19dd10720b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dff0c2-9f9b-41fc-a8cc-78882f8e928f",
        "cursor": {
          "ref": "63cbecb5-1239-4299-8d76-43ee204c75b7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "85e75e75-317b-4662-86d4-13cc45bb491f"
        },
        "item": {
          "id": "87dff0c2-9f9b-41fc-a8cc-78882f8e928f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1a50333a-8c96-4a2d-a242-f0aa57bd223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "d4c96c55-2ce4-4a38-9227-6de58bce7735",
        "cursor": {
          "ref": "495c1afe-f93d-46ed-856e-aef13cd27cc3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4c708238-90f6-406b-8364-93b67623c191"
        },
        "item": {
          "id": "d4c96c55-2ce4-4a38-9227-6de58bce7735",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bccee02f-2bc0-4b65-bd92-2bdd0a983372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f9c6e207-5f42-4121-8e29-7a29d03b64d8",
        "cursor": {
          "ref": "8782ee2e-23de-459e-9648-d53afdcc30f6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4bfd987d-0f14-45e9-83cf-47d2eb7c9a2c"
        },
        "item": {
          "id": "f9c6e207-5f42-4121-8e29-7a29d03b64d8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "52031ec1-adbd-44c7-9e1d-bd3c9f4bb9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "26e9e0b8-d155-46ed-bf3f-a931e5e8be75",
        "cursor": {
          "ref": "91f17a34-51e8-43e7-8ada-eea48b283fe3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "256cf6b4-ecff-4891-94c3-cf03d80d3562"
        },
        "item": {
          "id": "26e9e0b8-d155-46ed-bf3f-a931e5e8be75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48bf1ede-8648-44bd-b10b-55669c8d7115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9e0b8-d155-46ed-bf3f-a931e5e8be75",
        "cursor": {
          "ref": "91f17a34-51e8-43e7-8ada-eea48b283fe3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "256cf6b4-ecff-4891-94c3-cf03d80d3562"
        },
        "item": {
          "id": "26e9e0b8-d155-46ed-bf3f-a931e5e8be75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "48bf1ede-8648-44bd-b10b-55669c8d7115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62c2200-e347-4e5b-9f6d-b6245e955998",
        "cursor": {
          "ref": "443c3bc2-77d7-4526-b7ce-5c54bc3f823a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d1ec18f7-90f5-45c5-88a4-148a52665f1f"
        },
        "item": {
          "id": "e62c2200-e347-4e5b-9f6d-b6245e955998",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "24e672f3-8b43-4575-8f5b-ca58c22a1ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a19937-95f7-42b1-aeb2-51ee3b8af8f7",
        "cursor": {
          "ref": "a5ce45bf-b5de-432a-b752-9ffd249272fc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b02d516-1568-41ed-a6c3-3ac9f10a1ecf"
        },
        "item": {
          "id": "a6a19937-95f7-42b1-aeb2-51ee3b8af8f7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7015009f-a5b7-4912-a80a-66294f55db3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}