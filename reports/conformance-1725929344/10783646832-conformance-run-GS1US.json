{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5a75cb3-ed7c-499c-9bb4-8fc8f860a058",
        "name": "Clear Cache",
        "item": [
          {
            "id": "94a0e8cb-b51f-4d61-83ab-b05908c15a45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "196b2f18-5eca-4c68-ad4e-787f2970c37a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bf271c52-d43b-4dd6-8e64-8e9b3594913a"
                }
              }
            ]
          },
          {
            "id": "034b2c01-9ba3-425e-82d2-8bef8aa65714",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ed31491-83c8-4278-8797-e25c3d9671f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e1a0af2-2a0d-4a5b-847b-0a83b04f6470"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "19b28cc6-894e-4dcf-9427-e0a86f079cb5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a62c810-dbce-4c0e-906c-c950091d1eac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "014fd02b-7df9-4e10-a7d6-0af34b8c770b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59ff3d54-19d7-4343-819f-28c1b393348e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d9160b2-c564-48e5-a06c-037de385a87c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2d575cb-43b9-4c33-9a23-33ddd62836c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "491ee932-612f-41c7-b0b1-81a24dfeffa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a1041b7-dfb7-40bb-939f-f48b6824a15e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb73615a-65de-498a-bc82-53dd160c3903"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be40d7c8-360f-476b-b85a-ad18fc441d45",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f1a7a224-9ed1-4d85-945d-6cec0c2b138e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de761303-3c83-42df-a1c5-638a27533c4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43444d5d-778a-4fc0-9d56-681a2b41753e"
            }
          }
        ]
      },
      {
        "id": "aff7ece8-8a0a-45e0-b111-b2ce3df37db4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "47981674-b6ba-44f2-98cc-47c1bbca434c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "321aa67a-fe5a-4686-8532-363c7ca7f9f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4daa9890-088d-4c80-9d15-8f208592fb8f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b344cc-a038-4c7d-85c0-ce14e2def924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ca0072e-a5e9-47bd-83f9-99a505cc591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a7c577-9742-484b-aae9-ad048b12ecf6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47200268-1a68-4d2c-bff3-94f016566fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e6fd9a2-ee20-45a8-9e2d-4687488b33dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb356e10-43fa-48b4-bb20-b84c1b8b4ae2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779580bd-a90b-4d58-960f-107a9ff7af41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b21da058-ebfe-4006-9dcf-1f81b52c4536"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9880c4b1-e472-4a97-9f19-f4aa22701586",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73e2be47-b110-468f-a5d4-880ad0274eae",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9ee94-cde4-4165-ae0d-633f52ba8668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07109b74-736d-4c92-97fd-0e374e45f27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8897258-d242-4137-9488-5b2bc8240903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ca2cec-6d1b-4626-b9d3-07d4ce5b735a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ecb6152a-5ef3-4151-ab32-10c9834ec9de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6a7bfbf-d4fc-42de-8dd3-c80af2f1e846",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c243e339-8a37-49f8-95d5-b9a395d46bba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "df326c1f-5e93-43f1-a5f3-f5161707686a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ae7a81a-4c70-4048-a0d3-052853972fc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "362f5a13-c937-46bf-85a2-3272c17d04cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a3a77b0-21f4-4f70-915c-5ca624cadd3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0be12f00-9862-4a72-a2c8-f686ad7e9cdd"
            }
          }
        ]
      },
      {
        "id": "01c87a56-854d-475f-860b-5459e66e110b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6626a282-df99-47ae-9aa8-49fc43e920fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5126184e-36f0-481e-b86c-ae80c12f6253",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5c8fbd8f-f9f5-4e76-be73-0918586612fb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6edff3-f4c7-462c-8303-144d69024cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce73c0cb-f919-41f6-8c7a-447246ecb0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cbc4b5-f8d3-41c2-8464-cad0ba17dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59b4aac0-72f1-425b-8eec-e6d4ddc502f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b747e4f5-1c1b-491d-a3f4-cd5a700b5f35",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656b119a-8555-4d9b-9aaf-e2bb1005f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77487b9-401d-4ba2-aae4-5b6004cfd274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d55ca3-af01-452f-88e8-3caf659438b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18f27dbc-69dc-4de9-8bc1-c52edd6f5c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f53f52-4d88-4b3e-81c0-62f2d1f4f9ac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa7314c-754f-4f9b-bcb0-827ed5d6f228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ab50a2-b754-4e37-a1e6-e06b02df4fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b42688-1354-4b4d-948b-0a6d93b5eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ea45d1-814b-4b78-bb2b-1f27c93b773e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b392a-d253-4714-9134-84c062488211",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a83feb8-ac46-4c9d-94dc-ddba86549aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d671c09c-195d-4d67-94be-1435b0663359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bebb35-e6ea-4dde-becd-995329efcb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26bf206c-10dd-408f-a4c8-61c5693f66d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85b3f2e-6989-4193-86b2-23aec8a1cd1d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee78564d-02b2-4d4b-b9c0-775acc7ca58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3163a361-1bd4-43e5-a021-1261af0df305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc038262-cd1d-4f03-bf85-124a4e6839c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d143cc5-3339-46b5-9d6b-68368197e2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b00a1ee-403b-46fa-83d9-fcae77819c43",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6a596c-87bd-4d35-8e54-affd489a6e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9434d8-75b9-4a32-aab6-d3968f031911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eb216b-1499-4a76-8128-14fbd91a5680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3552a4ed-6519-4771-b174-c5e263833af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb357930-8ec6-4308-b630-de2cd6acb46c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a84b2e-ece0-4a52-a32d-ed4e4714fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58c306b-7a73-406e-8ab3-e56d3c2e3057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a952bba-9ca0-42fc-9652-067db84d3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f182fa-4ce1-4733-9599-9e54dd0eb06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de4eaaf-2223-4aa2-9b5c-067919ea8605",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eac1ebf-9bfe-457b-8ab0-14bb87ae2204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b18611-6129-4103-a732-e5c6b3a76202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd47c97-f7e1-49a9-bdab-e36a50e6e25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be2b684a-f3e7-4005-b5c5-549862d8e636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14891afc-f7f2-4944-9720-e5f56625803f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e50330-c8fd-407f-b8a8-d91a50189baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6bd645-dfe3-4090-955b-570c6cf97703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cf07cc-1c67-48df-8cd1-78c2556d8b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a3a938-b367-4b6a-a301-35159fff1d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e935e898-aa7f-4d10-9a08-4f38b1958c29",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fc766d-557f-4003-a954-d71d25f94097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df617f7e-d596-479e-a74d-9bc3af7914ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6af0c6a-4afd-4ac2-99ac-9bb7806e7eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2a285ed-8f28-44a6-a6fb-507bdfe0c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56cf118-73da-4cb7-87a8-28664f3b461c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc2fed0-830c-405a-9d1e-17b70018bb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bb81c4-e1b1-487d-a006-13b6151c1ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27736326-11aa-419e-b84d-9033c084471d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed9b57f-5e7d-42c9-81d5-264dec12aa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63510c-fd8b-4e7f-b5e5-83e0c049eba2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa8bb9d-953e-46de-8048-4d6076501266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71321eb6-8ce8-408b-b8d6-797888f63d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cee804-b4b6-41b5-92ac-1513a193d688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4538819e-43e7-40cd-8f62-2e1f55d94270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edd78e5-0a68-4963-9d02-04c8b2dd37dd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b2068-dbb2-472f-b0cb-a82193f48305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401d3b92-1d2a-4f7c-a8ea-bbf0f9ae5105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccace26d-58f9-43df-ab84-759b9388e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44bd1abd-df6e-4ca6-9df6-e6298b906079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a6960e-b7db-489d-ab08-684c7d7b5949",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784a40d2-455e-4c27-8fa0-94b71f7a46ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6fda34-4840-47fe-8007-a1d950d3bd20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760992e7-1947-4061-852f-2c20571db9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "749df474-a9cb-4076-95b4-fd6c62871340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c686c9-1e55-4f4a-af4d-51609f4031d6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec32bc6-5533-417f-8844-d791c810a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf97dfe-e2fa-4ee9-8898-b197f4c1a281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aabd34a-1cad-4bc9-b2b6-98c43a8d13b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08f46b30-90c3-4dc5-bdbe-6411b3d09c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804e2827-2138-490b-9a1d-ffcd9f530a27",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd2e0f1-0dce-4d61-8e45-665117f890a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5106437e-3022-407f-95e3-e576b472b742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363669dd-3fff-4f8a-a268-dae168faad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0682d45d-44fa-4254-b407-d74e7123cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8804643e-3197-415d-87cc-2652e9c2b741",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d0346c-ed0b-4f1e-8ebf-6d3e745e2e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afe3283-c798-479d-bed7-c7dd880784ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669bc5c4-9951-4886-bb30-19ea8dd4cad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a726a4b6-15d6-45ee-8f99-cf0a2234f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdf5665-8d49-40bd-a674-7975c8507e6a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68285eb7-5dec-434a-acc7-0f800ea3105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4eb41d-9a31-4868-9b57-f7ed20508a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abba71c-b387-462a-a2ec-d92142415327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e5710c-62df-429c-800c-78c9b65b39de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd301e-8ddb-47fc-8fe6-fa62866d92c9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af924a1c-d82b-412a-86a3-098223997f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71e9362-7599-44aa-bd7e-7c722ee20e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c5b1dc-e34e-4d58-85bb-779bbe86cae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "029360d6-94d0-4ef5-8b38-85a8c1b7525f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c569991-7ba0-4bbf-b375-f41f890c4f04",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4038ff7c-b823-4cc3-a57f-18c61167a205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9ac683-d810-4089-becf-b5e96708c681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50da5c1-67e3-4b5e-a4c6-596a537eface",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36224402-8aa1-4a8a-a9a5-f6e7e271becf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa25c579-1141-4991-b550-06abf43b1201",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a98637-6211-4ffe-8009-084a66bed990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084c46d4-ed72-425a-8458-ba83305661b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478ed8ea-6c24-41e0-bb62-05fbf559d4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7a92cb-54ae-49ec-94e8-249fbe156579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39dc6ee-dcdc-4d8d-ace4-ac12252a1f06",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bf41a6-5f5c-403e-979e-1fd34d55f20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be06bd9-2f97-48ab-9789-4d4eea3a9d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a71ed-8502-4969-bb65-494b1ecc9391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dac407e6-e0b1-4616-9769-323384360ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb336a3-d619-4d09-9c97-b4cc10f9ff1b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bb566f-6ab9-4aa2-ad4e-e9578e9eab81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04244d8e-7509-46d5-a6e9-6fb71541c7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabe592f-5c04-44bf-90cc-165d887983a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24b137bf-4844-4496-8d30-821b3cbb2ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a97e9-8c6a-44b6-b023-1a4a7e180d09",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994d669c-4c29-42cc-a122-aa7891fdd7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d587fa-43b2-491c-b606-1dded402fc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f62a0b1-2a91-4350-8182-50ecbff78962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf566092-855e-4598-a3a5-7fb55386993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b657e5-6c57-48fb-8ec7-5293ce56360e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09d99f3-94a5-44b4-8a1c-fd33dafadb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09ad7da-60c7-4e61-9b18-9363ed56be4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fcaec3-6b8d-4c75-b63f-504f2a2e3fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e15f255-27e6-41c3-b4a4-46e0ec35d3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a313f2-2482-4098-a462-6acd9d2eebfc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5fe3c-19b1-4a04-811a-e2f01aa467b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b644052c-e879-46ae-9a97-f0730fda5edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849c9cdf-9918-416a-bb14-4d166ddd3e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fa22f4-d6b9-46f0-9b77-e12d4a162ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2d59cf-2186-4c98-9159-8183065478ce",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af251b7-0085-426b-aece-e40079fa3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7610a08-d590-41fe-a970-9d59714deb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a4bd37-dce3-4fe4-b965-251b55a7001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5f3b39-b9d8-4ec4-a785-281f428acf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2e99cd-145d-4bdd-8944-74f10071186b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc43cf-e263-4944-85c3-8473aa8e1f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da51a6f3-acae-472f-a8b6-d572f6d271dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3ece10-14da-42c8-ab5a-281d0e14e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "492241a3-68e0-4def-9617-646086ed4a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81178d9-4f84-4933-9681-8e0772441078",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a3ebb-8bb9-4b5b-8551-97544d53a4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f505fbdb-b5b5-45ce-9f2a-600d49655d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c2839-27fe-492d-bc2c-2647c039f7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af73206a-7440-4866-8207-96ed504705e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ea4c44-8a0c-458d-8b1d-8010b799fe9c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3cd6e-a576-40b7-8c49-f0559ce86f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6bfbc7-2f06-4f1d-b3f1-57dba3a2c245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42acf3ab-4f3a-4213-85be-7d6d52a9a750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "993b6b92-2052-402e-af37-e8208766898c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406ac59b-c34d-4f6e-91b5-75f872d77697",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab32934-63aa-45be-b099-6fa87c4f96ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441e7a72-17d7-4c87-9a5c-139d829ea3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d2a7ad-c9f1-4503-82f8-38c18f822e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a3552a-c1b9-4d1f-ba7b-82d354a918c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6055060-1d93-41b3-afd1-0d2d745a344b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc8865-7f19-4cfd-a6e3-843e2a2c2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c2cb00-0576-4b81-8c54-ca4d92692bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caf109a-2562-4b5c-9689-ed4c31ece5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e53df63-309b-4738-aa26-c2efc0094711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb2adf-af6e-4528-b1c6-5de7bd1b7797",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf08b8-d301-4d1c-b851-4161aeb53cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201a4506-2e31-4a7b-a44c-7302297a2217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a18cb-2ff2-4c8e-bd07-96cdb1d9f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdf5c69-4815-4f73-8fdf-1a686b2d59e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0221c4-07bd-4d04-a628-6ec330a5a50a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8b67bf-a365-4005-96e0-4216e0896335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f517cc15-6938-4909-a4e3-38ae479802c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4404f04-e933-45cb-b2e9-254f52582030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36f5139-850d-4210-a8db-ea5d9bff165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f679d1-66b9-4735-ab5a-f8c4523d25eb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788acb30-a0cd-42f0-a720-76082ece68b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c4f7f-8ca6-4683-85ec-aa197e6d9dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f39c74-d109-4247-9f07-1ee883747830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6f47538d-ed0c-4101-9b57-24b3db9001ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c62204-1f0e-49bf-bee5-ec07feecf70a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d2c266-13a4-4e0b-925c-7afc211f9461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e8e322a-6200-4000-b277-8af071156d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4254687b-d42d-418b-93c3-7cfa01b8563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8b5013-1f7c-467a-bd50-7c8ccb053af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3f90ab-f945-4cf4-b030-1930c98e12e3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80a0e75-eee7-4664-b268-df7eea683f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5440f4ce-0cec-4515-9432-86cf5c8bcc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c764e88-a6d6-434a-a05e-5297e916aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb9c2c8-b813-4fe3-bc08-b4f6c570c0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd76d9a-2979-48a8-a806-4491b7d3ac0c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f5c429-9a2e-44f9-a78a-68bf49b52c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d119b0c2-74d6-4844-a937-209360a4c6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d4cc46-b9c8-457b-86f2-e5ecd731a6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e69b241-9cd1-4589-9f25-6afa55afdf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13febd0-82c4-4946-a4a6-bb50857ba6f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c5c76c-48c6-406d-bce4-41776be31bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62626e14-446c-44ae-a1eb-2ffcb1317883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892128ba-75db-41a0-a300-458934ca6ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9950e7be-3119-4d4d-a86f-95254f96cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5179d4-5381-4d2e-945a-8cf66c7a04e5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f30d24-0957-4571-ac8a-5fbcceede10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709d1fb6-e1e1-4618-81a9-3eb550ff871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a341dc-0f51-4a61-8cfe-5f6c571d5bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e629be-5197-4cc4-b8d5-7e8d6e366e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8339376c-dd5e-4b13-9b71-80bcfa8e246e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faafabf4-573c-40a6-acbe-8f97b7cd5c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb590c8-0d2f-4163-b34d-6dd978bbd685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59b5d4b-cb58-427a-b6ca-a04835bf90a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7fb0ca-dded-4fdf-ac56-842545883954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635e622c-9199-452a-b87b-b0422a0c606a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af563373-4634-4628-858c-cb49d47af41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e62415a-d21c-4ea1-8a9a-c17cb272ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8306827e-fd00-4a0d-9ece-3d62ea0acdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1b484494-af7a-4c88-a6d9-432bf7c99d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca2d53-1420-437f-a63a-fe7b14aff33f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1839db3-85c9-4263-b3b5-a91ce73c17fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30eddab-12f8-43ff-a925-09d0162ca991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04326bd6-9d21-4a80-abcc-f79fbcd68904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "485bf420-2276-46c2-9a9c-be22a9135692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a229d30b-8c9c-4d4a-9048-6ef9e081fe1c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e733c844-b485-4293-aa88-f363d2a0cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8414c79a-668d-44a1-be43-ac447b37a52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12dd7b5-a026-4888-a583-9fcd723ab8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "10071789-6912-40e7-b9ec-f806f456101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47818e52-7428-4bf2-a436-75c4220a33b2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa842af-25a2-4adb-b9d9-6ffd8a0c0117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20c8607-e43e-49e7-b370-f397c5a61d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3771c7-104b-4ccb-bcb9-4209dd5ac56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f425d8f-c8c1-4a6a-8594-8a907a7bb94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66d4e1c-e9d9-4c61-bace-df0672375eaf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a278b9-6cbe-4b18-af5e-d49daf53bb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e08c41-dd71-4024-a308-7a809bfb8fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b03cb54-cd7f-49fd-834a-cdddb63167e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b866c3a-0722-4f13-b6bc-3651675a9ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63beb4db-d1a1-45d6-8f80-650165dc1f44",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14afbd25-34fa-4ec2-8806-a203c2f0dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fd0933-ee7b-445c-9dfd-ccc2ee72a609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f059a22-abc4-487e-bd7c-e7564ca519eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17cf207-6929-40b5-b229-55ee0fcac5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd569c-a040-4e24-ac30-c130eddbccb2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e07004-9815-41e0-9c1e-510576cd6b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba2644c-02a6-49a8-b768-095fba95fcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280e67fb-7d34-4a2c-9c6f-9b8f62ffc5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1e1d4b-5f72-40fa-9c81-60ae1aa07482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe506dac-309c-4674-b22c-5231654aade5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd371aa3-23c8-4da1-9795-b97e64205ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1a6d0e-8aac-4233-8172-40a7f74dcd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f3ff59-2079-41c3-826e-11592a2f4e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c991d66e-bcb8-4582-90ee-3a01ba925ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c14a2a-e354-47c8-8837-8b1c20b41cdc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482be35b-3a37-4258-a156-22b91ce4fed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acd88ea-0a12-4ddc-b8c2-edecb4e13638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2cb04d-c116-42cf-a09b-732c491c6f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce99353c-5716-47fc-b694-d8ca5839278e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dde6ac0-f8b0-40ff-81af-c4c923e164d0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa5ce94-6d6f-4cd8-a415-75486783c64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d91c34-f3ba-4c48-8e87-1ce41b3efbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58f1147-c924-439d-aa8d-729743c8523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d97e60f-ff89-41d9-b912-c2a36307135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7346747d-a7a4-48b9-b1eb-8418b7131141",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2bd345-6505-410e-ac9f-100abbde3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44088100-194c-4b51-8c68-a2601569d443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a726104-19bf-4a42-acbf-d27b43a4d8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0d0d2c-0c85-4d27-95a7-71ad81e567e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2882e4c4-4c80-42bf-8579-e86feab6ad11",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463da59f-9535-4ac1-bbe1-f16ad4c3f212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d35dbb-0a52-45bb-8be6-2829bce90702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c05cab-356f-4451-b3ad-71e102010fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfe4de9-26bc-4451-b7dd-8f154e4547e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c98048a-6f8b-4135-ad29-bc29e8144910",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e055f7-634d-4777-8abf-6d7b0119cbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2a83bf-a319-4e4c-a00f-8cb534440336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b279047a-6068-4dee-855c-e6128a35637e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e313462-8556-498a-922b-9ba573ece0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba1f06a-2349-4307-b17d-9c7d33d0a99b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37dbdc7-ee6a-4e51-86e0-c272edaf844d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee80701-185f-4ed4-8525-96fb083859b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6dcf4d-3295-44a3-8676-ca6ee054b0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4167ec-a24b-4f05-ade4-bcdcb3e6ee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa7acb8-974b-411b-895e-aa2ae83d33f7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85549668-729a-4bab-b6e8-1ef72b1dbe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd4fcca-3042-4a8e-ab1e-c1cfa96c0b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67946b4f-5ffa-42cf-b167-aeea2f771aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aa158ca2-843c-4de1-ace8-bd67560b41a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d674d6d-9045-42a2-bc24-8c013a76d906",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438e291c-9360-48e6-9351-e12a4d6adc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857bca1a-8c29-4d71-8cbf-27262f5e7faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f15344-fab4-4289-9c75-635790fc800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20ea10de-38af-448c-b37c-c6b7ab00dfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9df41e9-3b0b-45f9-874a-4d36d3bcd9dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b156f3e2-0faf-433e-b4b4-6a3400eb027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f53f7db-7aa5-44fe-a5f0-2706dbb7b2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc0a6ad-2529-4433-af5b-92d4ec2eab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7757ec2c-3d72-4e94-a010-433cca1337fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e078e5-fcd4-4eb8-90bd-2a5bc75b7056",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f62b47c-0c07-4c1e-a5c3-2886a3e74a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3787ce86-8e51-4907-910a-4651a5cb4a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4afff80-e4de-424d-9dd3-67f85cc1a13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce861af3-f7e6-40cb-9c4b-54eb7b08d61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1a8d6e-2b89-46c0-a28d-307f5af2b892",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c7d004-544f-4114-ac8a-ce7b6f9adc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793db49c-1fdf-4669-a78c-f6f343ff7ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3344674-b69f-450e-8ad9-5ceca24116a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a309106-116d-4d01-9200-06e82bed30c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f05a696-81e3-40a5-894d-99b1b369dfa6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c2ab80-25c7-4f35-8dc6-59395a235d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa179bc-6e0e-4255-93e9-cdb77baea5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8bfad4-f1e8-498a-8505-8911b5b6f410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dcd5b2-0c12-4fb2-a800-02401868b3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7e80a-0b4b-4369-9e15-5d4f49a9f84a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6b9419-cffa-4372-bfab-7445522c30d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bffabde-5e0e-477e-b699-542d9814ba9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7eac15-4efe-4f9c-8a1f-a3d7bd93444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "761a8139-de67-4aef-ba5b-b8f14b60e780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c59bd-5677-492b-9451-5fa7677b854f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f814821-92d3-409f-b141-a28cc04db0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5d5b8a-ed04-4cde-96a8-4b5c12ac7d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5330022c-7f4d-443d-968c-5d53658a79bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04005a4d-a4c6-4661-ab12-879303433b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32cd8c9-01c9-4446-8734-0668e27153d1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a88a93b-0962-4a72-8d98-905d309d5079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f245929d-b085-4699-aa11-58bd42ea79c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43b4975-cb22-4992-b921-ef4a65149178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a6d523-0e9b-471f-93ba-59d49ef4846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18be6307-30ca-4acf-856a-8ed046885f4e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db6f0c3-cffe-498f-b37b-e412e1097b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6a2dff-d032-43c3-a812-c298d980d4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a1244-d79c-43a5-9bd8-15abf4ad689e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba05e0b0-5388-44ba-8578-ac0bc4bb85de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d5d7c1-4601-4433-a8cf-04184978c708",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b22cce9-1fd9-4699-80ac-0f6a43e56b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674a0f1d-647c-452b-9d57-bfe51695f802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a4935c-3591-4185-a715-32ad8d82a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "668286dd-5fe6-4835-abf5-5bc713d3db63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d30792b-2535-4e3a-97cc-7533ccda5cad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd1d2a-066a-4b2f-96e6-eb994c49ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d225bee1-77a8-4e88-8c75-8d7fd32f77ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006fe12-91c5-49c9-a40d-c4142399f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98d82a7e-444d-4734-9a9e-48f0c8f2bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7221427f-264c-4fd1-9477-f4e778f45016",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c9ee1-e20f-4335-a58d-6912b600ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d6b82f-92ca-445b-b39f-6b34ac27f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf068ff-4574-4385-bdf4-e299f381c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2ab240-9750-4f3f-8b6a-4b853c8fe3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fcc069-4c1e-498a-b247-62ec8a8c7f75",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d898afcf-5e7d-4efd-8c07-e890c92f50b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1ccc73-9fe7-492d-84ad-c93b20ca1925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccb4402-a109-4738-969b-3619a86db3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "526ebfb7-01fa-48ae-91af-fbc154bff7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68574e8-0a4b-4a8c-b59a-679d23335258",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1988520-554d-401b-9b4e-25783b504074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae919514-9526-4347-ab01-58da2ea42415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc7c76d-767e-40a1-8c40-83483201e07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b91c40-180e-48c4-a81a-735970945af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161ac033-b12d-4298-95c7-9e3d9e46c9f0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed931d1c-ac49-4e3e-a383-ecab14a29732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248028ef-ab1d-4814-b435-055f816ac477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566b058b-7739-45ce-a90a-ead82ff6ba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bf1fd1-503a-4f39-bf98-eba403c3c2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7884f3-398b-443e-a912-d2a587809603",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9ec4cb-e9ee-445b-9f77-a32a6de348b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caa4ab9-23aa-491d-b525-456e676bd1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbecf08a-f9e5-4dd7-a088-31f741c770bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "675b923f-7da1-459d-bc50-b7e0a412c81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcc61fa-db2b-42a5-b28f-e0365b569b28",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85e407-179d-48a5-9459-6acf879b5ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a81c2e-5f04-47ba-a5cf-27497fea68b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4d0f27-8870-433e-9550-7e48bfaf7823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e306d0-3bb0-475f-97b5-6cfe71bad9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9789c0-2f02-423c-bad9-1d5234129741",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7cafa8-487e-4695-b85b-1657f5c16065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b13560b-56c6-4a8c-b158-8fb0a91d1742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c41cc97-386e-4d22-8331-1d0f25160810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7dfcb7-e572-4ed3-b607-1c3cb0557a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71e5c28-32f0-43a8-8208-c29703e98c03",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd657860-09d0-4735-bdbc-0d31b486551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a6ed0e-3a78-497e-8cee-b45943fe00cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7be093-92c6-445a-b112-50906581a1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b8b2da-84c0-4f91-9b97-abf15d6c4cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b4f427-53a3-43d3-b3ba-2a978963b883",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f027200-7fb8-483b-b195-712daa54478f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616b4df2-76e7-4cbc-94d4-7e776fc89750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef1ac9a-6599-4f42-ace2-46dbe99da1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21901d5d-3958-4428-918b-318a751b3964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d4c987-2335-485d-ac03-c448456fd860",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880294d1-2327-40a7-af5d-6d75dc53c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2434903f-15af-406f-a221-0c9649e8621a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db6d1c4-6b53-4453-ba5b-85d91fc8f600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9de878-d7f0-4611-acf3-44eb04fbfe79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e0c5e-2d9e-4dfe-b534-131fe56d2c4e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeb87fe-3010-4303-b285-32fe9c4fe59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d068a4-322d-489b-9b09-58fa4e5df1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4144b6-5a13-4224-b9ab-71b5676ca277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78d1a94-c247-4242-82a5-152628420980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afa4444-535c-4317-a8e8-563d17cceaf0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3d8fb1-0978-4f73-bf8f-80c1bfbcaae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd3cea0-9ac0-4514-9964-068ec6e9f49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b99cca-d439-4892-b434-7333ddb48afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "265e0f15-0be8-4ee0-8757-77e45c332da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a88668-34c0-440c-8772-1b165086e59f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57972a26-8560-4815-808e-532b43262d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4debc26f-5aa1-48a3-9841-0587eb7fbbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6d0125-c0db-4cea-a1ed-4b0984a0b59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7075d15c-c7bf-4c03-870b-e882de276cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40d16ac-feca-409b-b3f3-663f7dd3382a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41eb4b4-709c-4303-a400-97c2121033c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50562425-aaef-4437-b04e-f866cbdb744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032746fe-8e87-4439-9dd6-697ea7bee958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad7cf5e-a108-468a-9c68-11e86b4d4046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b2d98d-659c-4f71-8097-c5759c2e5190",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8629255e-4fc4-4747-baae-bdb71e7ef81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b72984-a0fe-4cf4-9745-b0414b7bffb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e000745d-5d9f-4cb9-b734-f58e7fefaab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22cc8f2-72f2-4fb1-9305-0fdcba3428fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3274bf3c-9bf1-4072-bda6-9c4bccfe323b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26209c81-b8d0-447f-ad0a-4be0535d1d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95555c7a-2bd4-4c46-972a-8ee905804722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586c4dde-8087-44f3-9d47-afa8786bf005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfc22b0-465b-4e2f-ba25-4c0e184adc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16182402-ee9f-48af-8c4c-744c60535cbd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9325c9a7-976d-4dbc-a319-907c52bb2982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adad552a-58cb-4c22-b4f9-f040b417f8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58df663c-4257-4d51-be69-99e57e514ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b279550a-3229-4e0a-aab4-080c66de521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7562803-f7ca-40f4-9ec4-10643bb5de4f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d789397f-e395-4d1c-be68-4ead4cb55d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a95435-bf1e-4c83-8da0-16b130a14cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6fdb1d-e4fc-4caa-89f0-ba12fbf1b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdcca66-342b-4aa4-a743-4faf74004b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b373ed-0e57-45dd-85cf-3ffc58fc5a1e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7a369d-8e86-4e66-bb85-3cf60d808402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b507c1-3c6c-4be9-82c9-55169d2adfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2147bd-7e32-4c31-86cc-8df20e1d4c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0f49aa-87c8-4a3a-9de1-0e39eee904bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9a9bcd-eaf8-4038-a47c-2a64cabf3176",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb2a7d3-9528-4939-9d26-58f32c12c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb584cd0-3492-4805-89f0-2222f1b12bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4e0dda-9dcb-4479-b97a-515aef531244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8500d026-d453-488f-a107-70cd23853608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b1cb9-bd6d-4dc7-8b46-ae800eddd714",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac835d-dc84-4aa6-a851-80aff11331e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f486fe-a15f-4912-b4ae-aafd257c54c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f661b9-9f42-40c8-a913-69910d67a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67eb85c3-0c5a-46d5-9316-94e55d788bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409902fc-f404-4f82-a21a-00282712ff39",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8467f53-6396-422a-b680-70645b91bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff070f25-8ef3-44fc-9585-b8f3dddd22d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b5da8-9d8b-46fc-92b9-bff965962f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e715f183-ca56-4022-aacb-c6fd3503dc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd437319-457f-4e28-a88f-26e7d806cf01",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e89a645-a708-460f-ad09-9fe854fe14c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db33c02-9092-4164-a0ef-1c7bc719bd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca68282-8d23-4aad-9ae7-dd23c6d81d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c07a158e-d52e-41f3-a80c-107fc85c947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1525b132-274a-4c2b-bdf0-c65ff3a420d1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ad35eb-f1f4-43d7-8d71-8784a645f8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039115b2-0447-451f-832e-ba7f6ac827c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d7be14-5ea2-4c15-815c-8d90b0e40b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9158b4b7-eb81-4fd1-8888-295e4be02b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f433a72-0c0f-4a65-ba21-0fb4158b2d8c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747ecd58-3459-44c1-997c-9c686b5ecfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90cbbb48-109f-41ed-b6b2-2ce80dc96e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d2b975-0ca3-4b8e-81d6-51d3e99eb805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a722ae-be0c-43e1-90bf-b211423cbfa8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea8da282-4b06-4d6e-bfa6-ccf4266fe9cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf792da-4ceb-40cd-a97b-b4de10f545a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e526f-731a-438a-9061-89ca9394875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15d5e233-9df0-4a8a-9da7-5bf58d64beda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb57cee-c281-4b0e-bec8-6ed4da45eca2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c550464b-6755-4c96-a83c-a58045b74b6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66675e76-8ff0-4a54-85fb-f9aa69f0a4d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36389919-22ea-4491-81af-cac11a0f0927"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa3ea6e-b4c8-4d68-87fa-fc6232a52b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11b3e871-53e3-4bda-90ca-035aab5be3db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "715ade5c-6c1a-4eaf-a573-3d9d5bdbad80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7aa9f92-c8e0-42f7-b90e-99bc497de021"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4c74bac-811f-4ca6-87d9-dc66d983bec6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "771f41d1-6eca-4fee-b5ef-590af0e9c842"
                }
              }
            ]
          },
          {
            "id": "d2f5aa89-e9b6-4978-bde2-d950017f6e8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c390678-2d8f-4281-a315-d929c1d32949",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "baa888e0-6360-4241-9a0a-0e733b2124c5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ace5e59-cfbe-4c7f-bd13-322393c3ace2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb3d11dc-2dd2-4c56-b193-351ad44cfa1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb42f1-4702-4202-8586-bfde3384e7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b852c8-f301-4714-9631-de309cf8f9a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a20ab83-cf1f-477f-85e1-e82dda60cf55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ec2c954-256e-4cd4-a008-8d0802d1658a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "817df698-4544-4f0f-8a76-d4025ba9b72a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3f4c1af-778c-454b-82f0-f55d22a799d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d29284e3-0539-4b18-82d0-312cf0010889"
                    }
                  }
                ]
              },
              {
                "id": "266c6862-6c6b-42b3-9794-79177626890a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ebafbf-4d08-4210-8180-8d5c053328a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c1676f2-9d5b-43b8-a1f9-e547ed9b3be6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "415a73ae-eb67-4452-8f53-a2565ebcfb60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb1406e0-743a-495d-b66c-ceeaeedfeb0c"
                    }
                  }
                ]
              },
              {
                "id": "bd9662c4-8932-4d9f-98d1-80013e17a475",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddf3b4f7-0286-4310-8434-00dc13c44cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b454c5c6-3e29-4e3a-a3b2-ab77dece7923"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab6f2cd1-a89b-431f-9e85-24e86153c435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02b4ce13-bd31-4a81-acb6-297e99efcfb9"
                    }
                  }
                ]
              },
              {
                "id": "622a399b-7bdd-40a3-8ed6-c478ef7531eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fde59b2-9a1e-4a60-81e5-fdc3e006ab62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18ab69a7-ce4b-41b4-ad3f-9eb44713a1f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da260a5d-d16f-46ff-b3b3-2e104d34a9da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "27db788f-2293-43b2-b47c-ddf4b7a019a8"
                    }
                  }
                ]
              },
              {
                "id": "41a0953e-bee5-460d-9868-b64d2133d23a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8ebc0b-5b63-42cf-8042-dfc58223455c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab9ed3d1-b3ab-4d3b-9164-bec5b773223f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57a22a77-56f8-4c6f-8c02-3e579b4e987a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ff073e57-27b7-44a1-b372-a82719222454"
                    }
                  }
                ]
              },
              {
                "id": "037d9957-e612-4dcf-b875-1b3669ddf834",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4baf487c-3ac7-4687-bb68-c308f86ae96f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c62b60c-de69-4867-af0a-354b5e2ab892"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "471c3374-9c97-4e2b-8ed5-085f1e8b61e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f28da430-b50c-477a-8485-be372e0cddfe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ed142ba-ba00-427f-8768-cf085869196e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f40c1f9-02a9-4df5-b165-81adfcef10c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "596c9336-0969-4573-82bc-da09b9d8bc80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c74a41e-5d88-4a0b-a5c5-5d15313f5909"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df4a3a1c-3433-4fb3-ac6c-dfe2184aeb06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "39704f2d-69ad-4250-be71-d5c6a9664600"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96f772e1-9cf2-43d6-9d0a-39b5ed2166a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c18b9c3-9107-4d2b-adb0-007542ddfa78"
            }
          }
        ]
      },
      {
        "id": "ced5f7b6-ba46-4945-99f9-06f32c857e97",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d88e5a25-4ec3-4721-8e9c-b3d35fa2daf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a417d301-ca0d-45a3-8d62-d020150590cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d8d3835-e1ba-43ee-b0ea-5fac3d281eef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54fea09-1edb-4de3-9105-3fa5e794b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ee0380-5039-451c-9d58-a4895bcd27c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f177a4d-3974-460b-b643-3330e9cf73ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf1416a-2a5e-458a-8cd2-2dae98db53b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180c7967-43ab-42f3-8e65-3b56c6420c9f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c8b467-5801-4547-b8ee-dfc3c2bb85db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f8889e-cee8-45b9-8224-e3edb61e71dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df04c053-df57-4aeb-929b-65f7be30c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b01aff8-ef1c-4a2c-b2ed-1b85bc7f19d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73cce21-31fe-45a1-bbd9-3c8f97d728f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd30e45-3df8-4f55-ba00-00d5a19f464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d184225e-f516-4744-a09a-9e2ed2f1fc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a5dc7-bda3-4b1f-a51c-76f9b9075fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5a3a50-7279-41da-b8ac-127ef4879dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58a413-f3f2-4a34-96b8-f049b6526973",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b459b56-2ac2-45f6-bfb3-664d71c5b2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a569ea-ae91-4200-a376-41d4fd962872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35a1d86-5c0f-4f85-aa6d-8b620e1bef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd39ed43-acfb-46a9-b665-8c8ef4525187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e51c5-f0af-47cd-bc3d-d2e3405b8655",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8949cba3-3a9a-4225-83b1-a956114836d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc1b1bf-aadb-4d62-ac3e-709dd913265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9db5b79-7740-4676-87db-6b88fe2b9720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c71378a-3379-4f6d-a5f5-264e62ec6753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00552c11-60a6-4023-9c4b-59880fc4e47e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01dca2f-92e0-401b-b141-b18af48c716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eff4a55-cc20-4f14-8265-3dd737c84bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3babcce8-b1ab-40e8-9d38-e989a4792c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7f68fd-a652-4301-a8f3-238ebcf77b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae36cbe-588f-4dad-803c-7cb4869a3235",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e400f2c0-f734-4a13-996f-b9e8d53e5f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06679b08-6708-4497-bee6-c917da1e9d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f373e6-cd98-4824-8d5a-5f9a4130de4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9831d2-297e-4920-a732-0aea3ec4d597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e871623-d1a2-42bc-a4e4-2d726803d440",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5eb8722-eced-4a23-bb2f-d83a90cb90bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8936f20-a58f-44cf-b0df-11d01310513c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4603800-a44a-40d0-b3e7-1be07018665b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4070205b-e7ee-4b73-b0d9-7e14c8c6d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77605755-8365-4318-97cb-2f81939c04a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463b675f-cf6f-42f9-80d4-b208d5910e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e44d911-add5-4a9c-be65-afa6f7e3b291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a53f50-4ebd-4736-9a00-d098b8483f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "100b2a9e-d6bc-40d2-8255-ae7c093f3cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50039e04-730f-4389-9b96-f1c928f63471",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41381d23-e1cf-4aeb-acd2-b964f0da4090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc49cb9-b87a-45c8-872e-4dcdc5028b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa38b85-e092-41ea-b786-73bde4a89601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5effcd-e821-48af-b083-335432fc2a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9515979a-43ad-4ecd-9af6-9939bbb9bf65",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba6cf56-9697-4098-b015-0c7f952ec7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8cc802-bf1c-4990-bfd2-f5d7f79e4afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8597150-cf98-4761-a45e-476d5a778270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f403ba48-27af-499c-a540-c0879e3d2fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d52a55-97e6-460b-bd1f-308ca9799e48",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee19ff01-c1fb-4926-9b7b-a938e980b190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8a04fd-e47e-4bcd-9691-e4a0d5b0200a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03df972a-8242-478f-9dcc-29376c1b3fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1691a57d-f806-4676-b1d1-1571ee4cf5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405334e3-4016-46ca-a7c8-aade0d56028b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e3f294-49cd-4120-9274-326b847892c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e133a771-9a78-472a-a345-7d611da79bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31ed0bc-9e2b-4d0c-9d95-ca3d9f088213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfa1b7c-ee80-4e3a-a313-b3ecd90e64cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f3dc74-04c1-45fc-9b44-ae0c656a4e9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8681c5db-eb3e-4d63-8acf-6c40502c2338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38b5aaa-5eda-43c0-a674-d510b0a743ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd500fd-5b6e-49e0-9a37-9e61cfd80a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bf285a-271f-4cf3-8b79-e54390b83e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57d0352-a1eb-43bd-9666-4ea4107d56bb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2b18d5-bb5e-4957-896a-e33f8e737c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f600206f-3131-431b-8e0e-5a4e92d9f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d537d-4644-4766-b94b-e3a8679b005a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a15f35a-d48f-4bdf-9867-25f4898f1efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f022338b-4fef-49ec-b300-dc5848c210cd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cfdff4-f3ff-4569-82b3-5d9de99b3668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6433080f-ead1-4f44-93c0-55eae1b48bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1870c3-fb50-40c9-b091-60342df0de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee3778c-a93c-4e59-bd54-0a2be22df293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84b643b-d7ae-4577-bf88-d84e080b8715",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd648d51-2f92-4a86-add1-bca5e2db0f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f7d7e9-5835-4000-a94b-976171b644e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e9501-e9a5-4701-82ec-5091b135ef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f081cdc1-6102-4283-b7aa-5d3f3162c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0493b-4531-4b18-822a-4a74cbc36d98",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b48005-0830-452b-8c70-3ff3a314041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167c167e-7dcc-4fee-bdda-4fd2b1f79bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3386db44-b065-4463-8a80-cfed4d9f74eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5618dc0-91e6-4ce8-9d19-ee10e03df428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5993ad90-f647-43d6-97ae-c54aefc1857c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d2cc54-d06f-4091-a343-d7480f60a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eab63c7-5ede-45df-b2e3-644848c7099f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d43fce-f3ff-421b-8ccd-c93daae76a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e057c5-b9a4-4e1a-9bf8-0c19e2930f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f4b92-ef7c-48b7-b894-175b5842b815",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852b32a9-9c1d-41d3-b1cd-a4aca94a1478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb6afb9-3c88-4eb5-90a7-4a156e58f792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5cd932-160d-4867-9f66-20e8bf46c04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab13da3-2357-4954-8eeb-0cd81a05997b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21f2d9e-54e9-43ec-9183-e46eb7be0178",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccd0718-463b-4095-8992-45f357e1774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874cce7c-4b93-4672-b0f3-5f508063a303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c29bd0e-a2a1-4673-ba89-c813e1668ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c786d8-fb09-4c46-be0e-bc4a4ba5eb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b65b99-2a24-49a3-9b76-a2ab8914c315",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f81afd-1782-4e17-8a45-4f918862b290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea22decf-aea4-4372-b66c-62a386378039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d30bd9e-cece-4527-8bab-b09c59abd52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b946a3eb-1e55-43f6-a1ec-d41d0d719a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd9e9bd-1ad4-4286-90a4-2871c128839f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad36f97c-6666-4b27-8e66-09082c54ecd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e38b81-6a46-4fa9-b39a-463dda1f56a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dff6fa-da73-4394-9244-ab3b06a9c68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ba2cc7-cce9-42ae-8152-b46372060020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941ba450-17b9-499f-b88c-537a45740e7a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f553a9f-9289-4d2f-ae2d-05e26069ea15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6740f4-0049-4383-8cf8-099996f15ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dab77c-53ba-4eb1-ad88-f38f33db1bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a6ecbf-1194-478e-a7fa-b7341f36f799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d5a81-b8c7-445d-a8e8-314d8c4d73ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b532d5-d666-4af8-b34f-b85daffd47e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba92e2e-6367-4589-b173-c296e9c5df4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90984d21-5f1c-4a3c-87d6-f98576c861e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a3421d-9a01-42ed-b31c-f3591ac6723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6439001a-290f-4c67-8f84-afef819ae194",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20283cb-6775-45f8-b41e-380aaed9c54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5453e30e-affe-4da4-a612-de49a8c3dd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03b70ce-76c0-459f-b65a-5b46dcfb76f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a7703b-9b0d-464a-b325-1119e2c4ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50df2b3-4b90-46b5-b6e5-09bb679d2700",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd3aad2-8bef-4a36-8d75-8f0e7753de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0272ae54-b6f3-4e61-b16c-daf3bcd70e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0907b6b8-ac7f-4d85-9871-597356e762be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5724c3-7b0e-4d96-9bab-18fb2c83099d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332aefb5-b02e-4c4e-af92-ca5daa843c90",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf45af8b-9634-4c35-8b25-a06129a94cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f3ae00-7802-4011-8268-a7806d01bdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3a11d0-688b-4e90-aee8-469c822ae627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c117af5-0fe7-4cbf-841d-1b55f53bbf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622c9d96-8d5b-4644-921c-9a35a8469652",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07970258-5284-46aa-bad9-084008063f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0c3d18-f042-4652-9fb1-0164ad0fc9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5994363-d62f-4a49-aa9b-aa3339f610bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c92a0f1-f924-406b-b0a3-46f9aea15b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad0cf6a-4172-4636-b734-38a49fb4dab9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34aed5-9037-43b1-8944-27aad09b1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643def84-0130-4fc8-8ecd-56ea674964b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7322d117-490c-4223-b102-f44a9ee177f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b73e56-d10a-4d1d-8338-7d86bba36cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e18a831-89ba-413f-8bdb-ec6b43ccfe5e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5222562-25c4-44f2-91bf-f9df360afebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c00f8e6-b6a6-473e-8cfa-646ec457495b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffabe09a-195d-426c-b5d3-344a27285165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7dce99-6d7e-43cf-afee-1395560b9031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43efa12-ce02-477e-909f-be9d5026eb32",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38530ac-ce1b-4842-a48f-0f5f759f8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40ce752-03e2-448a-b89c-f639a9a338f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f495aec2-48c9-4b13-a60f-1aa9ef7cf72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f261bdb-9d79-40c0-b0d6-8d4c353a6c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15330dee-d59c-420a-aabe-30bc48552001",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0797b67f-3af5-4525-ba9a-a9f22470c961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67880ab-a022-4467-876d-69fb9450e1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9ed2b1-a005-4c20-bc38-3968a894e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "256e92c5-36a7-480f-82e4-42024b82783b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c47ff8a-866c-4cd6-8819-5ff4a5622148",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822d34c9-7394-46e5-a43d-78d72ebd5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee948357-882f-4c8e-857e-53549d414e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b819b7-aa92-4484-82eb-b35646120092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a402b99-59b7-4817-80da-036f4666f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e890287-8cfa-4ff2-9539-bed20b1b672d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc40f06c-419c-4fda-8362-fef288504151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d9a28e-d832-42bf-bbc3-c4cfb89918e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd83deff-3128-475d-ad7f-8e15015415df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b98601-c807-4dca-af7b-a54be61e729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a13258-8c47-4ff2-8b66-20e37d91a197",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cb1840-a34f-4304-b31b-cebc2f8e0def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b26fd0-bc2a-4b16-b07d-0e264244a106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b082ce4c-0af7-4239-909b-af6374e343e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c14812a-537d-4f73-b633-963727e9c81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f2cbe5-60dd-42cf-9acd-201ef3397be4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95778644-9516-45a5-95a6-a44338ecd7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0c43a9-8274-42c1-ae2c-b670ea9e9566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df59b38-04c2-4d58-a80b-a82b2ac6a757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fbf0b0-ba56-4311-9fab-5c79ceaa5f03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25d0b183-f426-40a8-af2f-110ca357599e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d99d3c75-377b-4591-b221-d86465c0ba32",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654b244c-4b78-40dc-93a8-7f8e5d07cc76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b750d2f1-9fbb-4b0b-b616-401e99b64350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14abe00d-7ba2-490b-aa99-987ef7eb40ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4be1aba-e821-4435-be7a-5820cd06b20a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76a75e96-caf1-49c3-9f41-fb54e4677444",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835541df-f8ff-48f1-bcdc-ca066a3d3225"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7e2534-a3ba-4cbd-b00b-7c6ed8d5eac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6017c0-c11e-4cbd-adae-eb8cbf1e0095"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "469a96b4-9a6d-4744-9c0a-5a344ee920af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "617358db-bd38-4c7f-9f42-02854874e495"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8ea3b63-15c0-4754-95fe-7f25cef55a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04eb38b9-266a-4e3f-be15-3c5e3609c95e"
            }
          }
        ]
      },
      {
        "id": "65c4594d-121f-4d25-bb9d-2626ac7212b7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "31ee0ce9-437d-446e-8d13-2fdfd4fbd7a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "599f09f7-c729-4c17-b042-be3387b4fd7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c9add41-66d9-47d0-b825-1bac513effcc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b460f8-1254-4f58-864b-f088c052a8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5180b4f4-fae8-4809-9eb5-dbcf10981e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a57b1-d912-42ed-942f-e04090101d7e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dd7ef3-23a7-44b9-be6a-59aa6ad7fe54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81fed83e-5ac8-4329-b203-96b9243757c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3f7b90-b4ca-4e1e-a5ca-b18758bd8be3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f766205b-52ad-4b64-a083-2ead519e4122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fa06bb-8e47-454d-986b-832aa4a0e39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a39aa3b-e513-4c86-89b5-48d39cb4111b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa2251-1adb-4b24-aef4-a1b26ea7a5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb71dd42-6950-492e-8c41-5dbe225ee54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798f6ad-a896-4057-b9fd-d38b214a2817",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a0a2b4-dd2b-4764-a9ef-f908158ede15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcd83d8-5ab8-44a3-940a-362949133308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c23e2e6-1966-456f-af90-1a642ca02d14",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14032d8a-3a0b-4b66-a7c1-ca8438128a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2c86f-db8b-48a5-a69b-85413638c493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4323790-b4d6-4f6b-b0d1-2d80e5d28a2d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac521b1-b7e1-4f0b-8a71-2af61b64dc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d14497e-4e53-4c8d-be08-c89891b3fea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8075cb12-3935-43d2-b12f-81a74030fb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c40933-8073-44df-9ffc-26d088b944c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9d83f2-1898-43ea-98df-6929f7c350e2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b3158c-93ff-4cf5-bf6e-20bd7b453acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2f80a8-1963-4221-b277-439ff173488b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea8e737-2801-42f1-b197-35f306c5af3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849f30c8-a386-41a6-9d1e-a1aa6eb7cd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a93e523-1c47-4586-8368-092f5c4bd44e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15d2de7-41e0-4155-87e2-9e1a72e07db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf3303d-b151-4428-b227-3f970fb90ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94527a09-75c0-47e3-89c3-a344f5febac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47d0c1d-8dd3-43d3-919d-83ee42dbe484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e8dab3-aefc-4d99-8c64-1b277f074bac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7076990d-38d1-4989-9b32-114f6f68b0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8995a3b5-5709-44fd-a9c8-825a72057dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6abceeb-0426-4d58-b6b3-31c26711e41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b1bd24-7598-4d66-9f1d-4acbcd637e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d71629-b6c1-435b-b73c-d351402ad3dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c32a1a-0596-4edb-a868-b439ec62aef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e7270a-b1bd-4207-8072-e7e213543518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd61e256-944a-40e6-b00d-8325ced2a8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ee67c4-7d1f-443c-ba55-795e8b17da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4c7b78-6a6d-44b1-96c2-203efbba4725",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd8521-1183-4b17-9d3f-af13ddf1a419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba0efa7-d828-444d-93c1-b21bde74d4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c0e8ad-cd6e-493b-942b-f3bad8d2da38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeed4355-cec2-4d50-900f-55e4191ffd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db83f76-911a-4a57-a88c-014a5ac2aaf6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d292ebd8-867d-4efb-90a9-cab4ba5a7144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e75521-f5fd-4676-9643-7f53e45d9018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a407bba-0bad-47dd-bb16-d4d3020776b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac720ca8-adc5-40cc-9654-c67a05f7fc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871f353e-b5f0-4854-a9d7-9ff4029f7aca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121e544f-b693-4624-935c-64b8d54159d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de179bc-19cd-48dc-bbfd-d664ac37ad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48f6440-9996-4ff9-af72-3aa4fbd04417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec0e2eb-b02e-47be-be93-f5e6777edb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c25dd76-ea19-403d-a132-845d5ed9d8e5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1509fd-39b6-4ece-a326-bddeecef7a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04531fa2-f064-480b-9be7-f20b019b7881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50650cf7-7903-4465-a285-e9a64d87eb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e189d144-4877-4f61-bc2b-a491ec40ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8964f4d4-8b91-4e7a-99e0-23449ebaf8d8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e6cd28-7810-4772-b957-e36ebbfa6507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd553fb-e74d-4434-9a39-bf10dd442c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4f90f8-c384-4c71-b04c-57c7ff7269d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad52649-3412-4f89-9759-4f5a34282d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ffcbcb-c78d-4a9e-b30b-4cc2eda51929",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e0856f-6fa2-4355-9f7d-ac4d44b9bd82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61087965-eff2-4328-a079-57bb6574b100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feefea43-4b17-42b9-88dc-130a91eada75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae9c991-5d04-445b-b64e-7bbd716c29ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9657f077-49c4-40c3-b2c7-69707ef41119",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5de46a-ff1d-4546-bc78-90e025a5d71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd347a97-530f-4d65-8f6a-0f99972bfa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1958038f-ec35-4a6f-844b-c9a4402fe015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262118fe-7b4f-404a-963f-8b3e098e6874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad1f4ba-f578-4c4d-af79-0466ef620db4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3330aaa0-cb11-4558-a39f-a60008b59094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b48bff0-cff7-4697-9654-a1156f5f7b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93baba-0190-4a21-84dd-6b98532f457b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06b7108-e41c-43e1-a80c-6a135a41026d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff3190a-d9a5-4b78-b448-2ba8ee8df998",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8397eeba-c2d2-41a1-845e-ab71d406a50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cf39bb-f6a1-42be-b6a8-135332f53536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac2477-a0a8-49b4-aa28-9a88264c4443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132448de-923f-4719-a9d9-d7cbc27c62a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6054f232-d5b9-4697-908a-e061c81c51dd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93392f4e-97f3-4b3e-bd27-3a414f84c7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56ad8d2-3170-4b4a-85c6-32a9358fdfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3251f624-c16a-4974-a371-8a7d04ecb783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d12c18-95fa-43bb-9ae6-45e6947f73a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e851dfc0-e117-45ab-9e67-44ef4a04090b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473e7ab4-7502-4e6b-a78f-92a780018508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae0b5c5-48ef-45a9-871a-c8ee44c597c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df256afd-931a-4cf9-af48-e4e6ec074001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4721e5-4c9b-4ce1-935a-cb238fe6ecee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b968f4df-83e3-471e-894b-cf694310a781",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8dd80c-24f1-4181-870b-b8ce4dc9a0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536b873e-1ffe-42a7-98f4-f8c2989dab88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d470916-2ebc-4b28-a48e-ab34bbc029a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bd747e-ebe3-4e8c-a759-62b2c9b1a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc298e83-0b6c-4a1e-934f-285dbfe97887",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90ee633-2d2f-47e2-b1d2-6a2616747ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cacaaf4-e184-4054-b9ae-677da0ccfd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a810e0e8-de85-4ed5-ba23-f140016951ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249dc79e-37c8-43c8-b420-8925f10a6d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a0442-1597-46ba-add0-07e9e38a183a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd496e6-9057-4df3-bc6b-c03a34d0d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac61c68e-f844-4c93-8eb8-262445f24a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c79b5c9-1be6-4704-86c4-afa47c0c9dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcb9499-7886-4ae7-8f56-fa11f0c88644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa8be0-96e8-46d6-a244-c89a98010eb6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371dfcef-6011-441e-85b7-0c7d12f48365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc770d9-9431-4e82-8a06-1d8f2a4a4696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bb9db0-3d29-40d2-85b2-e5a9963cc592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a87ec2-4dc2-42ff-b691-ebeccb95d79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43989c3-31d8-449b-b48f-2fee381d3de2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cadaf4-60e7-408f-908b-3df4c90dc85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5537b961-b102-4e6b-ab90-e4bbb1be6a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6693503d-35cd-4203-ace8-c658726c6e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112d2a6b-ec77-40ab-9902-6ce36054a7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff6a023-4857-4c59-9f24-4f0234659319",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de45a98-61d4-4d34-b15f-fe71a9e40082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64be0141-b6f3-479d-b094-b64a3816a29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6a1d2-87db-453b-8f0f-943f8fa20c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf01b3-e43c-43de-a042-5a06400480a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a88d37b-7112-4d86-98a3-612852b6c9c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9113c61e-a130-4ff4-825d-fe1c57c9e3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd46673-9ba9-4aee-81bd-36194842d847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cff1d9-120d-4a46-9096-46bd30ca9fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bea432-4f40-4ffe-8152-eed74b7a62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c2687b-521f-487a-b257-2ebfa4b51260",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629c75cd-c4dd-425a-9581-028edc0cfcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61203f77-92c3-4724-8fd4-068e374f6691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d34bcd9-38eb-462b-8faa-b92bbf9f07c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a23676c-9176-433a-bdee-8438bcf2cc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbae421d-19aa-47b8-8ca3-3770d52db493",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7360e8-0e55-4d98-be4e-7423206b1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7d44ff-4b55-4ad3-b51c-9c79aae8bdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81f51b9-5f2f-425a-9d0c-bdc773f5c8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d35ca52-def4-49f9-9ee2-6188911b85f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c726d5-c8f7-4b93-b960-92a2ddb2295c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a85390-9c91-4901-b6ae-6e25d21231d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9055ec1-993f-4a93-9821-60e79b04d627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47b81ec-0d60-4a86-bd89-bc342c8e1f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5cd05-16c3-4a00-a9f4-7d835a9af15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c346e9e-b65b-4aa5-bda4-8adc955bdf4c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027ead82-995c-451e-be79-6a28597a61d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8bbb8a-a639-4ea2-b8b2-270362e735ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe5c02-9fa3-441b-81be-bc3895371415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cad1a6-0431-491b-95af-02afbe88f6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45c464-d3ab-4408-8413-f5122b7cb33f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4d2b35-8d4e-4fab-976e-3f2baa3dd06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3c4fed-5c37-416c-9c6a-58139ba03819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303ad95e-67cb-470b-a3b9-369be4ff6417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2877219-35aa-44ba-8878-4251c2e67003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48110f5-03dc-4442-b5a1-33e3bc3c648a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecdd69c-23a4-40f8-ac91-a72ad3d56a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710d6731-b6b5-4d8d-861e-1061c0aa5898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd2760a-0096-4539-aa91-25eb9c5de37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47171b8-82fb-4bf7-9b64-da7530fd3d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030271b7-dc9a-4c7f-b83d-50ab44d9c0d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d101aba-b89c-4d62-8b7c-79656493ccb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9956faf3-656e-46bb-858e-968adab6b6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d05a9a8-665a-40e9-9e29-49fbc266219b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef1cdce-0369-4c32-9533-8d814af2be89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4968f182-c839-4d94-bc19-066a34876ae2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371445f9-608a-482f-91f3-c80a26a73048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6adb7c8-2c59-437e-8151-ebd2710a9849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d996c3-7626-4b1c-97eb-ba6a928c27f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf79f97e-e94f-4cfb-b9f9-812aae919217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40743472-29b1-48b1-8d2e-941a06cb5c70",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474de580-4618-4800-879e-b8298376ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050f37f8-af55-4b12-8bdd-6827e05180f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9545af41-44e3-4737-a22c-e71ef8719ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea49190c-57f8-426a-9a38-b1e0ae5afa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72326af-cb5a-46eb-9175-4f069bfe607f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0638a1a9-989f-497b-8f86-2fdfcfaec956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609f9eb0-a074-4a22-97d9-f53bcfcc14b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1d24e3-3f90-43bd-9ced-258e43fdd39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ceda7d-4dd3-498c-b2ee-3eeca6187b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260bf16c-8a36-4b13-8f22-3f52c11e51ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75427f50-eb6d-4688-8fa1-af9af0c35d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c47a840-9353-4776-9fea-8f32cb76faee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ed445f-5003-441a-a065-c1dad9bf540f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b344af79-81f8-406e-a334-b0189ebd061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973174ae-60b0-452d-991f-c609d3206039",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966f4ebe-721f-4a13-9ac6-9427896e5afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bcb609-e79d-42ca-8329-ae9971884177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306ba99d-3624-4395-a98a-f2a0285557b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6f4062-2c1a-4088-a064-c6d9d97bf8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac1cc15-3861-49dc-bc17-7a90a72a1393",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0ae5a-5dcd-465c-93fc-81d93fea0bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4829df61-143c-4a82-a721-2a1e3cb5b4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f095eec-72b5-4cf1-a2f1-4ad3aa966512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50184dd4-4b0a-44b7-98ba-7a70056871e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cadacc1-379d-4d22-8fc3-46479a6f5a93",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4e16a2-6e37-48f3-802c-c4482157bae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0c5d5f-e5bb-4664-b417-da09bacd2ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febbde56-250f-49b9-a259-dcd994a59338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a916674b-212a-463c-8000-9c7bd2c45bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ab6175-f7ac-4630-9a4c-0cc8d2e2e484",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4df089-5bfa-4061-bfe4-ab28b0fee80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f0872d-8d72-467c-9170-91ad6f50ea47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cbd91a-e71f-4775-82cd-91dae4e83824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f607c6-a43c-472d-a4e5-5c3cc086f220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd7e564-35c3-4aa0-abe6-496b0d3b416b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf41cb0-2d2e-4b9d-94cf-2db82a91278f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c5da1a-c293-4399-8bcf-ad4985dda677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640a6d78-4c5a-48ee-b302-cbd3eb2a1abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331fffdf-d427-4af4-89ca-fbe04adae5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead6bf14-159a-45f3-bb4e-bbf2e9ee0ace",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cd9670-2f12-433f-be33-d7232f163be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84052c5-3f38-4af0-91ef-b5272b886255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77873d89-7853-4e78-b75a-37ef08a350b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e9d0f8-13e8-41b7-8862-bcef9f3dcd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e892f2cc-36fb-40f5-9efd-7250f79f5c40",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a8a990-6fc7-481a-a019-6979a451466e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aca28a9-05e0-4ac6-9acb-829e634a28db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33eeb76-d018-43cc-904c-7ba0076dc4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18cf530-e808-4cdf-a31b-d26dd45fb481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee92420c-9329-444d-8e09-0fe09a269bd3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85716330-d7e5-4ea3-9081-a80657973c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a837cf-1003-41fc-bd30-1b5f0b0e3a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c5da68-8387-40d5-b1c6-0c253988196f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5e1b1f-c36d-40b0-9a27-fdeb9c13f58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c5f39b-ee11-438a-b27b-fd891443d072",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd65e8-26c8-4482-a021-3af93ca1f516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a506d0-7fc2-468e-9079-16366ba2129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d339558-de26-48c2-892d-358dc2826f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8189fc3d-3f84-4bfc-9483-9f9a64159a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbae3957-e7ad-438d-ba10-d54eacba582c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2038cdc-eee8-47a9-a5d4-2653c977d071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8c57be-2864-4d6c-bfdb-1eeb9d4580fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b486afc6-984d-4848-b0b0-a220f87af7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb25ae1-5cb2-408f-8679-9607a8d050bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3831038-7186-4804-ad7c-e0ab88172c7b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac83608-aa90-4ad9-a90a-1475d7508278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1e42f1-3a89-416d-8f0c-5551d4f8cc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a85f86-91ab-47dc-bb80-42d6650cda79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cc700a-491a-4568-b886-2f318a0b2da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb27755-c23e-4a38-a3bd-95672deea794",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361249a1-374a-4379-8e2a-5888c71726ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c55bae6-e80d-4c74-bda9-a05a538ef996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399650c8-ab30-4fff-8a48-cd8c9ec16f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e21b70-234d-4e3b-9c5c-8fc706fd383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568398f8-5dca-4524-a1eb-d055c82df5af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e9b119-6300-4d07-8257-c4bdf9fc4eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5497f5d9-59f8-4fc4-8745-6d65bc44dfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2f4fe4-359f-4d8b-baa7-c3e5411bfa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233a6ebc-0da7-4983-831b-727b04f35c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac07af33-34f0-405f-a3db-772c47cf7db0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3065471d-7359-4414-8578-9935faa3a9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9603268-50a5-460b-bc38-b9ba8194ec2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9928f-e427-455f-9749-db9f5fef4e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791ed063-5002-4a4d-9185-7d6f50b3d922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5adde-72eb-4fc7-8823-6a73a15e945d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e799e5bf-6a65-4186-89c0-dd353d7410c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60769e7-93bf-4b43-bb7f-b4d278d096fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a99eb63-2a79-4429-87b4-7168af610ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3122a246-3c48-4fd2-9730-2cd1e6b97e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073a19a2-6b87-40a4-8d44-469391e507ad",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2209ba5-57a5-44ed-8d15-dab85e56d3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f056c064-aa8f-46f1-ae8b-5cfefd76f976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2503f3b9-ab94-412f-a597-1fccf3539794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9010e67f-bc3f-4976-906a-d3840d587a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb0c3e-a102-45c0-8b94-935b5ddb30c3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b269deeb-c1f9-4265-b751-25c88b30bbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e41ae-65b8-4c12-8370-77d80c3e8643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f120919f-bc3a-4751-beb5-3c25c19bced8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75608adc-303a-4309-b2dc-9d66a19a7df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ecccd7-3025-494f-9b3f-45a07a91c762",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e4bda-3a98-478d-bc80-24dad9d14255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf19159-abb7-4756-b2f7-d5a95497f7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e80cd-7379-4b8f-a372-4306d0181baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4b77b2-30de-4f05-8bc0-9c54d93a600a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2d3488-fcdb-46d8-a62a-22d1384a8409",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d0d5fe-94b6-4325-93b4-d2681c3a981c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc63ab12-cfdb-4b7f-8c3d-be853757097d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a348847b-4894-45e9-bddc-c63d898cc634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc034e6-2300-4d31-accd-3a0c81319ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d0680a-b6f8-4140-b611-f42fa790e3f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166dd8f2-ce6b-4ae9-a36c-bf1bcbe7721a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8396609-1127-4e5e-ac44-232d1a8facd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2d1c61-a3f6-47b2-b37b-dfd0b4d6fbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9078eb03-5d78-4be9-9291-dd27e2b772c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af87399-757d-469c-9ed7-6bb39c3f4b0b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614b117f-7011-412b-bb1a-dadc96ef545e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7786f836-85a9-4d1e-b12e-d10580b78c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c793c7-2ede-4c2d-beaa-b231125e5efd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eae095e-db12-4d81-b192-6a9a799c12e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844246aa-6a76-4d75-9cb5-6c341dab0e44",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ad3513-3eb0-4846-b15d-b664fc823f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee99e8c-a2c8-4817-9627-5131b3cc5a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebe06eb-7a77-4b6f-81cf-eef3c8d99a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4dd823-df51-4242-86ee-7aaa1275675b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3b9a83-947e-4974-b66a-a05aedd6acb3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5731aa37-ee3b-414b-b49f-30d08901944d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ea9392-7fd0-4221-85d5-081670425301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb80b9-d66c-4116-92da-2a8b18ee9901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcc7216-a532-4746-86dd-dbbaf1583b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca08017-a4f1-46b2-8a81-4b17835421c7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35642239-c853-4675-8d43-fefaf510cbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8201a6b-2145-4739-a1b4-9b5eb1065b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250136c4-4665-45c5-a9f3-c8359eae129f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4044b605-4ef4-4d32-b56e-63897b999d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edf8b80-54c7-4f30-b465-cb771ea36285",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31693e5-22c6-469f-b9e5-a55fc936e93c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004c5851-09b7-4d67-8ee8-f8067aa7e47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f47e678-a21d-4ffc-a543-3f9a726de29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d100021d-82bc-4357-b212-dec81dd5b034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9cc41e-9a8b-40ac-a840-6d6e7c07818d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc18223-ed03-4f20-82fa-719879bcfa94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d11b333-b371-4ed1-a2ac-9e88c043f49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe59793-3e8f-4a5a-a103-3262aa084aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5a66a2-ef58-41f4-8e5b-f8b2eacff522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae802dd8-9111-4a50-9fc2-e086172eec56",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359d8121-a247-4744-9976-02ba15e8883f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3edac8bf-9789-44ad-922a-6963037bc802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5507724a-063f-4ce8-b1e5-e63221b52c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77c0249-2523-4438-8909-a187cf87a485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075cc408-a2f6-4714-a615-da83310cf166",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6491fda-ec5b-49eb-8c1e-ad161063ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6534f522-668f-412e-9c46-b746e966d152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d9550d-64bc-41a4-ab91-c6de3ffec30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567e76cc-a9c1-4b9e-be27-754d5e62d9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ac502-1d9e-4211-baa4-cbaafe559f36",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38690c47-62fa-4114-9a77-f192f1a4f022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34224d34-d501-4a19-a952-5e25d499c327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbd6b9b-b031-4b9f-8d94-de745830d67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edecbfb-fc17-4944-ae32-5a550e0509f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c91d6-5b6c-42a5-9c53-7955309b6fca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0266dd84-ee9c-4071-8c92-d50b89306a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ccbb9fc-4f59-4603-8d3a-9640c975bba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cedb62-81a0-4ed6-a7df-809306e9f8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211ed9b4-06b5-488f-865d-17910e12e6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737be97a-418c-4cf4-b95b-d0866a8dab4e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218b7002-8cea-4f0c-a999-a2ea74d0b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f0866e-2043-4962-82af-beac14e15c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f91436-3ed5-4da3-9091-7f4f5782405b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93230913-15a5-4c7a-9196-cf1f4bced890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809f4429-be83-418f-a3f9-9c42982f7ff7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f941807b-84fa-4e0c-8a27-200ccfa71c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932665fd-c217-4f5e-a49a-f23e7f4c49f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9727c538-386e-4194-8d1a-c70ffba06453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ba2881-f8e9-4ccf-b4f0-89eeb23f65bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bd331b-8c8d-4429-a1f6-c0c7985095b5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb78241-b575-4c61-a119-14f5ac1b0e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cbc34c-0f7b-4635-aaee-17d4d744ae08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c3254c-4ed2-4e69-9ba1-ffdf6db9023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b28d83-b36d-4983-9228-5d5810aaf317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108a5aa-9ee2-4ed9-996a-58cf0306b10b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a042f76a-eae3-4ed7-b584-8dd7754ee054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d52023-d19d-490a-a5be-3d4a8cd8e27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf504be9-948a-487b-b9df-3e509855d2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d9e4e1-6c54-4ea9-bee7-837f83f04574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bb70e2-a496-43dd-8922-e0814aefa451",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeca53b1-313c-4425-b5cd-6f6255abab64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee4a3bb-6a31-412b-99cd-f91f7ee1dc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7624180f-bf8d-4de3-9432-7cfd5690a33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eb74ce-6d01-44ad-8cd0-5ce9be74d919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e2b9d1-2a48-46cc-824b-fca5bafc679c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8833df4b-d77b-4bd5-9ef2-cf8dda1a1ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67afd7d-628e-44a5-a49b-142425ff352f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc979f7-6edf-49b0-a31b-2848594fa346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3e288d-e2ff-45bf-8c64-c125e210859a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff6443a-6cd3-4558-acd3-a7b41d95ac0b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dad813b-2482-40e0-9426-a67e12717ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b2fbf0-c167-4ab3-9a9b-4173d5e0991f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e905d539-7d15-48c0-86b7-d4275f22a0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e387e6fd-20fc-4703-8b0a-9820be1d6ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7ce4d9-deb1-4ac2-960f-8f477971bda8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef6210c-11e4-4a7a-8c6b-755caf8e88bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770d4038-8faa-479c-8505-a203bdd170b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf8798-403e-4c0d-a0d1-63bc444c900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739dd638-2275-49b8-ac11-f6f44e8e9e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c814b0ea-0a41-4a21-aae4-96503a5cafd2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f15096-8932-41e9-8088-e463edb0ac68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b3f5ce-0df4-4f67-ae7c-4b0f96abb23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afdc425-8823-41a8-9932-9bc79ce38036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede41224-6f12-4533-8ca0-80333661af01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08b4957-74f5-4808-9219-50dc6724b4ed",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b5f46b-88cb-4227-ad66-ded133df3994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ece80aa7-05fa-498f-b739-c44ea593c214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f7b725-d4a5-497f-b8a4-2f9810a654a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e6a9e1-60c9-4af7-acd9-056a38f6ce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d22ae8-42d9-4c6e-b7b6-93e5938ddb0e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab337e9-bfb3-4692-90e5-d62d32cddb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b56569-cfc2-4b2c-89cc-e3be2f131c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1425178-7b3c-4cc8-b4c7-5e76508d5305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53592b0c-b9cc-4b1d-9409-f63d54ef192b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730d15e6-69c0-4f29-a075-f0078a456f68",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94813955-7797-459c-af06-8b472031b271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b63d516-b5c0-409c-802b-26658c6f4933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a377308f-7827-479b-b99d-a9e18171b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdf7af0-6260-42db-ad7c-ff8903c6f075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5b9c80-fb73-4abc-b204-aa25dc544635",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d664538-c86c-431a-896b-34a728f85868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd0087d-2c83-4283-9116-be4c49b37f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9656e5ac-c546-440f-8285-874573d1427c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f93be97-4c2b-4247-bf96-9a8f367d5d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab25422b-9fa5-433f-8cd4-bb2118d7445d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcc21ef-78d5-4f55-b404-6d8eaf30b1ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48babe9d-253e-481c-bcb7-3e893dc995eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9a96b2-0efd-4985-b037-bdc6ca0d05a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd87c053-1721-4f20-a9c7-1db1a6046582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c507cb78-2343-4c32-b234-136800f0789d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd31c8e-9324-4024-828f-817da99b8b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc510936-dcdd-41c2-bdd8-91576f05b60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c0bc7-4636-4275-8763-e9075e54f984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f469183-a586-4a59-8feb-26d5b6cbd831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c59dbea-790d-4449-aad0-d09246adda5b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52875cd2-5646-4bc5-bf5c-ba08c79f9231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a598cf22-57d9-4880-a646-83517a6039d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d42ce70-e30e-4fef-aa06-b36da9d12ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c1ea91-3ee2-4c44-b6ef-e99284ddab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3108cc-858b-4c44-be57-5874e20e9e79",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aab14b-8428-478d-94de-f278baa7dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15884af8-d51d-4105-9ef8-630a0f037ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cd55fb-ca92-45b7-94b4-5216fcf385ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b93f724-53ac-48c8-85ce-32fca9fbddc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c38f41-3b6d-459f-b1a8-04cbb378abb5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec3cf2-8ec7-4132-9c3f-a4dc133e1779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4ebfda-26dc-4913-bc50-1ed75ecb6f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af99a838-c673-43d5-81ca-290d40cda2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b7d989-131e-444c-9895-03ad0a89c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92fde37-cec5-417a-ad12-1a0c667dd204",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb14075e-bdcf-4296-a987-bdf8fb423d7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec74683-4cda-4fdd-a013-16147baa5e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8a6566-3f7f-4e8f-b82f-b45f37df731a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b176f618-681b-4f96-941b-5d964290be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8c2dde-efe5-433d-9c36-307071031b41",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506250c8-bc4f-4514-972d-47db1faf4a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9db37a8-9b36-4979-93f2-20d5eb4ad906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac811a51-349e-488c-b44b-3238975e6c66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91241a53-c456-45e5-9d9d-e691146c828f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d528f3cb-7b64-40ff-9c8d-13f030aa7090",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb76bd3-445e-4877-a29e-1b8e2b5b16f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9586c48e-7f41-4a24-b379-e56adebf34f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a40e93-88d3-45df-ab33-d1df02b4cafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0cb103-9e48-402d-863a-ba8799003762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9abf92a-baca-4409-9d77-e257a0cb60d3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4555bc01-4ec6-42f4-8d6b-f45aa9b0e721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a7afd9-d058-4015-9f59-f65b634423f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b6390a-7566-484f-9ec2-904096d76573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af36f6af-ff24-4bce-bd04-fd799cbd7cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b373c21-9f08-433e-8b9f-564ff9491007",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7edcb5-ffa1-4b69-aace-23587b249f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbab1a48-a846-421e-b09b-6797b17be502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63fbfe3-c545-4bb3-b7b0-727bca0c0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c14ac7-c122-447c-8cb7-26caa89fe5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcf1202-ada5-4cf8-9436-a844cb817a1e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f906b3d1-28f1-49cd-b812-eb9fded98921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4656c785-9479-464c-957a-83f0770ebc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970e83f7-5010-47a8-b7d4-d05bf6d08e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a41b298-1f0b-4a59-9fae-879f92d0d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be2fd7-a709-4ccf-b737-33645de44963",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f8ec13-2e3e-4c6c-b08a-11bc957b8836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af7c9ff-2206-495a-b933-9cb74c15157c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3a305-c766-48c2-b1bb-1d52785063e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcda0581-c4e0-4e25-9abe-3b542c766436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83ee9f0-6884-4e5d-a885-9961ad5ac1b6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373b32ec-2e3f-4126-af3f-f92247946374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "042d8bad-3bfd-4c9b-987b-280859e217e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd215aa0-6f0d-43fb-96b9-513fd674b610",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f254ad-e78a-4756-84ed-770842a164bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66047a14-a57c-4da4-8ef1-9aab53a99e80",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b99b949-ded0-402f-852e-5f698f4b8c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468f60c7-1890-4fc5-8ef1-42d03fa34587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5682be-ab16-48b2-bec6-3ff017d42a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e58f7bb-0aa3-4ee8-a685-2f2c33d3f108"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf24542-e18c-4d75-abfd-1078eb37c7da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a14961-a645-41a9-a946-a0ce11f9f909"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94679fb8-abed-433f-a8e1-e101184d099f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41dc8ea9-03ab-45a2-ab17-0bbd81739493"
                    }
                  }
                ]
              },
              {
                "id": "0eab160b-79d3-4f07-9a48-62a2e088ca9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92d50c31-199f-4181-971e-a69ab9127a7e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01273cf7-d3db-49eb-ad8e-2c8ee2742184",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a8c63e3b-8fe8-49ac-830b-fdfd24ee7465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d79169-119b-467c-b9b5-5005a76610eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d5af372-579e-4a3a-bf02-ee165d44575c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca45d680-9ed7-4b0e-80ab-fc28ddea9a89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed673081-536d-481c-8276-2340f881f526"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82aa9e14-9071-40c8-9e74-64976d70e01d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d8d9269-1bb8-4d7e-9e6c-ad10790e14e6"
                    }
                  }
                ]
              },
              {
                "id": "322d8106-ca40-42c8-8ca6-66972abf6a66",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c2467b5a-3642-4c59-b6d5-9a9c029348e4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ebca56-ed81-43b1-b257-60eb693d26b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2be720fd-a889-4b1e-9bde-aabb30d9edd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62d547c-07ef-4539-9cfd-18e6ad5e27f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83db1d4e-cb51-49f8-8a0c-805f0b6e85c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b1c04b6a-0401-406d-89ce-3e5506e50ea5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dd44332-3d41-41c0-8c49-fc749d244e2b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3725fea-ae34-4d09-a103-a31a503d4dcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "018f7218-1966-42d7-97a1-213f89994d39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60caa70e-f12e-4f7a-949a-c53179062ac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fd392a1-e8ba-4010-a949-82863df293a3"
                    }
                  }
                ]
              },
              {
                "id": "4e9b7843-e485-43b3-96de-ee2e45b1d5c5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a833cb9e-53a1-410a-b81d-12bdc1047808",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bbb51f2f-d415-442a-b675-bbc69c997f42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cef7da7-5e67-47df-bea8-3ca65d84b29e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b472516-de2d-4e34-992e-c97294b7ed5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccb7b92e-187a-4e81-85b7-d55383f9bc04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f1d5e49c-1d67-40ed-953a-c4bd749759f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "088c1c97-c20f-4184-9195-c3e579a1d8e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62dc2209-5a5b-41a7-8b35-7fcfc10a974a"
            }
          }
        ]
      },
      {
        "id": "3d4cd3ab-2420-449e-9a33-68683f986315",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e170518-c7b3-4912-93db-fe00028555d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "108cd4cc-d78e-4a32-ae30-bbae3676c77a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb0be9c7-3309-418e-a1d6-fd29da26c36c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171edf88-f4f8-43f7-8480-296d542e0f82",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "439b67bf-56cb-418c-91ec-06e6b0ce6b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235de88e-aebb-4e8d-b939-7bf5c9e38fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f547fa74-341f-41c5-b612-915e95212460"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194c5f26-8b59-41d8-8503-998680600f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d36e6b8-5207-4646-84c7-5607906aa5f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27f2e35e-5958-4e10-82e6-ab2b422f8b31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b01a9bd5-3156-4f34-8290-340cb2f2f6a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d05eed8-5f27-44fa-847a-e14bedd65fc7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c34e99ab-66ed-4ac5-898c-52ae379fe637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "798f4b99-e97e-4737-a1f7-563b52a4ff87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e05d79a-1e33-4bd8-81c9-145051631b2b"
            }
          }
        ]
      },
      {
        "id": "dd7cb4f9-62c9-478c-8989-078d060070bb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "192e5609-4a6d-4365-816b-0b4d3ef545e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65dbf847-39a4-41a3-9701-2b9b301eb289",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e48b596d-e1ee-4dfd-97d9-c38562ba3641",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730a4b7e-b7c4-4e1f-8916-c5b0a329fb8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99bb678-0e43-4667-a998-c47c0195fce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ff52d-b711-4c83-8ca7-1b60907c79fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16bc7673-768e-4722-8bfd-ba301a29fee3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6551074a-81c8-44f4-8e95-b105abaa9a43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da9d9157-3ac1-413b-98aa-7d5b87c43643"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2adf12e3-a976-4d08-a127-7752bd75de60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f759ce78-2fe7-4a55-abf0-c0c2699ade36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82a019c4-48bc-459a-ad58-2c841427d514",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f605dcc-84b7-4ec1-a6eb-75fa15f9e2da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aafeb35-478e-42cd-b9d1-ea4249191e2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "936f45e1-8c2c-4855-a45b-b571727bb003"
            }
          }
        ]
      },
      {
        "id": "52efaa06-2a21-4149-88de-9cb529552075",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0e643cde-89f5-4b80-b908-b913df6b565e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c59407d-17ad-4466-b296-94c12b0fdc2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d1dd609-a170-4b75-9b04-11965cb265f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eae806-bbd6-44fd-a1e9-6b74621fdfcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d1d319a-3e4f-4be7-9539-815b7d7327f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2044e6c8-cf4a-4d11-8838-22f72ef43b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6db79f53-7877-494e-9b8a-6fdd8fd40451"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ce2eb83-f122-4a8b-8fa0-39321be7217c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4435366-5425-49b9-b5aa-92724c227557"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ecb407e-e4a5-43f3-b5c2-fc753fdcca89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63bc6a97-64d4-471b-9650-86317c196d30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a10584f-63f4-465b-9532-4df8b6a3cbf7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b217e909-014f-4d83-896f-00270bbcd775"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c4108d2-06d4-4d7a-8e6c-17def7cd73b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfc3aff0-7681-4781-8960-acecb32bf40f"
            }
          }
        ]
      },
      {
        "id": "9f03108a-c51b-4863-b24c-3da09a154b0f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5158ff06-bc33-4d99-ae0c-87aed80dec9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7ec2914-67a8-4db8-adee-4d69f6b37d70",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ab228a54-1ee2-4d92-8919-abfe0fa4f28d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a829d51b-de8f-4cd8-9e19-dbafc44dc8a5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a68a653-41be-41a8-9d56-a416f5d14729",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 84.93650793650791,
      "responseMin": 4,
      "responseMax": 10117,
      "responseSd": 671.1283527090972,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725929001012,
      "completed": 1725929030518
    },
    "executions": [
      {
        "id": "94a0e8cb-b51f-4d61-83ab-b05908c15a45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bfa96862-7997-4300-ac95-e5a776ff9628",
          "httpRequestId": "3b10b27d-6880-464e-90f4-ad3efaaae66f"
        },
        "item": {
          "id": "94a0e8cb-b51f-4d61-83ab-b05908c15a45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a87f6338-45f5-4c4f-8231-59f390ea4c35",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "034b2c01-9ba3-425e-82d2-8bef8aa65714",
        "cursor": {
          "ref": "38086881-91d0-42d4-aa2a-adc2b3265948",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d5fe152-2062-4a0f-b158-95685b5495f5"
        },
        "item": {
          "id": "034b2c01-9ba3-425e-82d2-8bef8aa65714",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e700ff1c-d88c-4974-b9a3-098220b97916",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "014fd02b-7df9-4e10-a7d6-0af34b8c770b",
        "cursor": {
          "ref": "92078e10-4d48-4399-92dd-349ad39d689b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "40b283d2-382f-4fcd-8e83-a38026dcac6f"
        },
        "item": {
          "id": "014fd02b-7df9-4e10-a7d6-0af34b8c770b",
          "name": "did_json"
        },
        "response": {
          "id": "7a9e3e5e-3fd0-4946-88c1-2975809d65b6",
          "status": "OK",
          "code": 200,
          "responseTime": 178,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa9890-088d-4c80-9d15-8f208592fb8f",
        "cursor": {
          "ref": "30c1a0fb-fd3a-4fd1-b44d-f3dea99f3b3a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a9bf7ab3-307e-4af1-968d-0bc190f0aab9"
        },
        "item": {
          "id": "4daa9890-088d-4c80-9d15-8f208592fb8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "161b1e88-d773-4d11-b2f8-9ee03fa381f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 273,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa9890-088d-4c80-9d15-8f208592fb8f",
        "cursor": {
          "ref": "30c1a0fb-fd3a-4fd1-b44d-f3dea99f3b3a",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a9bf7ab3-307e-4af1-968d-0bc190f0aab9"
        },
        "item": {
          "id": "4daa9890-088d-4c80-9d15-8f208592fb8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "161b1e88-d773-4d11-b2f8-9ee03fa381f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 273,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a7c577-9742-484b-aae9-ad048b12ecf6",
        "cursor": {
          "ref": "1805c6d2-27bb-4601-8d62-0af88e6e2fd2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f25acb00-18dc-4475-9bfb-15bb7425253f"
        },
        "item": {
          "id": "c4a7c577-9742-484b-aae9-ad048b12ecf6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ed4c931-8f78-4904-9acb-d6a7f36b835b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb356e10-43fa-48b4-bb20-b84c1b8b4ae2",
        "cursor": {
          "ref": "53717cd4-142d-49ab-b81d-0c87b7744efa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b12ca548-88ef-48d0-929a-fe9c12f7b5b9"
        },
        "item": {
          "id": "cb356e10-43fa-48b4-bb20-b84c1b8b4ae2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9909e463-8f6e-4413-9c1e-9d7f12bdc796",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e2be47-b110-468f-a5d4-880ad0274eae",
        "cursor": {
          "ref": "e876d8c3-481d-4c9b-80f8-1a23e7b2fc02",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6ee220ca-da05-414f-8379-3d74690b1c25"
        },
        "item": {
          "id": "73e2be47-b110-468f-a5d4-880ad0274eae",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "21d087bf-e6c0-414d-ac0e-1dafbd7b0d07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a7bfbf-d4fc-42de-8dd3-c80af2f1e846",
        "cursor": {
          "ref": "ca9b152a-11db-49fa-8fae-f37fca796e41",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "823d91bf-7751-4946-83dd-4ebf36279cd7"
        },
        "item": {
          "id": "b6a7bfbf-d4fc-42de-8dd3-c80af2f1e846",
          "name": "identifiers"
        },
        "response": {
          "id": "6df760e0-2667-407d-9a5d-816791f0609a",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8fbd8f-f9f5-4e76-be73-0918586612fb",
        "cursor": {
          "ref": "f85f88d3-2a14-4605-a19e-0f37d3aa43f1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "662adcd6-e241-475a-954f-16285d40735b"
        },
        "item": {
          "id": "5c8fbd8f-f9f5-4e76-be73-0918586612fb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "20ed5506-8a8e-4ef7-8a7f-f4e5189a1155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b747e4f5-1c1b-491d-a3f4-cd5a700b5f35",
        "cursor": {
          "ref": "61c89f38-cd25-4597-814f-4daf623859d8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a2339878-0792-41f5-ab65-8a68988c5046"
        },
        "item": {
          "id": "b747e4f5-1c1b-491d-a3f4-cd5a700b5f35",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3db82ae9-52be-4a9d-a729-7862d844c972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f53f52-4d88-4b3e-81c0-62f2d1f4f9ac",
        "cursor": {
          "ref": "16f669c4-ef90-4f02-ba24-0bdc6a2460e4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0d1887da-2470-4ae7-9d0a-2b0a9994dba5"
        },
        "item": {
          "id": "45f53f52-4d88-4b3e-81c0-62f2d1f4f9ac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f0c20715-c9e1-422f-b777-5f1bcb2e6d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b392a-d253-4714-9134-84c062488211",
        "cursor": {
          "ref": "41184e69-b3e2-416c-9c5e-9418dc667338",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5332f971-b50e-4520-af2a-b30fcf741f9f"
        },
        "item": {
          "id": "1e3b392a-d253-4714-9134-84c062488211",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4a117043-7be7-483f-ba71-183f36509cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85b3f2e-6989-4193-86b2-23aec8a1cd1d",
        "cursor": {
          "ref": "1de58c0c-49a3-4a11-95f4-2983b3177be9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ddb4457a-9dab-4e72-a614-88a67d735534"
        },
        "item": {
          "id": "b85b3f2e-6989-4193-86b2-23aec8a1cd1d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41363366-3b85-4943-99d7-625b4b9d65bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b00a1ee-403b-46fa-83d9-fcae77819c43",
        "cursor": {
          "ref": "9aa31c88-b809-4a36-95c9-4428e209804b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a54f61a7-d3d6-4092-8cd5-81e9a2292a6b"
        },
        "item": {
          "id": "0b00a1ee-403b-46fa-83d9-fcae77819c43",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "66140f0b-4f5b-43f1-b7e6-5d6547d47522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb357930-8ec6-4308-b630-de2cd6acb46c",
        "cursor": {
          "ref": "885d1a7e-0d0a-4b34-b4ca-d2a9ab2b780d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3a14c1a1-3e8a-4462-b6bf-85ac420ec594"
        },
        "item": {
          "id": "cb357930-8ec6-4308-b630-de2cd6acb46c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2286c6b2-f692-48dd-919e-dabd13244d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de4eaaf-2223-4aa2-9b5c-067919ea8605",
        "cursor": {
          "ref": "78bad6d8-60dc-46ae-b87f-216492c3dab7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cd4d8b59-f217-47f5-9bd4-c177624cb4e4"
        },
        "item": {
          "id": "8de4eaaf-2223-4aa2-9b5c-067919ea8605",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f1ce4f4-265f-42e9-b7f7-0031a66ab444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14891afc-f7f2-4944-9720-e5f56625803f",
        "cursor": {
          "ref": "dff6bb17-f1b4-49c6-8539-a384e5c99188",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2c8d138d-6072-4494-8924-222518a8af57"
        },
        "item": {
          "id": "14891afc-f7f2-4944-9720-e5f56625803f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "82f7a827-ec1b-4acf-89d3-b6dda36d7a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935e898-aa7f-4d10-9a08-4f38b1958c29",
        "cursor": {
          "ref": "94d245c6-3d94-4577-a2ad-dba1e27873fe",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0c4e238a-6f42-4429-a3dc-50289ae6bdce"
        },
        "item": {
          "id": "e935e898-aa7f-4d10-9a08-4f38b1958c29",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "48a22106-c806-4e7f-8a79-98453a7fd8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56cf118-73da-4cb7-87a8-28664f3b461c",
        "cursor": {
          "ref": "a7cd93d5-19e3-48a1-bd4a-e57395d0e3a2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "648a35ce-d3c1-4f4b-a915-02762b6b79b2"
        },
        "item": {
          "id": "b56cf118-73da-4cb7-87a8-28664f3b461c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "214742c9-c030-439d-b645-eddb23354753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63510c-fd8b-4e7f-b5e5-83e0c049eba2",
        "cursor": {
          "ref": "57ebd086-0536-4ac7-84a1-328dd81e3dce",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7479d72e-1118-47f7-97de-c1f926558f20"
        },
        "item": {
          "id": "bd63510c-fd8b-4e7f-b5e5-83e0c049eba2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c444be1-d278-49d6-bd6a-30e891c6bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edd78e5-0a68-4963-9d02-04c8b2dd37dd",
        "cursor": {
          "ref": "34a7eeeb-052b-4542-bafd-a0298378769e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "08b7bc9c-fe41-41c0-9286-bc5d665bface"
        },
        "item": {
          "id": "0edd78e5-0a68-4963-9d02-04c8b2dd37dd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f1ac343f-1374-40f7-aa30-dced6a1aacfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a6960e-b7db-489d-ab08-684c7d7b5949",
        "cursor": {
          "ref": "cff8bab2-ae5b-4000-8e1d-69b297ec9578",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ca93c4b0-8b79-44bb-bfaf-d24fae287743"
        },
        "item": {
          "id": "43a6960e-b7db-489d-ab08-684c7d7b5949",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "070601bf-390f-4f95-9db6-6e3de7649219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c686c9-1e55-4f4a-af4d-51609f4031d6",
        "cursor": {
          "ref": "7057ffa2-1ac1-4bee-bf6f-5f4e9ebc3958",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b65e4072-bf3a-42c5-8b1f-bb46fc1b359b"
        },
        "item": {
          "id": "b3c686c9-1e55-4f4a-af4d-51609f4031d6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f4ea1c96-903b-4100-b0f6-3296eb8089b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804e2827-2138-490b-9a1d-ffcd9f530a27",
        "cursor": {
          "ref": "99f7572a-692d-4326-a066-085cf8c1d1c6",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a080cb10-d6b0-4f27-9f90-36eae7e151f8"
        },
        "item": {
          "id": "804e2827-2138-490b-9a1d-ffcd9f530a27",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba40b317-cbe8-4889-8c59-6deb01acc689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8804643e-3197-415d-87cc-2652e9c2b741",
        "cursor": {
          "ref": "d84aef06-de60-4437-bfb3-08ff96b9b6a1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22708bf1-a9c0-4cbe-b5e7-aab73370e49f"
        },
        "item": {
          "id": "8804643e-3197-415d-87cc-2652e9c2b741",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "81080078-b629-464a-b6fb-32ab87807ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdf5665-8d49-40bd-a674-7975c8507e6a",
        "cursor": {
          "ref": "954b4171-79cb-47fc-8851-6424a16f2763",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f997da5-79af-48a3-8f09-891b4628f5ec"
        },
        "item": {
          "id": "2fdf5665-8d49-40bd-a674-7975c8507e6a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c13eacf9-48ea-4456-bf7b-791056efcf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd301e-8ddb-47fc-8fe6-fa62866d92c9",
        "cursor": {
          "ref": "a82ebfde-725c-4c23-b449-eaeca92b022e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c76b41df-5c9a-47a4-a931-811b5f9687c3"
        },
        "item": {
          "id": "b1bd301e-8ddb-47fc-8fe6-fa62866d92c9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a436ea08-b978-4cd1-b783-622f165f7033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c569991-7ba0-4bbf-b375-f41f890c4f04",
        "cursor": {
          "ref": "625549ee-8b75-4710-969d-005b0ddc4d22",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f7cd064f-5b0f-4c5d-9b06-c68ad9f32f72"
        },
        "item": {
          "id": "7c569991-7ba0-4bbf-b375-f41f890c4f04",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3b3cc956-0f3e-425b-9881-538b23991cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25c579-1141-4991-b550-06abf43b1201",
        "cursor": {
          "ref": "9d9962a2-9c9b-4c4d-93c7-596fdf65300f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad1c99ac-7023-4413-bfde-ab453eeae78e"
        },
        "item": {
          "id": "aa25c579-1141-4991-b550-06abf43b1201",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d7808f03-fb36-4780-a53f-e29272236bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39dc6ee-dcdc-4d8d-ace4-ac12252a1f06",
        "cursor": {
          "ref": "0d2bc73e-5fb8-43e3-ad58-37f198e3b207",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9e57a8a2-e734-44f3-b57e-29f96520e223"
        },
        "item": {
          "id": "e39dc6ee-dcdc-4d8d-ace4-ac12252a1f06",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3c93b566-d9ed-4e8a-94ce-c4f8fdd60489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb336a3-d619-4d09-9c97-b4cc10f9ff1b",
        "cursor": {
          "ref": "91887bc2-ffee-4f54-845e-4a97adeee485",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c9c47aa9-d2a0-4443-ad11-506667a76c69"
        },
        "item": {
          "id": "4eb336a3-d619-4d09-9c97-b4cc10f9ff1b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8d7efe88-3104-423d-bca6-82e92c7716c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a97e9-8c6a-44b6-b023-1a4a7e180d09",
        "cursor": {
          "ref": "c2de1a21-da1b-4a70-9f9f-24b9dc12be3b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7565f386-f7a4-4a48-8a0e-15ff134051a9"
        },
        "item": {
          "id": "ff1a97e9-8c6a-44b6-b023-1a4a7e180d09",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b280dcd1-6d89-43a3-ad80-63511cf65a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b657e5-6c57-48fb-8ec7-5293ce56360e",
        "cursor": {
          "ref": "76cb7ce9-a4a5-4953-825f-ab94a39d3239",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d5bed4e9-5ade-4733-adf0-fa57d13ae916"
        },
        "item": {
          "id": "76b657e5-6c57-48fb-8ec7-5293ce56360e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "faa9c5b1-b949-4d0b-b341-c55944b35520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a313f2-2482-4098-a462-6acd9d2eebfc",
        "cursor": {
          "ref": "a2789b41-3d84-4220-9786-b57d04b0e5e5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "404d5f58-1da5-4352-9d6e-60a81d3ef0b0"
        },
        "item": {
          "id": "a2a313f2-2482-4098-a462-6acd9d2eebfc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb19b1ca-33b1-4a14-8700-de26c037bc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2d59cf-2186-4c98-9159-8183065478ce",
        "cursor": {
          "ref": "6367f2e7-62aa-421c-b0ce-917a0d00d25e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "31f7c061-058e-4044-af24-079a376e8c12"
        },
        "item": {
          "id": "4b2d59cf-2186-4c98-9159-8183065478ce",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "576b03be-f8e9-46a8-afb9-4e7124f36045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2e99cd-145d-4bdd-8944-74f10071186b",
        "cursor": {
          "ref": "306770e7-877a-408f-a761-0fe24b9d5da7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2f3211d6-2a20-469c-82c9-8332a04b9eaa"
        },
        "item": {
          "id": "5c2e99cd-145d-4bdd-8944-74f10071186b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c7d0cce3-e1f6-4aa6-803b-3871c6cbc8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81178d9-4f84-4933-9681-8e0772441078",
        "cursor": {
          "ref": "f2f9ea9b-3f9e-4583-9316-5b32b0ffa6c7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "715803ca-dcc2-4427-9d1b-425ae371ef29"
        },
        "item": {
          "id": "d81178d9-4f84-4933-9681-8e0772441078",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7429e694-69f7-43f4-ac5b-3105963f12ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ea4c44-8a0c-458d-8b1d-8010b799fe9c",
        "cursor": {
          "ref": "8a0bf763-f359-4f96-b7c7-962017447e1b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4e4e54ee-a9d0-48fe-91ac-f463849dfc46"
        },
        "item": {
          "id": "02ea4c44-8a0c-458d-8b1d-8010b799fe9c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "02841d14-b40e-4dcd-91c8-736cbec68bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406ac59b-c34d-4f6e-91b5-75f872d77697",
        "cursor": {
          "ref": "adf545b7-89c8-4e2e-96ab-925fa13b5f13",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ebc43000-763e-4ea7-b340-528557881528"
        },
        "item": {
          "id": "406ac59b-c34d-4f6e-91b5-75f872d77697",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f2880d08-df1f-42ad-aaec-29aad2cea8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6055060-1d93-41b3-afd1-0d2d745a344b",
        "cursor": {
          "ref": "dd5fe320-903d-4cd8-a831-2464aa99a872",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e8b31b0-97d6-417a-96b3-8d05475f7e83"
        },
        "item": {
          "id": "e6055060-1d93-41b3-afd1-0d2d745a344b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c8c8a7dc-d6b5-4bc4-9782-3433a428af1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb2adf-af6e-4528-b1c6-5de7bd1b7797",
        "cursor": {
          "ref": "1c9076f7-4d08-46af-ba14-f2f037bf5eb1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "75286249-9dba-46fd-907b-e4ba28c8ac16"
        },
        "item": {
          "id": "deeb2adf-af6e-4528-b1c6-5de7bd1b7797",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b0aad725-28ee-4641-bbd0-1fe6124a27c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0221c4-07bd-4d04-a628-6ec330a5a50a",
        "cursor": {
          "ref": "1abd7359-9767-4ade-bd9d-5b31e0707e73",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "14db9569-e2cf-4a18-9f01-a4ec0e8e577f"
        },
        "item": {
          "id": "6f0221c4-07bd-4d04-a628-6ec330a5a50a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4ddfc007-cd66-4f3d-bcf3-3e1cfbf61c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f679d1-66b9-4735-ab5a-f8c4523d25eb",
        "cursor": {
          "ref": "a49dda86-71a2-494d-af98-4f2a892a957a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "78c112c8-ede5-4466-94eb-cd0debcb3a15"
        },
        "item": {
          "id": "b5f679d1-66b9-4735-ab5a-f8c4523d25eb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "44cd5eec-6210-4b49-87b5-90ccbeb26038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c62204-1f0e-49bf-bee5-ec07feecf70a",
        "cursor": {
          "ref": "ff867c22-9545-41d5-82e2-d7bc2757d3ff",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ec6bc20b-1533-4a21-bab6-4d53bddbbfb0"
        },
        "item": {
          "id": "e4c62204-1f0e-49bf-bee5-ec07feecf70a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d60de709-572e-4ca6-94c4-2cea45523609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3f90ab-f945-4cf4-b030-1930c98e12e3",
        "cursor": {
          "ref": "a3e914f5-3c03-4684-9aab-cc45330f88ea",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "49f6978f-8252-4a1a-aecf-55f35fb4bdd8"
        },
        "item": {
          "id": "bf3f90ab-f945-4cf4-b030-1930c98e12e3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dc33764b-f1ea-42fe-a905-ca2a4c8e7b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd76d9a-2979-48a8-a806-4491b7d3ac0c",
        "cursor": {
          "ref": "bed855b5-186d-4cdb-a066-1e3a9b75eedb",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a2139f68-8a97-46e5-a0bb-aec4ebb3c600"
        },
        "item": {
          "id": "edd76d9a-2979-48a8-a806-4491b7d3ac0c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "690874d3-13e4-4ae3-8c6b-976e332eac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13febd0-82c4-4946-a4a6-bb50857ba6f7",
        "cursor": {
          "ref": "46177a89-fd5b-443e-8919-13d6f7883a17",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "415d34d1-e5f0-472a-91e8-02643d559ebd"
        },
        "item": {
          "id": "f13febd0-82c4-4946-a4a6-bb50857ba6f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7873ca27-625b-40a4-8042-e9805a497dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5179d4-5381-4d2e-945a-8cf66c7a04e5",
        "cursor": {
          "ref": "75eb5bb0-e2a9-496a-bc23-ff37ba4acbc1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b67f8e2d-07eb-445e-af20-a6d962323ebc"
        },
        "item": {
          "id": "0c5179d4-5381-4d2e-945a-8cf66c7a04e5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e3873f8c-095c-47e1-ac6a-47c45b51086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8339376c-dd5e-4b13-9b71-80bcfa8e246e",
        "cursor": {
          "ref": "08c071f4-891b-4559-8a1e-669e836b3bb9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "eacea628-4b9a-4c0b-9fcf-caa9f87f437e"
        },
        "item": {
          "id": "8339376c-dd5e-4b13-9b71-80bcfa8e246e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6e9ed8a2-ca9b-4354-9533-07c8c4e402c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635e622c-9199-452a-b87b-b0422a0c606a",
        "cursor": {
          "ref": "ff906011-8895-4ebe-9f5f-df2491c3ac2f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5a49cd08-5c7b-495c-bf17-987d5146b3eb"
        },
        "item": {
          "id": "635e622c-9199-452a-b87b-b0422a0c606a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "23cbbeba-f8f5-4b45-9d1b-c0ee0113b53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca2d53-1420-437f-a63a-fe7b14aff33f",
        "cursor": {
          "ref": "431e4733-9881-4848-b3f4-775d629eaf22",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "deb97c1f-ea58-4dd2-bd8c-3f7b2866087b"
        },
        "item": {
          "id": "9dca2d53-1420-437f-a63a-fe7b14aff33f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bed5274d-6711-40de-be1c-86e6fd353f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a229d30b-8c9c-4d4a-9048-6ef9e081fe1c",
        "cursor": {
          "ref": "a12600e0-775b-45a0-8b5d-91457b06f46e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "69769a01-511b-4d6e-a079-253e33f979da"
        },
        "item": {
          "id": "a229d30b-8c9c-4d4a-9048-6ef9e081fe1c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ed75d08c-cbb9-472f-9acc-ca35d70e0cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47818e52-7428-4bf2-a436-75c4220a33b2",
        "cursor": {
          "ref": "f108dad2-10f3-4c8d-a1ed-dc34b2a9a342",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c28f35e6-a304-4443-9a73-9497ed9580a7"
        },
        "item": {
          "id": "47818e52-7428-4bf2-a436-75c4220a33b2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9b067e75-91fa-416f-9c26-32cce9415d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66d4e1c-e9d9-4c61-bace-df0672375eaf",
        "cursor": {
          "ref": "d64f2ab8-a183-4b90-a8d0-710311b901ba",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cff25919-7dd3-4286-affe-58482756f1fe"
        },
        "item": {
          "id": "c66d4e1c-e9d9-4c61-bace-df0672375eaf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0da9a183-7011-4625-90d2-5eec07210fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63beb4db-d1a1-45d6-8f80-650165dc1f44",
        "cursor": {
          "ref": "de764860-70d9-48fa-869f-84c3bc560018",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4a5e9455-f329-426d-ad2d-e58227fdc2a2"
        },
        "item": {
          "id": "63beb4db-d1a1-45d6-8f80-650165dc1f44",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a8add098-f7b0-4bfb-8d10-21a94b483d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd569c-a040-4e24-ac30-c130eddbccb2",
        "cursor": {
          "ref": "f7dacae1-365c-4d68-808a-aa4d82e8bd76",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d83fb14c-9f5d-4c41-be81-e03f55b942ae"
        },
        "item": {
          "id": "56bd569c-a040-4e24-ac30-c130eddbccb2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4455c387-e54c-46f2-a1e6-309da31aed6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe506dac-309c-4674-b22c-5231654aade5",
        "cursor": {
          "ref": "8d43c366-df06-453c-b04d-5492f0976391",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2519f4e-f3b9-49b6-84d6-b425ce06d595"
        },
        "item": {
          "id": "fe506dac-309c-4674-b22c-5231654aade5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "08b3e98b-c395-4d75-a147-e7d77946eaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c14a2a-e354-47c8-8837-8b1c20b41cdc",
        "cursor": {
          "ref": "4f30441d-0e2a-49ea-87f8-055332b8d98d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "29d4d6b2-9b9a-4dba-b2cf-07a5fad2e5ee"
        },
        "item": {
          "id": "95c14a2a-e354-47c8-8837-8b1c20b41cdc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c28bb4b6-f00f-4f67-901a-c1736613016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dde6ac0-f8b0-40ff-81af-c4c923e164d0",
        "cursor": {
          "ref": "b98237b3-07a9-41b1-adff-5c5021a89750",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d15256bd-7a00-47e0-ae04-83e49bcea772"
        },
        "item": {
          "id": "3dde6ac0-f8b0-40ff-81af-c4c923e164d0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "78903536-9c86-446f-8575-f7f0813caa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7346747d-a7a4-48b9-b1eb-8418b7131141",
        "cursor": {
          "ref": "cdd79113-a248-4590-9e2f-f19817d83166",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b2a675d5-f076-4f50-8743-37dfc4d269a8"
        },
        "item": {
          "id": "7346747d-a7a4-48b9-b1eb-8418b7131141",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9f358e53-e469-4305-b410-bc5501777a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2882e4c4-4c80-42bf-8579-e86feab6ad11",
        "cursor": {
          "ref": "fd82b847-4f80-4740-b312-09d52317ba6f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53dd7c4b-5e93-4072-8c00-03729ec072d6"
        },
        "item": {
          "id": "2882e4c4-4c80-42bf-8579-e86feab6ad11",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "73496ca0-a9c5-4321-b9a7-11d99c6b2405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c98048a-6f8b-4135-ad29-bc29e8144910",
        "cursor": {
          "ref": "a716a3f1-99b0-40fe-8333-18c221d8bd16",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0fc966a-f277-4603-a6ae-f576652944f7"
        },
        "item": {
          "id": "2c98048a-6f8b-4135-ad29-bc29e8144910",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89f22a40-16f1-4bd1-8ced-453ad4176363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba1f06a-2349-4307-b17d-9c7d33d0a99b",
        "cursor": {
          "ref": "6556dc94-d523-4bea-b376-f46c299780e5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "07afceab-8674-4648-929f-35f5772d738d"
        },
        "item": {
          "id": "6ba1f06a-2349-4307-b17d-9c7d33d0a99b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e75d70de-446e-4342-b313-6f572e436b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa7acb8-974b-411b-895e-aa2ae83d33f7",
        "cursor": {
          "ref": "84c0ab4d-e6fe-4a8d-ac90-999dfc7b610e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "20109e78-8c91-49ec-bea7-f6f863d3e338"
        },
        "item": {
          "id": "6fa7acb8-974b-411b-895e-aa2ae83d33f7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "31e21480-7b87-4f9f-b945-751764bf7480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d674d6d-9045-42a2-bc24-8c013a76d906",
        "cursor": {
          "ref": "cb54e1fc-95cd-4baa-931f-fe624b0ef760",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6cc32275-f5ad-411e-9963-ce1c6e20226e"
        },
        "item": {
          "id": "5d674d6d-9045-42a2-bc24-8c013a76d906",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cb2da12f-23b8-40e7-afe5-eae8dba7d893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9df41e9-3b0b-45f9-874a-4d36d3bcd9dc",
        "cursor": {
          "ref": "ede8e1dd-0942-411f-966d-77785a94bc09",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "212fed90-f427-49ca-a071-62f3e7094637"
        },
        "item": {
          "id": "e9df41e9-3b0b-45f9-874a-4d36d3bcd9dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b78943db-32d6-44c1-b921-51d752d8879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e078e5-fcd4-4eb8-90bd-2a5bc75b7056",
        "cursor": {
          "ref": "c08f9127-c55a-4741-829c-abd038c3fc71",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "72e86b8a-7403-4073-bc47-525ed1118b3f"
        },
        "item": {
          "id": "81e078e5-fcd4-4eb8-90bd-2a5bc75b7056",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f4f35632-b61a-4c34-86f6-b1d11de4ff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1a8d6e-2b89-46c0-a28d-307f5af2b892",
        "cursor": {
          "ref": "4ee6c74f-279d-41af-bdbf-85884b5de1a5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b20170e3-ec26-4009-a19f-02721831332c"
        },
        "item": {
          "id": "ce1a8d6e-2b89-46c0-a28d-307f5af2b892",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0d018d3d-9bd5-4497-82ef-803432640453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f05a696-81e3-40a5-894d-99b1b369dfa6",
        "cursor": {
          "ref": "dfa0d339-4160-4f46-b479-83a5368c01c5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f457c650-ee0a-43a6-8545-9221fea8350c"
        },
        "item": {
          "id": "2f05a696-81e3-40a5-894d-99b1b369dfa6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "450b6773-a3a7-40d1-8cba-f9a26cb703f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7e80a-0b4b-4369-9e15-5d4f49a9f84a",
        "cursor": {
          "ref": "bde8213d-af22-490c-ab5c-26be37c8b0f5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "287f4dea-87c7-4863-8659-db669fd429de"
        },
        "item": {
          "id": "0ba7e80a-0b4b-4369-9e15-5d4f49a9f84a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "30462a66-24d5-4e33-985b-35b9cb2081f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c59bd-5677-492b-9451-5fa7677b854f",
        "cursor": {
          "ref": "5518a4b4-1f5f-4a2a-9929-a989d700d159",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "13e92d57-372c-4291-9781-cbe094f57434"
        },
        "item": {
          "id": "f20c59bd-5677-492b-9451-5fa7677b854f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21cd2e29-8c96-4e6f-82ad-8b2ae32923f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32cd8c9-01c9-4446-8734-0668e27153d1",
        "cursor": {
          "ref": "694765bb-3a4c-4f91-9741-fa98aa72b5e8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "267d6be3-dae0-4487-9b37-d6e315f139c6"
        },
        "item": {
          "id": "a32cd8c9-01c9-4446-8734-0668e27153d1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "98e0c92f-cf7c-436a-a98a-697dc4634f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18be6307-30ca-4acf-856a-8ed046885f4e",
        "cursor": {
          "ref": "a0857402-b4e0-43b2-8986-88003b3910a4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6dd2fb46-3f25-4180-9183-cb2801e8776b"
        },
        "item": {
          "id": "18be6307-30ca-4acf-856a-8ed046885f4e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f42b95dd-5b68-4330-9418-19cc622511e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d5d7c1-4601-4433-a8cf-04184978c708",
        "cursor": {
          "ref": "45b8dff5-8c41-4b14-88ef-f7b2bfb99654",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fb0b8eb8-49f3-4d92-94ef-44fab52e718e"
        },
        "item": {
          "id": "14d5d7c1-4601-4433-a8cf-04184978c708",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b055704-45e6-4fe5-9d77-bb8818af41f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d30792b-2535-4e3a-97cc-7533ccda5cad",
        "cursor": {
          "ref": "26153e88-4f7c-49ab-80a4-a70dbbfb0a2a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3a9fd4f7-2408-46bd-84e9-fa34935aa142"
        },
        "item": {
          "id": "1d30792b-2535-4e3a-97cc-7533ccda5cad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "df08bb40-4c92-494d-846a-deb2422f7b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7221427f-264c-4fd1-9477-f4e778f45016",
        "cursor": {
          "ref": "71859b75-61ce-4438-a48e-66240d4cecdc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dd3629d8-3372-4c61-8be8-c3a0be52b682"
        },
        "item": {
          "id": "7221427f-264c-4fd1-9477-f4e778f45016",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0ae8ccae-d56b-470f-b075-d220747ec5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fcc069-4c1e-498a-b247-62ec8a8c7f75",
        "cursor": {
          "ref": "0f54a2e7-3782-40b9-a2d5-78131dee202e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7dce3623-1a32-47b3-bbf8-24398e54e941"
        },
        "item": {
          "id": "08fcc069-4c1e-498a-b247-62ec8a8c7f75",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f67c0717-eae2-4c98-b901-ecb91ac7dda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68574e8-0a4b-4a8c-b59a-679d23335258",
        "cursor": {
          "ref": "d5c9cc1c-3dcd-4eb8-ba7f-215c6fc6553d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc7e78e6-bce9-447b-b0b4-9c29b5798bb5"
        },
        "item": {
          "id": "a68574e8-0a4b-4a8c-b59a-679d23335258",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2ef82d3d-8d4d-46ce-aa09-8ce413655bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161ac033-b12d-4298-95c7-9e3d9e46c9f0",
        "cursor": {
          "ref": "37111147-2786-4779-a3d9-6c9a3fc2a949",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eaff6644-562c-486d-b5dd-b1a62dde1eb5"
        },
        "item": {
          "id": "161ac033-b12d-4298-95c7-9e3d9e46c9f0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4a90a8fb-b7a3-439c-9288-c1536d1dd968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7884f3-398b-443e-a912-d2a587809603",
        "cursor": {
          "ref": "3b4c6519-cef8-43c8-a699-9d5fe37d6c69",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7841e1ae-7590-4632-9e0c-29d51b7ce93c"
        },
        "item": {
          "id": "1f7884f3-398b-443e-a912-d2a587809603",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7d0fef2d-e959-4f8f-9eff-32faf6360540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc61fa-db2b-42a5-b28f-e0365b569b28",
        "cursor": {
          "ref": "7fa7a588-3234-4393-af8a-cff6690d9c2e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4d1e8307-e61d-43fb-a520-7c12670d1051"
        },
        "item": {
          "id": "afcc61fa-db2b-42a5-b28f-e0365b569b28",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "774dd9d5-ec7e-4a14-b0dc-9c98c6ea5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9789c0-2f02-423c-bad9-1d5234129741",
        "cursor": {
          "ref": "a608e614-32c1-460e-8691-dd8df279f058",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3f9dd1db-a86f-4b2f-a90a-2118c4e0828c"
        },
        "item": {
          "id": "3c9789c0-2f02-423c-bad9-1d5234129741",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cbbff7a3-eab7-4363-851b-08cc181c40c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71e5c28-32f0-43a8-8208-c29703e98c03",
        "cursor": {
          "ref": "179b71a1-5ca1-4ff5-a89d-e9c27df93bd3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "28287f1f-34b8-477d-a9eb-ad7284a8be72"
        },
        "item": {
          "id": "c71e5c28-32f0-43a8-8208-c29703e98c03",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50746793-cbed-4a8b-97fd-840ad75ce83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b4f427-53a3-43d3-b3ba-2a978963b883",
        "cursor": {
          "ref": "a6720cb7-4837-4b20-a6a0-20dd0067513f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ab53e0ee-153c-4517-8376-ea23651e413c"
        },
        "item": {
          "id": "d6b4f427-53a3-43d3-b3ba-2a978963b883",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a2d58817-08bc-4cba-8735-8ace73d2a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d4c987-2335-485d-ac03-c448456fd860",
        "cursor": {
          "ref": "e528db60-5042-454b-9d53-f8c6dbb2c4d3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "866c4fd4-ff4e-4eed-9e69-191e461f0754"
        },
        "item": {
          "id": "b9d4c987-2335-485d-ac03-c448456fd860",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d6b2ba70-5937-467e-9122-9224f2429055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e0c5e-2d9e-4dfe-b534-131fe56d2c4e",
        "cursor": {
          "ref": "829ec15d-7eca-45a0-b9b6-572d59664134",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "47f8925c-d3e4-4f25-9a26-9284026bdf75"
        },
        "item": {
          "id": "c75e0c5e-2d9e-4dfe-b534-131fe56d2c4e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bf3fd184-0a90-4189-ab42-3a55ed457d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afa4444-535c-4317-a8e8-563d17cceaf0",
        "cursor": {
          "ref": "1fb5fe63-79b1-4fe7-ac68-834772af9670",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "20de4bd9-0dbb-469b-b6af-a9bd4ae05dfa"
        },
        "item": {
          "id": "2afa4444-535c-4317-a8e8-563d17cceaf0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e64ee75c-6ab9-4ae3-a104-91ce92e21c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a88668-34c0-440c-8772-1b165086e59f",
        "cursor": {
          "ref": "efde2a49-692a-4fe3-a332-a852ba83ac14",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "06b257ef-c4a7-47a1-9516-2556b42ec819"
        },
        "item": {
          "id": "d3a88668-34c0-440c-8772-1b165086e59f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1fb525de-4e17-4a7a-9f8e-2c12d9b5f56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40d16ac-feca-409b-b3f3-663f7dd3382a",
        "cursor": {
          "ref": "6e1da079-1236-41f7-998a-f845286c43b6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "eebe98a4-064c-48d0-8b24-aa5c3d365501"
        },
        "item": {
          "id": "f40d16ac-feca-409b-b3f3-663f7dd3382a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9d3e96a9-a7a8-4da9-ac2b-eb74c34bc182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b2d98d-659c-4f71-8097-c5759c2e5190",
        "cursor": {
          "ref": "bf8dcf18-f69b-418d-84a9-2640316ff8d0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "da72d903-21bb-4a5c-a725-ff3be317eebd"
        },
        "item": {
          "id": "f3b2d98d-659c-4f71-8097-c5759c2e5190",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "87afa476-0055-468a-8967-46b7b878251b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3274bf3c-9bf1-4072-bda6-9c4bccfe323b",
        "cursor": {
          "ref": "294e536f-c895-4e82-bdeb-7f4a20912e5f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8aae343c-6b75-495c-9840-b051874d93c6"
        },
        "item": {
          "id": "3274bf3c-9bf1-4072-bda6-9c4bccfe323b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "18f4712a-aceb-4c8c-8403-6393417d0242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16182402-ee9f-48af-8c4c-744c60535cbd",
        "cursor": {
          "ref": "d690a8eb-aadc-4389-9425-33d3b62c96ec",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "42e8c12b-5365-4795-acc4-9737df027662"
        },
        "item": {
          "id": "16182402-ee9f-48af-8c4c-744c60535cbd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d9dcd1e8-566e-49db-82a5-942cf90b312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7562803-f7ca-40f4-9ec4-10643bb5de4f",
        "cursor": {
          "ref": "b54e39d8-ae82-476e-b851-092339abd2c3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "85822ee8-3d98-4aba-ab55-9f02a0df2959"
        },
        "item": {
          "id": "f7562803-f7ca-40f4-9ec4-10643bb5de4f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b90f3ea6-2074-4e29-a95d-eeee30cbd808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b373ed-0e57-45dd-85cf-3ffc58fc5a1e",
        "cursor": {
          "ref": "f8360800-e980-468d-9dc5-060c81a5a924",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e53cca4d-91a3-4090-93c5-77e7af5629b5"
        },
        "item": {
          "id": "80b373ed-0e57-45dd-85cf-3ffc58fc5a1e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea8723c2-d713-46b1-a8ff-bafc9b7232a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9a9bcd-eaf8-4038-a47c-2a64cabf3176",
        "cursor": {
          "ref": "efdabdc4-28d1-421b-94a8-d82d9477b730",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3f002c6c-eb48-4445-85a7-a42f05a28513"
        },
        "item": {
          "id": "8a9a9bcd-eaf8-4038-a47c-2a64cabf3176",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8bf74d26-02fc-438b-9ac0-b241d5625348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b1cb9-bd6d-4dc7-8b46-ae800eddd714",
        "cursor": {
          "ref": "ad143ec2-ecfe-4a82-b07e-ce821b71b427",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1655b870-3243-4dee-92f9-dd063c9df8e3"
        },
        "item": {
          "id": "0d0b1cb9-bd6d-4dc7-8b46-ae800eddd714",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8b0f94ea-a2cb-43b4-8c85-d5e710027627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409902fc-f404-4f82-a21a-00282712ff39",
        "cursor": {
          "ref": "89406536-2c04-4fcc-a42d-010177e9c4aa",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "60d99724-a745-4134-b938-519c2a725d52"
        },
        "item": {
          "id": "409902fc-f404-4f82-a21a-00282712ff39",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fe5ebaa-daa2-499e-aedf-f79b63b375f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd437319-457f-4e28-a88f-26e7d806cf01",
        "cursor": {
          "ref": "e0a7a18f-b106-4cbc-ba33-e222c7d4dd0f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52d37222-21e3-481e-b9a2-28ee0d7eb3a7"
        },
        "item": {
          "id": "bd437319-457f-4e28-a88f-26e7d806cf01",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "21d17256-f586-448a-ae53-8bdbb923b53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1525b132-274a-4c2b-bdf0-c65ff3a420d1",
        "cursor": {
          "ref": "aa48fbfc-39f9-4f03-9ed0-a91b5ecfd88a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5b5b2523-1589-4541-af22-bb9cfd1aeadc"
        },
        "item": {
          "id": "1525b132-274a-4c2b-bdf0-c65ff3a420d1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3495acfb-42f5-4d14-96d4-7146e6a1d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f433a72-0c0f-4a65-ba21-0fb4158b2d8c",
        "cursor": {
          "ref": "e68305e3-ccf2-4c09-a7ad-bb856eaabd20",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c3a35662-e6eb-4090-aa29-e75c070ad327"
        },
        "item": {
          "id": "4f433a72-0c0f-4a65-ba21-0fb4158b2d8c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53b44859-ffff-45a1-a5fb-1ede54f06f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf792da-4ceb-40cd-a97b-b4de10f545a5",
        "cursor": {
          "ref": "58a0d42c-8bd9-4599-9b88-af4a027d6a75",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "57f724c2-d14f-4fc0-aa1c-19a2fb280afc"
        },
        "item": {
          "id": "ccf792da-4ceb-40cd-a97b-b4de10f545a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c17dc1bb-4b3e-4f63-af6d-78c2cec45e88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa888e0-6360-4241-9a0a-0e733b2124c5",
        "cursor": {
          "ref": "96e850eb-c16a-4af4-a6fa-bc9cddafa842",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2e522c25-9733-49bb-b146-dce6f246c6f6"
        },
        "item": {
          "id": "baa888e0-6360-4241-9a0a-0e733b2124c5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "73307582-e7d1-479b-b64f-e0eec01266ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0a20ab83-cf1f-477f-85e1-e82dda60cf55",
        "cursor": {
          "ref": "482b1135-6485-430b-bc21-c243174078ba",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "31eb32ee-5122-425a-8e12-3d502cd768f5"
        },
        "item": {
          "id": "0a20ab83-cf1f-477f-85e1-e82dda60cf55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f723ef33-4e78-4c48-9ef2-04363a1b8a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "266c6862-6c6b-42b3-9794-79177626890a",
        "cursor": {
          "ref": "1edba109-a389-454b-8f25-26bea73963a5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b19992e4-08ca-4749-9aa5-4459ada2bee9"
        },
        "item": {
          "id": "266c6862-6c6b-42b3-9794-79177626890a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48ae380d-f066-414f-a273-6ecfa2ab70ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bd9662c4-8932-4d9f-98d1-80013e17a475",
        "cursor": {
          "ref": "166b51c8-0704-4466-a543-c5265c8681b3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "59516298-28c8-42cf-901a-f3a0d15667fd"
        },
        "item": {
          "id": "bd9662c4-8932-4d9f-98d1-80013e17a475",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61dd9cb4-fca2-4b4b-af67-b1ee3d7a26ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "622a399b-7bdd-40a3-8ed6-c478ef7531eb",
        "cursor": {
          "ref": "d4e8a809-26c6-42c5-8eda-ed0b47b46459",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1b2b72e2-1dbc-4108-9a25-eaec68ea19f3"
        },
        "item": {
          "id": "622a399b-7bdd-40a3-8ed6-c478ef7531eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e9a56256-9d18-4e69-8062-cd74ab09d7f4",
          "status": "Created",
          "code": 201,
          "responseTime": 10117,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a0953e-bee5-460d-9868-b64d2133d23a",
        "cursor": {
          "ref": "ce88f925-636d-4247-8692-3cc1481dc60f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "21656c2c-742b-439c-9641-1e53079a4f29"
        },
        "item": {
          "id": "41a0953e-bee5-460d-9868-b64d2133d23a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd222c2a-57f0-4aae-9ad4-ec9931cf5c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "037d9957-e612-4dcf-b875-1b3669ddf834",
        "cursor": {
          "ref": "85880f7a-25c8-4a43-818c-dcbba2b1abba",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e0cdc700-0ac1-45d4-b2c9-7c039aa4f4a0"
        },
        "item": {
          "id": "037d9957-e612-4dcf-b875-1b3669ddf834",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a88712ba-e392-4378-9db0-02ef70c7932a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6d8d3835-e1ba-43ee-b0ea-5fac3d281eef",
        "cursor": {
          "ref": "00f11b64-70fb-46ce-9db9-ec459a44f6f7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a7b10d4-d280-4a11-aef6-59bf8d05ea58"
        },
        "item": {
          "id": "6d8d3835-e1ba-43ee-b0ea-5fac3d281eef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fc11a21-80bc-4ae1-b60c-d0ee07f28381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180c7967-43ab-42f3-8e65-3b56c6420c9f",
        "cursor": {
          "ref": "bb6b50aa-b792-4956-b32c-aacfac76c743",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c2d6f3d6-447a-4768-8f47-d7cdd255e277"
        },
        "item": {
          "id": "180c7967-43ab-42f3-8e65-3b56c6420c9f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9f94c866-5f68-4869-8080-9f3165e879b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73cce21-31fe-45a1-bbd9-3c8f97d728f9",
        "cursor": {
          "ref": "4c6c248f-b2f1-4adc-bb81-4e58adea0ae9",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d805526d-b578-4d99-9138-d7feb55c20b5"
        },
        "item": {
          "id": "b73cce21-31fe-45a1-bbd9-3c8f97d728f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e0cbe985-6e1d-4e3d-9e8c-550e52c682d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58a413-f3f2-4a34-96b8-f049b6526973",
        "cursor": {
          "ref": "9197808f-e403-4314-b785-859dfb2fe66b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d8f8a2ab-5293-4f36-b29e-0ed55a5fd128"
        },
        "item": {
          "id": "0e58a413-f3f2-4a34-96b8-f049b6526973",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2feb89f5-b2c1-4b7b-ba0a-1e9d22f44e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e51c5-f0af-47cd-bc3d-d2e3405b8655",
        "cursor": {
          "ref": "12d64433-9f46-46a2-84d1-f18d5779750d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5a5e37d7-e194-416e-ba9a-a271ec823c48"
        },
        "item": {
          "id": "919e51c5-f0af-47cd-bc3d-d2e3405b8655",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a163b8da-f4bc-4cc9-8388-489b4fd89fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00552c11-60a6-4023-9c4b-59880fc4e47e",
        "cursor": {
          "ref": "8ab14497-23fa-429a-8b65-a3275d59c3ca",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "55263e08-3249-4a64-ba0f-4c66a5cad62f"
        },
        "item": {
          "id": "00552c11-60a6-4023-9c4b-59880fc4e47e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d359a0f5-ee04-4df3-9df3-26d511fab79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae36cbe-588f-4dad-803c-7cb4869a3235",
        "cursor": {
          "ref": "6fba1f0e-8e05-4013-b7a6-c7d42ead200c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0db7ee29-3174-46ec-ad95-9a5acaca6eb3"
        },
        "item": {
          "id": "cae36cbe-588f-4dad-803c-7cb4869a3235",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4cdf2955-b084-47c3-a2a6-359fca8abe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e871623-d1a2-42bc-a4e4-2d726803d440",
        "cursor": {
          "ref": "38a43337-e8f9-4e89-a6fb-a2a7669522f5",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "51e9fbd4-76f8-4cb9-ac90-2629bd63ffbe"
        },
        "item": {
          "id": "8e871623-d1a2-42bc-a4e4-2d726803d440",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b14c5b36-a968-4f6e-8919-b99c44986daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77605755-8365-4318-97cb-2f81939c04a5",
        "cursor": {
          "ref": "7d1be810-787f-428b-b60b-0277a28737a4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6d369689-964e-441a-840f-8654079d4938"
        },
        "item": {
          "id": "77605755-8365-4318-97cb-2f81939c04a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "17acdc7c-b2ef-484c-94a2-aee8077b60f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50039e04-730f-4389-9b96-f1c928f63471",
        "cursor": {
          "ref": "9adf2a89-792f-4020-9261-adc85ed859dc",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "18e28f08-d99a-4bcf-ac9c-30ccfe910bf0"
        },
        "item": {
          "id": "50039e04-730f-4389-9b96-f1c928f63471",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f41640c-054c-4d8d-aee9-1068df3bcbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9515979a-43ad-4ecd-9af6-9939bbb9bf65",
        "cursor": {
          "ref": "f78510ed-4942-4be1-9ffc-b0c69c477c45",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ac9ad724-9345-405e-b894-054034d84a15"
        },
        "item": {
          "id": "9515979a-43ad-4ecd-9af6-9939bbb9bf65",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15d0b197-0369-4eb6-8fcb-7ea551d896bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d52a55-97e6-460b-bd1f-308ca9799e48",
        "cursor": {
          "ref": "993ef457-161d-4810-a6ca-b7058eeb98e4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1647238b-53bf-4236-9c28-4e19f6f48848"
        },
        "item": {
          "id": "07d52a55-97e6-460b-bd1f-308ca9799e48",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "26825a31-a32e-4192-9053-dc052b2a93b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405334e3-4016-46ca-a7c8-aade0d56028b",
        "cursor": {
          "ref": "93f85e7e-d666-4d00-b58f-950b036a4581",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bd1c359c-9c2d-4c1c-902f-e09f97c86c1d"
        },
        "item": {
          "id": "405334e3-4016-46ca-a7c8-aade0d56028b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b9b5ad28-ead5-4596-98aa-3741437547db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f3dc74-04c1-45fc-9b44-ae0c656a4e9b",
        "cursor": {
          "ref": "8251a2a7-5f59-41dc-8101-dcdc4ebc0244",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c5fd066d-16c1-4b45-ba64-aeb0e7a43fe7"
        },
        "item": {
          "id": "a6f3dc74-04c1-45fc-9b44-ae0c656a4e9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dab05ae4-c3bb-41d3-9f59-d4d685696eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57d0352-a1eb-43bd-9666-4ea4107d56bb",
        "cursor": {
          "ref": "f49ecc7f-d9f0-4c00-8977-d24927c8d100",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f93b213e-3e98-4985-b104-521192fc10b5"
        },
        "item": {
          "id": "a57d0352-a1eb-43bd-9666-4ea4107d56bb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ec2db4f-97bf-4cd4-b201-372588d402c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f022338b-4fef-49ec-b300-dc5848c210cd",
        "cursor": {
          "ref": "de0386f8-8fe5-425d-81e2-0ccd41bffab5",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3fb91d11-6233-4e3f-a0be-b5ac2918cc5b"
        },
        "item": {
          "id": "f022338b-4fef-49ec-b300-dc5848c210cd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5f5f8b17-3419-4425-93f1-36f7f1d9dd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84b643b-d7ae-4577-bf88-d84e080b8715",
        "cursor": {
          "ref": "916676e8-2f45-487a-9333-b64e3e5222bd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "71020105-d55d-4835-9448-08431e57fe2b"
        },
        "item": {
          "id": "a84b643b-d7ae-4577-bf88-d84e080b8715",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fb0f5a18-dd21-48c0-b898-ba85f5c6af40",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "adc0493b-4531-4b18-822a-4a74cbc36d98",
        "cursor": {
          "ref": "c5ec6c15-61be-4e14-a60c-64da487ffa6a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e2b56ebc-ac6c-43ea-9492-0beca8d49614"
        },
        "item": {
          "id": "adc0493b-4531-4b18-822a-4a74cbc36d98",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f88f69ba-4e38-4b39-b835-98336a2f932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993ad90-f647-43d6-97ae-c54aefc1857c",
        "cursor": {
          "ref": "1a58b182-023a-44df-8397-942da56a854f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "15c15ebc-dc17-44b5-b1d6-b24f51515777"
        },
        "item": {
          "id": "5993ad90-f647-43d6-97ae-c54aefc1857c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13a9684b-bb2d-4f79-a278-d9990039e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f4b92-ef7c-48b7-b894-175b5842b815",
        "cursor": {
          "ref": "a3aa9c1d-16c9-4697-8b53-0cdf67d6de16",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "88327bec-793b-4a22-afb1-4a65a74c586e"
        },
        "item": {
          "id": "6a5f4b92-ef7c-48b7-b894-175b5842b815",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9e773c25-7646-44de-8ed4-08a82848a00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21f2d9e-54e9-43ec-9183-e46eb7be0178",
        "cursor": {
          "ref": "99694c2e-7400-400a-908b-850b1c63ba14",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ec9212bf-8f9f-4536-a561-17c0af62b84a"
        },
        "item": {
          "id": "d21f2d9e-54e9-43ec-9183-e46eb7be0178",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "32f3a4ae-835a-4f69-918f-61fc944d2837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b65b99-2a24-49a3-9b76-a2ab8914c315",
        "cursor": {
          "ref": "e5a2f896-969f-4540-9c86-2f719c38c3d5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2b841875-b43a-48d4-982d-4bd820c01a76"
        },
        "item": {
          "id": "03b65b99-2a24-49a3-9b76-a2ab8914c315",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1996e4c6-912e-4c39-8fc2-77f3684e5604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd9e9bd-1ad4-4286-90a4-2871c128839f",
        "cursor": {
          "ref": "3048c16a-da0d-4d38-bb20-caa3a91568d3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "079ca4d9-4eca-4c38-8e2a-1947c332e3d6"
        },
        "item": {
          "id": "3fd9e9bd-1ad4-4286-90a4-2871c128839f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2390b4b5-bc07-4bb6-83d8-844e9cbcd719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941ba450-17b9-499f-b88c-537a45740e7a",
        "cursor": {
          "ref": "e5e6f487-666f-4dac-8a65-ea58da32799b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "62b56692-e1b5-45f0-bf1c-d7104ff116be"
        },
        "item": {
          "id": "941ba450-17b9-499f-b88c-537a45740e7a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44dc7c69-5bad-4e27-b08b-9e171f74e7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d5a81-b8c7-445d-a8e8-314d8c4d73ee",
        "cursor": {
          "ref": "61673657-02fe-4276-ad1a-1fd54b5327f3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "102602a9-8a6d-45ce-a46e-4f40e5a4c194"
        },
        "item": {
          "id": "8a1d5a81-b8c7-445d-a8e8-314d8c4d73ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4add3337-65d0-42f4-b998-80309c5fbaba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6439001a-290f-4c67-8f84-afef819ae194",
        "cursor": {
          "ref": "91b3545d-85a2-44e3-a9ef-dcf11caa04b2",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f4279e36-774d-48d4-a3ee-1c7f06cc4d90"
        },
        "item": {
          "id": "6439001a-290f-4c67-8f84-afef819ae194",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d0ddb8f9-6925-4b6f-8694-1318e45db39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50df2b3-4b90-46b5-b6e5-09bb679d2700",
        "cursor": {
          "ref": "001f8c26-9502-41e3-a6c1-0b2761b123fe",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d2def9c9-49fa-4dad-9b83-586f258d04ac"
        },
        "item": {
          "id": "a50df2b3-4b90-46b5-b6e5-09bb679d2700",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a3e5c109-e63f-4a49-b797-d0d736e688bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332aefb5-b02e-4c4e-af92-ca5daa843c90",
        "cursor": {
          "ref": "b70fe0ca-2eb6-4e49-af23-1b2cd9174fc7",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f1e7468b-620c-4482-aa97-d398bc94fa5b"
        },
        "item": {
          "id": "332aefb5-b02e-4c4e-af92-ca5daa843c90",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ca31325a-69c7-4415-914c-5b12f1fd2fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622c9d96-8d5b-4644-921c-9a35a8469652",
        "cursor": {
          "ref": "0f84b19c-9798-4f46-8e51-bb6f7f7f2838",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "767d0b46-6f61-4ddd-95db-e0f850deaf55"
        },
        "item": {
          "id": "622c9d96-8d5b-4644-921c-9a35a8469652",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9640aa0c-b3f7-4c26-91bf-bcfadf413767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad0cf6a-4172-4636-b734-38a49fb4dab9",
        "cursor": {
          "ref": "db54c183-d55b-46f2-8d1a-13ef716057ec",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8955354f-8f2a-48b5-9ef8-6b88fa82a41d"
        },
        "item": {
          "id": "5ad0cf6a-4172-4636-b734-38a49fb4dab9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d80bd2c-e38a-49ff-ab80-2acfc074f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e18a831-89ba-413f-8bdb-ec6b43ccfe5e",
        "cursor": {
          "ref": "d1a9fed8-ad61-4458-9392-31fded167356",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3eee80aa-71e7-40b3-9860-331fea5810bd"
        },
        "item": {
          "id": "1e18a831-89ba-413f-8bdb-ec6b43ccfe5e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a42d9f8c-194d-4c7c-a136-b0e32a607db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43efa12-ce02-477e-909f-be9d5026eb32",
        "cursor": {
          "ref": "531dce83-ae48-4b22-9789-a438cec653ad",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6abb7baf-903f-4ad7-8c90-801fca43c6d7"
        },
        "item": {
          "id": "c43efa12-ce02-477e-909f-be9d5026eb32",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0f087d6e-f6fd-49a4-a28b-dc7f4fbfe1fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "15330dee-d59c-420a-aabe-30bc48552001",
        "cursor": {
          "ref": "c4a5cac3-9560-4a34-8914-67b77d4c146e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1a418c75-7750-4ac7-a24c-e320031e1f5a"
        },
        "item": {
          "id": "15330dee-d59c-420a-aabe-30bc48552001",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "42247f6a-30b5-4621-aede-463ac241e0e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "2c47ff8a-866c-4cd6-8819-5ff4a5622148",
        "cursor": {
          "ref": "30e083c7-b777-4d42-bc8e-60981b9e671c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b3a41e1f-5007-4e10-869a-84ed12b927fc"
        },
        "item": {
          "id": "2c47ff8a-866c-4cd6-8819-5ff4a5622148",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "dd8592b6-f99d-466a-96a0-9ffda4a5f0b6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7e890287-8cfa-4ff2-9539-bed20b1b672d",
        "cursor": {
          "ref": "c04a23fc-0d1c-481f-a4fa-2007ead1d234",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9f3e9a19-56fe-40f7-825b-5ab1be379d59"
        },
        "item": {
          "id": "7e890287-8cfa-4ff2-9539-bed20b1b672d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "78b37607-bcca-491a-9fbe-1d853a659302",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "94a13258-8c47-4ff2-8b66-20e37d91a197",
        "cursor": {
          "ref": "960e6e9c-567a-4fa7-9df8-164f5385e04d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "11360556-6efa-42d3-a17b-d4f041b7cffc"
        },
        "item": {
          "id": "94a13258-8c47-4ff2-8b66-20e37d91a197",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cfeb4278-3c31-4505-8920-f1e91c3a6c2f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "68f2cbe5-60dd-42cf-9acd-201ef3397be4",
        "cursor": {
          "ref": "0818f212-868e-4234-abc2-7616baba5462",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5927e7ac-ae78-4009-bf5b-936be8cc49f1"
        },
        "item": {
          "id": "68f2cbe5-60dd-42cf-9acd-201ef3397be4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "219bf218-481a-498d-b7ef-e165218919d9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d99d3c75-377b-4591-b221-d86465c0ba32",
        "cursor": {
          "ref": "7d90b0f7-5294-450a-91ae-e06a20a068dc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "338335a6-ca12-4747-be0d-d889b4ce9139"
        },
        "item": {
          "id": "d99d3c75-377b-4591-b221-d86465c0ba32",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "841a1f85-c518-4830-b2c2-edeb914c8e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9add41-66d9-47d0-b825-1bac513effcc",
        "cursor": {
          "ref": "61651b2d-a07b-40ca-b02c-027e8e6d4439",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b0e1cf74-2211-403f-9f20-a3f247c95460"
        },
        "item": {
          "id": "4c9add41-66d9-47d0-b825-1bac513effcc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "898e038d-61bc-4b63-9412-910ccf537d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a57b1-d912-42ed-942f-e04090101d7e",
        "cursor": {
          "ref": "034f9899-69c0-4af6-8502-cbaea4002fd6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "77e3e08b-8eb0-4792-8c11-d0a2f08b255e"
        },
        "item": {
          "id": "238a57b1-d912-42ed-942f-e04090101d7e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cde7c4e7-0a86-496f-aba7-8f8cca70522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3f7b90-b4ca-4e1e-a5ca-b18758bd8be3",
        "cursor": {
          "ref": "d41485a2-c40b-4dfe-9844-e2991dcb1efe",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2a3f4091-5525-4a0c-8098-2ed9d888fc9e"
        },
        "item": {
          "id": "4b3f7b90-b4ca-4e1e-a5ca-b18758bd8be3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3946cc8c-500c-42a2-93e4-ba8d085e6afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a39aa3b-e513-4c86-89b5-48d39cb4111b",
        "cursor": {
          "ref": "cb1745b8-0842-466f-9c16-46f46791b936",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07312baf-fd11-4e80-8828-8d3a381244fa"
        },
        "item": {
          "id": "9a39aa3b-e513-4c86-89b5-48d39cb4111b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "27c842ed-e5dc-4190-95dc-a111362a0994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798f6ad-a896-4057-b9fd-d38b214a2817",
        "cursor": {
          "ref": "931a7246-f179-459b-9f59-607ddae13c7e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b1c82d7f-433b-4469-9a0b-5b3fcc5cdb9c"
        },
        "item": {
          "id": "e798f6ad-a896-4057-b9fd-d38b214a2817",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "29ebdec8-2439-41b4-bf74-31c724f80db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c23e2e6-1966-456f-af90-1a642ca02d14",
        "cursor": {
          "ref": "964060c3-34ba-4c61-ab72-3b8baea0d1af",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c93f2202-275c-43d9-93e0-91e749316bed"
        },
        "item": {
          "id": "2c23e2e6-1966-456f-af90-1a642ca02d14",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7b9ce6f4-95e7-49c3-82dc-e5c10f31a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4323790-b4d6-4f6b-b0d1-2d80e5d28a2d",
        "cursor": {
          "ref": "e5763bde-cf66-4e96-9859-4b92c3238572",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6b1756e4-8bf1-4dbe-821b-1418ff8e714c"
        },
        "item": {
          "id": "f4323790-b4d6-4f6b-b0d1-2d80e5d28a2d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47dafd28-418a-4b32-a0b2-f1378f50c0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9d83f2-1898-43ea-98df-6929f7c350e2",
        "cursor": {
          "ref": "68e2573b-9f0a-4ece-8d8c-f3cff006ef43",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8f4e8675-2152-4ff2-bd42-f4b91cdb1bf4"
        },
        "item": {
          "id": "5e9d83f2-1898-43ea-98df-6929f7c350e2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5db90085-3cb8-4ebe-936a-0c01e7b88ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a93e523-1c47-4586-8368-092f5c4bd44e",
        "cursor": {
          "ref": "66b0d2de-c168-44a7-b556-5f8620d8339a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c66e763a-aff0-4d21-a0a1-dd9a9893feb5"
        },
        "item": {
          "id": "3a93e523-1c47-4586-8368-092f5c4bd44e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2eb56598-f7f2-4f1d-bf05-dc7cb7556983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e8dab3-aefc-4d99-8c64-1b277f074bac",
        "cursor": {
          "ref": "74da6dd0-6465-4c6c-bae2-d6862f91e403",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "07e44e01-ce81-4039-8b0a-93c1ab0918dc"
        },
        "item": {
          "id": "86e8dab3-aefc-4d99-8c64-1b277f074bac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b75e4675-a252-487c-9244-557a5ad42ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d71629-b6c1-435b-b73c-d351402ad3dc",
        "cursor": {
          "ref": "e90e2399-0847-4cf1-ba39-11269a328b39",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "42a1ec6b-ffd9-40c6-9cd5-473713015ac5"
        },
        "item": {
          "id": "37d71629-b6c1-435b-b73c-d351402ad3dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e90e5aa5-0c9d-4b72-9868-08d6a91c13b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4c7b78-6a6d-44b1-96c2-203efbba4725",
        "cursor": {
          "ref": "3bf08df4-55b8-44ed-87f8-b124678a791e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1a25d1c4-d99e-4d11-ba0a-f73c5eaeea13"
        },
        "item": {
          "id": "db4c7b78-6a6d-44b1-96c2-203efbba4725",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a3fd76d5-cbf7-4a58-b4dc-5d4b8f74e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db83f76-911a-4a57-a88c-014a5ac2aaf6",
        "cursor": {
          "ref": "ab0e7576-402e-4142-aba1-516c3ca190e2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0970c95b-0cd5-4d47-8871-16b91ba1bb0a"
        },
        "item": {
          "id": "6db83f76-911a-4a57-a88c-014a5ac2aaf6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "42ba6047-1cb1-4e8b-b86b-4cd4b20f81a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f353e-b5f0-4854-a9d7-9ff4029f7aca",
        "cursor": {
          "ref": "11d87371-b41f-472b-8c09-e424d7643c76",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ddfa448-dc59-4cc2-9cb9-218c1459ac1f"
        },
        "item": {
          "id": "871f353e-b5f0-4854-a9d7-9ff4029f7aca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "00a8e17f-f3b8-4ac5-a608-a6e005c56365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c25dd76-ea19-403d-a132-845d5ed9d8e5",
        "cursor": {
          "ref": "bdf1984f-98bc-4759-bb88-70f94319fe52",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87a683c8-034b-4b95-b455-138a3fff2a68"
        },
        "item": {
          "id": "5c25dd76-ea19-403d-a132-845d5ed9d8e5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f7a9e28c-ae9f-4904-9558-fd85e8d85cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8964f4d4-8b91-4e7a-99e0-23449ebaf8d8",
        "cursor": {
          "ref": "b095800e-35c0-4331-9877-6c874eb5402c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8a06ac9-cffb-4ee6-bfc8-d88f6e67c953"
        },
        "item": {
          "id": "8964f4d4-8b91-4e7a-99e0-23449ebaf8d8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b7b5ca79-c7de-4750-a476-21c87b19aadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ffcbcb-c78d-4a9e-b30b-4cc2eda51929",
        "cursor": {
          "ref": "b986019a-98fc-431e-be05-31180876126b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8dbe8ae8-9ab0-4213-9aba-0a47bd9d350e"
        },
        "item": {
          "id": "18ffcbcb-c78d-4a9e-b30b-4cc2eda51929",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dbeb6c97-a02e-4d11-a9d0-565ceb18b537",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "9657f077-49c4-40c3-b2c7-69707ef41119",
        "cursor": {
          "ref": "025057df-ed65-4524-9e2a-3879217aeb1a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0117d6b4-d00f-46db-b888-7a816543d360"
        },
        "item": {
          "id": "9657f077-49c4-40c3-b2c7-69707ef41119",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ad86bac-35e6-4b8e-b714-cb67e3f43ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad1f4ba-f578-4c4d-af79-0466ef620db4",
        "cursor": {
          "ref": "c50927d2-a654-4046-9dc0-67732e74a895",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "54533cc6-1357-4149-bfe6-ea0635e8a90c"
        },
        "item": {
          "id": "7ad1f4ba-f578-4c4d-af79-0466ef620db4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4ed1d84b-9886-418e-9b83-ba244a61741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff3190a-d9a5-4b78-b448-2ba8ee8df998",
        "cursor": {
          "ref": "4c4045f1-eb6b-4ff9-a814-fab15b4af078",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "31d0bc91-0ba4-4d0a-9537-74f2d74eb57c"
        },
        "item": {
          "id": "7ff3190a-d9a5-4b78-b448-2ba8ee8df998",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "82f694c2-37fe-400f-a41f-b284db64ca6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6054f232-d5b9-4697-908a-e061c81c51dd",
        "cursor": {
          "ref": "8bff6dff-aaba-41cc-894a-2324dd3b4d0a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a88012f-9e31-4303-b37e-6e6bb7d2d69b"
        },
        "item": {
          "id": "6054f232-d5b9-4697-908a-e061c81c51dd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9e16eb07-2f60-431a-8560-d2425a538837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e851dfc0-e117-45ab-9e67-44ef4a04090b",
        "cursor": {
          "ref": "963251c6-b88f-40de-af5c-52a5837d24bc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cfd0ae45-2fb4-408d-add4-82ccdffae9cf"
        },
        "item": {
          "id": "e851dfc0-e117-45ab-9e67-44ef4a04090b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "81a9b692-39fa-438f-bf1d-52e215c1c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b968f4df-83e3-471e-894b-cf694310a781",
        "cursor": {
          "ref": "fcfc63ea-cb47-431b-a745-ad7c94399d9f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7ba62914-596d-485f-a8a6-ef9bb59d0a29"
        },
        "item": {
          "id": "b968f4df-83e3-471e-894b-cf694310a781",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0784427a-709a-428a-b30b-75810229e6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc298e83-0b6c-4a1e-934f-285dbfe97887",
        "cursor": {
          "ref": "b9192572-85e6-4353-b857-794806237e5f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "99a1c20b-0b8f-4a6f-af55-c1768c9d2e41"
        },
        "item": {
          "id": "cc298e83-0b6c-4a1e-934f-285dbfe97887",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "61fe7e75-631f-4d9f-904b-f0c147e732d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a0442-1597-46ba-add0-07e9e38a183a",
        "cursor": {
          "ref": "815a2109-d11e-4e07-97e1-c40612287176",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4cab3272-58e9-4f42-8b06-4b70170e71df"
        },
        "item": {
          "id": "705a0442-1597-46ba-add0-07e9e38a183a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "98cd5773-ed3b-4443-8a2b-82fc6c8ed63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa8be0-96e8-46d6-a244-c89a98010eb6",
        "cursor": {
          "ref": "ac6645ca-b19f-42fc-a7ef-0149fb4ac8d3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5de9fa57-5ff1-4273-ba44-799d76c68906"
        },
        "item": {
          "id": "44aa8be0-96e8-46d6-a244-c89a98010eb6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a19cb054-6a09-4614-803d-8db92bd777b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43989c3-31d8-449b-b48f-2fee381d3de2",
        "cursor": {
          "ref": "f829ce38-c2ca-4cfe-810d-583917676364",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a59885fc-dec1-43dc-9055-5bfe8b977043"
        },
        "item": {
          "id": "f43989c3-31d8-449b-b48f-2fee381d3de2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ff96da09-8db2-469d-8a49-c14fd7a69e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff6a023-4857-4c59-9f24-4f0234659319",
        "cursor": {
          "ref": "e63cff20-e123-4405-9adb-984989fb5d91",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5ddeb30c-171d-4ca1-98ef-6068d837fd3a"
        },
        "item": {
          "id": "6ff6a023-4857-4c59-9f24-4f0234659319",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "190b03c7-c32e-4ab6-8eb0-1dfd6de07cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a88d37b-7112-4d86-98a3-612852b6c9c2",
        "cursor": {
          "ref": "9ecc0be2-286a-446b-958a-47a9ffb5425b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "69c5db3f-2df7-4792-b967-dd6a7eb06111"
        },
        "item": {
          "id": "9a88d37b-7112-4d86-98a3-612852b6c9c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b0a7fa07-b3fe-418e-ada0-2d0247edf057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c2687b-521f-487a-b257-2ebfa4b51260",
        "cursor": {
          "ref": "f57f0e65-5d2e-4727-a34a-a91c25ec6131",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6c176f1c-f539-4d3f-81b5-14ea727cba84"
        },
        "item": {
          "id": "52c2687b-521f-487a-b257-2ebfa4b51260",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c70037c-c627-412d-ae1c-85be4ac3023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbae421d-19aa-47b8-8ca3-3770d52db493",
        "cursor": {
          "ref": "e63c60b4-a227-4162-96c2-be4db859354d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f4a354b3-21cf-4ecc-ac46-3488063165f6"
        },
        "item": {
          "id": "fbae421d-19aa-47b8-8ca3-3770d52db493",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "996791f1-928e-4deb-93c6-aefa4b7a6311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c726d5-c8f7-4b93-b960-92a2ddb2295c",
        "cursor": {
          "ref": "843b2025-fe7d-4b86-abff-3fee5ec62e0a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d16a8658-0d5e-4d16-9132-e16fb7fa8eea"
        },
        "item": {
          "id": "77c726d5-c8f7-4b93-b960-92a2ddb2295c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1b3cd9c7-5afe-403f-b03b-29bdb23c2a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c346e9e-b65b-4aa5-bda4-8adc955bdf4c",
        "cursor": {
          "ref": "975fad01-8625-4520-bc84-1963b5c6e761",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b238f776-0e22-4350-9939-8fb144f1cef8"
        },
        "item": {
          "id": "2c346e9e-b65b-4aa5-bda4-8adc955bdf4c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18f70ed7-c565-461b-afa3-d8490c9574b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45c464-d3ab-4408-8413-f5122b7cb33f",
        "cursor": {
          "ref": "720304aa-233b-4f18-ab27-8cf8b3a1e774",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7464cff9-ce5a-4df8-9c80-de705d32fadf"
        },
        "item": {
          "id": "ba45c464-d3ab-4408-8413-f5122b7cb33f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c669f874-e47f-4908-b020-a7492f313052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48110f5-03dc-4442-b5a1-33e3bc3c648a",
        "cursor": {
          "ref": "c553fd0c-0db7-459a-810e-fb79d36088d6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9f136f7-1557-4b14-bef3-46c9f014892a"
        },
        "item": {
          "id": "d48110f5-03dc-4442-b5a1-33e3bc3c648a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66826531-373e-47c8-a9f4-0305488242f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030271b7-dc9a-4c7f-b83d-50ab44d9c0d4",
        "cursor": {
          "ref": "a27b1cbc-cd17-46ad-9d10-813d4ac0cf84",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0479e6bf-ba6f-4745-ab84-209d62fa8fd2"
        },
        "item": {
          "id": "030271b7-dc9a-4c7f-b83d-50ab44d9c0d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a3f89504-4a4e-4ad5-a1b8-e3eac59c8021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4968f182-c839-4d94-bc19-066a34876ae2",
        "cursor": {
          "ref": "96c8e3b6-5cc8-48a0-a8ac-8a2edc79368c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a754c45-a36b-4797-bdc9-fb6d7f0a8424"
        },
        "item": {
          "id": "4968f182-c839-4d94-bc19-066a34876ae2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "39e0d9ee-aa30-4f75-9ef8-f3fca5847b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40743472-29b1-48b1-8d2e-941a06cb5c70",
        "cursor": {
          "ref": "177288dc-e66c-4bd0-8bde-3e61f9c82772",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "200e41dc-aa59-44e7-8f00-55eaffc6b0c1"
        },
        "item": {
          "id": "40743472-29b1-48b1-8d2e-941a06cb5c70",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "db8e025f-4bcd-430d-8dc4-e3353a518b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72326af-cb5a-46eb-9175-4f069bfe607f",
        "cursor": {
          "ref": "f38a1cae-13c7-4df2-8a83-9c7ca5ff2099",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a48075e6-6f45-47f0-a839-faccbd973f05"
        },
        "item": {
          "id": "f72326af-cb5a-46eb-9175-4f069bfe607f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "253793b7-800a-4ec0-b198-c7bd8c79fcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260bf16c-8a36-4b13-8f22-3f52c11e51ed",
        "cursor": {
          "ref": "9ea195f0-0a3b-4831-b8c6-e8ca4fcc4946",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "176a0a56-42c9-4f38-bae8-c0accd33670b"
        },
        "item": {
          "id": "260bf16c-8a36-4b13-8f22-3f52c11e51ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d149eb97-71e8-4637-adb3-90a0afbd75f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973174ae-60b0-452d-991f-c609d3206039",
        "cursor": {
          "ref": "806d71a3-b58c-4c2c-991c-077489f0ee00",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f29bd3c0-39c5-4e4e-b911-3201525cc787"
        },
        "item": {
          "id": "973174ae-60b0-452d-991f-c609d3206039",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f7e17206-a504-4874-9e81-55b4f8d06dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac1cc15-3861-49dc-bc17-7a90a72a1393",
        "cursor": {
          "ref": "09accc5f-3fae-430d-a80a-a6787ac460e4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b361c6b1-1901-4a15-8ec5-180f119790ad"
        },
        "item": {
          "id": "bac1cc15-3861-49dc-bc17-7a90a72a1393",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6908ca5e-b796-48f2-9043-4fcaf3369d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cadacc1-379d-4d22-8fc3-46479a6f5a93",
        "cursor": {
          "ref": "647625e1-c3d4-4934-a3e2-5e24ef7e2b68",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7a1dd453-a5c7-492e-b8d4-a761c2fb12d1"
        },
        "item": {
          "id": "2cadacc1-379d-4d22-8fc3-46479a6f5a93",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c7f941d6-abfe-4061-a2b1-0d1c7253a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab6175-f7ac-4630-9a4c-0cc8d2e2e484",
        "cursor": {
          "ref": "fcff9a18-7bb3-45d7-b533-39b5279d2da0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d71920d5-9edd-4034-83aa-ce903bc61e7f"
        },
        "item": {
          "id": "c0ab6175-f7ac-4630-9a4c-0cc8d2e2e484",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c2f7b3ae-4868-43b1-b576-bdc80c8a37a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd7e564-35c3-4aa0-abe6-496b0d3b416b",
        "cursor": {
          "ref": "212de645-8076-46bd-bc21-52e2de67d258",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "513768c4-f577-4b47-ada7-cbdcbb007c69"
        },
        "item": {
          "id": "1dd7e564-35c3-4aa0-abe6-496b0d3b416b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e5fe6a5c-ba74-4b5e-bbd8-d82312050de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead6bf14-159a-45f3-bb4e-bbf2e9ee0ace",
        "cursor": {
          "ref": "5c05170b-ec0f-4a32-b369-82620a1a914d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c1b83e78-343f-40df-89c7-c523a7b1c8a8"
        },
        "item": {
          "id": "ead6bf14-159a-45f3-bb4e-bbf2e9ee0ace",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a603dc5b-25bf-4344-b7c7-9206c510033f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e892f2cc-36fb-40f5-9efd-7250f79f5c40",
        "cursor": {
          "ref": "7ae6953f-8727-492b-b401-4c10e0ca3a69",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eeea3d53-a3bd-41e9-8f9a-960ba124b1f8"
        },
        "item": {
          "id": "e892f2cc-36fb-40f5-9efd-7250f79f5c40",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0685e5ba-a131-41a8-a86e-54c764b02366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee92420c-9329-444d-8e09-0fe09a269bd3",
        "cursor": {
          "ref": "f2865a26-c624-42d0-9f91-7a9572aca6b9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60026449-45d5-45ce-9b86-ede019c4421a"
        },
        "item": {
          "id": "ee92420c-9329-444d-8e09-0fe09a269bd3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2088b33a-35a5-4200-89e8-fb88a7dd79bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c5f39b-ee11-438a-b27b-fd891443d072",
        "cursor": {
          "ref": "bd9cf934-00f7-4aca-b8fe-411ff46b21e8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d40fde3d-f544-41d3-b4c9-844f6bbda1a6"
        },
        "item": {
          "id": "36c5f39b-ee11-438a-b27b-fd891443d072",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "15c989a7-0240-4a00-a917-e2bdc161c9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbae3957-e7ad-438d-ba10-d54eacba582c",
        "cursor": {
          "ref": "37d3dbfc-17d8-40dd-b710-e845731cbac6",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "54805e32-549f-47c6-83f7-4b24dd45b54d"
        },
        "item": {
          "id": "bbae3957-e7ad-438d-ba10-d54eacba582c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "df705027-08f0-40ba-86aa-b4e2c506f9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3831038-7186-4804-ad7c-e0ab88172c7b",
        "cursor": {
          "ref": "747ff578-fb88-4214-9d5a-5856014cd9f2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bf96ffac-72cd-427e-b422-1bfeb9a7ce9c"
        },
        "item": {
          "id": "c3831038-7186-4804-ad7c-e0ab88172c7b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "24af0d9f-5c77-42ae-86a4-8d818c056067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb27755-c23e-4a38-a3bd-95672deea794",
        "cursor": {
          "ref": "b5284d7a-2700-4ee0-a9a1-c217c375e5bd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b8e6b232-4fc0-4937-9624-9e49c57cad35"
        },
        "item": {
          "id": "8bb27755-c23e-4a38-a3bd-95672deea794",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "962aab76-164c-4180-ac02-d24028e70805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568398f8-5dca-4524-a1eb-d055c82df5af",
        "cursor": {
          "ref": "5cde9200-b680-4118-b815-f95786324554",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cc4eba92-3e99-49d7-9d8a-cb1e1d888bd8"
        },
        "item": {
          "id": "568398f8-5dca-4524-a1eb-d055c82df5af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9d092318-8c04-4819-bd72-d9371b53689a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac07af33-34f0-405f-a3db-772c47cf7db0",
        "cursor": {
          "ref": "ab940161-98f9-42fd-8f6a-78d4e144215d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6e591f68-be81-4693-a402-bd120008bcf9"
        },
        "item": {
          "id": "ac07af33-34f0-405f-a3db-772c47cf7db0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3cb41736-fabf-4313-8d76-22df0bc1101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5adde-72eb-4fc7-8823-6a73a15e945d",
        "cursor": {
          "ref": "ca196da0-5440-4e6d-bc49-75a8c6e68ff7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b19d0b69-5f17-4670-8d44-d968814baefa"
        },
        "item": {
          "id": "01c5adde-72eb-4fc7-8823-6a73a15e945d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "52efe179-a6f0-4ee6-b8c6-9dc9a4485364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073a19a2-6b87-40a4-8d44-469391e507ad",
        "cursor": {
          "ref": "db6642db-7ec3-40d1-9ba2-c9afe09994db",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "abec3ebc-bb33-4b3e-8e58-d40e925d2d60"
        },
        "item": {
          "id": "073a19a2-6b87-40a4-8d44-469391e507ad",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6957f320-ded1-4b07-8209-7c37c7200746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb0c3e-a102-45c0-8b94-935b5ddb30c3",
        "cursor": {
          "ref": "5e20f4c0-e783-4817-8089-1e6eb9b6db95",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c60534e9-9060-443e-b7c7-4b60a7e533df"
        },
        "item": {
          "id": "3cdb0c3e-a102-45c0-8b94-935b5ddb30c3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "865f094b-4b1b-44a3-8ca1-761ce62fc2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ecccd7-3025-494f-9b3f-45a07a91c762",
        "cursor": {
          "ref": "416aab50-7ef5-488c-8b8c-5cd7c3f586ad",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "49530fdf-7dc3-4463-96d8-d934621b7f2a"
        },
        "item": {
          "id": "06ecccd7-3025-494f-9b3f-45a07a91c762",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cf8ab700-8590-4408-a38e-56a7251752cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2d3488-fcdb-46d8-a62a-22d1384a8409",
        "cursor": {
          "ref": "33884bef-de37-449c-922e-aada7e94b07e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50ab64cc-6cc0-438e-b4a2-ab9d96c238d6"
        },
        "item": {
          "id": "df2d3488-fcdb-46d8-a62a-22d1384a8409",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1924f641-9f2a-450c-9bbe-a39eaa2591fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d0680a-b6f8-4140-b611-f42fa790e3f7",
        "cursor": {
          "ref": "c6ba0831-bc34-41d7-9dc7-198b028a7f57",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1f7c707-02ea-4042-88a2-9d5d68a11fa7"
        },
        "item": {
          "id": "a0d0680a-b6f8-4140-b611-f42fa790e3f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6784934f-3738-4e10-981b-17d7f0dc6295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af87399-757d-469c-9ed7-6bb39c3f4b0b",
        "cursor": {
          "ref": "0e2f5844-ee6d-4e3a-a784-9894fc02475d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c182ae78-922f-45e8-a647-87ac3d153bc4"
        },
        "item": {
          "id": "4af87399-757d-469c-9ed7-6bb39c3f4b0b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "98b20fc9-90df-42fe-b0d7-be91e7174d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844246aa-6a76-4d75-9cb5-6c341dab0e44",
        "cursor": {
          "ref": "311e43a4-abbe-44b5-92df-397c1d85bc36",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ef2258fa-936c-42c3-9884-fa575e6c2484"
        },
        "item": {
          "id": "844246aa-6a76-4d75-9cb5-6c341dab0e44",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0c599065-ebe6-41d0-865d-08ccfda00cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3b9a83-947e-4974-b66a-a05aedd6acb3",
        "cursor": {
          "ref": "59cb5c8a-1442-4670-8d11-63310c793f4a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d670360b-3640-4826-853a-a361ff04984c"
        },
        "item": {
          "id": "6b3b9a83-947e-4974-b66a-a05aedd6acb3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "345d322f-ec3a-47ce-a396-0d5bf8850d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca08017-a4f1-46b2-8a81-4b17835421c7",
        "cursor": {
          "ref": "ddae2f5b-364e-409c-a4e1-af0f68602c44",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0de3b850-d11f-4dfd-a441-b6334c02dbe6"
        },
        "item": {
          "id": "6ca08017-a4f1-46b2-8a81-4b17835421c7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c8691e8c-f566-4654-9836-1aafb515caf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edf8b80-54c7-4f30-b465-cb771ea36285",
        "cursor": {
          "ref": "5391ae4e-b863-4e19-96b6-2159379f99be",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bf42fd29-7bc7-4e91-b3b4-faba69aa600d"
        },
        "item": {
          "id": "3edf8b80-54c7-4f30-b465-cb771ea36285",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c166120c-ce09-42c2-a8bb-98c96c27514c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9cc41e-9a8b-40ac-a840-6d6e7c07818d",
        "cursor": {
          "ref": "d62ec06a-6c23-486f-b9e1-e9ec05795d94",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a7338ffc-f586-41ae-b40a-e492d5d5fd7c"
        },
        "item": {
          "id": "ab9cc41e-9a8b-40ac-a840-6d6e7c07818d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4941254c-b0a8-4871-98de-0ea424aaaf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae802dd8-9111-4a50-9fc2-e086172eec56",
        "cursor": {
          "ref": "8d1e9439-a98c-49df-9617-04b414069353",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4bce870c-b527-41bf-92f7-7857bf2ceea7"
        },
        "item": {
          "id": "ae802dd8-9111-4a50-9fc2-e086172eec56",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "249990b3-1801-42c7-b9cb-2b76e0f83601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075cc408-a2f6-4714-a615-da83310cf166",
        "cursor": {
          "ref": "7e6f64a7-1d88-499d-9174-00152cf990d6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "09a7d44f-73ad-4dae-a4e3-06f9b55bf50c"
        },
        "item": {
          "id": "075cc408-a2f6-4714-a615-da83310cf166",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "839fd27c-baf4-4e80-86e1-0f75eee90135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ac502-1d9e-4211-baa4-cbaafe559f36",
        "cursor": {
          "ref": "bf86ce1d-2dda-4b02-ba45-1607aaf8af94",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3b0e27c4-a788-4ff8-a150-98046ea9fa02"
        },
        "item": {
          "id": "837ac502-1d9e-4211-baa4-cbaafe559f36",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e8e0dbc7-7c7a-43d6-a555-2c1a6a054aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c91d6-5b6c-42a5-9c53-7955309b6fca",
        "cursor": {
          "ref": "53a30b54-0410-4eaa-94f5-14a64f7237ec",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b9c86d85-0e78-4551-a1ef-031e99d27cb3"
        },
        "item": {
          "id": "127c91d6-5b6c-42a5-9c53-7955309b6fca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "871621f7-0698-4366-aa22-f93c0c78e72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737be97a-418c-4cf4-b95b-d0866a8dab4e",
        "cursor": {
          "ref": "8b7d079f-dec1-4987-a78f-fd64447c3ae4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "85523ec8-2fb7-4f1f-8d6e-519b5e27c6d2"
        },
        "item": {
          "id": "737be97a-418c-4cf4-b95b-d0866a8dab4e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6236c61c-fcc5-4b63-a19d-d23e980bd035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f4429-be83-418f-a3f9-9c42982f7ff7",
        "cursor": {
          "ref": "6caaa80f-4979-41fe-91f3-b053bc43c6b0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "207e9fc6-d64f-40a7-8056-40281001e928"
        },
        "item": {
          "id": "809f4429-be83-418f-a3f9-9c42982f7ff7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6e4923bd-9363-470b-b075-b9c582dc2e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bd331b-8c8d-4429-a1f6-c0c7985095b5",
        "cursor": {
          "ref": "9b1f9a90-c0b9-48e7-813c-4d4825d0acd9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "da489b21-3f02-40a4-8e2f-4f78aa07c7fc"
        },
        "item": {
          "id": "53bd331b-8c8d-4429-a1f6-c0c7985095b5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bcda23b1-63f5-4cd5-8768-c4acbdbc7912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108a5aa-9ee2-4ed9-996a-58cf0306b10b",
        "cursor": {
          "ref": "7a8435b0-7052-4acf-a402-3161ed985df9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7ccf7354-56c9-4484-b452-c5866a5c46f4"
        },
        "item": {
          "id": "e108a5aa-9ee2-4ed9-996a-58cf0306b10b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bf9be855-5736-44a3-b938-2ca56e8f6e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bb70e2-a496-43dd-8922-e0814aefa451",
        "cursor": {
          "ref": "65900741-199e-44eb-8e60-748367d92cb4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "32b10e78-b77a-47b0-96b8-3786e88fc856"
        },
        "item": {
          "id": "04bb70e2-a496-43dd-8922-e0814aefa451",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b2a0af43-d771-436a-a54d-b98b53cc0321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e2b9d1-2a48-46cc-824b-fca5bafc679c",
        "cursor": {
          "ref": "2d6f7e5c-c4d8-46a1-8708-d2ad035ea513",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b513473c-287e-4fd5-89a3-efe5ee89e496"
        },
        "item": {
          "id": "38e2b9d1-2a48-46cc-824b-fca5bafc679c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e710ac7d-11db-4f89-bae5-7d25b0d36955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff6443a-6cd3-4558-acd3-a7b41d95ac0b",
        "cursor": {
          "ref": "13ffaf01-5ae6-4604-a969-db49879683a3",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cb354577-4cd8-411c-8489-d73bc7b85f9d"
        },
        "item": {
          "id": "cff6443a-6cd3-4558-acd3-a7b41d95ac0b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f3b4d70e-e6f7-437e-ad93-ea6936b7e84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7ce4d9-deb1-4ac2-960f-8f477971bda8",
        "cursor": {
          "ref": "32f3c207-a532-4413-8ef7-5af0ecae1294",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2dd5915f-5223-48ed-938d-2a9c30a8d2ac"
        },
        "item": {
          "id": "3c7ce4d9-deb1-4ac2-960f-8f477971bda8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "92bd8459-011e-4306-8e73-ebf643edf55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c814b0ea-0a41-4a21-aae4-96503a5cafd2",
        "cursor": {
          "ref": "02b9d7bd-1bfc-4cf4-abd9-bd1f08ac610f",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e5b40b75-2af2-478c-b8ad-20bf2e31323b"
        },
        "item": {
          "id": "c814b0ea-0a41-4a21-aae4-96503a5cafd2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "219517ea-b57b-41e5-ae48-b56854b52891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08b4957-74f5-4808-9219-50dc6724b4ed",
        "cursor": {
          "ref": "682f8793-5111-4f98-9c11-44780733a7d1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a1f25b00-c61c-4494-8256-087b6cf4bf25"
        },
        "item": {
          "id": "a08b4957-74f5-4808-9219-50dc6724b4ed",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f08d4d47-ee26-47ff-9b5e-87c68459300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d22ae8-42d9-4c6e-b7b6-93e5938ddb0e",
        "cursor": {
          "ref": "9c016738-bdd7-4396-8549-a8e999d06220",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b4b6419-efaf-47ed-ad15-87bd3e2b9684"
        },
        "item": {
          "id": "82d22ae8-42d9-4c6e-b7b6-93e5938ddb0e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7109ef96-8840-41f1-b35a-8026b2ec2ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d15e6-69c0-4f29-a075-f0078a456f68",
        "cursor": {
          "ref": "d7e50eeb-84d8-4c3b-9e91-f8f6d4fd8cd7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b7779ca8-7123-46c3-9585-07413dad7e1d"
        },
        "item": {
          "id": "730d15e6-69c0-4f29-a075-f0078a456f68",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e5c517c1-af9f-444f-9dc2-7124577ba9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5b9c80-fb73-4abc-b204-aa25dc544635",
        "cursor": {
          "ref": "a4f7b213-413b-4fa4-809a-b9c4c6d2107c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4cdba316-5d85-4b91-a2b4-febcd6c3e412"
        },
        "item": {
          "id": "da5b9c80-fb73-4abc-b204-aa25dc544635",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3956052d-666f-4784-a0b9-f4deda6194f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab25422b-9fa5-433f-8cd4-bb2118d7445d",
        "cursor": {
          "ref": "df68aa43-8134-4355-adf5-78b7310f5976",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c7a035d2-6616-412b-821c-70bd3c48b649"
        },
        "item": {
          "id": "ab25422b-9fa5-433f-8cd4-bb2118d7445d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "45bd0969-92b7-44cb-8738-a3377ea7e701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c507cb78-2343-4c32-b234-136800f0789d",
        "cursor": {
          "ref": "699e67dc-f105-473d-8844-d7bb95212827",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "986705a8-6a38-4a4e-b447-f1cf151abaaf"
        },
        "item": {
          "id": "c507cb78-2343-4c32-b234-136800f0789d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4dba79c3-d625-4329-8d30-a6ddafde9e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c59dbea-790d-4449-aad0-d09246adda5b",
        "cursor": {
          "ref": "73b91098-8e37-4e2c-b998-163181ce94eb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fdad9011-d87f-49d8-b5f0-936d6b460d16"
        },
        "item": {
          "id": "9c59dbea-790d-4449-aad0-d09246adda5b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5d1cabf0-be44-4972-ae45-ae6228e099f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3108cc-858b-4c44-be57-5874e20e9e79",
        "cursor": {
          "ref": "4e697c90-8b14-4f7b-960a-b2a2dc8c3425",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2cde8cda-bd4b-4f3f-b4da-3556ed4a2608"
        },
        "item": {
          "id": "fc3108cc-858b-4c44-be57-5874e20e9e79",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e2e187ae-0a98-473e-8d14-9d40881fd670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c38f41-3b6d-459f-b1a8-04cbb378abb5",
        "cursor": {
          "ref": "88fda9c7-43b1-4ba4-97b8-c88957cde657",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7fd05136-d097-4e47-98be-81a7ed801820"
        },
        "item": {
          "id": "89c38f41-3b6d-459f-b1a8-04cbb378abb5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1de9f000-d40c-4264-ac8a-dd8f1b6b9a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92fde37-cec5-417a-ad12-1a0c667dd204",
        "cursor": {
          "ref": "fee8c7f7-1d4a-4552-84fe-68cf19f03d16",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "491776d5-9d91-483c-88b6-8ed7140228ff"
        },
        "item": {
          "id": "a92fde37-cec5-417a-ad12-1a0c667dd204",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e5f15f36-4c00-440a-9628-d116f9eea96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8c2dde-efe5-433d-9c36-307071031b41",
        "cursor": {
          "ref": "a2f53737-b8f6-4e83-a604-3fc1ebff0360",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b47568c-06ed-4692-af13-f45b8d66c442"
        },
        "item": {
          "id": "5f8c2dde-efe5-433d-9c36-307071031b41",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a0ba9968-46ca-4e04-9bc5-b2fa68dec29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d528f3cb-7b64-40ff-9c8d-13f030aa7090",
        "cursor": {
          "ref": "1bdfc1fb-9b15-4530-80a6-40e4fb87bfe8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a366d48-7f6d-41c0-b62a-1f3f3ff43212"
        },
        "item": {
          "id": "d528f3cb-7b64-40ff-9c8d-13f030aa7090",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7c5baea6-37ee-41ce-836f-74302fe01e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9abf92a-baca-4409-9d77-e257a0cb60d3",
        "cursor": {
          "ref": "e1861756-d160-4849-8d5f-eed93670c18a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e99c0bdc-8ced-4a10-b2ac-ee82deb82d9d"
        },
        "item": {
          "id": "c9abf92a-baca-4409-9d77-e257a0cb60d3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "94bde902-eaaf-44c2-a3ae-fd25eefd1ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b373c21-9f08-433e-8b9f-564ff9491007",
        "cursor": {
          "ref": "ce92d728-eb32-4e1f-ba46-d067ec1e3550",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1814d853-b9d4-4ff4-bc16-5c7dccdcbdbb"
        },
        "item": {
          "id": "3b373c21-9f08-433e-8b9f-564ff9491007",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07bb4eda-80be-49cd-913d-7b65f753514f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcf1202-ada5-4cf8-9436-a844cb817a1e",
        "cursor": {
          "ref": "1e940d14-f36b-4dd3-a8de-ca4603424ba6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cf472920-4d63-4950-bc6b-a819722f8b1a"
        },
        "item": {
          "id": "4dcf1202-ada5-4cf8-9436-a844cb817a1e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d84db9fb-5f60-46d9-b084-13018ed2f91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be2fd7-a709-4ccf-b737-33645de44963",
        "cursor": {
          "ref": "83678926-cbc9-4110-a3ac-b51c106eb2f2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fcf3c922-25d4-4031-a53a-c0b714233233"
        },
        "item": {
          "id": "88be2fd7-a709-4ccf-b737-33645de44963",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d97b30a4-bff3-4c68-8f0f-bfdaa1fa9354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83ee9f0-6884-4e5d-a885-9961ad5ac1b6",
        "cursor": {
          "ref": "7916486c-5322-47b1-a7be-33930ae7c80b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1d9602d1-c9d4-4b6d-9e0b-0ee28a202d4b"
        },
        "item": {
          "id": "c83ee9f0-6884-4e5d-a885-9961ad5ac1b6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "beb99257-54f0-4637-8317-89ba5a1c904f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66047a14-a57c-4da4-8ef1-9aab53a99e80",
        "cursor": {
          "ref": "051d4e44-045f-4b87-a1db-d4e94eee2c31",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "36c504f9-d27a-4758-95ed-802b64f3a226"
        },
        "item": {
          "id": "66047a14-a57c-4da4-8ef1-9aab53a99e80",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "984aad6c-dce9-4364-a9a3-3e556a25e66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d50c31-199f-4181-971e-a69ab9127a7e",
        "cursor": {
          "ref": "dfea9f7c-ee44-4551-83f9-27c4f76678ef",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f4c3bf84-3e88-4869-8130-87b89001e2ee"
        },
        "item": {
          "id": "92d50c31-199f-4181-971e-a69ab9127a7e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a67cce27-844f-4cb1-b956-87de5f003ff9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2467b5a-3642-4c59-b6d5-9a9c029348e4",
        "cursor": {
          "ref": "86adae1b-caf3-4fc1-88c8-7c028de1aa92",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6127d6e4-5adc-4936-83d7-9b67b8c25795"
        },
        "item": {
          "id": "c2467b5a-3642-4c59-b6d5-9a9c029348e4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "afcd83ce-1b59-4ce0-9f99-b0b5314be0c9",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd44332-3d41-41c0-8c49-fc749d244e2b",
        "cursor": {
          "ref": "a290a0bb-2145-4c3c-932b-3ca2eb06d000",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "51b8983f-ded2-4c9b-b975-2b251c6af2e5"
        },
        "item": {
          "id": "2dd44332-3d41-41c0-8c49-fc749d244e2b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "27668797-d151-4b9c-ace4-354fb720b374",
          "status": "OK",
          "code": 200,
          "responseTime": 2420,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9b7843-e485-43b3-96de-ee2e45b1d5c5",
        "cursor": {
          "ref": "b4ab1e36-37da-4314-93b7-04357fb43f44",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b27eedc9-4ca9-4964-bf8b-a7e12265fb01"
        },
        "item": {
          "id": "4e9b7843-e485-43b3-96de-ee2e45b1d5c5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4ed74150-5747-471c-8c69-f6ba16819b2d",
          "status": "OK",
          "code": 200,
          "responseTime": 2374,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0be9c7-3309-418e-a1d6-fd29da26c36c",
        "cursor": {
          "ref": "e0378092-1ea1-45c7-8795-df5b621a7c93",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a11c096-ddb1-4a10-a9c8-12ad51985c14"
        },
        "item": {
          "id": "bb0be9c7-3309-418e-a1d6-fd29da26c36c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ba08d24-1e80-40d3-b340-948084331d8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0be9c7-3309-418e-a1d6-fd29da26c36c",
        "cursor": {
          "ref": "e0378092-1ea1-45c7-8795-df5b621a7c93",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a11c096-ddb1-4a10-a9c8-12ad51985c14"
        },
        "item": {
          "id": "bb0be9c7-3309-418e-a1d6-fd29da26c36c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ba08d24-1e80-40d3-b340-948084331d8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48b596d-e1ee-4dfd-97d9-c38562ba3641",
        "cursor": {
          "ref": "2f199c1a-15d5-4d9b-8d15-a33e34d52ee3",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "74d6f61c-ab13-4f9a-806e-940d4c3825f2"
        },
        "item": {
          "id": "e48b596d-e1ee-4dfd-97d9-c38562ba3641",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea063d1d-8119-4b1d-9e55-17acdd162a07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1dd609-a170-4b75-9b04-11965cb265f8",
        "cursor": {
          "ref": "ccdfc895-01ec-4403-9f41-86562711e305",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ace91818-93eb-4d04-80ce-f90ed58effdb"
        },
        "item": {
          "id": "5d1dd609-a170-4b75-9b04-11965cb265f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "079771ea-9480-4242-a500-39e963b20ae8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}