{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8cbb382d-9206-4fb2-9d7b-6f3444e49a3c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "28964f88-536a-4d81-bbb3-b1e920cf826d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfc49ae9-d5ce-404f-9e4a-e07a2b499808",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40fbda30-98e3-40ca-ba59-c83b39bf1712"
                }
              }
            ]
          },
          {
            "id": "162805f3-b9e9-4545-a3b8-99912b44b218",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d378797-a3fd-436f-bfd9-b7ed4b31abae",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c89af330-9d9c-4857-a315-b49deec10d77"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "018b2e01-c613-4bb0-ac5f-1551ce147e60",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90384b16-35c8-4f0c-af15-fb3063723b25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64c3975a-8dac-4b6b-8331-fa309e30b75d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b29542e1-5afb-4c08-8f49-7c5e22a58bc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2f3204e-06b1-4a06-9fe3-d7e1f3bb8344"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad401ef0-e4ed-4993-964e-28d3366a437b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaca2056-b9d1-48dd-be96-76e070b01b09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36a41003-bc72-49cf-a181-5abc07fa0f13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7cb6768c-25cf-41a1-91ea-563ead5cb34b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97561d9d-1531-4d03-b584-3122b69d00eb",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "516d1153-71c8-4a34-922f-cb6bf9406c29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67679dea-2c2f-4e82-afa2-33530404bfaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bb06aa4-44b1-4102-879a-c7b604909f7e"
            }
          }
        ]
      },
      {
        "id": "974a1b7b-7c34-4774-8791-d0c480281769",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a43bd4e9-a091-4c73-985c-fdffc3f0c3ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a36381d-4e5a-4a5f-b38c-67fea2f26c81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3e9c8fb2-1d4a-4aef-ba7b-c7f6e51aa477",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45d3ac6-e1f7-457a-957b-132ef2987c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79f777a8-9dc0-4df3-86b1-b39cfb58c049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157908b-5431-4a45-93a0-413e98aa23d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c6cb3c-6138-49b7-a256-ca4574a96497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f226846-ccca-4ddf-b331-8fe0f5ed5f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ee86e-792a-490e-bc0d-994c1fc19bb2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582f2ca-efed-4580-b7dc-48567501ed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc7fc93a-aa2d-4850-afc7-5967629b6078"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62664ad2-6e6d-4f9b-9b3f-e7ba81276f7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0e7f265-40bf-4e04-b37a-3a5c47f72fb0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549b2ab3-c574-498e-af19-4e4fe83402f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "871f94a4-4c42-409c-ac3c-78fe492918df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1173036-32cb-4048-82bb-69953b835c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed98109-9b3d-4faa-82cd-74da9145822e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88f77afe-0ddb-47dc-bc83-99ffc9de5723",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76453228-11ff-4aa7-9ba1-8ff4fb08ecb8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a65e40c-a215-4f57-b760-80cea24d553e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de29914d-e808-4f52-805e-678d6db0ba3f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b5d4033-dd8d-4466-a9fa-a5185a3e9cfd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "28466ad5-c4d6-48cd-8047-65c7dce61c7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0739a04-afc8-4417-9b11-254ed7ce929a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4e212cb-6102-4fbb-8c3c-9a417f757113"
            }
          }
        ]
      },
      {
        "id": "21e2411c-3a55-432d-acef-01f9c489059d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "413742e0-83f3-46f7-8cca-213df118029c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9deeca22-9dc8-4836-b467-8832e0a4e7bc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f12e048-6f46-4f90-91fe-2676b7f0c67d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abebb59f-355f-4e38-817b-0c600919da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271903c5-3b8d-42d2-b6b6-0fb382e02b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529a967-bd1c-4847-a4ae-cb30f76c609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "866b8455-5d86-41f0-b61d-dc9fd546d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188dde10-ee12-4439-8804-c654f305b33b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405c024a-5dd7-4363-a03b-c7ba60a6f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f052083-1115-4a54-8907-480dabddeca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617cffbd-2747-4d0e-a0d0-66c4743d39a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9692aade-8648-4c40-9727-6b9150a74539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f53727f-3143-4dde-98ea-97415b61d92a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e470af-da36-4e2d-b9d3-96a946090e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfce6227-9031-4182-bcc2-b4200107a5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4c3a1a-ed34-4ac9-a2d1-81f4df3c9c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d524c910-c045-48e6-987f-2b17c8cc3e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05b3bbc-9edf-4cb1-83ed-fc11fc9ec15b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f719bfff-f9b1-48e4-b096-a599764b569a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33b63e7-ffb8-41c8-bae8-0deff322001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9a534c-593d-4d17-a5d7-8133522f2794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f002a4f-f8d3-42ac-b62e-cda728e6e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d958bd-82f3-407e-af37-bf6eed1d4624",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc6485f-5e68-467d-a826-74b3737143cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeaac1e-a82f-4aaf-83b6-d5e4ad73724b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0dbf2-8d81-40dc-a69a-cb6775fdc04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd8aa37-91cc-4458-91f5-b18df26330e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea424e-f84f-4bce-93e5-bd7f81b0114a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2f49ef-f6f2-426f-8cb7-bdb7810cafa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d949bb-adf0-4f7e-84b6-b813df862c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07afc78-a31b-4bab-a153-59a465815202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cf6e716-e8b4-4b3d-9a91-6a9dd2d66d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96be8ecb-9127-48cd-b096-8bd4ecf65d05",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac0ae2-f648-46dd-b0f3-3dd265cfce58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b279b8-c074-4e4c-9fa1-9e24ea80b37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8a39a5-deb7-4862-bbd9-f891cd2cd96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a156256c-16d7-46f5-9273-6aa298c2715d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f7eefd-169c-4f34-a665-5d33cee90bc5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b45094c-f438-4497-bccb-4d81304cd9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be67041-f0f1-49dc-8217-6dde5d93705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba0753-7762-4938-80a2-f7cd20063f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12bedc0f-8285-4f22-b717-9341722236bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b5d2b0-c783-4be0-a335-82023e8fd1a7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a6045a-d074-448e-b80d-e629778bad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52780f0f-d22c-422f-9106-7b4657d573ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb9094-3030-4875-9473-a22f25c0830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30eb1972-f433-49b2-bde6-a09a910525cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886fc9a7-1a37-4a8f-a751-952a749bda35",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bc9d53-a831-4435-a924-3a51bab36deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25748417-7836-411e-b66c-ca1726937819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8269317-1afe-4afa-8b46-9c352c29baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d2b949-216b-4e2b-b1a7-48ee6547ba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23c62bf-f215-4f72-96e2-fe32e2874930",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba220f1-c1de-4541-9d3c-e0effb8dd619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c03cecf-e96c-4ddc-b2bd-068877465665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab57868-2f94-4c13-aa8c-7effd0924d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a03b723-dd16-42f4-9886-2f91288031d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bffd7ae-3a59-4f59-8543-44e9399f6459",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb7afb2-0ed7-4213-982d-fb3b9debb6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bdfa58-b1b4-4be1-9811-43cdbc19623f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d309ce4-7c4d-442b-8a8c-787e139c726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b0c52e6-62f1-441b-8c9a-3d635974a150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffca7a97-28c8-4152-84ff-90d8d97c9c1b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e445bf-216c-46d9-a556-b7ab5f10bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221480ab-45d4-47cf-9d30-20c76a5a622a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2ec3c2-4b11-40c0-9ff7-88ead1123c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1922b4e-eafb-4f1c-93a6-9a572c021efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccfe787-f03b-4786-ae9f-ca86900a4ef0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9977604-d337-4b79-9f68-40edebd78e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f060c36b-e243-4703-9fd0-140676480b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462f709a-8632-4a38-bc96-7a20bc985315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70ca646-a2ad-41ec-9139-895fc62b3cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b657aa7-5749-4cf9-b723-dd4217191a95",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cd1c42-90aa-475b-8fa0-9aff8458df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f81ebcc-353b-4ec6-8e61-6fdb38c90220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f8e35a-b79c-4aaa-a0ee-beb55f35a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c242ae8-6994-4507-ba5b-dc6761850389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92339089-d5d5-4cce-9d61-870ec3a590c4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae57c3a-634b-4a87-b042-473465da7183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e28b111-4a3b-4858-9905-c43c934080a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179f1d0c-6714-4e11-a91b-f7630806f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4803dc0-599f-413d-9f96-7f35f2fd3101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b856fe2-291f-4fc4-9f68-dc4bc008cbb5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58db6bb-a911-4b41-b4cd-3857f8b1c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e46e5b7-407b-48b3-82fa-3dbb124e62f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cdae65-7849-4255-8fd6-1049712de472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4950bcb-c5bf-41aa-98af-54b227ee18d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303ae229-1a02-4601-81e8-44a9dbda3c08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4e3a06-857b-4e2c-8ed6-8551f43b79d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4a90df-6b62-4582-adb6-f6e2ee05ceae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a31ba4-b408-4092-982f-865bd84257e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bac458-e1de-4b1b-ab6d-8e26ea026b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa0618-ce9e-4d52-8265-051cba43a90b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa0079b-968b-4310-ba9a-49b8d95f5350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f08c73-bb94-4409-9ad3-a9588d3fb764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6708c1-b5b3-4b02-8d18-3918c8dcde48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d52c1db-ef5e-4dd6-a69c-e140e3581888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2049c901-4750-484e-80ed-337aae703206",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2ee03d-9a2c-4caf-a226-235bf22f8794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61a8582-8011-449d-915f-1b2bc46c760c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef278d18-362d-440b-8ea6-c5f23ce01bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "530add2e-8aa2-44e0-a4f8-33d10c91e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b7018-f036-4226-a123-17e43e0e7ea3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa049f8-c9d1-4807-b77c-c03061bd15e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5418e179-eca3-4b68-92d6-c2ffe58bb1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ee4ea0-715b-4ef3-a87c-e3c558d4f893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f48c4c62-62a1-4032-8de5-ce0b076813e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b5752-9126-4206-a7f1-c3fa2570b874",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd497d5-1eb4-4328-ba00-171afa6e00e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2139cf1-9a6b-4ced-90c1-d13c4a0033d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a79a11b-4738-47c0-a3a5-9a50361ffa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da631b0-9f38-4d47-8f25-98801869433c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3c957a-3806-4c51-8d95-99aa9858be03",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc4ca77-1d6e-4861-910e-9da796f2e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671ebfcc-b6b7-4fc6-aed5-fe3e7896cde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ed145-77c1-4ac6-b1ba-fa52e3481c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a39c6a05-96f3-4159-8f3f-705ebfccee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef1f10-a590-4566-aed2-1f7bab8707a6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5180a3d9-9af5-4a52-9ee1-56883100b3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c262380c-689e-4b08-9689-099be27f36cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f6d4d-491c-43fc-83b5-cba7cb3db978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac3478c-723e-4915-b46d-a80b677a4a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9333509d-390e-45d2-9a43-a8cfbfdf1580",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22f050a-f7e4-4f5b-b591-acc591298c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23e1fa3-0e6c-445e-9d87-cbe6675fb1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df2296-4650-497a-b47d-2b494554e74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "255108d3-5906-46f4-a314-11e46835d28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1490268-0690-4c2a-b913-2dc8ca868467",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bae886-827e-464b-a208-6ff0dfeb0d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c688e92b-ee0c-40ce-a2a7-ea61c4ea3723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61314b7f-ec09-41b8-83fc-79aeb663681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d99900-fffb-4357-8392-1af10f1dc827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd10b45-66a0-4a8b-9c17-70435a9e89e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7476b68-90ac-4249-9fa7-894d3f48c978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a95b066-e667-475d-805a-4d9db0728bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd27804-ef39-494c-ab44-64f62b11b84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a400111f-46ab-4e76-84d4-b23cfbf9b0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b418495-3716-4677-9f01-5679deae63a5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d95ad0-f02e-42d1-ac38-97c8f4682958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147c0259-f97a-4a13-aaf1-cfcd154b16d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf093f1-a967-4e8b-96b9-bfd0c66e2b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e54e58-751b-4bf1-90a8-b8d2f8e0fd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f2daa4-ea57-45b9-a713-ad5ba5074f6f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe08896-5c37-475b-b8f6-5fc7a971a442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ba9439-a886-44d1-bd16-3a000627eb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d78888-3d48-4c68-a0ba-897f971e3133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75af738c-76e6-4168-a2af-b77b45f0a8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bbd3aa-ef04-43bb-92dc-4e2ab4c52a93",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796622f0-0ab4-45b3-ba30-2e218a77d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645631a4-4791-4826-8b65-e9b6a5c9b6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d8f81-48bd-43a5-90de-e52d70f3b19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de1d5f2-d3d9-4412-b73f-b37627e4ef66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c73d8-5232-4f67-a9d0-2298ad1f23f6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff420c04-8ef4-48db-b990-068b3ab05277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcbf718-bdb7-4ae9-b3dc-01e5c0f78180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2962ffc1-50d6-432c-83af-fb20ddcd4444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c374ec-fdc3-4288-96ca-06384343a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c6ccd-33de-4dca-9b61-94b8e54bf797",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86810d5-17fc-49b8-b02a-d1c93f6b74b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96014051-6094-44e9-bdec-49e0af765827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31040808-e202-4cf0-a44d-e9f7e65ddbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a483de-8968-4816-a9ea-33b09294379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91f509c-484a-40fc-95da-33968fe30c71",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b62db-8ce8-4987-888b-64504a78dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be6a4b8-f85d-40e8-8728-0c511a73ba2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9bbd32-4c1f-41b6-b089-047c035259fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e3c456-ff53-4b29-b723-26c02b57f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a46e0d1-d6d9-41c7-866d-689d933b836d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9486e8-0c37-4f99-a277-6b33f053094e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296e1aa4-9f76-4770-8f21-140c28838aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72727d48-c9ca-413a-8990-8d0e3db27bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ce67f9-5a83-4b30-8f08-4eaf9846da22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4d816e-7785-48db-abf8-b41e2406e261",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa72d1c-73fe-4a17-bdf7-8ae5208d6c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756f2a13-323f-4026-99d6-b6879dc41825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5549ba-b050-4e29-91cf-2b763f1d2660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "42fab009-11f6-428e-8d2f-32feab8d827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7800bd-bc18-48c0-bf32-a059556bc66f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38cf142-b9ba-4029-8e19-a1871cb279f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b261a21-1e01-4c6c-bdf8-d7206b60ba0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f2ac7-88e7-403b-b24a-b086c1136c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f2dd23-21ca-4378-9ecf-04d738c8fc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe0147-2e52-42d9-9e7b-8e328b3c4418",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2688327b-bee1-4f2c-a13c-07257f50d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec282e0-45b0-4788-ac9e-1e4248ae32e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4177383-27c5-4636-8f59-ae102aba4a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34eccb26-5060-4669-a3bf-8e00385d7176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649fa2f5-8bee-4e7b-b374-703bb977766b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20267a7-a2b7-4d03-b534-4e63e32d088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e281e79-77cc-405b-9746-5578a8748c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a221cad-2ce8-4d26-a45e-28416bebf592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a75b826-937c-4f8f-8b77-0e55f59876ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a596694-593b-46aa-92b5-a9579ac6e33c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9d43ff-592f-4d47-97b6-dfd88b406eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3df1af-7b73-4d1d-8870-01f391895eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29bc8a4-96d6-45a3-a5d8-9f6ed56913ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f732791-b323-4de5-b567-e8aaac02b227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287cd184-1f7d-43a0-a28e-b7c27746c516",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0197a4-99a0-41d2-8668-13ce2ba92189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125a92a4-d59d-4ca6-9784-0827fbd5017b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a10e4f8-b4e3-4b0e-80ac-f48727cab4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27bc504-ac77-47e7-8441-2202a8d001ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a11a23f-cbd2-47b1-b531-400cb1763f3d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e6a203-ffca-44ef-866c-1c3433536db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3c8ea4-7c05-4c66-b2d6-da7f51a99d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac614d50-b52a-4f7a-b7d2-1a403b631d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2f5063-2705-4af1-a06f-3e5eb01a1da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f125bc-214a-4e06-8434-0f79e8a9f257",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfe94a7-4732-49f2-912d-1d9fe6ef28bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d83c849-5510-458b-8f6c-dcc6b5c0c748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96746783-c51f-4d5f-a9dd-f4aac91d5cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "30762ffa-ced6-44c1-bc6c-0c3c3d0e768c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b087560-3927-4ce5-a276-778626905277",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703be07d-3f40-4328-a59b-983b38276dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d11cf2b-b60d-4b2c-abb0-864c685c7482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13838c90-f515-4f17-9a75-97de2c8ce5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1618c0-ca2c-4e2a-9dc7-246dfcfc5965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0925e111-dae4-4538-bc27-2a6d340b8c79",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5218cb7-2833-4dfc-ae73-a743c697f355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2344f3eb-4b51-47b8-ae4b-dcb788ba7355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1486a7d6-edce-4785-8c3f-2279c178b061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d02ae65-aa89-4a89-a1f4-3a50514cab8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8668451-375e-4bd5-a155-b05169ba465c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70091e0-3dd2-4f91-a4c0-46f1726ec84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e4633f-0d47-41fe-be30-fcc58d018962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd83ed-b6e7-4aae-aa37-999189f9906b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2d05d3-8854-47d2-8317-b76bb20c7f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9f7b30-83b9-4b6a-b6c8-3f8f491db406",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e0203a-f00a-48c8-92e9-40563666cfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f365f3-e076-4c66-b31a-92c38a990f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f6b4c-a26e-42e6-8120-14b99100c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74d2dba-ba72-4f81-860a-83608410cf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5a51fe-b542-4a9e-a3a2-11dbdb843822",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deeb103-a545-4345-9899-c0b40d88f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb5f707-3a26-44e8-bfff-71da63060759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1629be39-648c-442c-b918-b593533d3ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40aa724b-9882-4fd0-8da2-d0e1f18163e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84338b23-b73a-4b78-b33e-9380a1ef4181",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f454746c-2e21-415b-8b24-07c8cfeb4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db62011-906d-4519-9b10-37357aebaaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d9352-1453-4186-a0c6-096b66b12e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6719cda4-0196-4682-bf5b-640cee9d2688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a92fb2b-727a-4461-a7dd-1bd6bfc8c145",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beecba9b-9da2-435f-9354-d39e541c580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5abc09-a448-44c0-a931-d630a974c5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106d408-b0d2-4bbe-a4d6-b98a6a65960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7bee0d-2f19-4860-8ed9-a8018d07e77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e02fef6-6eaf-4555-af3d-e1e490972569",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c493d955-8137-4827-b735-f4fb6ef8b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d024c3-3c3a-407a-946c-7092bf740768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e25a9c-2e81-4c4e-a215-c57d3161ca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60c7ded1-4d73-48db-a061-ea69b5e46e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586151ee-3353-428c-a0d8-e5dcad621620",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43466f33-4944-4979-b111-ccd89225bdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51f4f2-b41c-4141-85ae-f3b84ae3dd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da962b58-4a93-4445-b3e1-f5d440cec866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "863747cf-c489-4db4-812b-2c8d769afdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb673fc-5f72-4bc0-9323-b1d117e5d716",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23237749-f0b8-4ede-ac30-810e56bfa6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4454fa6-db62-4846-ac87-342184e39072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ab805-b9d4-433b-9e75-1ec7b68ec19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc4a4ae-a132-4d3e-a928-0e836995127f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410d13a3-767f-41c5-95a1-1c1b5ecc6348",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163eadc1-a091-40e9-bfb7-02a652aba9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d08a1b-b1e1-4960-aa56-2fdf6c143e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed02e8-48fe-404c-a191-f142031f46ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a0e493-a1cd-47ac-a32d-4fef48c5d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3b6064-a568-403c-8cdb-0e2b898d76db",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eae7a2-ebf4-47b9-913f-1f86daa8361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5645aa-df4d-4fb7-802a-d89af70daac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b971e9-f06d-441b-b076-0b944aa34d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "530eaa06-0c9b-4785-a1bb-e4ab456c6d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497ea053-13ee-4617-8d79-e167ec8d3b9c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe48238-8332-493a-80f9-06839026f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5f3d64-4bfd-4c19-8c42-208f9abc9423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab52467-7ad8-4964-8d4c-ce35fbe1033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5f6f16-3f5d-4b44-81fb-4d21ccc907f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92acd93-8951-43ec-a562-2f057e1c7c5e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5022239d-e74a-4481-bed0-2d5175d54df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294b7f67-4c57-40df-baad-1ba795bb5848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05edf9c-35ea-42a9-8cf4-99d97250c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d87bda3d-a552-430b-9047-e37f8a9a82c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d381470-98dc-4378-be2c-11eceabdc9a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cfae96-912d-434a-95e5-90b50611f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c996e5db-4e9c-4fda-a441-1d1ab44ccbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ad45c-4a9b-4b23-af91-f42b14b73f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c507f705-178c-4c8d-83c7-a64f4153ae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710974b-68b1-414e-8713-4e25d6b388cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a97932-df67-484a-bfd9-702035584b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58efd97-5ff4-4727-94f0-f95e39081b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717add8a-bc10-4ef4-91b5-06459c150f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1098d187-0aa6-4e47-8d79-e50c6ca9dec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc921a4a-79b1-4335-b247-069f689a228e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dfe94b-f45d-4b11-aa57-a05e1db15d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5677341-848d-454a-812e-7971a6e0a090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7c0f3b-50d6-4866-824e-245bc45d05c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd095ef-fb4e-4eb5-952f-15488cc3ddd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdde18-1b7f-49f0-abb1-690541d0e1ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a40da15-5f47-4852-ab7a-2a8d4ef5131b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07761c8c-9315-4516-83ba-3dc8a3caf1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7452e0fe-812a-4828-a9eb-e9bba6d9bfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97927a45-4d43-441a-9fff-29ca3546af5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90a61c5-9e68-41db-8c11-37285cf81a1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de11af-0de8-490a-a71b-738be4d2ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a7adb3-18d3-4660-ba02-43a4cf78d81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ebb3a2-e32f-4072-a37c-808ce24378ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1e3cd8-32c2-47ca-acbe-1c57efd3f06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70636ae3-dfd7-4066-b9fe-5ccb30e6cf2e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac07baa-9f0b-418e-85b9-21400c537f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8c1400-a8e6-46ca-8654-e7025323a41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b5bcc9-174a-4b13-85c6-ab917383039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "500c41c1-b0ac-488c-8a00-f3d4c512b352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e18c8-180d-48da-8af0-787073d7a181",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fabba3b-a0de-4c5e-9559-62cce46f076c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b5f7f0-61b7-4f5c-ab36-12f42e1f8161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa24958-cbb9-4b59-954e-e9bfd962ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ebe9ba-3978-4e3e-9298-712f2e336613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d05b7-1ecc-43f2-b59b-7e1140209ea8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7ae1ee-c469-49b5-b1fc-cb9af75850ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e571eb-ec12-43ef-9909-a502e16e94b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f156cb-c828-4d51-8ee1-46b4e7129dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0b600c-0da7-4dc0-b5b2-e039c1c88635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530f5e69-364c-4226-9845-1331fe42d893",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcec8ce-6df1-450d-8d0e-a307aa99dd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af0d468-ed50-41ca-862a-ef1e3cee1fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd59dbe-bf2e-4477-a39a-b3aa8e334dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3c0377-d20a-4519-801d-1a836869ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea751ac-4d25-4030-b64a-af72d14fd86e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600ed1cb-2438-4820-9110-278adcf0d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aa42095-c438-44e3-b107-ca57700fb4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63e02a4-b40a-4c7e-b4e0-7b0b2abd6cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7e35f9-7e37-4020-8761-b7e06039150b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da815e-a0d7-42f9-b093-beee3bd40b39",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203adb29-7252-4989-8422-34995202a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f6717f-6a1a-4502-8c8c-c0cc628ca385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6229fd-2bf2-4534-9e2c-d639be5a5883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d899256c-a5c3-49e3-b375-5ecdce884b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee3c72d-aca8-4832-b19c-f2ec4bbcc6ee",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b3e898-cfab-4e32-99d1-f657abcc91ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c6c9b0-0b03-4ce8-a0d0-cf8879f5eee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45554e7a-f02f-452b-b018-4f3e412c53d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c8f3a6-101f-447b-9804-084ce9ef8fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc79bd2-e223-4ecf-9e22-8efac5e4f3db",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d07bf-af58-471c-bedf-476699ba4beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fdafc8-9a98-4bdd-9ba4-6b3af548b855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19148d4b-2c95-4b1c-b8e9-f2d2af8bcf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "156ceadc-0ad0-4bd4-ac5e-c366d1bc8d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e0a89-d18a-4f11-89dc-c9cd779225a4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f739b1c-6fb6-4751-b4d0-172778bfdb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cea707e-0d27-4180-87e0-5de3cc1ab039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83a68e9-8010-4d33-874e-ef1807c59345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5fbaff-f653-4bd2-a76e-091e7b56642e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644b1a14-51ff-4787-84c6-2f513431f858",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358c24f0-0bed-48b9-b164-a6c10ba1288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec3d429-f200-438a-8975-66f4652facd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da949c7-1e25-498f-a61e-6991cb3b755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af60dff-8e06-4547-bd86-41ce00c898a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5f2263-7654-414f-8c3a-884601ac0310",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a2c323-3ba7-4e50-99b3-4873acff9a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5181a128-c6c7-4754-86f6-9c52ba90527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce32dacf-7d82-4eec-86fc-33ecaf57c736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f88a7-5d2a-4899-a8c5-884b9aa6ff5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062555cf-749d-4a86-9573-2751bd4850dd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef774938-6b66-4cef-ba41-09aa53df1ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08e95a3-626c-4029-b961-40c2db7a1bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbee2512-a8a8-425c-9f90-9a1f881feaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "916d03b0-a97b-4c9c-812c-c52fe6d37932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8896810-a245-40e7-ada6-d7dcfc802552",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936cd51-1f78-4c02-9ca1-edb873a30c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84be022-d758-4f9e-ac35-cd663b6f4f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ceb9452-8c03-4172-9005-7c9d776f62bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "425cd561-4791-43ec-a957-0e32ceaa251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b2d2d7-0694-4bee-9066-fe8cf0dce403",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e114d8a-449d-4a45-b694-39f2e58571f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82aa5484-eafe-4143-9d9b-168d8970a837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260b7a4b-b26a-4522-b1ad-1c984911b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ec0a2c-ec49-4665-a235-7577c491afc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1d713b-0fda-4f5c-b3a0-4fe306abd742",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3badc176-62c6-4e9a-a862-b7fb60e32751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f612159e-adcb-42eb-81a4-e35ff02f0dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e60feb-36bf-4d31-af49-2c77d695c015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8133c333-9f76-49f0-96c2-f3c1d5aac3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a376a2-5e1a-49ac-87f8-f6ea28259783",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bf85b3-00d0-478f-8615-d5f5e8189478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80997d64-4ba9-4a7f-9d0a-a47e249fd5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67372b0-9789-4955-b90d-456856ea61c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d40ae0e-527e-48ea-87ae-555f01fc0f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce5a0ff-a20b-4283-aa2f-63ef1a92e18d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02f3ad9-4a8d-4f1a-bd4f-f07ab7c465f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4de9c2-ae62-4854-8ccc-03be44dbdaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600bdedc-e3db-4241-bc97-1e6f62653f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5167d980-e682-470c-a558-f48e0f0d84bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de015dc-eaf5-4c55-be76-3af070d296df",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804a578f-5ef8-49ab-aa6d-31de59f43d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73c2440-117d-451d-ad85-c264221c1339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2492f99-27c0-4038-9f7d-e5b8b7ce6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46aa2e60-58e6-4690-8284-2cf17bd7a47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0b0e66-6b20-4e82-ae83-89a34aca9f06",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffff2f5-cbba-469a-a00e-e9bce02a6b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f949b6-39a9-439b-96a7-86006c7f017c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28efa1af-489e-4884-b99f-99b73a0fbaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d97c146-c7d5-44c8-a33e-6df66a4c8631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2f949b-a4de-44a9-85ba-a785f3e031fa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcde64e-7fa6-4bca-b82a-49fc1635d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488a4926-427f-4cd6-9030-260d1295c1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9a7d27-9f2d-4cd5-a537-d1de3288eb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e9204e-fa7e-4b3d-a84a-a8383d0693cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396d05cb-3251-4bbb-bc60-7a626dff5a62",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16411307-a1e0-4c19-a57f-de86b8d9de29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df712a53-0089-4cbc-990e-5ff3737b803c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc093ab0-6027-4444-85c5-bd33cc73757d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cb239f-2643-4c1f-af7c-d41eda77bb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cf8acc-5255-4359-afba-cfe2557451f1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec687da-94cc-49ef-9789-a6657c10cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f2d580-c655-4fc4-abd7-bd13d52b8c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1788a230-eca2-4a29-956c-6ceb1d17fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "442025ee-c80e-4381-959b-50605440d109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cde09eb-4175-46c6-9a96-997b6ddc15eb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7f0202-e9a0-485c-9bad-29d7c826cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970557b2-8963-4995-805d-1b79b8bc78a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7c6800-c42e-48f2-9b32-99ec93f33bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc715541-cc42-4210-86e7-c2ff5f8aa4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fc1bca-2a9e-45eb-9702-e652d01c8fc9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2538f6dc-5d39-4017-a8f7-4bd315bb37a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fde7d87-006e-450f-a5c4-71dbe28e9599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7dee88-7a8a-490a-8fc1-f4d945be8705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7893f9e8-3fc3-437a-9764-723b9259a992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977c8a0b-014f-42b2-bb40-e08dab4ff15b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa5a61-0367-4557-a9a4-9dfb7d04cdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8972b5f-4835-4012-b1e9-d1798d0505ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e31668-d9b2-48d4-846c-6ccf52aa6918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71dd2518-9185-462c-887a-262448bc7474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65572856-9729-4e74-9d2d-5236cd8868ea",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47466a4-4205-474b-95cd-8c14d9c1dcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b7010e-9bf1-4d7e-9377-f4888607b23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b16c2b8-d8ca-49da-9fe5-70ab2add817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35bdf5b-ea83-4991-a27e-fb4bc82a7cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4ba45f-850f-43d3-b4ef-53842a553566",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f4d1fe-abb6-4295-b354-684f187a81f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a005d9-6a03-4c2c-bc21-c2fddc562414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48342369-d5bd-445b-b495-c44786fa8225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "105f06af-8652-4a4d-9a17-e2e423513008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3363126-1e9f-4b8f-92b5-bc8b5bc27184",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a47e309-2725-4491-a787-afca54bdcae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e0500-0b07-45a0-948d-d30d20a8e482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33913357-4e2d-441c-bb28-52d3eef7340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd1e5d8-12e4-4072-bd97-ce75ccc07fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862d38f0-7e20-4947-b968-78f44d258806",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ad9689-618b-4279-9654-cc8b13603842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef143f7-6012-4f1c-9819-58f14814f936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b9eecb-a348-4ad9-8456-8c60b887600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c826bd1d-c4a2-4d86-839a-2d442f916e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b116824-340d-471d-883d-580b54f12695",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d1e7e4-b215-4a4b-be9a-22b2730c2eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f044aa-6620-41c8-af76-dafc42d268e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae9686d-3a25-4844-bcb2-710155be467d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a3a44a-6704-4338-a410-621bcd0087c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dfb657-9d83-4361-beee-f62f1802287e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d863f2-9943-48ed-bc61-1b86e6ed6313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f1d2e75-27e3-4ccf-869b-01f8dace3c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3723a027-e0b4-4e2c-8dd2-cfd6b95745d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "694bddaa-0ccc-4844-a3ed-52fdb55cdb99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e75e01ed-77f0-44d3-aede-c03a0fa85080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2c0812c-105b-4ad9-bb7f-a137f1d16318",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1366037-1a65-495f-a5cc-85051f4d9afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27640660-73d2-458e-9ffc-b8c9a5499285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c1d713-f3be-4d84-b5d5-ce12122c36e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47811771-5d05-4f2b-89eb-b04a606869d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e99d1a-4aee-49ad-848d-b551fcacbf57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97ac3040-a6b0-47a1-b649-de9d2baf90be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "232d9eee-4cfb-4170-9f05-4a2168eec89a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04b0b741-44e6-4a54-a392-cfb3ace60a85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f621d951-ee98-445f-952c-e534bf9cf13a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5e965f0-a1cb-4f16-9ff3-dc57a328d803"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dff6c695-f462-4513-ae45-c9492ca21dbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "064c4b39-2bf7-4a18-bf4d-518219ea81f5"
                }
              }
            ]
          },
          {
            "id": "635d6d79-f00a-410c-b3c4-8e7f0ac6c1d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3308e5d-4095-4fed-b99d-2341c846346c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "947ced3c-15ce-46df-af5b-72d0966c7def",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a726d9a4-1e70-4270-ac34-5acdc4037cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78750a0e-cb52-439a-bf1d-ff8425fb37d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c460a69d-8cee-4b8b-93f1-6a85b8aa5e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f240852-d34d-4c86-9dfc-2808dcaa7af1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b4adbfe-e171-4cd8-821f-eb0092ed1043",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03939f56-40c1-45ba-8952-232a56076adf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de11e595-e831-405a-a713-02e201720dad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76169f54-f2f0-4aa8-a633-372c9201d449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3add7b14-2ab5-4228-98c6-baf80c9bb5a4"
                    }
                  }
                ]
              },
              {
                "id": "b276e4bc-0b40-4fee-a1a0-bc2de4739d36",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd95596-da46-48ac-8f4d-77aa04bc3e95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97bf488f-9eea-4513-a8c1-242edec36bcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "321f8da7-232f-426a-b9c0-b99584e73b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d21a42f4-cb0f-4009-a6e7-58baea9fa707"
                    }
                  }
                ]
              },
              {
                "id": "0382252d-1086-41f5-959d-fc3c00926417",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c34a9e1d-dfdf-44a3-a07b-c2d4f7d00ec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "258ac834-b90e-46ac-aa39-36419f2ef6bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f207a620-004e-4da9-9683-1bcbba561edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6cb40e17-7ad2-4c24-82e0-daacfa425793"
                    }
                  }
                ]
              },
              {
                "id": "931fc0ea-6a21-4225-8bbc-59f4e363463c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0b86cde-0336-4d81-b5f4-c43918a1a7e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1fc3a49-13bd-42ff-bbeb-10df2a6c1405"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72ebbdbc-e7c0-4ca7-9906-a0f3a277f470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3a0abc5e-54df-4e06-b36f-cd693df0d198"
                    }
                  }
                ]
              },
              {
                "id": "f6954212-b4cd-4345-89c0-93c5f00771ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edfb6e45-1cf2-4c85-aee0-259eb8ef283b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48671be7-d039-456f-99b1-d5f494e9d2b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1589e2e1-e855-4f3d-8250-00351c901dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1418f05c-65b0-47fb-940d-2566e56753cf"
                    }
                  }
                ]
              },
              {
                "id": "46b76052-f165-449d-8e84-d6be03ba2976",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d4f0b65-9fed-4462-9aec-a82976c535b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d167ba6d-6249-4c1e-9a9a-976e84500e6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99e0f70c-98c9-404a-924d-8451234e5b14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec959f83-dd28-4ae5-8261-d6753d305c58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2d262dc-314f-45fb-8113-146e0eae6f9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "197e28c3-d56d-4eb6-8825-1e616afb592d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ed4fbe6-0798-44fe-821f-66569a8f8dff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4edda1a-7481-47ac-8ad9-eb32c32cf632"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd5158e1-6f30-48c4-801e-dd7befce387f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9ba9867-3005-42d2-b857-ece10adcefbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "755d8eab-4f92-4c9f-8d0f-a98fb02bed98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b0cbe7e-9990-4a56-995d-3a13cd4c65b8"
            }
          }
        ]
      },
      {
        "id": "1f0d15f0-fc32-4d96-bdd5-630a8ca920ad",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9173d7c0-ccf6-45c2-9c39-492ec894ded0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebb2efdb-1c8f-4b86-b0a1-fa1156eda66b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd40543e-8cf0-4a34-b2e4-2e80030b714f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7adc9d-0f60-4049-93c8-aed96fa6654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0a043f-f32c-43a5-98b4-a611ed9cb47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d92c3d-78e6-4e18-8b6f-7b331c06fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b581d5c8-d873-4f8f-97cc-91a21d6032da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe7f251-7ff9-4912-8f6b-49bf870f68a5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c02ed38-aa48-4688-b096-628410524d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5832ba16-76c5-4a92-a7f2-becb69b46797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b2e259-6b18-4767-b22b-aa50da5eb48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd224be-163c-4e10-9fec-3be0936f015a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c742f10-3819-4a8c-ac91-5c7ffc82c4c1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcf46b7-72e6-43e1-9be3-cecf57ef6e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65db3a94-7ad3-415e-a89b-efcdc2b7e6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7390b878-c32f-4b17-a61e-1d0cdbba0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0760622-226b-4163-b51d-8fe526814e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e77a819-7129-49c7-b091-b32fc3317053",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b38fa8-2202-498b-967e-5dd94ca88ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e34261b-be7b-4785-94a8-7e890db26a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074fda64-e596-46c5-bc32-13aef73081cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78c8f4b-5d04-4c7a-9aeb-3763f9d43308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99533a12-0b32-4a91-9a17-fad87dd806f1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284f839f-0380-4080-a6ac-eb421d01eaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23681464-72fd-40ea-871b-27a66f740a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e072ed-30fa-4707-a466-2ea969bb0d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e111e73a-131f-4b30-a24d-fbaf8cb40797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eff719a-7ad1-42a9-b76c-79fc69e79fa1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0b75cc-b6af-4e10-a153-3e388b1c1b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b098470-b1aa-4c06-a86b-57d34543a75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042dee0e-ab1d-4974-a137-cbcaab649d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82dddd98-e421-41b6-818d-8c0718731f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9b5c02-1551-4845-a465-dcb0f034c169",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec268a6-dc66-4689-94b4-379cfe30c88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba15594e-431b-4796-885e-07457967f855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0779c2c-7e2e-4930-b456-f043a505c963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5704deb4-fda1-4390-b528-b2bf22da099c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5791edd7-b8dc-4813-9386-d634811c0a54",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89faa1b3-4c2a-41b4-b7dd-77403abe803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915b828b-4c53-4357-b6ea-3044588a38aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691defa-ecdd-4de3-b2ca-caabbaeb95c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efccf008-b01e-4219-8f1d-39a869733db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba21aeac-08b6-4050-8f90-a582fc17ebe4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a93822-c7b9-46bd-ae80-01f41b74ddd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f50b7b-11a8-4a45-aaef-2c834e20d1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449b51e2-25e8-49ac-be7e-f808c584ba5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "417d0ba2-1b29-4c77-8b6a-30bca0380849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0529665-9673-47b8-9c06-9c883e94e3c8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47ae89d-1a78-40d3-8243-4a1fe9d403ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a00996-82a2-4e8a-8f15-b679228920c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc126be6-d614-452a-aef9-c01be77dad11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ae4993-94bc-469c-bdcd-5cab59311c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df692da-0aa7-461c-840d-25caad9afe61",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935d3312-f0a2-431b-960d-f2f6cfe08b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a41192-12f8-42b4-9ab9-cd1844e1e168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e5c8c9-556c-452d-b56b-f47af1c6d0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3c698636-596a-4efb-8dcb-f3d05cb3566c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b79c8-b534-409f-8e49-88e038385e0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2e118c-b4d5-449f-b576-ce65e80fa23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2431153-ccfe-4751-b99c-5ad6a8f9260f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c3879f-174d-4e50-ad10-5167ca69f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7da4a3-f6c9-488a-ac4e-15cf1e4a3d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761ebc62-09aa-4e2a-8354-142528dc2fd6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf3c861-c066-4c36-99f8-46666a05d70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc79e316-97f2-4cd3-a3cf-f22a59c4ecc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f272ed-6a78-42e7-95bd-b8ddff9063ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00290e38-3e6d-4398-b8ef-901591dbec54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f15696-2358-4a15-875f-8c77597bb952",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d897ee16-5f66-4815-bda7-b251d428509a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99416ee5-d274-4bef-ab84-030eb4bd0d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a2e9b-0daa-4bc6-80e4-d7e9f1077f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "10eaca3d-49ac-40f7-8642-fa6227540e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fad1aa-d22c-4828-b633-66b7c605f3ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b469f982-19a8-4526-a591-ef6d51bf8255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3b3498-667b-4fd4-b0de-4b28ac3521d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11955996-700d-4317-b69d-e4c4ae6243fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68229b4f-45bf-472f-93a8-3bc2f4ce4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c7a03a-2480-4ada-a7b3-ac704d383909",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf8fece-e1d3-4b9b-ba2f-ff1989c58a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0832840e-1bf8-4d88-8c05-a293575da3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760b65a1-82f7-46ce-8147-8dbb3ee3cee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4b59b6-067c-4dc0-ac44-ec20df166c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda7e902-0a6f-4db5-bb8f-e8f37c334c3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6609bffc-37b6-4f5c-8a1b-45cc405d564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68328beb-f197-4090-a6d1-cc8aad157f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ab7ccf-8db6-468d-9552-3e5c77ee08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "574fdaa0-2b0a-4b07-8cf5-f0f004923fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf23464-9872-4fa1-943c-20f22724d528",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03abfbd0-d90e-40f2-a938-2d33b73d27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b1f5f9-648e-4442-a3cb-80567201b4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6841ed-12c1-4cab-b5f6-db35caeefaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82457e18-f0b3-4792-981d-d8969d550327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b96af72-6809-4bec-98b1-08a4caceff66",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827d1305-551a-4516-850b-7761d837ce9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaecaf09-f7b5-461b-ba20-3234ccae3171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41103f7-c111-4d14-a2d7-852d48b50ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3d71c-69b2-4e16-9221-19b010e5e66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b3ea5c-d318-4a6b-9ade-9e885aa3a8ed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a11d4cc-ad2b-4913-851a-3ad5afb883be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6337a96d-5ab3-456f-b599-ecd6c6028708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a43d84-add1-4899-b8b9-fef743d42071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f679434-950b-47b5-9df0-dd21749e5908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e27c042-d86c-4bfb-a2b8-61a82ef267fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35d5ce0-fbe5-4844-8b9b-3a3f8fa8a772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94c5fd2-38c3-4f78-a1e9-b60113c1e99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de8b931-ca75-495d-bd95-1431f27e85af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f6d935-5e27-480b-88b4-ff8e6db1818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe844994-8e9f-4e46-b5e0-63a74945a378",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf6d695-7f36-4763-80ba-d0a65db7f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7ed062-bb7e-4483-97f5-78d3ff182c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095e1679-efeb-4d9a-8c67-12b2dc75103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "405d133b-17f1-4c2e-bc85-b3fee59ec6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd8f416-8a02-441b-837c-d4a4c9cfd505",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe7a053-d9df-4fce-8391-e742d5437dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd42b1a-4946-4169-90af-70255b01300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb2804f-48cc-48e8-83ed-bf2019fe1de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90218d67-dae9-4e21-b191-bad636f4a155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92be6f1-30f2-4b95-9a19-25cbde244e76",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3530a6f-8480-4df2-914e-3222f3926e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9034b623-343e-4d6d-8d80-837282129790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77282cd7-bcf4-4048-a3ca-33c73b7c692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa785187-9a7a-497d-8c46-4e466a63e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f415aebe-6326-49b7-91c8-ae1e3cdd7774",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f9e6f4-03c6-4139-83e5-d63622815320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d16b81-3bf7-4840-bb5c-6a25ad710708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a5cb2-0e24-4a40-a560-fdfd7a13c69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eba5fe-df49-4c90-8c56-eca6d51e8a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec0f289-a510-400f-bbc3-ae72dac4655c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfffd6c4-333e-4942-b966-80c620749dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6114add-477a-46b5-b025-1d88ef963c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f39b92e-6eb6-48a2-81fb-8bad58d0d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4255f1a3-5a54-4dd7-9c0c-3fd40382524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0df6b96-8748-4801-ab6a-837943c2f462",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f80413d-70e3-47ef-ac97-b821358bf3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de3667f-3bd3-46b1-b558-8967312170e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558ed48c-e2ea-4f34-a54c-8dc688b4597c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c910846-0d91-4fcc-9147-102e643daf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6adf77-693d-42b9-a032-96a92083afc5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da4ead-5389-40df-a082-3ce6c4f6151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0bdc09-1390-475e-87e3-a8925c69078b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd81b502-b3d2-42a1-a6f1-591fcc5aac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a605542f-eff0-4070-b1b2-ed13ec9af243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2b88be-2d70-423e-bc78-4f981c9edba5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3886c52a-eaf6-4c5e-a2c3-56a0231d805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc10078-904f-4ef2-a491-5c80e3698c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1542d62-568e-48db-97ab-0190e81ee510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb967af-3554-480e-b024-3b6d2ac95067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcf40dc-167c-4691-881e-02d097cb4fd4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c77dd48-661e-47e8-9090-c3ebf18dbb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c86911-6075-4422-98de-4c289240d825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b582f7-8352-4c5d-a15d-883b6b592534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98249854-1309-4997-b463-7ecc4b103b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72274c50-ae4a-4fd6-ae46-534ace1a8355",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deea37f-484f-45a3-a5a7-f0e0cc8e5625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a60836f-d9e0-4eae-bc8c-4c47bcee94d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cd3911-5531-434b-8b03-7a1624d78be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5a4252-6bca-487d-85ee-448dcd899f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab049e1f-67c2-4d10-a81b-5b510ac3ef66",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9ac34c-6859-4d60-aefe-53cda84aa267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f9cca8-9dcc-4920-a46e-157414dc9330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed90b93c-f95e-4a9d-8b1a-8971aef8bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1382dbd3-1858-4478-a1df-8ca6d3bbc642"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abc3e3c2-a549-4472-8d90-56a3a77b4284",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b69d3b30-5f40-4273-95ec-543d7cb658ab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e020e1e-f8e9-4ab9-811c-e13db4f48d4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f2a5fd-0b40-41e3-94c1-a82f685d8837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f9ae35-f047-4580-a2b7-3ff9b4517a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dd33be5-017f-419e-9501-002f479ee986"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fea1b3ac-6305-4284-a1b6-4bb8fa00d648",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a9dc7f-64d5-41bd-bd05-45508d5be5e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad55ec24-a681-4c0c-acd9-afa88f32fc4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06cd79ba-252f-4e4a-b988-d8eb3db3a321"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8824d251-6f00-44c7-ab2a-b2253f459ed5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd1e18a7-03f0-4cce-8815-64d96f6a33eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6b7c4ca-ea22-415a-9d7f-f8b04b662520",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bb13afe-25ad-45d1-945f-587f18212b1b"
            }
          }
        ]
      },
      {
        "id": "dfb0f4f7-b683-42b5-825f-ff7327349bdf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cc854d59-59c9-4f25-809f-c5d20610f164",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff868b81-3c72-4259-b254-6fe952dbfc5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd8b5f6b-3b07-446a-afc8-8dfda27cc79f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805d8ac9-5bbd-4120-b9a8-9c180b174389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21962c58-c9f7-40d7-adcc-ea684d0b1e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299228dc-71f4-480f-ba2b-fffc74e16bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdacb584-2c0d-42e0-a2e0-32d1b76a3509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41886e62-64b5-4f77-94fa-f935b74ee7d4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d42e014-4b02-4464-b3a2-e61c6df081f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c208b8-d13c-4c5b-b56f-765223c63ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b746f47-3966-48c8-85c1-15993ffe5bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "961808fe-c86e-40d2-904b-6117b50308bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0333f0a6-0a42-4bd0-a568-d9bac422bb7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8d0388-8bb0-4264-b53b-3deee618dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfcb9bc-b569-4358-9ee2-73a680f7d72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ef57ad-9b00-4a59-8699-9dcfc4b67e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f36cf630-39cf-4651-bd50-0e7f940c9c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761e6117-5e4b-40f8-9b74-76a2b927e9e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c2cfcf-8870-4c9a-b8f9-bbb97ca3d65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f787bcd6-8b55-4ebb-b35f-f985eb2a1a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98271195-171b-4edb-b0bf-f13f417f54c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90cbfbc9-cbe6-42c8-a08f-b8ae3e15cca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7bd5ca-c0f1-45f6-a665-bfbbc6952de8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d766403-7a3f-48f4-b742-ac5724ea5e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c5819f-2dbc-4cdb-9de4-cb7c700552e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca150e8-1a81-4b4a-a74d-e187f8d38f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a86c1ef8-a905-49b6-a481-b064e33abd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9447bdb-3e1c-4205-8560-220898fe84c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52947c28-704d-4b8d-92ef-27c42f8f8def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e5031e-f73f-473e-860c-ffec08e52ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94a8c4e-4b72-4333-8d2a-bbe3a58e44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abdecb9-0482-4581-8332-1a1f33f66cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9143fe1-da27-40fe-a9ef-b3d2aa6b38b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b664f72d-3461-4d75-a963-9eb1a9afd3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb1c997-9c3b-46aa-b597-2bdb4a047650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03bdcb-e121-4701-bd6d-9f4c0f7febed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "35adbc52-ca0b-4971-b75a-39b08ea45eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea530465-4dca-4edc-9c4c-c12a319c4999",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b404e6-bc8c-4d24-b84d-332be9b340f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5127e562-54a3-4c29-8e5c-b660a7ba6d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f61815f-1bf2-4699-ac5e-b4c589fe57db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8a4acb-7786-4e57-b716-602392ab7fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f64357-1ec3-45bd-a981-50fcd70013b0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5eb8e5-60b3-4ce1-bab8-809f7f493452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ae45a8-4198-499e-95b3-0d5e536a1337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e64eae2-e044-41af-adc3-3be9f2d5dc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "802290e0-7326-4af0-b0e1-ccbb041ff730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271c777-bd63-42c7-9e07-b326ff1004e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754eb0b3-902f-4fb0-940c-1efe70811e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b1516f-ee67-4aca-90fe-d41236c63d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd8c3f8-0d96-48ea-afa6-24051d91f3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d61cd5-4133-4578-ad33-7db92414e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638f70e-f8c2-4e8b-8047-3f22f8fbabbd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceff26b-4b2a-464b-aae8-540af79f04ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53eb2569-79c0-4436-9671-7db4bd501ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcff5b8c-f479-4f13-a8a6-27076efd1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d9e18a-3ddd-4e40-812e-13c57089b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebed1453-60ce-4af0-bbd0-380151f7f30a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63cbff9-e9d9-41d1-afac-b0556ec551bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5603aa5-d1db-4a4f-839a-e9e81719de91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44351202-ab14-4e68-aaf1-43a40b41ef36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "771b6dbd-7fae-442c-952a-93df9c1a9f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8a75be-a4fe-482b-aa43-0540cd32158b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d18b4-8cf4-49b5-83dc-7d52e645a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f882fa9f-510e-4331-a9f8-c2e98d909606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78c96a3-d840-49cb-bb8c-6bd8213b2a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da63e63c-d34e-40a0-af5b-100106b4c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8573ce57-6d59-41b7-af67-0726f60db2fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ef8261-4569-4482-8ea6-5d2030710890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b173fc-c13d-440d-b8f2-c7395294d273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9342e26b-6c8f-4a97-b15a-a1cb5f333cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b62da0-3be6-4630-b782-af71e28446fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1893be-8564-4ea4-b3e5-307a1f93f886",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6000e42-a3de-4630-b6a2-4eb32ce69f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49efc59-36e5-45e6-8dad-02c20e7c873f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf968b2-5d37-449d-971e-adcad7651e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c21a32-d390-4599-bef5-bbdcfaeb00b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b8cc72-9b2b-4e66-aefc-4062f495e8e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ae23b2-3f7b-4857-9b6e-b3c9a3705e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564d063a-8ee5-483f-bfa8-b5d531c90992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5298c9d5-3760-4eb2-9317-51b54d7683c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9028e6e9-ff6c-4f38-b00b-bcba5bcdf41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37a746-83d8-4353-9673-d10362ae4a3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e94cd7-eba4-4997-97d2-4c170b100bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45277a68-0e0b-4243-a797-9f4d6b04ab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e516757c-332a-4231-96f0-6576d3984980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8140cf-45d1-40a6-b7ff-e5e78c316ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9461d-22a6-4acc-8c2b-81ec4ac71fa3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f2846e-a504-4d5b-be57-40240db20f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f013df36-f06f-4d73-b67f-0af0c3de2297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a706e6e-6949-4eaf-9239-d0db0336bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f64564-fd69-456c-ba8f-6c15ceaa7550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d72637-a9dd-4c8f-ae04-ee3f228e8fe0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e552e38-7208-4dfe-994a-ad07b396220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1b6879-b5c3-468b-bab7-3c01b17dd737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d2d525-d1cf-4322-a192-0d6bcdf1a748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "460edd4b-6c12-4a2c-9116-b48861bf9c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fb88d1-7f8c-4c54-a7e5-c11512535d46",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c753b7-b1bf-432c-b852-5a5485290563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85aa390-eb84-42d0-877d-5f4edfe4525e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8f167b-5af2-43df-a497-a7910176df88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f15acd9-8cc8-4aba-b69e-08df56ac32aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6464665-8855-40a3-bf5e-055b6dffd067",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2908400b-92db-42b3-acd7-dc37a92f36e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae871423-69d9-4799-8119-16cfe61db11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412bc331-2052-4c0d-8f08-8aa5577f5b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff9043b-dbec-4fb4-9fe5-8ce54f6d46da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e846ec6c-c022-4227-a72d-d4d72ee4fe94",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303d7dc5-f886-4eb7-9fe6-2fbbc84d910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58be234e-a557-42e6-a6b6-efbf84190667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1902ad1e-2402-4fa7-92ad-34da9a953b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7571d0d-a71c-4ee7-a9e5-7f9e0062f41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ecac10-cccb-4f4c-86fe-a20ec675ee24",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68373a72-8691-45a6-86f2-107dc0c4a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88c199c-bb28-491d-8442-2f4dffde5bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbf9948-cb85-4ca7-a77e-093f8f8655e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "016f3be0-7dd7-4d52-a4f1-61b08dda3604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe12f72-3ca7-43aa-a05d-0b246b3f26cf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da4ea1e-76dc-407b-93af-0363d7f6ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d2e079-7613-43d0-b34a-9e93cb1abce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1972515-13d6-421d-ae79-08412b30efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf8a1d9-2502-4163-a875-0758fbce8374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c2a565-56b8-476f-ad38-8ed76c4ca4cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e3e56a-1dae-49b6-9d83-799ee40d5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69ff01b-4e1d-4626-8a11-2e0ea83eeecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e384247a-061a-443f-9524-b3463f7a38e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fd2003-2ad6-4f93-ac7c-9d09dbe7514c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467c82a0-ffa9-4f3a-a676-7b39d1b6d142",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129db42e-d2b8-4885-821a-48cdc29add3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5149081-25a8-42ba-aaff-f6d327c56ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f397f54d-011a-439d-990d-9c0c899dddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a417d2-3f01-454b-b120-84f618734075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c1dcfb-92d4-4128-a98c-fe7d8d81908f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db6000f-9cb8-41b5-bfed-20bf34da7536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13127fd3-78dc-4f50-9958-86c60ff49552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34074535-910e-4ca8-9eb6-07d8adcaa6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15b3362-7913-4953-91d9-85d1d603c78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bcfd68-3ceb-43eb-ad1b-fe5aab3bd67e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6aabd6-51cd-49cc-af2b-21e681053e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d63b571-31e3-44fd-953e-7a86dd32e35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3018d0-f409-41cb-b63a-af635dec9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ade983-b240-4a1f-b3b6-1f79c552da56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5123b6-8ce5-44d6-a0d9-92d5a06dfb73",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325dd162-8948-4629-b6f9-f1b595ff625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db433a1-490d-4217-a34a-6754403ea66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed417e5-9d16-49fc-a7a1-bfffd2de8a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94335950-5df0-4576-855d-6e652df460ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d208923-6809-4764-8122-3814aab6f9bc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26da2070-e1eb-4f6e-9c10-4bfd84d5a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24524b41-0851-476d-89eb-6447d8c189b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b415a0-0762-4283-a7a3-c693587e8d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39cb305a-b48c-4ce5-9743-1ee4ea50d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb93600-b660-4385-b459-f8e20f3b4866",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58b08fb-e7f9-455c-b138-c74974ee4694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805ce4fa-f4fc-4888-aa03-dd8ffa9ff197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73421da6-5973-4eda-9368-a98a9bbac50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcba3b1-3972-4fc7-b78a-7c67f190966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545039cd-93ee-4373-8af5-b60d3e4cf8a1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a523b-69f7-49cf-a058-f79b6c9383e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606be07e-66f1-4434-b89d-784e332cc932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc3d854-8654-41aa-80fa-4590ff83c311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c67d267-eaa7-43a3-91fd-3420aab025e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f52b540-4ae5-4070-8ad8-74a5ddc1d5c3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3448b0-243f-4a1e-ab5b-cc1ef26c356a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ed44c0-3a66-4bd8-8c3e-86da102cfa22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf057ce9-2740-4cae-a023-14d0e2a5354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb256cb-6e33-4a75-a5dc-accea45cb40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3138978-734e-4340-966b-cc167095d971",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f946c4a-28e5-4413-89af-844eaa2ff3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18727506-b59e-44b8-8ddb-d538763bfa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c9333-615d-4e5c-be03-2556c58b499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "246e0af3-5bbf-49fe-b6ee-a8ceea22a80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2d7936-da59-40bd-a6d2-fb0e84261348",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5297fec9-3d0c-4c0d-8cca-4fb1795588ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3874e797-0048-47bb-86a9-a286521feeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40984b51-414b-4ac3-8820-f218dd759c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1060872a-1410-44c0-be39-95fcfaf7b659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be8fdb-55fa-42a7-b40c-498bec993e5a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dd4e1e-8732-4d5e-9f48-e1b4dc39f5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd70642d-628e-4a97-a28d-18f2530f927b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e96d0b-3682-4886-b0b2-9de26b4564d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd36169-4c4b-4367-9491-083e351320bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84507cea-d4e6-4e10-9b64-24af947ba975",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0742430-dd60-4eb2-8868-8815ab9afef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fcf338-a254-4033-bf0a-ded5708ed318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4723dbb4-4076-4393-b531-000c361b0a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f9daba-5c8a-45ca-84d9-532e23a05191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00bd8323-31fa-4945-ad3e-82eaf42054a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cb7f7269-3c50-4b1b-af4b-66d58ac2c117",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556fe0ad-64da-472b-a7fe-a9614e9c9677",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d59c60f-e8db-4a5e-a923-347e3ea0cfdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566ee20a-8eae-478a-a788-5ae1ffa8569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7b72ce7-7610-4b81-8775-17d1015d5e6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbe83f99-731a-4038-983d-8b1088ab1ea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbdf9974-703a-43ef-b3db-ea3e5bbb3bf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "946f51ac-1365-479b-ac57-401fbcad9259",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97e8d10f-1dfd-466a-9fe9-82c78a0b6ceb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e2d1fc1-7f0f-4691-ba2c-8e4218ef9f35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd7b64cf-efc0-40f5-8b1b-87d46d0f1a2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86c815cf-a91e-4593-83c5-a95386ab1646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fae02156-6ada-4d77-b770-f0a9fe976d8c"
            }
          }
        ]
      },
      {
        "id": "2d632fd7-6fb3-4b2d-b7fe-d2abb33e0e48",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "591b65db-b063-411f-941a-1f87352f4dc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9119739a-fb29-4be6-95ad-9838f0f07d5f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f7af173-1a23-474e-b87b-21904de4d9c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2644d0ca-04f6-49a3-9071-b9d5355bae29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f395783-92c8-45ed-88e2-4a9727af0162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987e3ad-2afc-49f7-92b6-b722e15e880b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9944dcc9-e52d-4b9f-80a0-701414812e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da8f9a1-e3f4-4f59-9f9e-02f24841212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab5930a-fb33-4035-b0fc-0c5615e15c8c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0def82-a606-48e7-81f3-ae3f4015d343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10569799-f2ff-44c4-892a-e3a52e306c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa28ad-91e2-4269-8faf-dbf89c074aac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce0eca3-9d8a-41f9-9171-c700c99c5560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64170b8b-0fc1-42ea-b347-d6d4875fe7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4ef341-a9d3-433d-8919-c00dc46c561a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c092ce-2443-461f-aa8b-a2dbe03d29d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c765e99b-81c0-491a-bb4a-204dd59a5dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d8bb07-a5f0-401b-90e0-47ca20561ceb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41136694-8495-4e18-86d9-bde249afe1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b930e47-010a-4fb9-b2b0-4b6a28178445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eef62cc-745d-4222-b0a7-34ffe8870cd3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d77d55-cefa-405a-9317-d12d30cf8d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50585007-1793-4ded-a40e-c9e8ea754a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197e36cf-0e47-439c-a7e9-6ca5f7ed7466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52913db0-3c37-460a-9545-daea16ef9bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654f131b-cab4-4249-8518-55af158dca86",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97778ce-9034-4768-a3dc-5feadf3e5c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f48a12d-ba73-45a3-9ba3-c22f07674d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5807fe-3252-44ea-91ac-d4ac1b350291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401d6516-7bb2-4bd4-8947-9cfcbbf2b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47a4c4c-a904-4c37-ac56-7deab294ef15",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a750b65-502f-40d9-9b5a-03a5bb21eefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442d5194-b03b-44f4-b401-9158d9e35aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df61bc-22b5-49e3-9424-bb95345e9953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85d136d-50c3-4a2a-8802-1c9756837e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b938cf24-6957-41cd-b93a-085865cd8e87",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ec64d8-cc3d-4ece-a5e2-e8827a3a5ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4ebb1d-b8d1-4f62-a18e-00479fe7f3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648ae40b-9500-4f16-a965-15732c3f4655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2645150c-a1e1-4a30-9493-92f99be4bc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75de2861-47c5-4958-bbec-bf613347cce8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7ba773-0be8-4868-8257-972190904af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64a6e04-a43b-4f25-866b-3f82730e4bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a5d102-e85b-4ded-976e-c78b9b0e27fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99a030e-0c86-4358-b367-b54510b142fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748df246-91e4-400a-a1b8-15c730c00bad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028b409b-936b-4076-9fb0-bc2f20d5066a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7229c7-9e15-4b88-8fa2-7c79189bc4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b77024-4a88-4a6d-ad1b-c9e92912b439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5ed3e7-51bc-4706-af3c-0d2984d23307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4191d5-c29c-4d65-80e3-11bdd3da7c1c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b706db-a6ce-40fd-9eb7-6d82ae7d0928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "589c0ab9-6714-4364-8f04-736cfdbcd9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac5305-785e-4f03-9730-56f750d9faa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35075277-8969-4850-bfee-94204bb7a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aff0b6-b099-44a6-8216-173192d22f9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0737df2e-d176-4700-a28d-81b7682114cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48cddbe-ce97-4b58-8362-5d8f89520174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639cbb2a-fa32-4535-9cfc-f4b6bd5537d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a51a964-8de8-4188-90dd-92df910c6a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479948dd-696c-4a08-8e75-7c90220356e0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284cd0cd-3aa0-4772-8ee0-91dba4ac902b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db187933-20f2-4b1e-9ba5-bb8f888de82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b97737-101f-4a58-9f6e-50875ecde14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7de92a-df8d-43cc-a260-64cb7eef5972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289ab90d-4ea4-4bed-9293-5c18231f3f38",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c80fe07-c67c-4e31-8a97-d1a943d63d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760c67ed-0cf4-4984-b02b-8ed6ac7994d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551aa9b-3853-414e-8111-1ad8323a850f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bd74a1-87e8-4283-893e-e6de49f24ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779f2baa-2547-4222-807f-7526130d4c66",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9efc7f-c722-445c-88c5-b416c0bb111e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f088099d-1c9c-4918-a25c-e673a6ef8eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e1385-4879-49ab-b277-014a776cd502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81171e37-bf02-457d-a5e7-06f52f1d7642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a4e97f-3d5e-4f68-8d50-bc2cbe4f646c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa8b163-3a61-45e0-9583-8372a196ba03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1024cf54-9147-4997-8395-6c2c7f9bc133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ab2463-6ca2-435f-ac2b-7632ab8d8148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e66dbff-d49b-48d5-91df-daa238eb7427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a35d60-13af-4a24-8bad-32ec5aed1185",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346e475e-b391-497b-9972-89344ffec975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf6a3ea-10ed-4889-97dd-27d37637720d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724fec63-5c00-4891-b98d-cb116d2b0109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4ce90d-e70f-405d-821c-d4322d4610f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed6e652-b098-4f8c-9b60-9906d2c0a796",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dd91ca-a365-4424-b867-8625b45cbfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9d2cba-4109-463e-a03e-cfc4989dc266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e043e45-4e38-4550-96a2-80e0f5b0e34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582e4bd5-cdc4-4917-8b2c-e46b90531d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60283d53-8a98-4107-8bcd-44ce7a54e151",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82deb3-5365-4006-9d9e-0424c04393bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20bd19a9-634a-46c0-aeb3-481cd7f4cfd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073987f-0149-4585-b158-cff966c2a9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd5a0f-c228-48a7-b4dc-c2dbbd3b60e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f02f51-ab7d-4a03-a721-208a6524135e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6cf97-1db4-4787-8e78-d33a544474bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bad7da-80f1-4b90-b742-9df64e51d60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58603c03-f678-453f-9847-e9f555edc0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6351f7-6ff8-40fa-95d3-46ecf224b6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e632adeb-cc05-4df4-8313-0a74aad88d1e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa62c415-8fae-44b5-939e-43594f6a855f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c2426-3925-4cc9-8827-91df223dcc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa64e4-4c9e-4e41-99a4-e79b626dfbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f4354b-2dd7-4778-bf08-abc2dcd96977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fe53b9-9c85-4ab1-ac3a-5ddc0556fe9d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33662d7a-3279-4499-af6d-06e8b2f483f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c853b6f6-b2f4-4be8-8b8c-dfe90ec014de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850396fb-55ea-49d5-8cfc-58c5fbd09a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6166b0d8-7804-40c4-a009-8832c45fe0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0271be-6c05-4a55-9841-fc798a673066",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa306a3-84a9-4b8d-960a-75aaacbcf089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e432ad7-b41d-4b7d-890d-443d95c89e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d491d80-44e3-432d-805e-79b6f83defbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e86249-0feb-469d-bacd-2488101b7e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac638e1-d103-44f7-b1dc-d41877d4964c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bb4157-3b97-45b1-913f-25d081a48781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff287c4-a15a-4bbb-92a0-7163ceca7502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9291a0e-370a-4027-95c4-efbb2cf1ef43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd83503-5046-4297-a763-9b8ad8f1075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13e8fa6-7c49-4bad-af12-f918ddf0ccaa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426e3b19-3017-4303-a814-4ec21675daf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c9dff2-9d81-4266-a7e9-4d411f7e37fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd22539-2036-4f5a-96a4-925198caf838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f412d32-1c99-415e-85e6-e9756c92c566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cf0334-0752-4758-a029-6a10a5ffc3ec",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67f4611-bff1-43a1-94e9-2b4755939c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f5d7cf-e102-4f9e-a879-1bd84d9f2f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6542d251-4e29-4d4e-862c-fe82f02c9994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fff68c-0560-4265-b23d-c0b917f9c243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c69edc-46db-4ba5-92b7-229abdfb2757",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb108e75-39c6-4e5b-a993-8a8629ae801b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a35a33-38cb-4d05-b588-b9c00afc6e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0debf0-0dfe-48f8-bdde-663db4b67d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa21f3d-c7c1-4e6b-a338-a8c90a937a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd936c9-2797-48ed-b726-e0591a668b23",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d79d209-e12a-4a5b-b1ef-57b3d6e30033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9a5c99-c85a-4529-a088-fae8bd73d063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801b779-b74a-4c57-86a5-fb3817df63f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28395a3-7bc1-4072-9b0c-55c4507f976f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73bb3c0-6afe-4527-9b5e-5616990be022",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a03351-9614-4493-8b73-a44f86f3d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8645f2-941a-4801-b664-daae9262323f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c102db-0d5b-4714-9fc4-4936c64dfb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2845c1-70b6-4c67-ac40-dc7621f8b6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be276857-7e42-481e-a223-f347c3963135",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e365d20c-14df-4e1c-bec9-faa746f732a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad663bfc-dc2b-4f1d-a047-ea9ca50d0700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28399cd2-b9c9-4c6c-9cea-b6aee562b1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf865c99-1fa4-4957-85dd-5aede16c6a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aae78f-4226-4ac4-af68-548951c73d41",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabcf4f0-be7b-43af-a783-1c98a4aec138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540d2a80-ad2f-4739-a8f0-38ab87363815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba155f0c-a8f9-4144-a931-d3817e4df243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3471fb9-77f6-4199-b169-f4ed57083c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517ba868-e414-4df7-93be-0b40cda5406b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b5f7e9-dfaa-4009-bea8-c901c1b6eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d85c8a8-5eb4-40a6-962d-d6878a65e71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a3ac5-0bcf-4211-8f5c-94eae05bb134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7714930-6bbb-41a4-9fde-4087b19573e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2ddedc-8f6f-42b4-8845-802e363c2917",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838506bd-c3da-40ac-806f-fc151ec92833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a36a8a5-3108-4d6a-96aa-97ca6361eac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be113bf-37c1-444c-81ef-8f9c4e4ca7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d8c3fc-5c8a-450b-9c59-10b003201d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abd5c16-b81c-4c5a-9f10-8e41f88f7f44",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f164b00-5686-42e9-8699-9a8eecf33349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6008d0cf-87e5-493b-8a29-0b5b50726ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcea8608-d136-418b-ae47-40c71d2774f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1af1e1-8640-48f0-b096-e7a0b5f2edac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d562070-e135-432f-b336-ef53fdbb0c27",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc0d855-8624-4ed1-9599-b4aa890b9a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8e770e-e642-430a-a431-d089290cfcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88728825-cdab-4e73-835b-da6a41c54e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c806393a-9fc8-4f84-a083-f888802f9019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e195ac39-b9c3-467a-959b-371f1915e401",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec64f5-97c0-4870-b484-3251f4959a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacb1576-20a9-4ee3-9216-72fec944dae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d96f87-680b-436e-9742-419bffbc56dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a4d6ca-dae4-4e77-ad47-e19f7eb3fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f08e9-f0d6-44fb-85dd-1e36a854b6f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6041fe9-b172-40e8-84eb-3cf642612c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1223de0-79f2-43f2-9152-313694cbbcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddb6278-fdb6-4bb1-8d26-713a06f4f22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1452011-658e-47b1-8744-02f2b3a4cd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5585a44-81c4-4696-be5b-69dafd1371cc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5d2427-db3e-4d13-8d69-16b37e603b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b113db29-f987-47a7-ac8d-da6b5dd0ffd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d343ac4-4688-4f9f-9577-23946066acfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0d1fc2-aa17-4fb2-a570-0b23fa5b99d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9416ad08-4f91-4137-8ce9-40e7c59a8ea2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2d8710-8334-4a0d-9f22-ef9c80fa5d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec292122-6ead-46d6-b00c-73710be7703c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08f9e16-fd30-48de-894e-74798c6d6122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9c59b0-177e-42f8-8484-8adbcc236d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4176cfe7-7488-45cc-a693-7752709a98cf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4e9be3-3f15-4966-b5c4-7e093f1b3b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad004d8d-df55-4604-b754-48be9c6fcc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a804c0-42c5-473b-a3de-a0c5ef441618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84b854b-07dd-4489-b8a4-7a310b9740b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708d1374-c32d-4fc6-bb39-47ca93cbd050",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98491291-f615-4c6b-a46b-f21362950f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce08d82-d157-4add-b828-15dbc7651052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33fe148-fd34-4ec8-b3ad-f3b944a9bed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc2c887-a324-4d30-93a4-f2ddb7530950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5642cb13-0e09-45e8-951e-74284f05d901",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f145651-74a6-4687-9bc7-b40a4021e730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a479e0-cce8-4693-ba86-c978ad35a832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fed758-19cf-4d91-8efa-469d3708e9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be137ac0-ec18-4373-a03f-c3b2988941b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f83c65f-4651-4d96-8913-f57f0af461dd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4f7939-7e23-4278-8ad2-11c26422c584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2791cc98-67c1-4902-94c8-0c0ae3041d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cba5ff-5991-45e1-b009-0568fd53db21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb06e8d-cbdb-4770-80f9-e6d0c6060c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac0f4e9-c6ae-4588-a7b2-da6cb51755eb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d06375-23b6-418b-8d17-b2bbfdc6442a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded75ef4-141c-453f-9fd2-4e0e95fe57dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a6229c-ae16-461e-88f5-3f4dff109da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9338ab4b-68a2-4838-90f1-d44ab30745b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301ee4a-ab95-4f4b-9cb0-799245055b3d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d90e5-da5b-4000-b88a-98334095c202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54baca5a-d774-4a45-a83c-ca163c65f835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d53df3-83a3-4087-9e05-ec875c34ff68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39822da1-cb1c-4b5a-9113-b1b0ba17e036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3cfdbf-fe58-4734-963f-6438381fe74e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58149f2-54aa-4903-b583-2d5a052ef090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43edfda-6a03-4234-85ae-aba06d32c7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41c31d0-c214-4c91-8735-ef98efc05433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0728ab62-543d-4dc4-aa26-75769100a459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b3d129-bef0-460a-bc66-908f5eab5f96",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4cc448-0874-4593-a06c-e0e040bf3ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de54c1a2-9aa9-4714-8d69-43da51742f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ca8297-9450-400f-8394-72473caefc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939cab0f-2dcf-4f66-91a8-734619cfea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dbb2dd-26a1-4a78-b316-a84198f250fd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38329e85-082f-43e7-9679-69f2ee68c595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680d195f-8318-4813-bfae-ecbcc9ae03c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebee55-668c-4ff6-b360-168a9bc06faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8f07d1-b5b5-4419-b90f-4bd3e5024c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1d2647-346a-4c56-baec-68a221ff18b1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e2f3cf-b43d-48a5-9462-69937364563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71837017-7b46-4853-a527-4a4e83d56a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dd3197-d099-4774-80ba-2957bdb36d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d344df4-8959-4357-9bd0-b3847e8428dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086cfaac-989b-4e43-a9c4-fff18050ca20",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0478d4-41e3-44da-bf1b-b1c1fdd3be14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815024fc-0d47-41b3-8d28-25fc626c7ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfcf7f3-0f55-4b60-89b5-84129dd889a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231bba9c-b694-4442-9099-3fbf7aa279ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1804d32-41d7-4f3e-9429-12f201c76281",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c35221-d7ef-439a-ad1c-5f1f1cd0e6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea7d6b5-9331-49e2-8871-904b07aa80e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080e0648-6d87-47fd-9cff-5a1f3e5a10ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be5fdfa-aca0-4889-93a9-040d0861d935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2697139e-577c-4629-82cd-05912f1ba9c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5092b609-9c0e-4703-bc72-162827118dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c5907a-66d5-4672-9bbe-12b0c75da07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d225a1f4-e818-446a-a0dc-2214ad312b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb17e7c8-2174-4899-8d94-5bcbf70a4f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158994f9-e202-4ce7-9067-54c4d21cf814",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb08a018-a3d8-4785-9b02-094d9808045d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763b5fac-1595-47be-8ec4-2b7e16a3a073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ffbdd7-98de-40c8-9057-d9074e73261e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525d48fc-f481-4082-950f-44db8f35a697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dbe2f1-c798-4649-8daf-5397afc7b35c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575102b3-b1db-418f-bfdd-4e9a80427120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1d96b6-c5cf-4da5-84a2-22be4c4ca268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba52d7-3282-4ef3-a817-c336a190137a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7353e31-e454-42a5-a173-7bb851113d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07d36f4-2bb9-4c30-9975-7e256a38fec5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046eba85-929a-4169-91df-6b30a9d1940c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fe1ee6-7774-477e-8b57-6d41737ea57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7448f8-652d-49a1-aa15-95b201709da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af1acf4-5ce1-419b-afaf-ff29933bb61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e675c9-7eef-4486-a569-1b10bf9ceb87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35db53-a9ca-44db-8daa-98e475c60c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b915219c-bc08-4003-a8ad-79207b93138d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4c3e4-48a4-4f3e-a407-daa4c7c84181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f09c8c-ee78-47b0-a377-4c85b02033b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe994e-7b2c-4862-af84-78b36467d291",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75da6c76-07f2-44f0-9fbd-6d028ca33956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef064cac-a0e8-4213-b831-5774535369db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99152db5-4dd4-476a-9600-9c2bf3a9acc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99133b1-405c-4012-944c-12c63e668629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97044c4-b6d7-44a9-b72f-e63d3792b59c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f66e99d-1940-4523-9f22-7ad48d00b1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a8e7fa-0bdc-49f0-afc5-148f08ddc539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfea3663-b649-47b2-9a2b-1b5de0668aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972c2a61-b6a3-472d-8988-3c9119da8461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4721a6d8-a349-48bf-88da-34b67aa44146",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a49451-3bc3-442e-b29f-446378cccddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3dec10-3281-4c09-8c8e-f7c274a487f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ff775-3876-4f29-be4e-1367a527d395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6e8de7-a368-4e6c-808c-35933dc9324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6cfe43-e4c8-44a3-8853-eb7f7edf814c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143fb362-d468-47e0-9c98-9622b49afddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bde4d1-d8a4-48c1-893c-cd04c12d90d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa16fcfa-a6f1-4b20-80a6-37528ac65e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48aa35d-52a3-4b5d-b52a-0b84708965c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a7fb2-d158-4fe9-8058-3bc122164c30",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920db03c-0cdb-40f4-a06d-ef437479f45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57820870-1bbf-4644-b23d-3ee5b673427f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bece5a-df71-4ddc-a52d-237c9f5ea146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ba6f52-afd8-4d6b-a819-00cddd5384ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c52933-ebd1-47b6-8961-00f8e41c824d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a26484-0f09-445c-ad2a-a2cf5e40a604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a35ee88-d73c-4d99-8c54-ea3bffc8a89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ecd0ce-e6ae-4931-b83e-814c1768fa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8452c2-17c5-4fdf-bbcc-b2a5557e1c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91ed1cb-6f61-47e3-9ed2-2ea968d5a634",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27f26e-54bb-47f8-bd3d-1fbfb102f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e815f8-e1d1-47eb-847b-b31fdb306a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34df67f-5129-49e4-993d-ec741ef089ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8517e4c1-8332-4a70-a29a-f9617f620879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372a910f-bb37-4e0a-a1e8-3b6e148e7abe",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c44ecc6-e2c6-4c39-a900-3e0883a8effb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab07f9eb-85d9-446b-a3b2-5362b3e076f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a115cc1-ad20-4394-ad92-78d866fcfdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be4fe8b-205f-4103-b161-4c5ec5dade07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76dfed-8a66-4a07-8eb7-00bc8b2f4d8b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab46b400-7545-44d1-8b65-b63fd64f4273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94767fc1-dadb-4795-8205-a318c0d90049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f090b97-35eb-480d-acbe-2fa5b271737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c880614b-c384-4475-8608-70a0bc486aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9707c8-af24-4cca-87f3-9edc3f7317f8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebbfe19-593d-4b66-9f4b-bd8dfa4e4b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4308bbd8-c7a0-4bae-957c-4ac45c6079f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7574fcc-68ac-40c6-89a0-d9ec810b49bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5edcb2-4904-41d1-87e8-e5b2a254ed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdd7093-4eb6-4daa-9ffe-eadd59e0d89b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a3021-7486-448e-90c8-022d43883830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e5cd115-f887-414d-bd69-81f55e573e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf0cc4c-42b1-4e97-abbc-fe4caba5ce64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec15943c-e597-4146-95a2-4305cbfe6694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37127fe-e8bc-4a7d-893e-af9d550eed52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7ddef-6739-40f3-8c7c-e5a98962a525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0395800e-1e5c-46a5-ab4d-fe79dfc93fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87621abd-655f-4c35-b3d8-63770e9368d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b359f260-6340-40d5-8736-fe019bd7a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ee4a6-b797-44e4-96b3-30fb92c86cf0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0703877-e507-47be-8d6c-751b132f04c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa312be-3eac-49ee-84f7-73014e926e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d68d6c5-6181-4fb2-bb42-eb3c2d90b244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28594c4-097a-4e54-8846-db6cfe54d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2834089-521c-4989-a313-da8d94cd35c2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f28f785-bb71-43c2-80e9-c58d5e62c68f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ceb6fc-6af8-4a62-8783-ba1e18e64adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba379b-3b6d-49fc-a59f-2a6d3777978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1201029e-3516-432e-b96d-a06359b33a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b303f20-5030-4427-a8f0-b7c74d30d388",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75685c7c-3711-4f90-af93-dc8b99ab4252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb29728-1694-42bc-8175-6211fdd8ae3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dca934-6d02-4bc1-bf7a-c6bea7d7982a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4f61ad-d082-494f-b698-2ae9a5b1796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec61ebb4-64db-460a-9a15-f54a085ff09c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d12a742-aaf3-4eac-864d-bde1b27ce355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33eaa4e4-949e-462a-ba6c-9ae01acc9f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fc5a40-225f-49c2-933b-68c164f443d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20262918-a49a-43c2-9bed-9e0da151c94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14a03bf-74fd-47f9-a41e-ce12f3d1cc68",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57300ead-35e8-464f-924e-9ec8d7abcae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d2358f-cc1f-4f55-8344-788b4334f675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68a580e-aec9-414d-8930-839dd063198c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f687fa2-b794-48cc-9f15-17507783f14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b51b7b-191d-41e6-881b-bb221b557f3f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36cd01f-badf-4b8b-8278-ba212a6ee7b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53023b76-d14e-4c46-a749-dd2bf676860f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b63a20-cd91-4d59-ba2f-c3874ea25e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3921c983-e3fb-4f94-8bd1-a464dd96d333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8f982-96a1-4894-abeb-c152da4d4a1a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8153356-5100-4e60-80fc-934df7a861fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b81241-9565-4419-ab0d-ff0df0e9d55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31b79fa-5566-44f6-998f-d44771963b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fe46d5-fab2-490b-aa1b-7fb89e13ae80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5af0ed2-cc69-4eb3-a4bd-afff2c9ee50f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b565a4f-146a-4978-b820-23a5cf3193ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8554d0-1175-4103-85ad-0ef00beca0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de333b6-6680-452b-9f7f-90c8df2054c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286dee17-4735-4109-b95c-99d93054741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d3a99-fec5-4eee-a6a6-f51b8fc2c4ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc89302-a1f8-4d14-b161-21d845421f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1e01a3-7f99-45f2-b450-ed4af392481e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8563a2-9073-4173-ad6a-317443ac2c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f54679c-27b6-417c-a6b5-cb297248e65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed004fa8-e7b3-4f1f-a89d-d6d75b012eee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fd4cc6-f5ac-447c-938b-7cb640157edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91fc818-6a5f-493c-ac54-207fcde12e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4213f7d1-c0d3-4ccb-9e2b-7667d87a8deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40f6382-0707-4275-9271-eb6e9b152b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f6134d-c88f-4e5f-a6de-ae5884a12edb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a25104d-bb4a-477c-b817-541f4b120010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be349075-cf2d-40d9-8953-405ada4cc070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fb8153-d0a2-4293-992c-4cb360ded8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b72aa4-c8c0-4582-9c28-9fb69551bf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a666b6bb-9351-4bb9-a734-585b69671644",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4fd6e5-7871-4f12-9881-7630c6db395b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06840437-91e5-440d-8dca-f248821af2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32771e3-6fcc-43d6-b407-b40c107695ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23e1d34-8b88-4c81-addd-28ca443cc9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e890e0-7305-4f32-97b0-d08655cdae9c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371ccc3-6567-4ed0-a035-2e8b865b6476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7785398f-7231-4321-8492-c292b0b95ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf97e88-5d55-41d5-a103-4296435dc4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10558935-a082-4586-ae12-4ef9f08c1250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2514b0-7150-4369-bc4b-311bcd707d9b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc522d4e-bf0b-4c9c-9b66-6f49b8cc400f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18fb6eb9-c688-42e3-b0f7-1a899f385018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983e97ee-2d31-466b-a47c-52316f1a611c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02a32f6-d0bc-40f6-8a8b-e04951ea0701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2e4c1e-cdef-4764-900b-1b29063c4a33",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a9c44-af84-4288-8312-669bbee7158a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c098b1c8-29e8-403a-86f7-8da3073ec300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ac11a-2b35-4aac-a388-61dcf3991697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef8bdaf-4778-4454-bffe-86c171af3d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00108629-dde3-47b4-9115-bfdcd6c37dc4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9688516-f38f-45f3-a6a9-5af9bb200d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb08447-3b56-4721-b12a-5d0bcb1b8499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf5abfa-a38a-4e71-9d9b-43b047dad07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e8138e-5277-458a-b4ca-058cfa0ac8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a3062-a378-4d7b-962b-68dc6a445903",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00356ed-d6fa-42c4-891f-9c1aed2eed63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417684be-aa28-43e5-966b-c2ff8e1bcdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7792df5-0bdf-4096-9c84-2e3197975617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dfde24-5aaf-4d1b-8ecb-6eddde15ff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b54c2-9af7-4a75-9c72-b680a1a849c2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b2ef2-7c38-498e-bac3-5582b5bacdae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7ae266-4d20-4a0d-9783-49e5aa01bdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00942584-3d71-4d18-982e-21a2cccbf6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99e7a9c-8dca-4b09-bac9-146f8c2e4496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2817b8-39be-41c6-94dc-ca933d03f45d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016e4fe3-7a57-410b-b31b-e40c0e922c56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe4694d-64e6-48ae-ab52-0a0d8567ae1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098bf1bb-5fa4-467c-b1ca-169be762d56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d89109e-1c96-48cf-8dc6-86ba452dd107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f5bf6e-ce8a-44c3-acb6-a35a955a9be1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f422778-a3e4-4f26-9fa7-6b5600a8ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c49e828-91b9-42d9-8f0d-8e0d95c2a52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beffcb57-858e-4d06-956a-d2f77c7c45e2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31233e95-6f71-4581-8485-fbb9c7667d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec364eb0-47ea-4771-8328-89081d80cb39",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d421f5c0-1ccf-4557-a598-491e31b7990e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e664e5-079f-40c7-a4d4-85a77ac6371e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08d3901-acbc-4b55-a610-4cf1c030dd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d221c29-0a32-4e02-b050-84ad7af255d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6447f-c66d-4c64-9d52-47eb32a8e894",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07666ce5-b28e-4dbe-b6b4-e69511e4f7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e87c06e-42f5-4b1f-ad8a-9f1532a41d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b1a00a-6c91-458f-9d4f-15a13d3f232e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cabcdf-9f5d-4434-8fc8-6ccee5f740a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dc4773-2a42-4763-a438-cdf5b61d8330",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caf4e2f-f7b0-471e-9f11-dc7325bb2810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b38827-e630-42ee-8b47-6abc74bb8484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cd150a-3c8f-42b3-97c7-55d15751f4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353a3cda-47ac-4b09-a3e7-e8014e0a3236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290799e0-919d-4ed4-babe-075e36060c52",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2361caff-9e36-43e3-bd7e-2223cdac1533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1851f632-1b01-469c-83c6-91f6ddc3039f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eff178-3dbb-43e9-ba1c-33798cd8ee95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acab34c0-34bd-4727-bb1f-5cc7a5febec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c59b761-429f-4e3b-87c4-be1a4f7ff9c0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c5f326-779c-43f4-9899-6cb3a5bb4e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac1bc24-c349-4aa7-a3a0-7bfdce01f613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb215480-5521-431b-aaf2-fde12501c9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8feb3816-3d5d-4d1e-9b18-fdbf3439ff06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ebce2b-d159-4e95-8032-dbde4c6a73b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae8ed20-c639-4f53-839a-368919c8bebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07936057-7a77-444f-9e58-94e53a327fa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fcd732-3d78-432b-a5ef-eb717de5ec8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad714681-e433-40a4-8b1d-f0cb4a0dcfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be67f391-061a-45f8-8496-de8aff47a215",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb2d04-05cf-49fe-ae9f-156012922b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a49f5ce3-5881-4dbd-9f10-243fa3803bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50a3a6c-4e9b-43b6-8df4-42c30cd9cb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d574053-796b-4d2f-b5bf-1b9323eda310"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "029bd30c-511b-4443-917d-edd1e42e08c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "042a6849-deb8-4f9f-adbe-5d70df57bfe2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "336bd483-3702-4d3a-9341-22bffcb40ba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cf8ef36-20ce-428e-9e9a-b63c6ffceb3f"
                    }
                  }
                ]
              },
              {
                "id": "9da84f40-1ee2-46d4-a936-fdb5e19c22ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40a21aa5-01ae-4611-82de-e0ed3d34464b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7dda14-3a53-47c5-9280-8d628ebcb269",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9d5416e1-bada-4c26-b227-6a8d282be8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f66e54-dc95-4150-98a4-f8938f43f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b05770d-1e50-479e-a05a-cbb7e4f8925c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68c277f1-52f5-4aaa-b6c3-112d812c5c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38260bbd-0d49-47f9-a9f4-08cd50bc0975"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2d6dd6c-db2a-45ac-8a91-5fc0ae2230ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "435cc39a-af83-47a6-b119-22174ab3f13c"
                    }
                  }
                ]
              },
              {
                "id": "016278e6-f34d-4fda-a265-58c43ec0fe4c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54f0e5e8-9cce-4ce5-bb8b-6d33f63f5adc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cfb39d-1e45-484a-a0bd-e560fc0d3692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d87a1c39-3458-4bf9-acb9-24de3093ac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02d84cf-e13d-4880-bee9-125288f79c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ce3776-aa86-4e71-a81d-def3e3606c68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2dde8de-370e-4e43-9b5a-d1166f477733",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a737f32d-3059-47b8-983d-8c2ca03fc92f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae945da-7a1e-4a54-af89-791a5f9b78ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1f7f0ae2-abcf-4d4d-99c3-fe591393473b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "056a5d4c-0c8f-4c5b-ae77-1c1de57c5949",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "551bcef4-ff76-4420-8e12-f180c699f189"
                    }
                  }
                ]
              },
              {
                "id": "ddc9c9b3-1c50-4c01-90c1-da7c30c5ce51",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e77f79f1-1c24-4753-8fce-34b18b5c677e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "740e324b-944f-4299-834a-96ed72f3471c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d808e827-450a-4bef-89cb-18e28ec4184f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92b8ca9c-6e10-4be3-a2da-85e618fda73f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f088f462-7405-438f-8312-2f1776dd87fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fcb51895-2917-4a6d-a003-f81cb2af3e35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00e4ccfa-7d94-4d8b-9ec0-8b236a4b1517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac07e15e-2456-48ae-9154-868dde38a8e5"
            }
          }
        ]
      },
      {
        "id": "58197b6c-0aaa-42e0-9b2f-01cd92fa021a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "774bab79-f563-4f44-91c5-fa6e9ff1ac56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "996fa6ed-b0b8-40c5-bdbc-540bb3887a88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "164e1ce5-e784-4a23-a353-2b56f660732f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7addf1f-4171-4b2e-97b1-b4378caa3b49",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74cdd12a-303b-44b7-88f6-bcc556b6248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c72e83-4063-4b89-b117-dca97072680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dada4d9f-8212-4618-a8d5-ceeba472a7fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0f0e97-f410-44b2-974d-f90e5c6d3a71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e5ab4f8-d92d-4518-a38e-18c0f18a354f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36e7dac-4658-4219-9f92-ea9ca0054bec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "144f425c-6a7e-4f65-975f-7250d177afe6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dec5f3d-29c0-4933-b8df-67227d3336ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c3fa5f22-bed1-47bf-9d68-d89bc1c633ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "694031e4-7c50-4d0d-b5bc-6da90a9e6343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46944950-980e-4860-aeee-02436726de0d"
            }
          }
        ]
      },
      {
        "id": "a1c19e17-4e8f-4ab5-ac74-7b68da328107",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ab46b583-bae1-4238-b0a1-0282035e3f2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "598533bb-fad8-4589-8dc9-571de2c05619",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06760aae-940e-487a-b2cb-73f7264697f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b1a785-692d-4959-b57b-1dab3f60bf1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e349c620-64c3-4169-89f7-75f144a38434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6ab496-5df2-4d55-9cff-0f31e633e715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fd27f1b-d07e-4e26-be8f-daeea02999ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14d2c498-f919-4eeb-ae81-e8d8e7778452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62ec58c3-a63b-407c-bbd5-85eb2ae0e433"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0eab6fe-9119-48b4-bc16-bc3ea5e323cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "171ac024-b031-4694-a255-4ecbf2a478d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41c47594-67a1-429d-8c1d-6c5fb7604525",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7846177-35a7-4a9f-8f23-8df57a5c7b1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fc4f7b9-5c30-4bff-a9ae-3473eb91030f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "721df106-cc35-4c32-9caa-53d2137638f3"
            }
          }
        ]
      },
      {
        "id": "f96d4a4a-38d2-4bf8-b57c-ab4ee922029a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0d7b393f-3689-4fab-9861-764b65f24087",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5afee207-f797-4b08-8c9a-e95579b5e4bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfc76bf7-83ce-4c2d-acdd-12e1dffc0cd6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758a4e33-9ab4-49ce-91d9-77bed3422a1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c803633-2c41-4974-8eff-d7c167c6476d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08d781e-e447-4924-b7a3-3d91e048aea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e870dc2-05c7-4e33-8cba-03c0e52ac10e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7dcbe87-1708-4ac5-8ca2-f91085c6553f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab4965de-2c67-46b3-b7aa-9c56ae60ce33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0abcd372-9c02-49fd-8e52-7d17376d7d8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de9cdc1e-9463-4d6e-a3b8-bc3812008663"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9098c063-e633-4b5b-89af-9bbb0eed6211",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4eead03f-0199-4cbb-a71e-72ebd660d05e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0215b92-c699-48b5-b968-68a306d02662",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b46ff53-513a-4286-b781-1382ad19f8de"
            }
          }
        ]
      },
      {
        "id": "60a61d83-5f96-44a4-a3a0-b776a8e15c2b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec366d49-8132-4ccf-a518-2699386ba493",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5368a22a-c46e-4b96-b56e-eb7d26bb4f57",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d7cec884-119b-4c15-92f7-ea5d97b6beb0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ccf77e9-e6e9-4781-ae7b-5d5ee18f91f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3941ad2e-02b4-42a3-b74a-55984efbb126",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 76.8,
      "responseMin": 6,
      "responseMax": 4800,
      "responseSd": 379.13889321840486,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700872427371,
      "completed": 1700872458451
    },
    "executions": [
      {
        "id": "28964f88-536a-4d81-bbb3-b1e920cf826d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f63f0d03-2ed8-4aa3-9139-e5c16b3945d3",
          "httpRequestId": "c43ed541-0d98-4f38-ab8a-9ea98f2cb3b8"
        },
        "item": {
          "id": "28964f88-536a-4d81-bbb3-b1e920cf826d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b4b0dd81-1e33-4f49-9e47-21950c599675",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "162805f3-b9e9-4545-a3b8-99912b44b218",
        "cursor": {
          "ref": "06f4ae13-76ac-4d9e-a9ad-7e93e194f1d5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "286d7004-7113-483c-9fa7-00562d5ecf51"
        },
        "item": {
          "id": "162805f3-b9e9-4545-a3b8-99912b44b218",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "773169b4-59bb-4ac8-913e-ec95188c1c2a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "64c3975a-8dac-4b6b-8331-fa309e30b75d",
        "cursor": {
          "ref": "21798e08-305c-4515-98a5-fbd9eed18339",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "636e8995-4931-4a74-ba24-fadacd7ec9f3"
        },
        "item": {
          "id": "64c3975a-8dac-4b6b-8331-fa309e30b75d",
          "name": "did_json"
        },
        "response": {
          "id": "05040217-d2d6-4092-9a08-c6538caed724",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9c8fb2-1d4a-4aef-ba7b-c7f6e51aa477",
        "cursor": {
          "ref": "8b841056-3cee-4a51-ad05-72571ae70482",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41ec9aff-68d7-485f-8be6-50cbb6603cb7"
        },
        "item": {
          "id": "3e9c8fb2-1d4a-4aef-ba7b-c7f6e51aa477",
          "name": "did:invalid"
        },
        "response": {
          "id": "9cb7faba-96e8-4de4-bd77-cbbec5137e0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 702,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9c8fb2-1d4a-4aef-ba7b-c7f6e51aa477",
        "cursor": {
          "ref": "8b841056-3cee-4a51-ad05-72571ae70482",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "41ec9aff-68d7-485f-8be6-50cbb6603cb7"
        },
        "item": {
          "id": "3e9c8fb2-1d4a-4aef-ba7b-c7f6e51aa477",
          "name": "did:invalid"
        },
        "response": {
          "id": "9cb7faba-96e8-4de4-bd77-cbbec5137e0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 702,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157908b-5431-4a45-93a0-413e98aa23d2",
        "cursor": {
          "ref": "23717f7a-97d3-4f22-bf2d-0602787b2988",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1dc7b0e0-58fe-422e-b7e3-667fcf69a270"
        },
        "item": {
          "id": "3157908b-5431-4a45-93a0-413e98aa23d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "02783ea4-e154-4e1b-94ff-8175ad24c126",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ee86e-792a-490e-bc0d-994c1fc19bb2",
        "cursor": {
          "ref": "a7ceda81-7f54-4710-8c27-ba33506b1d0e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "72aa928d-d91f-4cd3-8f09-3fa8bc0a86e0"
        },
        "item": {
          "id": "b38ee86e-792a-490e-bc0d-994c1fc19bb2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ffe965b0-ca58-4897-b845-227b89a8435d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e7f265-40bf-4e04-b37a-3a5c47f72fb0",
        "cursor": {
          "ref": "5ab478d2-a6ea-434f-9da1-70008e44d9ad",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "76f7e12a-8775-4544-bf93-555a6ba71b68"
        },
        "item": {
          "id": "b0e7f265-40bf-4e04-b37a-3a5c47f72fb0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3c51ad9b-4f01-4065-9e8f-9fc271ad31a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76453228-11ff-4aa7-9ba1-8ff4fb08ecb8",
        "cursor": {
          "ref": "c7e669b4-c95d-48b5-b0b7-57d82b018376",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f3d8b5f-306d-4384-b734-f665cb04c5c3"
        },
        "item": {
          "id": "76453228-11ff-4aa7-9ba1-8ff4fb08ecb8",
          "name": "identifiers"
        },
        "response": {
          "id": "81ed81f2-b08d-4c70-9068-e2e6cfa1a001",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f12e048-6f46-4f90-91fe-2676b7f0c67d",
        "cursor": {
          "ref": "3e86b0c9-d97d-4068-90fb-1746c072feb1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8737418e-d67b-4754-a7b5-97744dd5305c"
        },
        "item": {
          "id": "0f12e048-6f46-4f90-91fe-2676b7f0c67d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a621906f-086a-4d59-8334-5b12b8ae4ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188dde10-ee12-4439-8804-c654f305b33b",
        "cursor": {
          "ref": "ba482d4f-698e-4cda-83d1-ded9393e1344",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5636b0ae-d1c0-4250-ab51-e29ad60031e8"
        },
        "item": {
          "id": "188dde10-ee12-4439-8804-c654f305b33b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "75617bb8-193c-4be0-b582-6c0d1a514b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f53727f-3143-4dde-98ea-97415b61d92a",
        "cursor": {
          "ref": "dcfbcd89-2afa-4dfd-9409-077675c8b265",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e48c17d4-8160-467f-abb2-4fbaa583ef64"
        },
        "item": {
          "id": "6f53727f-3143-4dde-98ea-97415b61d92a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "508358da-1563-40f3-afea-5081677b85e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05b3bbc-9edf-4cb1-83ed-fc11fc9ec15b",
        "cursor": {
          "ref": "8b6c8814-6204-4545-985d-e3b3e3e82894",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db5c8f4e-fa82-461f-b128-a916c21e3ba8"
        },
        "item": {
          "id": "f05b3bbc-9edf-4cb1-83ed-fc11fc9ec15b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "edcc8b86-c226-45a3-921c-a282bf5c710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d958bd-82f3-407e-af37-bf6eed1d4624",
        "cursor": {
          "ref": "7ee275ac-b11a-4f17-9492-fc49655fd336",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f2fb0793-1600-4b91-90c8-a30332e65bda"
        },
        "item": {
          "id": "37d958bd-82f3-407e-af37-bf6eed1d4624",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5288d523-8e41-4415-acbb-04b66d732b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ea424e-f84f-4bce-93e5-bd7f81b0114a",
        "cursor": {
          "ref": "b57cc04a-9f90-4e8a-8c85-cc605dd19845",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc4be113-d6f0-4978-971f-382cad40b673"
        },
        "item": {
          "id": "78ea424e-f84f-4bce-93e5-bd7f81b0114a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33d153db-fe86-45ff-b5a2-23e0d67d9b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96be8ecb-9127-48cd-b096-8bd4ecf65d05",
        "cursor": {
          "ref": "74fd2795-6d0f-4320-b90c-f98f2aaf88fa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ec3a51eb-93d8-44ba-a9ec-30e53a0a4481"
        },
        "item": {
          "id": "96be8ecb-9127-48cd-b096-8bd4ecf65d05",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0539ed0e-6d41-4354-b05d-0db9e80a27a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f7eefd-169c-4f34-a665-5d33cee90bc5",
        "cursor": {
          "ref": "dc7568b3-1ffb-4c7c-95b1-7fa0e6bf8e0e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3f5f6452-fd26-406d-ac1d-3bf7f9b91d05"
        },
        "item": {
          "id": "d0f7eefd-169c-4f34-a665-5d33cee90bc5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9b3f5722-a520-40f1-a071-a2c83770ba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b5d2b0-c783-4be0-a335-82023e8fd1a7",
        "cursor": {
          "ref": "8eabd447-cdde-47da-a300-f10fa0164e21",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0399eb6d-10d6-43d0-93f9-794daae2de8d"
        },
        "item": {
          "id": "c8b5d2b0-c783-4be0-a335-82023e8fd1a7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aaf3abae-a53f-4738-be5f-f9e7f8bbd34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886fc9a7-1a37-4a8f-a751-952a749bda35",
        "cursor": {
          "ref": "e3a67536-b733-4fa5-bf6b-9f87291ead8b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b21a8a08-b582-44e9-b7e6-c8af691a73b2"
        },
        "item": {
          "id": "886fc9a7-1a37-4a8f-a751-952a749bda35",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9055ceb5-8c2c-48cb-95f0-76630c77cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23c62bf-f215-4f72-96e2-fe32e2874930",
        "cursor": {
          "ref": "f02e130f-2cc8-409e-83d9-1448f0978da5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d0f073b7-9899-4689-8d7e-fd89f45ab19b"
        },
        "item": {
          "id": "b23c62bf-f215-4f72-96e2-fe32e2874930",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a9d9c52d-db13-4b8d-ba2e-d9322009f741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bffd7ae-3a59-4f59-8543-44e9399f6459",
        "cursor": {
          "ref": "2d84a619-41f3-42d3-8d78-5f0bf7a5cc3d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3513371c-c141-45a1-a5bf-0bd1ff726046"
        },
        "item": {
          "id": "2bffd7ae-3a59-4f59-8543-44e9399f6459",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0951f208-02ba-441c-95cf-ed27083b865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffca7a97-28c8-4152-84ff-90d8d97c9c1b",
        "cursor": {
          "ref": "edd284d8-3c26-40dc-bb69-8f41eb76dca5",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a65bca9f-5c2e-4e21-a142-9b6721e9860f"
        },
        "item": {
          "id": "ffca7a97-28c8-4152-84ff-90d8d97c9c1b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8aa9ffb2-7bf0-40b4-b05a-bdec202f0529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccfe787-f03b-4786-ae9f-ca86900a4ef0",
        "cursor": {
          "ref": "76a86bbb-1769-4e21-9a97-67c5e63b483a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5fb380fb-d3ab-4670-9b00-9538ab7f1fb4"
        },
        "item": {
          "id": "2ccfe787-f03b-4786-ae9f-ca86900a4ef0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2669c94c-f9dc-4f44-a0de-6302da0aee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b657aa7-5749-4cf9-b723-dd4217191a95",
        "cursor": {
          "ref": "4268c74d-b6bd-4424-9989-bc88e739ab78",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "195bc888-8bdd-41f7-ac5f-d082487cef1e"
        },
        "item": {
          "id": "6b657aa7-5749-4cf9-b723-dd4217191a95",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1a0fc803-623f-477e-9989-d9df679d05f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92339089-d5d5-4cce-9d61-870ec3a590c4",
        "cursor": {
          "ref": "08606070-e100-408c-85a5-5ebc73c3d83d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "900ec398-286a-46ff-a3cd-8ed74ef44571"
        },
        "item": {
          "id": "92339089-d5d5-4cce-9d61-870ec3a590c4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "66b81440-ddb0-4bc8-afe8-c46ae14282c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b856fe2-291f-4fc4-9f68-dc4bc008cbb5",
        "cursor": {
          "ref": "c47b33f5-155e-4d11-af8a-e3ad1c626b3d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e6963358-9a71-46cb-820e-fd118b0083b7"
        },
        "item": {
          "id": "8b856fe2-291f-4fc4-9f68-dc4bc008cbb5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4475c1b3-0799-4465-8877-1f368450119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303ae229-1a02-4601-81e8-44a9dbda3c08",
        "cursor": {
          "ref": "a1edd8c6-87cd-4f46-a8ae-29ec90273271",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9189f0e-c048-49a3-81e4-0dc2a344e735"
        },
        "item": {
          "id": "303ae229-1a02-4601-81e8-44a9dbda3c08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c07f328d-50f4-43b7-b4e4-eddbe16cb3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa0618-ce9e-4d52-8265-051cba43a90b",
        "cursor": {
          "ref": "4f7a0594-a00a-40e2-b305-e2f1b98da7d5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e4fdcb99-8aec-488b-906b-b806390c0706"
        },
        "item": {
          "id": "a5fa0618-ce9e-4d52-8265-051cba43a90b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2db095e5-19fd-4e17-ac21-47181f4efe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2049c901-4750-484e-80ed-337aae703206",
        "cursor": {
          "ref": "fd4373fd-0143-4253-ab07-41ec734611a6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "830d383f-edfd-4b1f-9383-6b35c0b8cb4f"
        },
        "item": {
          "id": "2049c901-4750-484e-80ed-337aae703206",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c4b16685-56db-4d66-8af4-cbc1c45cc3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b7018-f036-4226-a123-17e43e0e7ea3",
        "cursor": {
          "ref": "5792f8ce-ba22-47dd-9182-1772d0722cc1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dc5bc08d-eafa-4555-ac27-a871b21a65fc"
        },
        "item": {
          "id": "ae5b7018-f036-4226-a123-17e43e0e7ea3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4f9ff0cb-9c8c-45c3-a42c-990ce06cc40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b5752-9126-4206-a7f1-c3fa2570b874",
        "cursor": {
          "ref": "82554bbb-d5c7-42f3-8afd-a4cc515c5176",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c624ed17-a90e-46d5-8db5-9118a3b3493a"
        },
        "item": {
          "id": "8a6b5752-9126-4206-a7f1-c3fa2570b874",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e91565dd-5253-40ca-90df-cee41da47168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3c957a-3806-4c51-8d95-99aa9858be03",
        "cursor": {
          "ref": "a6fc154f-919f-4ce2-9163-4421defe8644",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aeddbc8e-c7b9-43a7-b166-1d0a79b238c9"
        },
        "item": {
          "id": "af3c957a-3806-4c51-8d95-99aa9858be03",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e1c0ab23-b3fa-4ef1-8c48-9e9fa4bc6dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef1f10-a590-4566-aed2-1f7bab8707a6",
        "cursor": {
          "ref": "4c84beb3-ec43-4a8c-b4b1-b4a2582c027f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d423bb93-96f2-41af-9877-18f830e85376"
        },
        "item": {
          "id": "54ef1f10-a590-4566-aed2-1f7bab8707a6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c4cc6c5c-3158-4d84-8d47-acd2ae414da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9333509d-390e-45d2-9a43-a8cfbfdf1580",
        "cursor": {
          "ref": "6cb95084-f118-437c-9806-d057823c0628",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2cd1b946-f8af-4d32-b65f-2378f0b9cc18"
        },
        "item": {
          "id": "9333509d-390e-45d2-9a43-a8cfbfdf1580",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f68a81b3-1040-4d0a-b9d4-7f0ab6663521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1490268-0690-4c2a-b913-2dc8ca868467",
        "cursor": {
          "ref": "b60f7c70-9e35-40aa-86c5-fd2e01218707",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b71bffab-ba3a-4e3d-ba2f-39f1aa5c2cfd"
        },
        "item": {
          "id": "f1490268-0690-4c2a-b913-2dc8ca868467",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2439a15b-9ef3-412f-8749-a4d2baa95dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd10b45-66a0-4a8b-9c17-70435a9e89e3",
        "cursor": {
          "ref": "31adc8f5-f0b9-4a6f-905c-84221434909d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b15d948f-5dae-4b0f-8b3f-efa10eef84f6"
        },
        "item": {
          "id": "ccd10b45-66a0-4a8b-9c17-70435a9e89e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f0f8086-9a12-41d1-bf00-6e9a02057488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b418495-3716-4677-9f01-5679deae63a5",
        "cursor": {
          "ref": "ff3c0e91-cfde-4724-9d1a-a85543c258f5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02a54f28-5656-4102-8aed-d8c876ddb54c"
        },
        "item": {
          "id": "7b418495-3716-4677-9f01-5679deae63a5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "abd6e52e-8970-4dd7-832c-5c50cd6522f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f2daa4-ea57-45b9-a713-ad5ba5074f6f",
        "cursor": {
          "ref": "98aa5501-e946-446d-b677-cf248c0c55a7",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6ef12d5e-304c-4260-9634-d965b1e320e7"
        },
        "item": {
          "id": "15f2daa4-ea57-45b9-a713-ad5ba5074f6f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41023d04-b2d2-4e8a-81cd-209ed74c8f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbd3aa-ef04-43bb-92dc-4e2ab4c52a93",
        "cursor": {
          "ref": "3973f25b-893b-4cea-a2a6-0f48cd97d7fe",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "795a5307-f4e6-47d3-b9c9-6daa5a7194b5"
        },
        "item": {
          "id": "c4bbd3aa-ef04-43bb-92dc-4e2ab4c52a93",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dba9d4d8-fbb7-4289-b245-4843f9e21939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c73d8-5232-4f67-a9d0-2298ad1f23f6",
        "cursor": {
          "ref": "160ae492-8cb0-4f92-b65b-11bc138fe80e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b95e2d1b-f37d-4c61-83ee-0d51bc01a055"
        },
        "item": {
          "id": "7e6c73d8-5232-4f67-a9d0-2298ad1f23f6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b94418a5-32f9-4917-883a-3b83a7799c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c6ccd-33de-4dca-9b61-94b8e54bf797",
        "cursor": {
          "ref": "61b1869f-46ad-4aa4-998e-647bbdac3f67",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d2937d02-ea98-43a2-ba36-4201016e3334"
        },
        "item": {
          "id": "3f5c6ccd-33de-4dca-9b61-94b8e54bf797",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e238c397-b39a-4d82-a48c-2ace4bfed53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91f509c-484a-40fc-95da-33968fe30c71",
        "cursor": {
          "ref": "5e56d311-0361-4a33-8458-4f2f43a5f5a8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ca85290-1553-475c-9492-c31e11053d16"
        },
        "item": {
          "id": "f91f509c-484a-40fc-95da-33968fe30c71",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cbd89eca-fa43-49e0-bc6c-ce56d5b8fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a46e0d1-d6d9-41c7-866d-689d933b836d",
        "cursor": {
          "ref": "b3d0cc35-903a-47a5-9895-a60aa0788a0e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "236714fc-daf1-40a9-88fc-27ef4dd5051e"
        },
        "item": {
          "id": "8a46e0d1-d6d9-41c7-866d-689d933b836d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9ceb5a4-1c72-4ead-be07-484beb57d2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4d816e-7785-48db-abf8-b41e2406e261",
        "cursor": {
          "ref": "be2d516f-bed2-4a16-81fd-15bf852cedad",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "819f2a06-60f6-47dd-972d-2bf13161ad8a"
        },
        "item": {
          "id": "6b4d816e-7785-48db-abf8-b41e2406e261",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "92880422-a391-480f-b5b7-c58aaa8420b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7800bd-bc18-48c0-bf32-a059556bc66f",
        "cursor": {
          "ref": "ad2293f8-23b4-4e86-bd2e-b3c6dd0fe3d3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4c1153e4-ea20-404e-9b4f-58e8dec2a25f"
        },
        "item": {
          "id": "0d7800bd-bc18-48c0-bf32-a059556bc66f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2100add-a542-40e4-bda2-c769b4b21308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe0147-2e52-42d9-9e7b-8e328b3c4418",
        "cursor": {
          "ref": "13ecbe59-3272-4ff3-8233-5fa415a1cc26",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0c44d726-03fe-4da4-8c1e-6b7aa0dc2c19"
        },
        "item": {
          "id": "4dfe0147-2e52-42d9-9e7b-8e328b3c4418",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d7bae79a-cde0-4a80-bbef-5d0a41e415bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649fa2f5-8bee-4e7b-b374-703bb977766b",
        "cursor": {
          "ref": "3487d7bc-4933-44a9-ab16-62b0b7c42d2a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65f94cff-5963-419c-a660-28a5f9b2f0d5"
        },
        "item": {
          "id": "649fa2f5-8bee-4e7b-b374-703bb977766b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "622c96eb-4285-4ef7-9a43-ab0956ddfee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a596694-593b-46aa-92b5-a9579ac6e33c",
        "cursor": {
          "ref": "7f44a9ca-0160-4867-a7db-aab0296d013f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "166eb6ba-ad95-4abb-8a08-3e865e671049"
        },
        "item": {
          "id": "5a596694-593b-46aa-92b5-a9579ac6e33c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5663ac11-b5f6-4e23-b6af-e486403c2747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287cd184-1f7d-43a0-a28e-b7c27746c516",
        "cursor": {
          "ref": "1b59e773-b795-423c-a20e-e8fc743a1481",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6a434e75-5956-4a18-bc1c-e42962dd9f39"
        },
        "item": {
          "id": "287cd184-1f7d-43a0-a28e-b7c27746c516",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb28b0e2-b6d0-4c5e-8481-24690231967c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a11a23f-cbd2-47b1-b531-400cb1763f3d",
        "cursor": {
          "ref": "8e9f2d3f-6699-4d13-9fd7-ea93ecc4dde6",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4708ba3c-3533-48d9-9194-58a1ce52dc77"
        },
        "item": {
          "id": "3a11a23f-cbd2-47b1-b531-400cb1763f3d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2742a8b4-a289-4904-9d7d-efb22960fa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f125bc-214a-4e06-8434-0f79e8a9f257",
        "cursor": {
          "ref": "33ff9ab4-6140-45bc-94ea-fa17517296c7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "abb9886e-cc16-4484-97a8-c10d6c7de4f2"
        },
        "item": {
          "id": "e2f125bc-214a-4e06-8434-0f79e8a9f257",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "73056d41-8dbe-423c-87ba-e5035b3b3db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b087560-3927-4ce5-a276-778626905277",
        "cursor": {
          "ref": "1d6b9c36-9e79-478f-8763-eff67281dff9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9264a0a1-f86c-427f-9024-758190513e68"
        },
        "item": {
          "id": "8b087560-3927-4ce5-a276-778626905277",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e5d2a9ab-36c1-4c24-9bc0-4ade0be0b8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0925e111-dae4-4538-bc27-2a6d340b8c79",
        "cursor": {
          "ref": "dfff60ac-c8f8-4f1c-91eb-7f1259a82da7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3fa80104-cbc4-4669-a2f6-879ddf842b6a"
        },
        "item": {
          "id": "0925e111-dae4-4538-bc27-2a6d340b8c79",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "47e90e6f-1f06-4aae-9263-862caee947d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8668451-375e-4bd5-a155-b05169ba465c",
        "cursor": {
          "ref": "b4d7f4e5-b1cb-492c-94a8-e6fb29980972",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bcc9f83-9283-42e2-b7cb-dfdc8932d3b0"
        },
        "item": {
          "id": "d8668451-375e-4bd5-a155-b05169ba465c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "387a3437-f463-4515-9710-a0ba41e686fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9f7b30-83b9-4b6a-b6c8-3f8f491db406",
        "cursor": {
          "ref": "e4efd754-839d-496d-a3c6-c4b7c7df77c7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0b71c5c-4749-4cb1-ac4a-826c24b976c4"
        },
        "item": {
          "id": "0b9f7b30-83b9-4b6a-b6c8-3f8f491db406",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "762a928a-613e-46ea-9f49-d070c58d930f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5a51fe-b542-4a9e-a3a2-11dbdb843822",
        "cursor": {
          "ref": "612bf65c-ca66-42ac-86a9-86d85b78efb4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5860c785-1545-4941-a7fd-f900766ad5a0"
        },
        "item": {
          "id": "3d5a51fe-b542-4a9e-a3a2-11dbdb843822",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c97f4036-da11-489c-8d27-8cdb30d0ee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84338b23-b73a-4b78-b33e-9380a1ef4181",
        "cursor": {
          "ref": "9bafc1de-3fbb-42f4-b505-9a3029446613",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "39270c49-20e4-44bf-b519-f2c5738d06ad"
        },
        "item": {
          "id": "84338b23-b73a-4b78-b33e-9380a1ef4181",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08762a02-52ae-4102-8035-ce0aeb7ee96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a92fb2b-727a-4461-a7dd-1bd6bfc8c145",
        "cursor": {
          "ref": "4d6cce32-1bd0-462b-ad2c-e984713637f7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a370f613-e57e-4622-b993-8d71a7db4363"
        },
        "item": {
          "id": "6a92fb2b-727a-4461-a7dd-1bd6bfc8c145",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "421c57b2-7232-4502-8e23-2a1276df3cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e02fef6-6eaf-4555-af3d-e1e490972569",
        "cursor": {
          "ref": "8e95e6e4-8cb0-4aac-bae5-93deed4d1323",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98393e2b-44c3-469a-b0c7-64192ffa5753"
        },
        "item": {
          "id": "1e02fef6-6eaf-4555-af3d-e1e490972569",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5c4854e2-6a8b-4287-9583-751ec93cb1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586151ee-3353-428c-a0d8-e5dcad621620",
        "cursor": {
          "ref": "b318ba9b-7535-4d98-89c8-c083d6a3ac95",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0c700738-bfe2-432e-9a82-33dae88b4a3f"
        },
        "item": {
          "id": "586151ee-3353-428c-a0d8-e5dcad621620",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed6088ce-30ac-4822-aac8-88505f44a21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb673fc-5f72-4bc0-9323-b1d117e5d716",
        "cursor": {
          "ref": "4ac4a522-1982-460b-a39f-9c5b7e759ed2",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "613a2fea-1208-4926-9180-6bbabbf741c3"
        },
        "item": {
          "id": "0fb673fc-5f72-4bc0-9323-b1d117e5d716",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2895c619-dfda-415e-b3e2-e421f85b16e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410d13a3-767f-41c5-95a1-1c1b5ecc6348",
        "cursor": {
          "ref": "1df45cfc-6c25-44b0-8efd-72218ee9a3ec",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8b7ce629-1617-488b-84ba-1be59547e115"
        },
        "item": {
          "id": "410d13a3-767f-41c5-95a1-1c1b5ecc6348",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fdf93f02-8d48-488d-acde-6b1d58480f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3b6064-a568-403c-8cdb-0e2b898d76db",
        "cursor": {
          "ref": "96395c17-52b2-44f4-befa-e976a452f87e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5d13d6e6-980b-4343-bd36-5eb627c0b02b"
        },
        "item": {
          "id": "fe3b6064-a568-403c-8cdb-0e2b898d76db",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cd258330-e3c6-47af-b189-b901286441de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ea053-13ee-4617-8d79-e167ec8d3b9c",
        "cursor": {
          "ref": "48ea2f81-db1c-458c-9b92-943e3dc1a9d5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "53a3abf3-45b7-4121-a800-e4096049db06"
        },
        "item": {
          "id": "497ea053-13ee-4617-8d79-e167ec8d3b9c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "07f1a387-86c1-49d7-a167-23a1a2d381bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92acd93-8951-43ec-a562-2f057e1c7c5e",
        "cursor": {
          "ref": "669a1424-af01-4e36-b234-0d88a9fd8397",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bca424b1-31ef-40d6-8378-b2fa85534377"
        },
        "item": {
          "id": "a92acd93-8951-43ec-a562-2f057e1c7c5e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "13ebf28d-d866-436a-a86a-d8f8220f4948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d381470-98dc-4378-be2c-11eceabdc9a7",
        "cursor": {
          "ref": "12784139-039f-45a1-9197-82712cd8519a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30017912-06df-4802-aeea-1d2acb5eb247"
        },
        "item": {
          "id": "7d381470-98dc-4378-be2c-11eceabdc9a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2018c7fb-ea04-4b54-bd76-2e211250aa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710974b-68b1-414e-8713-4e25d6b388cf",
        "cursor": {
          "ref": "4537db00-ae1a-412c-917c-3ab40fc991a8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3d12690b-bb77-4581-9a93-aedd500b0e6b"
        },
        "item": {
          "id": "6710974b-68b1-414e-8713-4e25d6b388cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "65787e2d-6d96-4cde-8792-d6b8c854c218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc921a4a-79b1-4335-b247-069f689a228e",
        "cursor": {
          "ref": "b544001b-ec7e-4aa8-b4e6-6691e297c46c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1e727c52-9575-4c57-9224-1beb79b460a9"
        },
        "item": {
          "id": "dc921a4a-79b1-4335-b247-069f689a228e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6bd74f9a-5418-41d3-9831-78a59b175109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdde18-1b7f-49f0-abb1-690541d0e1ed",
        "cursor": {
          "ref": "a429a65d-40c8-4124-8818-b4b51e82f5d7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2fe44d72-9c63-4877-b392-671ab60aa2cc"
        },
        "item": {
          "id": "56bdde18-1b7f-49f0-abb1-690541d0e1ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f9009903-68c8-40a9-a979-eb7aa935de58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90a61c5-9e68-41db-8c11-37285cf81a1b",
        "cursor": {
          "ref": "cb4dbd79-b8c8-40b3-971c-63f189814128",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ce03843-dd01-481c-aa89-ec1e2acea045"
        },
        "item": {
          "id": "b90a61c5-9e68-41db-8c11-37285cf81a1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64502a94-d5bc-4a5c-b686-0eb705de1824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70636ae3-dfd7-4066-b9fe-5ccb30e6cf2e",
        "cursor": {
          "ref": "4e6df9d6-3503-4370-b123-a5cbc574325e",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d91d6a01-bca4-4b18-bcdf-e0dfd3a55ef7"
        },
        "item": {
          "id": "70636ae3-dfd7-4066-b9fe-5ccb30e6cf2e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1b681de9-3a7a-4c7a-b72a-f5a8f8742f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e18c8-180d-48da-8af0-787073d7a181",
        "cursor": {
          "ref": "9d00c0ca-30fa-4060-9c71-c93917aadf3f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7c5137ee-c887-44d1-bd3f-43de20903177"
        },
        "item": {
          "id": "e04e18c8-180d-48da-8af0-787073d7a181",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "84fcb931-fe08-4868-b9c9-4729130fc4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d05b7-1ecc-43f2-b59b-7e1140209ea8",
        "cursor": {
          "ref": "11835676-d413-4093-95c1-45aefe58f76f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "36188517-6c53-41af-9c03-be865704143a"
        },
        "item": {
          "id": "b64d05b7-1ecc-43f2-b59b-7e1140209ea8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "94992b32-7704-4979-b2e3-72d1d93c9d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530f5e69-364c-4226-9845-1331fe42d893",
        "cursor": {
          "ref": "252b0d66-e60e-4b59-98f5-e7059740b3af",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cf01d5f7-2cbc-456c-b86c-59b236ea0e0b"
        },
        "item": {
          "id": "530f5e69-364c-4226-9845-1331fe42d893",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "722bed7a-714c-4491-a0ec-d57d66e90202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea751ac-4d25-4030-b64a-af72d14fd86e",
        "cursor": {
          "ref": "501cbf0f-f3af-4d21-afd2-244a807944a4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d3fa3bbe-854c-4109-99bc-833a7b448648"
        },
        "item": {
          "id": "8ea751ac-4d25-4030-b64a-af72d14fd86e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ff0fc7d-986a-4e1d-a4ea-e8c690ea4088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da815e-a0d7-42f9-b093-beee3bd40b39",
        "cursor": {
          "ref": "94ca9bbe-24eb-464f-9e03-059df7b372c7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "437319c9-fe7b-4ab7-b166-2ecb8e0744ec"
        },
        "item": {
          "id": "d6da815e-a0d7-42f9-b093-beee3bd40b39",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7a34dff-515b-4b80-a768-787a0042daf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3c72d-aca8-4832-b19c-f2ec4bbcc6ee",
        "cursor": {
          "ref": "15c85a97-6be6-4047-80bb-925176495077",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "02cdaa76-50e7-47b9-b82e-370b3ecb3be3"
        },
        "item": {
          "id": "dee3c72d-aca8-4832-b19c-f2ec4bbcc6ee",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a6f9ce6f-ae58-4537-8c91-10c809941682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc79bd2-e223-4ecf-9e22-8efac5e4f3db",
        "cursor": {
          "ref": "c315aab8-e81a-4c10-9bd1-0e36cb86c23e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d282dc83-06bf-42ed-ab10-f746f3f9df50"
        },
        "item": {
          "id": "bdc79bd2-e223-4ecf-9e22-8efac5e4f3db",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c99e7b1d-b55a-4fff-ae6c-599b4c52f573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e0a89-d18a-4f11-89dc-c9cd779225a4",
        "cursor": {
          "ref": "ccdfb549-769b-4da4-a7c2-9c0cbdb68ef3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "26881dbb-bcd3-4feb-b901-d828f1664539"
        },
        "item": {
          "id": "f71e0a89-d18a-4f11-89dc-c9cd779225a4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "33b2be70-a3dc-420e-b605-991802a20c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644b1a14-51ff-4787-84c6-2f513431f858",
        "cursor": {
          "ref": "57876409-c554-4e77-8c5f-fe1216fee859",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "865ff2e9-0edc-41fb-ab7c-e8933d893b4e"
        },
        "item": {
          "id": "644b1a14-51ff-4787-84c6-2f513431f858",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "506aa476-2a03-41b5-ae89-bc18bd299178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5f2263-7654-414f-8c3a-884601ac0310",
        "cursor": {
          "ref": "94f9c407-db8d-4cfa-a659-7b4f99bbb035",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "67b16279-f5cc-4ec1-8669-e2b649a29aa3"
        },
        "item": {
          "id": "dd5f2263-7654-414f-8c3a-884601ac0310",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ff7e1953-366c-47f8-8019-bfac8febe0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062555cf-749d-4a86-9573-2751bd4850dd",
        "cursor": {
          "ref": "33e9cdff-a9fe-40de-8257-5e27e258cf19",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "81f7c918-9f43-4884-88b7-e4db8aefc196"
        },
        "item": {
          "id": "062555cf-749d-4a86-9573-2751bd4850dd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a869a42c-7964-4eab-8ed5-b138a836ab57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8896810-a245-40e7-ada6-d7dcfc802552",
        "cursor": {
          "ref": "0c94aefd-3426-410d-92ec-718fb07ccded",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97824161-6252-4283-9e16-282f71bf4134"
        },
        "item": {
          "id": "d8896810-a245-40e7-ada6-d7dcfc802552",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "44274a75-af38-4499-a01f-c60aa3c42f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b2d2d7-0694-4bee-9066-fe8cf0dce403",
        "cursor": {
          "ref": "8eafb129-9d16-4bcf-9c77-1c32019fc783",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "df57edb7-6c1a-4b70-bcaf-4aee9a2f47b3"
        },
        "item": {
          "id": "c6b2d2d7-0694-4bee-9066-fe8cf0dce403",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e551dccd-5e42-41b5-a1b5-36e91e15d3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1d713b-0fda-4f5c-b3a0-4fe306abd742",
        "cursor": {
          "ref": "3c43109e-239d-4408-b1f4-95b670988a54",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b2f4a461-ead2-461f-a876-ada5eab563bd"
        },
        "item": {
          "id": "5c1d713b-0fda-4f5c-b3a0-4fe306abd742",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f8ad031a-afbd-4be6-b009-a67c47bd3163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a376a2-5e1a-49ac-87f8-f6ea28259783",
        "cursor": {
          "ref": "a425c900-baab-4f9a-9f0c-b81a131d4907",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7b60c9e8-4e47-4e5b-9545-2fb495fa5547"
        },
        "item": {
          "id": "43a376a2-5e1a-49ac-87f8-f6ea28259783",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b2638e9d-c11f-4162-b638-bbd90b3556a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce5a0ff-a20b-4283-aa2f-63ef1a92e18d",
        "cursor": {
          "ref": "f467b6ba-1e25-4502-9821-cd9cc6dedd42",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fa778192-9e66-470f-98f3-2518b213610a"
        },
        "item": {
          "id": "cce5a0ff-a20b-4283-aa2f-63ef1a92e18d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4fa43c9-47ef-4274-8f39-e0f2d417dd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de015dc-eaf5-4c55-be76-3af070d296df",
        "cursor": {
          "ref": "3b2cb931-26d3-4e07-b6b2-d9c7d065f083",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a106b3d-c91c-4e26-aaa3-8482b5eb3fff"
        },
        "item": {
          "id": "8de015dc-eaf5-4c55-be76-3af070d296df",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2c1709ff-ebf6-4909-8cf3-5ce4a77a234d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0b0e66-6b20-4e82-ae83-89a34aca9f06",
        "cursor": {
          "ref": "5c516267-65bb-42d2-9946-4145f644d607",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "83fbcd12-a275-42e0-818b-9e48ac5965bc"
        },
        "item": {
          "id": "de0b0e66-6b20-4e82-ae83-89a34aca9f06",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d3ae414-27ce-4020-a9f0-95e222105492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2f949b-a4de-44a9-85ba-a785f3e031fa",
        "cursor": {
          "ref": "8f631d7d-f093-4f91-8204-5692995c54e1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1c6df66-ed7f-4e68-98c0-7bdcade3eb5b"
        },
        "item": {
          "id": "1c2f949b-a4de-44a9-85ba-a785f3e031fa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8baa0bc7-5dd6-427a-ab50-606aa3354d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396d05cb-3251-4bbb-bc60-7a626dff5a62",
        "cursor": {
          "ref": "f9aa728a-2318-4305-af91-4c5c5eeffe32",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1c918bff-9beb-4cee-b14e-7add6fa3ce7f"
        },
        "item": {
          "id": "396d05cb-3251-4bbb-bc60-7a626dff5a62",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a08ae574-51a6-41f3-9ca7-743221b98bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cf8acc-5255-4359-afba-cfe2557451f1",
        "cursor": {
          "ref": "c084afdb-233a-4c8f-97cd-d400cf02f195",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3416c12e-de02-4a47-ae1c-a39c139c8943"
        },
        "item": {
          "id": "13cf8acc-5255-4359-afba-cfe2557451f1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5191379f-1fca-4f35-bad6-1cc85c7b1405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cde09eb-4175-46c6-9a96-997b6ddc15eb",
        "cursor": {
          "ref": "d3b9c7f6-af6a-40ff-9c1b-8bf7a3b090c5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a35c01e3-aa91-4e38-b31d-732844182dec"
        },
        "item": {
          "id": "8cde09eb-4175-46c6-9a96-997b6ddc15eb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "60bfbf3f-491c-4158-a3f7-bffaeb4aa6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fc1bca-2a9e-45eb-9702-e652d01c8fc9",
        "cursor": {
          "ref": "91a1cdfc-f654-447a-a353-1bbc44b279d6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5f8360f8-867b-470f-8726-92bd6301a21e"
        },
        "item": {
          "id": "08fc1bca-2a9e-45eb-9702-e652d01c8fc9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "18763614-9bbf-4090-bf6b-de5075cad483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977c8a0b-014f-42b2-bb40-e08dab4ff15b",
        "cursor": {
          "ref": "75c21131-0861-4e62-b803-fd3141b64d03",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0d1dad02-e154-45a4-b358-5b1865fb8e0b"
        },
        "item": {
          "id": "977c8a0b-014f-42b2-bb40-e08dab4ff15b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "17359180-01f9-4c41-9a7e-b3c0af4b19a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65572856-9729-4e74-9d2d-5236cd8868ea",
        "cursor": {
          "ref": "e41f2dc1-bc8e-4474-811a-42600d07c09a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "46407ab3-be73-4caa-9f62-3962ba176d94"
        },
        "item": {
          "id": "65572856-9729-4e74-9d2d-5236cd8868ea",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "333151c1-87d1-4190-8dad-468f5e47752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4ba45f-850f-43d3-b4ef-53842a553566",
        "cursor": {
          "ref": "1a1033a1-a5aa-4265-acc8-69d6955d7ed7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2eb06781-3b2a-438a-9269-978dfb0125aa"
        },
        "item": {
          "id": "8b4ba45f-850f-43d3-b4ef-53842a553566",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "665ce531-4bb2-4057-9bd3-abef2c8717a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3363126-1e9f-4b8f-92b5-bc8b5bc27184",
        "cursor": {
          "ref": "513c3be8-dc01-47db-819d-1e7bcb514c39",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2bf630aa-4d96-4c3a-8da1-6b7e80489e55"
        },
        "item": {
          "id": "d3363126-1e9f-4b8f-92b5-bc8b5bc27184",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "406d4708-87cf-40bd-85cf-e483a91c5296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862d38f0-7e20-4947-b968-78f44d258806",
        "cursor": {
          "ref": "bdadf223-6569-410b-9851-1fec7f3728ab",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d069c6cb-3a71-4e67-b82d-a9f5ce36ee93"
        },
        "item": {
          "id": "862d38f0-7e20-4947-b968-78f44d258806",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "254f69c5-2231-48ab-9791-4ae4decbabbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b116824-340d-471d-883d-580b54f12695",
        "cursor": {
          "ref": "5b1e0bc4-d4af-4495-a8fd-206f220cdb09",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "99fb45ed-dcdb-4ace-ba78-b5f9aff15aaa"
        },
        "item": {
          "id": "9b116824-340d-471d-883d-580b54f12695",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "97b1bf36-d706-4deb-9cd0-43e09a6eb56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dfb657-9d83-4361-beee-f62f1802287e",
        "cursor": {
          "ref": "2a218f0a-4f9b-4c0c-8a48-429ddd62dbbf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f8196aac-3b1b-480d-9dd6-529175843bc7"
        },
        "item": {
          "id": "88dfb657-9d83-4361-beee-f62f1802287e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab1a9291-789e-4f7f-9650-3d27d5244b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c0812c-105b-4ad9-bb7f-a137f1d16318",
        "cursor": {
          "ref": "7b75c1e1-e63a-4397-8970-57ea15b2c4de",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "af1f2634-433b-491e-bdf9-9e1a4047a874"
        },
        "item": {
          "id": "f2c0812c-105b-4ad9-bb7f-a137f1d16318",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a452c774-24c7-497b-bda9-ab4c9f389983",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947ced3c-15ce-46df-af5b-72d0966c7def",
        "cursor": {
          "ref": "407e05fb-eb09-4b69-8af2-a2ffc9bf6649",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79c24496-b24b-4aa7-a071-96092b32bd17"
        },
        "item": {
          "id": "947ced3c-15ce-46df-af5b-72d0966c7def",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ba58e61a-2202-4f5f-93d3-a680ddaf62b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8b4adbfe-e171-4cd8-821f-eb0092ed1043",
        "cursor": {
          "ref": "6e025e1c-56af-48e7-ab7e-75f845fe5008",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7935966d-e1cb-4c24-88dd-40d2a98fdc96"
        },
        "item": {
          "id": "8b4adbfe-e171-4cd8-821f-eb0092ed1043",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4cf7142e-47d0-433f-86b1-20a0fba838a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b276e4bc-0b40-4fee-a1a0-bc2de4739d36",
        "cursor": {
          "ref": "036a2ea6-2e42-401a-8c58-ca4638b6c38e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25027964-8bb3-4708-ad51-6b9c055fe468"
        },
        "item": {
          "id": "b276e4bc-0b40-4fee-a1a0-bc2de4739d36",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "215344a3-3af6-4e6e-bd53-9a778865bc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0382252d-1086-41f5-959d-fc3c00926417",
        "cursor": {
          "ref": "03dabaaa-e195-4b85-a477-3ab4718b9e41",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b50f8649-54b5-46ae-b772-12e2e1a69a37"
        },
        "item": {
          "id": "0382252d-1086-41f5-959d-fc3c00926417",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8498faa0-baba-4e49-8bcc-a1fd2f2dce9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "931fc0ea-6a21-4225-8bbc-59f4e363463c",
        "cursor": {
          "ref": "fdf6aa82-39ed-4fa3-8219-54977cef5e3f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ad1a7e42-ef05-4a20-9bb4-6987ca51da9a"
        },
        "item": {
          "id": "931fc0ea-6a21-4225-8bbc-59f4e363463c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8e1f4aff-55d8-4de8-9853-a95ef7857148",
          "status": "Created",
          "code": 201,
          "responseTime": 4800,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6954212-b4cd-4345-89c0-93c5f00771ce",
        "cursor": {
          "ref": "d2a9950a-4001-40a2-8a4a-a30e61260965",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e673c090-3b46-44cc-8230-28dcd5bd7ad6"
        },
        "item": {
          "id": "f6954212-b4cd-4345-89c0-93c5f00771ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9644b71b-c4f1-4df1-9f31-6b225aa61fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "46b76052-f165-449d-8e84-d6be03ba2976",
        "cursor": {
          "ref": "0af059eb-b6e9-4893-9790-563037dc9b7a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b1e34e6-96fe-456a-9bbd-13255311fbd2"
        },
        "item": {
          "id": "46b76052-f165-449d-8e84-d6be03ba2976",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41f97cf4-f242-4709-8c01-d4bcab1e85ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bd40543e-8cf0-4a34-b2e4-2e80030b714f",
        "cursor": {
          "ref": "4c85dd38-7480-452a-b10e-788b04bb9779",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be9dd14c-896f-4735-8984-62df12b3774d"
        },
        "item": {
          "id": "bd40543e-8cf0-4a34-b2e4-2e80030b714f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a8feb48-8183-4b7a-a087-88a931f36998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe7f251-7ff9-4912-8f6b-49bf870f68a5",
        "cursor": {
          "ref": "68007e3a-5885-4f7e-972b-5bff7c3b58a2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6c9a879a-d31b-4e4c-8cbe-f00a281eae92"
        },
        "item": {
          "id": "ffe7f251-7ff9-4912-8f6b-49bf870f68a5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "82f11a13-d545-435d-9e75-24daec7e5f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c742f10-3819-4a8c-ac91-5c7ffc82c4c1",
        "cursor": {
          "ref": "a7de751c-1555-4bb1-8bca-7367319dbf19",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "237b4ead-042c-494c-b6f3-50d6d58ea299"
        },
        "item": {
          "id": "7c742f10-3819-4a8c-ac91-5c7ffc82c4c1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5ea32d88-1b7b-441b-bb12-01329688bca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e77a819-7129-49c7-b091-b32fc3317053",
        "cursor": {
          "ref": "40f18b5e-7988-478c-ae85-e7a417a2e959",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "944e68bd-2425-492d-a484-f082727539aa"
        },
        "item": {
          "id": "2e77a819-7129-49c7-b091-b32fc3317053",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "99651320-c73a-4eb6-b118-5ce572cdc6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99533a12-0b32-4a91-9a17-fad87dd806f1",
        "cursor": {
          "ref": "de90d4e1-f74a-483e-a149-c6122e20d949",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "deee3871-6d5e-4a0b-aa1a-28c9f84e506a"
        },
        "item": {
          "id": "99533a12-0b32-4a91-9a17-fad87dd806f1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ad58abf0-6dcd-4e15-a3a1-47f91255c59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eff719a-7ad1-42a9-b76c-79fc69e79fa1",
        "cursor": {
          "ref": "e77abf8f-e0c8-4a97-81d9-955ddbe7db04",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7196854-0486-4dea-9373-3a2922a4ce29"
        },
        "item": {
          "id": "3eff719a-7ad1-42a9-b76c-79fc69e79fa1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2575746b-4491-4a3f-b812-b78f8742b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9b5c02-1551-4845-a465-dcb0f034c169",
        "cursor": {
          "ref": "fe0053db-1800-4392-90b0-98e0030246b5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f03f9938-26e6-4cda-9d8b-c562611d8773"
        },
        "item": {
          "id": "4f9b5c02-1551-4845-a465-dcb0f034c169",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "508cf7aa-cfa1-4114-95cb-95d11b2b5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5791edd7-b8dc-4813-9386-d634811c0a54",
        "cursor": {
          "ref": "c7e24472-6a79-4814-92fe-df3133a16448",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ffb52b5d-7e58-4dfc-82f0-02740501bc38"
        },
        "item": {
          "id": "5791edd7-b8dc-4813-9386-d634811c0a54",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "efc5e3fb-2ec6-4af4-ad43-f419755c1211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba21aeac-08b6-4050-8f90-a582fc17ebe4",
        "cursor": {
          "ref": "5a468490-4964-4073-80c6-3b47a8f077e5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e46c26df-b538-439b-a52f-8de48357820e"
        },
        "item": {
          "id": "ba21aeac-08b6-4050-8f90-a582fc17ebe4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "83970e91-6113-4f53-8ea8-aaa2406b6a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0529665-9673-47b8-9c06-9c883e94e3c8",
        "cursor": {
          "ref": "f260693d-f3fb-4028-bf24-76aa27d26ddc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3495b8e6-c554-43c0-b96a-e715b8aff467"
        },
        "item": {
          "id": "a0529665-9673-47b8-9c06-9c883e94e3c8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0059e2cb-7a17-4c39-ae0f-dc3297481627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df692da-0aa7-461c-840d-25caad9afe61",
        "cursor": {
          "ref": "3108ae7f-5069-4845-9164-3617e9eaf445",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89d14932-1bbd-48a6-acb8-c719820204cd"
        },
        "item": {
          "id": "7df692da-0aa7-461c-840d-25caad9afe61",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "907f72ee-63f4-46af-8548-3f2e5e527332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b79c8-b534-409f-8e49-88e038385e0f",
        "cursor": {
          "ref": "9068a76c-6ea5-4009-af05-98ba5008f8f1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c6da6a68-9bca-4f53-83ae-80b505d7cb76"
        },
        "item": {
          "id": "442b79c8-b534-409f-8e49-88e038385e0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7edad530-9362-4831-af86-e7d84b361465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761ebc62-09aa-4e2a-8354-142528dc2fd6",
        "cursor": {
          "ref": "0e787dd5-9f08-45c4-80dc-fdb2d3a04abc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "842b46c1-faa5-41a2-b7e6-a0a3da3a8715"
        },
        "item": {
          "id": "761ebc62-09aa-4e2a-8354-142528dc2fd6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe6765e4-dc65-402b-9e24-dd992790b116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f15696-2358-4a15-875f-8c77597bb952",
        "cursor": {
          "ref": "970c4ca3-f306-43e5-bd9e-d1d7899acd36",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "25e2f538-e406-44d2-bcc9-ba2b9efafe6d"
        },
        "item": {
          "id": "92f15696-2358-4a15-875f-8c77597bb952",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8abb182f-a8f2-4ce6-800d-8dc52671513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fad1aa-d22c-4828-b633-66b7c605f3ad",
        "cursor": {
          "ref": "66ef5f11-9888-443a-9aca-e760832e6c46",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e7ef937-7fb3-408a-8a8f-24856d8f5cec"
        },
        "item": {
          "id": "b0fad1aa-d22c-4828-b633-66b7c605f3ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "72c4a418-dc5c-403e-a1fa-2bcb61fd8dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c7a03a-2480-4ada-a7b3-ac704d383909",
        "cursor": {
          "ref": "49bc1e80-3fba-486b-ac78-55138fbf8f69",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b16986e-aeff-4594-bd47-401ffe803118"
        },
        "item": {
          "id": "59c7a03a-2480-4ada-a7b3-ac704d383909",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0c082ca1-cd1c-4f4c-a3b3-49a11372ff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda7e902-0a6f-4db5-bb8f-e8f37c334c3b",
        "cursor": {
          "ref": "9897191a-6816-48bc-b8b2-cac04eb4dd2f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1ed6dea4-692f-4702-8526-cc8eb81e5670"
        },
        "item": {
          "id": "bda7e902-0a6f-4db5-bb8f-e8f37c334c3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1232182-8c0a-4ed9-b3f7-123248c8bf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf23464-9872-4fa1-943c-20f22724d528",
        "cursor": {
          "ref": "8fe70907-b6e4-4fb1-b08e-67ae7c933830",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "857958a6-ab54-46ce-8e1a-8925ae97756d"
        },
        "item": {
          "id": "2bf23464-9872-4fa1-943c-20f22724d528",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc9eb336-e9d3-4fc8-a2a6-07ff0d49566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b96af72-6809-4bec-98b1-08a4caceff66",
        "cursor": {
          "ref": "e4c6e86c-38db-40ce-9f4f-50ea2ebccff6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0698bf21-93b8-4dcc-acd7-93c8c7db4a66"
        },
        "item": {
          "id": "0b96af72-6809-4bec-98b1-08a4caceff66",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "56bd1c84-2ac1-4ca1-8f61-e3701888dd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b3ea5c-d318-4a6b-9ade-9e885aa3a8ed",
        "cursor": {
          "ref": "63c21f4b-de3e-469a-9dd2-ced7e722a6f1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06016da3-5408-4f1c-8769-0ab7076a2811"
        },
        "item": {
          "id": "98b3ea5c-d318-4a6b-9ade-9e885aa3a8ed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "95342000-6a38-41ff-8f88-06443a11e393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e27c042-d86c-4bfb-a2b8-61a82ef267fe",
        "cursor": {
          "ref": "395bf4f5-ca62-46b4-b595-c44062a517e6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "27fb1667-fbd0-4410-b573-76a7c530a703"
        },
        "item": {
          "id": "3e27c042-d86c-4bfb-a2b8-61a82ef267fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11f3a826-8909-443c-ba71-ae86ff585205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe844994-8e9f-4e46-b5e0-63a74945a378",
        "cursor": {
          "ref": "2c2ea53a-0f1c-4d45-857a-eec8ffa51881",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "141d2dee-5146-4604-9890-b8cc76a2a344"
        },
        "item": {
          "id": "fe844994-8e9f-4e46-b5e0-63a74945a378",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b9ad436c-c7b3-42d3-81d0-0d1bc5ee79b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd8f416-8a02-441b-837c-d4a4c9cfd505",
        "cursor": {
          "ref": "5ce9805e-aa8a-458c-b55a-d8221251f822",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c5b0723c-b890-4e30-a6b6-ae078917f4d6"
        },
        "item": {
          "id": "5bd8f416-8a02-441b-837c-d4a4c9cfd505",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a7a57436-26b6-4c34-969a-5024fbd3de9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92be6f1-30f2-4b95-9a19-25cbde244e76",
        "cursor": {
          "ref": "161f8cb1-a9b4-48e0-a76b-55039c4072fc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0345d9f-fd5a-41b0-8eaa-a9fd4c44d9a0"
        },
        "item": {
          "id": "e92be6f1-30f2-4b95-9a19-25cbde244e76",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "35e63090-50b7-4ba6-bf93-9b4b0271081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f415aebe-6326-49b7-91c8-ae1e3cdd7774",
        "cursor": {
          "ref": "bd7367e4-b802-47cc-8a41-09d738bbca61",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "47615ea8-048b-4de0-a775-b5c593816c68"
        },
        "item": {
          "id": "f415aebe-6326-49b7-91c8-ae1e3cdd7774",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "543642b5-b18f-40f8-9bc4-c86ce20018da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec0f289-a510-400f-bbc3-ae72dac4655c",
        "cursor": {
          "ref": "15f7af21-327c-4a23-829f-a709685195fc",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6c943e99-89b8-4966-99c3-c0c8c4f0b375"
        },
        "item": {
          "id": "5ec0f289-a510-400f-bbc3-ae72dac4655c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a74375bf-478e-4265-914e-7c678325424e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0df6b96-8748-4801-ab6a-837943c2f462",
        "cursor": {
          "ref": "dfc9d104-3337-479b-a841-90e9ea403cca",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1093966e-c40f-4bfb-bc04-f2b18966d134"
        },
        "item": {
          "id": "e0df6b96-8748-4801-ab6a-837943c2f462",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "67583af2-35e2-4621-a0df-e32cac664946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6adf77-693d-42b9-a032-96a92083afc5",
        "cursor": {
          "ref": "8ae81c45-04c9-48c8-a22d-a15137fdbe37",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0ff874d7-3fde-4807-8289-b23e1820eb82"
        },
        "item": {
          "id": "4f6adf77-693d-42b9-a032-96a92083afc5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a85a2899-0f3c-4389-81b2-51b806ef6dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2b88be-2d70-423e-bc78-4f981c9edba5",
        "cursor": {
          "ref": "50337f12-25cd-46eb-93c6-52d319cb5792",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c27e2f8c-c988-456a-81fc-f097d9e89b7c"
        },
        "item": {
          "id": "3e2b88be-2d70-423e-bc78-4f981c9edba5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b9518f9-b19b-4665-8a48-e6412e84d894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcf40dc-167c-4691-881e-02d097cb4fd4",
        "cursor": {
          "ref": "18f07ce9-ec6d-46ca-8adb-6d0859e2e23b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d9a613e5-97e7-4c5c-8749-7253db9bd320"
        },
        "item": {
          "id": "8dcf40dc-167c-4691-881e-02d097cb4fd4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7518245a-b6e0-4331-9b0e-41e5cc9fc217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72274c50-ae4a-4fd6-ae46-534ace1a8355",
        "cursor": {
          "ref": "41129b7f-08a9-47d6-91da-c9d17d9d30d3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9fae90e3-8381-413d-8203-42542092feb8"
        },
        "item": {
          "id": "72274c50-ae4a-4fd6-ae46-534ace1a8355",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b3179dcf-f8fc-4af6-a6ef-939030e6409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab049e1f-67c2-4d10-a81b-5b510ac3ef66",
        "cursor": {
          "ref": "c9a7750c-b593-4802-a932-1143840fc8ec",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4f547cab-b125-42fe-bd1f-a451383fe4b8"
        },
        "item": {
          "id": "ab049e1f-67c2-4d10-a81b-5b510ac3ef66",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "087762fb-5214-48ad-b708-1d30eac918f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69d3b30-5f40-4273-95ec-543d7cb658ab",
        "cursor": {
          "ref": "389f7a26-ab5a-4aaa-9644-7f2ae2569bf6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6e5d62e4-82bc-4f92-9f62-32f23926d4a6"
        },
        "item": {
          "id": "b69d3b30-5f40-4273-95ec-543d7cb658ab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cf056a71-855e-484b-9e5e-cb0b2354fd26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8b5f6b-3b07-446a-afc8-8dfda27cc79f",
        "cursor": {
          "ref": "5446c033-500f-4c05-bb3e-41410a6d72f9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a2295977-60c0-4c6b-a00f-ec955e65adc1"
        },
        "item": {
          "id": "dd8b5f6b-3b07-446a-afc8-8dfda27cc79f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "19cd619c-bfed-496f-b3a2-e4e1a2618fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41886e62-64b5-4f77-94fa-f935b74ee7d4",
        "cursor": {
          "ref": "ca3a7757-6087-4c69-81be-6b131945b39c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a3dbaa59-785c-44e3-a25f-7545ddda0427"
        },
        "item": {
          "id": "41886e62-64b5-4f77-94fa-f935b74ee7d4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7aec55b5-bca7-4cf0-8781-c104d1bf876f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0333f0a6-0a42-4bd0-a568-d9bac422bb7d",
        "cursor": {
          "ref": "95557567-36cf-46c2-bbc8-c04164005d2d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b07db5b6-579e-436b-abe0-5320e5547b1a"
        },
        "item": {
          "id": "0333f0a6-0a42-4bd0-a568-d9bac422bb7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b8230f01-1014-4d7a-a59f-1d52002e9838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761e6117-5e4b-40f8-9b74-76a2b927e9e0",
        "cursor": {
          "ref": "1cef4bf6-9b75-40ef-a1a3-d56f49ae6d52",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a7e7e2c5-7c13-47a3-a074-d22bf524ef57"
        },
        "item": {
          "id": "761e6117-5e4b-40f8-9b74-76a2b927e9e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c4b63007-ff7e-4e04-8a92-85add20b1f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7bd5ca-c0f1-45f6-a665-bfbbc6952de8",
        "cursor": {
          "ref": "5ca0e53a-b6cc-448e-9b16-07d4a4300aec",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "33782e5f-d72d-4dcf-a158-cfefc72ed0f4"
        },
        "item": {
          "id": "1f7bd5ca-c0f1-45f6-a665-bfbbc6952de8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82affba7-a0c1-48e9-847a-e2ae4bf6083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9447bdb-3e1c-4205-8560-220898fe84c0",
        "cursor": {
          "ref": "02fadc4f-74ca-4adc-95d1-dabfbe15463b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6bd392d0-5734-4039-9748-cef0ade96154"
        },
        "item": {
          "id": "f9447bdb-3e1c-4205-8560-220898fe84c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f5989c70-0552-442d-b954-2736f14db7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9143fe1-da27-40fe-a9ef-b3d2aa6b38b9",
        "cursor": {
          "ref": "0f1cec38-0f05-469f-897d-6f457d88ca76",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a5d3097-3d72-4821-9503-36d9444cc296"
        },
        "item": {
          "id": "b9143fe1-da27-40fe-a9ef-b3d2aa6b38b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5373b01f-3a46-4b8b-b1e7-98e0c752e8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea530465-4dca-4edc-9c4c-c12a319c4999",
        "cursor": {
          "ref": "8479e690-3863-4816-b5bb-c48b22161441",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "66d1e3ee-5688-48f9-a6d3-e6d87a427ea6"
        },
        "item": {
          "id": "ea530465-4dca-4edc-9c4c-c12a319c4999",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f569bc4b-de7a-47a6-9da5-81335629c8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f64357-1ec3-45bd-a981-50fcd70013b0",
        "cursor": {
          "ref": "452b723a-6125-42ff-8763-01e88cc07b5a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d8682a87-224a-4b1f-9cde-2f9814f18447"
        },
        "item": {
          "id": "a1f64357-1ec3-45bd-a981-50fcd70013b0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea966e0c-ce1f-4658-8982-63123dca7eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2271c777-bd63-42c7-9e07-b326ff1004e3",
        "cursor": {
          "ref": "630fe5d1-3f0f-4425-96a1-13c112baff62",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "41a2428d-7dd9-40b8-89ba-321e51389912"
        },
        "item": {
          "id": "2271c777-bd63-42c7-9e07-b326ff1004e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d3a1bcb9-d0fc-460f-b7e5-a26d70013587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638f70e-f8c2-4e8b-8047-3f22f8fbabbd",
        "cursor": {
          "ref": "bc02a899-b07f-477b-a6c1-b8676cc22360",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb8dcc27-d40e-48d8-ab82-2ea10eeb4afc"
        },
        "item": {
          "id": "a638f70e-f8c2-4e8b-8047-3f22f8fbabbd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc66bb25-5fb4-4e74-b1f4-b7d4bc95d170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebed1453-60ce-4af0-bbd0-380151f7f30a",
        "cursor": {
          "ref": "5b8887c5-0e47-4588-9066-3ba07c2ad9b1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6cd624ed-bd4c-413b-8205-2ac18471c827"
        },
        "item": {
          "id": "ebed1453-60ce-4af0-bbd0-380151f7f30a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0d98de67-f94b-431c-94af-d265c18a82ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8a75be-a4fe-482b-aa43-0540cd32158b",
        "cursor": {
          "ref": "28c915be-798a-4854-8d9a-6f581e17b9c6",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "18357cd6-fc2e-4d67-a068-dd70fc9af4fd"
        },
        "item": {
          "id": "ad8a75be-a4fe-482b-aa43-0540cd32158b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ac3ed80-e900-4444-b142-0ea7780b513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8573ce57-6d59-41b7-af67-0726f60db2fe",
        "cursor": {
          "ref": "0450ead9-1d1e-4a06-92f1-2f69b7b42c7b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "482fc8b0-f9e6-4f51-b27e-fe6d04eaa7f0"
        },
        "item": {
          "id": "8573ce57-6d59-41b7-af67-0726f60db2fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "73f9cfca-dcba-4052-b0d9-5adc753df4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1893be-8564-4ea4-b3e5-307a1f93f886",
        "cursor": {
          "ref": "d0ec218a-b8a9-44d4-a567-50c16093acd0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a5b874b-a27a-48d6-9a7d-556af9d9627f"
        },
        "item": {
          "id": "9e1893be-8564-4ea4-b3e5-307a1f93f886",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e0ec225-e1da-4e1f-a39b-7ddff386524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b8cc72-9b2b-4e66-aefc-4062f495e8e1",
        "cursor": {
          "ref": "341459d7-23eb-45ce-bac1-87c2687cc19f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cd474712-7c03-4c31-adb3-1e03150f1cb1"
        },
        "item": {
          "id": "34b8cc72-9b2b-4e66-aefc-4062f495e8e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3bcf3d0c-1454-401c-8083-80b866b6a5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db37a746-83d8-4353-9673-d10362ae4a3b",
        "cursor": {
          "ref": "9c0eb46e-c85b-4210-b3de-779a26428048",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bac15cae-c2f5-46ae-8d6e-c38ffde5a3a5"
        },
        "item": {
          "id": "db37a746-83d8-4353-9673-d10362ae4a3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a24fbc2c-43ca-42ba-b7da-e1ba4b0d4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9461d-22a6-4acc-8c2b-81ec4ac71fa3",
        "cursor": {
          "ref": "a68390d0-bffb-4fab-8981-3a6e5abeb714",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "080d97cb-4ec7-4eb1-b076-ef91dee7730a"
        },
        "item": {
          "id": "e3e9461d-22a6-4acc-8c2b-81ec4ac71fa3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1ecdd3ea-a5e4-4343-a528-771c4cfc0d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d72637-a9dd-4c8f-ae04-ee3f228e8fe0",
        "cursor": {
          "ref": "b9154a07-b9ab-4d63-b9a3-50f95488e61e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c25d70a-58a6-4996-b7ae-92f314dc8aca"
        },
        "item": {
          "id": "c2d72637-a9dd-4c8f-ae04-ee3f228e8fe0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f098e838-eff2-486c-b2d2-910588a5cc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fb88d1-7f8c-4c54-a7e5-c11512535d46",
        "cursor": {
          "ref": "0f833d59-3862-45c6-8d74-488611c6a5da",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "057c65ed-3661-413b-a0ee-8cfd38667499"
        },
        "item": {
          "id": "06fb88d1-7f8c-4c54-a7e5-c11512535d46",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "339e7741-1ada-4c0b-9140-60f37d41fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6464665-8855-40a3-bf5e-055b6dffd067",
        "cursor": {
          "ref": "aaf62ce1-2cfb-4619-b3f5-a3f84ac8a4a6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cbd56559-da57-419c-84b9-918073be92c3"
        },
        "item": {
          "id": "d6464665-8855-40a3-bf5e-055b6dffd067",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e7f66491-11ca-4462-917e-a7d089011575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e846ec6c-c022-4227-a72d-d4d72ee4fe94",
        "cursor": {
          "ref": "7ccf76de-dcc1-44d7-a4bc-62da2d22a750",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3a2bd08e-37c9-4a69-9bc0-6ab46770efa5"
        },
        "item": {
          "id": "e846ec6c-c022-4227-a72d-d4d72ee4fe94",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fe03a82e-cce6-44e7-8556-e83b716bd2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ecac10-cccb-4f4c-86fe-a20ec675ee24",
        "cursor": {
          "ref": "393ac626-a280-4fe2-8731-17df1aaddcf8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a59ba16-cff5-47d8-9df6-838c246d7f9c"
        },
        "item": {
          "id": "81ecac10-cccb-4f4c-86fe-a20ec675ee24",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad402d46-c3f1-41c0-8e5c-1198c8fdb513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe12f72-3ca7-43aa-a05d-0b246b3f26cf",
        "cursor": {
          "ref": "ae0e3c9e-85da-4549-9b1b-37e7bbd64d4c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "457bc8fe-ec8b-4c8e-8a9c-ce5c4694b7ec"
        },
        "item": {
          "id": "ffe12f72-3ca7-43aa-a05d-0b246b3f26cf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a760bfa-d3f2-4d1c-86a8-847a48eebbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c2a565-56b8-476f-ad38-8ed76c4ca4cb",
        "cursor": {
          "ref": "4265bba6-17d5-4e8c-b85e-0653f2cc1ac2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8cccdf37-6e32-4094-ab7c-a90132ff2733"
        },
        "item": {
          "id": "84c2a565-56b8-476f-ad38-8ed76c4ca4cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "85ff1de9-5eaf-479a-b055-5778560d4aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467c82a0-ffa9-4f3a-a676-7b39d1b6d142",
        "cursor": {
          "ref": "d1a18dbc-4558-4067-81ac-933fac09c875",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aa7375d3-94f4-4a69-a498-0fbda9b563fc"
        },
        "item": {
          "id": "467c82a0-ffa9-4f3a-a676-7b39d1b6d142",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cd73c91b-d45c-4cd7-a043-17bca4c2e442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c1dcfb-92d4-4128-a98c-fe7d8d81908f",
        "cursor": {
          "ref": "62d253f9-533f-4b1a-a841-e33f8f89c0b9",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "83adbb86-c41e-4e00-8caa-d832b3896ec9"
        },
        "item": {
          "id": "67c1dcfb-92d4-4128-a98c-fe7d8d81908f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "51adb61b-117d-438a-b98b-161105d7e546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bcfd68-3ceb-43eb-ad1b-fe5aab3bd67e",
        "cursor": {
          "ref": "6aebf189-16c4-45f3-b8ab-95e77e5c2f08",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3e1b313f-80dd-49e0-ae6a-696e28c80ef5"
        },
        "item": {
          "id": "59bcfd68-3ceb-43eb-ad1b-fe5aab3bd67e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "04775dbb-7a57-451f-84b3-692267198db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5123b6-8ce5-44d6-a0d9-92d5a06dfb73",
        "cursor": {
          "ref": "7d4648f7-d112-4883-8eae-5e483958d15b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "366527f6-fcf0-4b16-87af-0c3b2b40fa3d"
        },
        "item": {
          "id": "fb5123b6-8ce5-44d6-a0d9-92d5a06dfb73",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c29bec39-3a9d-4e8b-b9d7-f4b43e184077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d208923-6809-4764-8122-3814aab6f9bc",
        "cursor": {
          "ref": "a94a5d11-a325-443e-9c41-21d8e9d9e8c7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a74832b9-a91d-4fc9-b72a-1209985eee31"
        },
        "item": {
          "id": "3d208923-6809-4764-8122-3814aab6f9bc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c05861a-7f06-40ea-a021-86adcb0ba618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb93600-b660-4385-b459-f8e20f3b4866",
        "cursor": {
          "ref": "97dc5d05-776a-4c7d-a62a-3dae46e9a1af",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "71cbd6ef-9bba-42d1-909c-42dfb4faac30"
        },
        "item": {
          "id": "abb93600-b660-4385-b459-f8e20f3b4866",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ce9f9c98-f692-4e38-bbed-d42bb656a378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545039cd-93ee-4373-8af5-b60d3e4cf8a1",
        "cursor": {
          "ref": "e103bd36-cbdb-4972-95d9-0b14c9cd6763",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "584d0c9d-46ca-46ee-9436-198cc19bafa7"
        },
        "item": {
          "id": "545039cd-93ee-4373-8af5-b60d3e4cf8a1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5916340a-f2e2-4246-aa12-a8f423f67be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f52b540-4ae5-4070-8ad8-74a5ddc1d5c3",
        "cursor": {
          "ref": "d40c0833-1c89-4ad9-bc6c-735232a94d3d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "58516f45-5fad-4349-bdf4-4ad403ba075a"
        },
        "item": {
          "id": "2f52b540-4ae5-4070-8ad8-74a5ddc1d5c3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4a2c9282-ff46-4dc6-a212-5e283c18ad3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3138978-734e-4340-966b-cc167095d971",
        "cursor": {
          "ref": "f19f4c8b-53c6-4b6e-84ee-e29265ac1783",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2918c29d-4059-4dd7-8d98-d193a9a9944d"
        },
        "item": {
          "id": "c3138978-734e-4340-966b-cc167095d971",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2044df7e-9777-44ce-ba40-461ef270c2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2d7936-da59-40bd-a6d2-fb0e84261348",
        "cursor": {
          "ref": "4c8a904f-df02-4303-b305-147c60b2f97e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9d329c91-080a-4920-acdd-8a83fadc171b"
        },
        "item": {
          "id": "fa2d7936-da59-40bd-a6d2-fb0e84261348",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "91b99fb3-223f-4d7c-95fc-fc6ab2f71f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be8fdb-55fa-42a7-b40c-498bec993e5a",
        "cursor": {
          "ref": "4318a4fd-0bbe-44f6-948d-66641f863dac",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "57f55e59-f598-4e41-9f1a-e2e334757f9f"
        },
        "item": {
          "id": "a3be8fdb-55fa-42a7-b40c-498bec993e5a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9e8a578e-a137-4440-b0cb-f5386c8e5e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84507cea-d4e6-4e10-9b64-24af947ba975",
        "cursor": {
          "ref": "2662bb6d-6517-4c17-8397-4de800419580",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "275f21e5-179e-470f-a2e5-c039504c2d22"
        },
        "item": {
          "id": "84507cea-d4e6-4e10-9b64-24af947ba975",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "77ab7b1e-6b20-4d2b-aa6d-1a73f7b62ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f7269-3c50-4b1b-af4b-66d58ac2c117",
        "cursor": {
          "ref": "713fbebe-485d-46ed-afb2-d296c8c2bf0f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "adc2d864-a94b-4727-b3c1-652494433103"
        },
        "item": {
          "id": "cb7f7269-3c50-4b1b-af4b-66d58ac2c117",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49f5c3a7-9a83-4b32-a3a8-5b9988870398",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7af173-1a23-474e-b87b-21904de4d9c3",
        "cursor": {
          "ref": "231bee48-9b91-42ba-b3a0-3db8cb5e825e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc676e61-319e-4cf7-b0c1-284d6fa3b125"
        },
        "item": {
          "id": "7f7af173-1a23-474e-b87b-21904de4d9c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "97956590-88c2-4194-b83d-56c238e32c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987e3ad-2afc-49f7-92b6-b722e15e880b",
        "cursor": {
          "ref": "81db764e-5069-4340-bd61-a606d6518ea8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1876a33a-60f3-4680-8c97-0e5b3c315852"
        },
        "item": {
          "id": "d987e3ad-2afc-49f7-92b6-b722e15e880b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "40ae884e-9d78-4131-8ab1-0490183ff41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab5930a-fb33-4035-b0fc-0c5615e15c8c",
        "cursor": {
          "ref": "e93f328b-b1f4-49e2-a1b9-bf598d537e29",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13b6c743-b1b6-46f6-803d-27e27ceb7fe4"
        },
        "item": {
          "id": "cab5930a-fb33-4035-b0fc-0c5615e15c8c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "94d2ca07-5109-4230-a24b-5439f7bf6833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa28ad-91e2-4269-8faf-dbf89c074aac",
        "cursor": {
          "ref": "a1b2a6c7-2666-4e87-a3d0-8d2179a8b10d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "34d9d368-edde-42a5-87cc-20e7fbba7520"
        },
        "item": {
          "id": "22aa28ad-91e2-4269-8faf-dbf89c074aac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "218d33f4-f6f2-4f29-b9e2-83686073b5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4ef341-a9d3-433d-8919-c00dc46c561a",
        "cursor": {
          "ref": "e6371cd1-6b7a-437a-8b7f-a45f4552af3e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2bf27312-d1ff-472e-a3d6-e62f0c02c6b5"
        },
        "item": {
          "id": "ec4ef341-a9d3-433d-8919-c00dc46c561a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "22bfcb85-672e-4ed4-b905-bf320053866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d8bb07-a5f0-401b-90e0-47ca20561ceb",
        "cursor": {
          "ref": "e7f56cda-6661-4b74-8b40-464e0833950e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3c770c6b-9c0c-4c4e-b2e4-52ec633459c7"
        },
        "item": {
          "id": "89d8bb07-a5f0-401b-90e0-47ca20561ceb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e2ea558-242e-43c7-8d54-e98e83a479ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eef62cc-745d-4222-b0a7-34ffe8870cd3",
        "cursor": {
          "ref": "81d34033-1693-467d-8d5b-ed20541be1f6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f5a30110-cbae-49ab-a444-18c61dc7d598"
        },
        "item": {
          "id": "8eef62cc-745d-4222-b0a7-34ffe8870cd3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "11b412d6-2932-4dc1-a5b2-80d2dfa4421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654f131b-cab4-4249-8518-55af158dca86",
        "cursor": {
          "ref": "0e315f4a-e03d-4fc1-885b-07c8755db100",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2f1c07ed-9845-44df-aca2-8fa14ce8789b"
        },
        "item": {
          "id": "654f131b-cab4-4249-8518-55af158dca86",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "25159927-fc23-4b42-bf56-8adf8ebb663f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47a4c4c-a904-4c37-ac56-7deab294ef15",
        "cursor": {
          "ref": "22324d93-18d3-4f4e-8cba-cf76ea01b7ec",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1c971b9f-303c-4511-9815-183c0195ac45"
        },
        "item": {
          "id": "b47a4c4c-a904-4c37-ac56-7deab294ef15",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8d2a8ad9-0882-4be3-9beb-4db1cc2ca19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b938cf24-6957-41cd-b93a-085865cd8e87",
        "cursor": {
          "ref": "d676834c-84ea-4ae6-8110-e9b4f3884220",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e09c5963-9181-4039-ae9e-6afb63ad3aeb"
        },
        "item": {
          "id": "b938cf24-6957-41cd-b93a-085865cd8e87",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5b606ea1-c4cb-42a9-adc3-9c23504a2b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75de2861-47c5-4958-bbec-bf613347cce8",
        "cursor": {
          "ref": "e9662512-e41b-4b59-8058-9e379ef1274a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "889743ac-ad4d-41ff-92bd-32ab1c99802c"
        },
        "item": {
          "id": "75de2861-47c5-4958-bbec-bf613347cce8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "52b02b89-65aa-48c7-b6af-14297d18b05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748df246-91e4-400a-a1b8-15c730c00bad",
        "cursor": {
          "ref": "19b09bab-df97-4500-96f6-afd5442f1bc2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b818b1f2-3189-4e53-8c42-af47a8431569"
        },
        "item": {
          "id": "748df246-91e4-400a-a1b8-15c730c00bad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4224ed5-f9f6-4c24-8a99-9dab0d549388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4191d5-c29c-4d65-80e3-11bdd3da7c1c",
        "cursor": {
          "ref": "162977b4-a3c2-4d8b-a8dd-f9b17a753a4b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd8f3a9d-4b77-4515-9d68-8372a47831fd"
        },
        "item": {
          "id": "bf4191d5-c29c-4d65-80e3-11bdd3da7c1c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5671128a-59e9-4a22-9869-b836933804a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aff0b6-b099-44a6-8216-173192d22f9d",
        "cursor": {
          "ref": "5aa8bf0f-abeb-4568-9987-4004656481d5",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aadefabd-a804-4b72-9515-8ceb892a460a"
        },
        "item": {
          "id": "11aff0b6-b099-44a6-8216-173192d22f9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "523234de-ad1a-4691-86da-22f826a0692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479948dd-696c-4a08-8e75-7c90220356e0",
        "cursor": {
          "ref": "a061797b-5159-4228-9b71-20ba3fe5ebf8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a183d771-c76f-4e05-8b17-04005d46b5fb"
        },
        "item": {
          "id": "479948dd-696c-4a08-8e75-7c90220356e0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e8815957-96d8-4e09-9c4d-e523d0e1ab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289ab90d-4ea4-4bed-9293-5c18231f3f38",
        "cursor": {
          "ref": "70bb380f-55b5-452b-a90d-16ed97b38a3f",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b65eeb38-e79b-447b-a5ab-eac5e0447993"
        },
        "item": {
          "id": "289ab90d-4ea4-4bed-9293-5c18231f3f38",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2177082-0207-4053-a57b-a061b72bd7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779f2baa-2547-4222-807f-7526130d4c66",
        "cursor": {
          "ref": "10b7e368-df41-4bcb-8be9-bf1e60435e92",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "504ee682-a53d-4e29-a286-4756b3f54062"
        },
        "item": {
          "id": "779f2baa-2547-4222-807f-7526130d4c66",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d78e954b-cfd6-42ef-95da-4085821e6964",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "74a4e97f-3d5e-4f68-8d50-bc2cbe4f646c",
        "cursor": {
          "ref": "57d8b796-d90b-434e-9a90-65bbc1c66bb6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d1fed52a-b8b5-4be4-bfc6-75acc99c5944"
        },
        "item": {
          "id": "74a4e97f-3d5e-4f68-8d50-bc2cbe4f646c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "67071bb6-00bb-4021-8795-861421c87270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a35d60-13af-4a24-8bad-32ec5aed1185",
        "cursor": {
          "ref": "54e3ed99-9ccb-4dcb-a994-4071dba2bc91",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6e5404cd-1c11-4c15-ae15-694c63832ebb"
        },
        "item": {
          "id": "a0a35d60-13af-4a24-8bad-32ec5aed1185",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a7cad3e3-ebda-48bf-9d0f-b0b6be78627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed6e652-b098-4f8c-9b60-9906d2c0a796",
        "cursor": {
          "ref": "313a6233-63d5-4bfe-91c3-a38ef8508578",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f01d81fb-11d6-45e9-bed1-ccb0d9b517c5"
        },
        "item": {
          "id": "bed6e652-b098-4f8c-9b60-9906d2c0a796",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b8d747ac-0592-4f07-8f1d-89010a0e2ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60283d53-8a98-4107-8bcd-44ce7a54e151",
        "cursor": {
          "ref": "494827f9-2a0c-46d8-985e-84ae9be5b7c8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6cdf9b68-13ee-4331-8495-710104a66864"
        },
        "item": {
          "id": "60283d53-8a98-4107-8bcd-44ce7a54e151",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c914144-720d-46f8-8036-a214a47d2796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f02f51-ab7d-4a03-a721-208a6524135e",
        "cursor": {
          "ref": "32494900-88f6-4b3c-98df-531561b3e67d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0e210e16-1ff7-4ea9-8f84-f82cf96a9856"
        },
        "item": {
          "id": "d7f02f51-ab7d-4a03-a721-208a6524135e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e92ba6cc-8330-4ba9-8e45-579d77a4744b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e632adeb-cc05-4df4-8313-0a74aad88d1e",
        "cursor": {
          "ref": "b6350325-6c85-49e6-9c8b-10cfcb9a714e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa7ada86-b6ed-48d9-96ca-0ee64227b7e6"
        },
        "item": {
          "id": "e632adeb-cc05-4df4-8313-0a74aad88d1e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "84f1cd0f-90e0-440f-942c-22222783dd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fe53b9-9c85-4ab1-ac3a-5ddc0556fe9d",
        "cursor": {
          "ref": "04bc23d3-b1d7-4bac-9436-97b04361d143",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d68f64a-3eb3-4027-83f5-9889853ab4a2"
        },
        "item": {
          "id": "04fe53b9-9c85-4ab1-ac3a-5ddc0556fe9d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ae8eb7f-f281-4401-9a71-f7452e128221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0271be-6c05-4a55-9841-fc798a673066",
        "cursor": {
          "ref": "0233d8a0-cee2-4777-b210-81e08c001117",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "120de9ed-fac0-4e2f-bfa8-f534e0300ba8"
        },
        "item": {
          "id": "fd0271be-6c05-4a55-9841-fc798a673066",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5dd95228-d890-4dd8-855e-384c58c06aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac638e1-d103-44f7-b1dc-d41877d4964c",
        "cursor": {
          "ref": "2001d3b7-790f-4855-bdd7-1ebbcc1dc4cc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a261382c-fb8d-4d41-8f5e-8d64a6c6af0f"
        },
        "item": {
          "id": "6ac638e1-d103-44f7-b1dc-d41877d4964c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "623ae330-12dc-4ff6-bfb2-ea0703a47780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13e8fa6-7c49-4bad-af12-f918ddf0ccaa",
        "cursor": {
          "ref": "ed3e9567-5899-4856-8d98-454f72f883e0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9487d815-e58e-4b77-a7d9-1c9fc4773d56"
        },
        "item": {
          "id": "d13e8fa6-7c49-4bad-af12-f918ddf0ccaa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0cdbcd3e-ba92-4108-a1cf-6b7fa8a8f8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cf0334-0752-4758-a029-6a10a5ffc3ec",
        "cursor": {
          "ref": "80eeb567-4e2d-4d7c-adf7-144a0936ec2b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0150a372-b9bc-4a49-8faa-400683b45672"
        },
        "item": {
          "id": "13cf0334-0752-4758-a029-6a10a5ffc3ec",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e273a701-ff50-455e-9b73-27cffbb707c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c69edc-46db-4ba5-92b7-229abdfb2757",
        "cursor": {
          "ref": "2458215f-36de-4901-a6c9-5e296c0abb03",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4889ccda-d7af-4253-86e5-773ec3890b06"
        },
        "item": {
          "id": "30c69edc-46db-4ba5-92b7-229abdfb2757",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "32906a33-3ab6-4eaa-9585-01e7f05a324f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd936c9-2797-48ed-b726-e0591a668b23",
        "cursor": {
          "ref": "99c6128b-e31b-45e0-86ea-67972a720ca4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72749f75-7789-43f6-8bd6-32f54968e2a1"
        },
        "item": {
          "id": "7bd936c9-2797-48ed-b726-e0591a668b23",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "14741004-fa0e-45ac-88b8-b47d469a1576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73bb3c0-6afe-4527-9b5e-5616990be022",
        "cursor": {
          "ref": "e3efad01-98cb-448d-b87e-91800be19e17",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "89816915-8409-4d35-834c-520ff91231b4"
        },
        "item": {
          "id": "d73bb3c0-6afe-4527-9b5e-5616990be022",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6a857c56-5397-4c1a-b37c-787cd1616229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be276857-7e42-481e-a223-f347c3963135",
        "cursor": {
          "ref": "6fe968c6-abda-47e1-a20b-4403913168a5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c3704abe-b005-4dd5-9b35-391d989bf6e2"
        },
        "item": {
          "id": "be276857-7e42-481e-a223-f347c3963135",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0331e944-6495-4b1d-8142-97d944350df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aae78f-4226-4ac4-af68-548951c73d41",
        "cursor": {
          "ref": "623fb44c-f994-423d-966e-a39a902cd53a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8c72082f-7ed4-416d-bf02-329a1662ee4b"
        },
        "item": {
          "id": "61aae78f-4226-4ac4-af68-548951c73d41",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6e4d300f-9a49-4c9b-9dad-4bccd9aa9071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517ba868-e414-4df7-93be-0b40cda5406b",
        "cursor": {
          "ref": "ac66fc9b-cd26-4360-96c0-296113891180",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "37228d6c-43e5-4551-8cdb-6d2c701aff97"
        },
        "item": {
          "id": "517ba868-e414-4df7-93be-0b40cda5406b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9eabbe86-9ebc-40b9-b8aa-dfe3ddc05668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2ddedc-8f6f-42b4-8845-802e363c2917",
        "cursor": {
          "ref": "d9ea7b7b-4bf4-46c3-b818-d25d5a21c7ec",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0a70e6fa-d9f8-4573-a92b-833e1d191244"
        },
        "item": {
          "id": "0b2ddedc-8f6f-42b4-8845-802e363c2917",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "743b54ef-402a-454b-8594-f6d8083b5a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abd5c16-b81c-4c5a-9f10-8e41f88f7f44",
        "cursor": {
          "ref": "126e1a67-fdfe-470f-a319-5096883cb92b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "947377f7-0ece-4bb1-bd2a-d42390e8c09b"
        },
        "item": {
          "id": "7abd5c16-b81c-4c5a-9f10-8e41f88f7f44",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "90572338-f2bf-4055-b090-bf344b90b6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d562070-e135-432f-b336-ef53fdbb0c27",
        "cursor": {
          "ref": "89f8b40b-2254-4206-a4d3-d50525d4eb52",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "064fdbbb-46af-47b4-8f30-a73a9897e53f"
        },
        "item": {
          "id": "2d562070-e135-432f-b336-ef53fdbb0c27",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "953ee7dd-da45-4bb1-9dae-b13e81c8da90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e195ac39-b9c3-467a-959b-371f1915e401",
        "cursor": {
          "ref": "7bac1528-53a1-42c1-94a8-b738330b6a17",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "95ee5117-151e-4316-857a-8b6835e514aa"
        },
        "item": {
          "id": "e195ac39-b9c3-467a-959b-371f1915e401",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7ca44959-8f49-40a2-a1e9-ce43c047d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f08e9-f0d6-44fb-85dd-1e36a854b6f1",
        "cursor": {
          "ref": "30374233-3c2c-4cbe-b048-2130ad9c9fa4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3d2e2cc1-727a-4245-a6b9-207afcd911e4"
        },
        "item": {
          "id": "c11f08e9-f0d6-44fb-85dd-1e36a854b6f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "23f4f1da-a042-42d4-a739-6952e7abdfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5585a44-81c4-4696-be5b-69dafd1371cc",
        "cursor": {
          "ref": "36c9e644-5cb1-4053-8230-ff549f9ee22b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "831acf63-9513-4daa-bbf2-e20e2b8d6542"
        },
        "item": {
          "id": "e5585a44-81c4-4696-be5b-69dafd1371cc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "35c1922f-5691-47dc-806c-95c83d8157bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9416ad08-4f91-4137-8ce9-40e7c59a8ea2",
        "cursor": {
          "ref": "ffc91e18-d283-459d-9f5e-20a74ab54597",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6bb006f8-f0ff-4f1c-a60d-3c3c67ff7b1c"
        },
        "item": {
          "id": "9416ad08-4f91-4137-8ce9-40e7c59a8ea2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "df95c88f-f21b-42f6-a424-019b5dacede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176cfe7-7488-45cc-a693-7752709a98cf",
        "cursor": {
          "ref": "49584132-de6e-48b3-a242-62a284c2347c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eda8106f-fa51-49db-8b57-82a81385c261"
        },
        "item": {
          "id": "4176cfe7-7488-45cc-a693-7752709a98cf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d3c4550e-d383-4ab7-8fe7-c899c5323d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708d1374-c32d-4fc6-bb39-47ca93cbd050",
        "cursor": {
          "ref": "01c0a52a-f161-4817-8219-adc16c9a21e8",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f85901bd-addb-4818-9e59-d4c95a2280fe"
        },
        "item": {
          "id": "708d1374-c32d-4fc6-bb39-47ca93cbd050",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21433614-2627-4be6-826c-f742a603a8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5642cb13-0e09-45e8-951e-74284f05d901",
        "cursor": {
          "ref": "79e1a28c-6fbf-407c-957f-536113e09d18",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dafc7949-ee86-4f58-8d8a-b08c27ed6300"
        },
        "item": {
          "id": "5642cb13-0e09-45e8-951e-74284f05d901",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f1d34b7e-ac6a-4828-9ab8-22f52509a26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f83c65f-4651-4d96-8913-f57f0af461dd",
        "cursor": {
          "ref": "1d6bd984-0ea7-43cd-8627-5d348b649e48",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8862e471-b553-42c8-8324-86886d3ad60d"
        },
        "item": {
          "id": "1f83c65f-4651-4d96-8913-f57f0af461dd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "87bb6e6e-eeeb-450c-9732-0fc469e1dc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac0f4e9-c6ae-4588-a7b2-da6cb51755eb",
        "cursor": {
          "ref": "8bb4edf7-1e01-4cf2-ac67-30ac973f3171",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9a5920bd-a5f1-46ac-9b52-1b8e14bf17af"
        },
        "item": {
          "id": "9ac0f4e9-c6ae-4588-a7b2-da6cb51755eb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "92790feb-e25f-4855-a857-ed8cd248aa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301ee4a-ab95-4f4b-9cb0-799245055b3d",
        "cursor": {
          "ref": "810883c9-ea60-480d-ba28-9c6f05be372f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e218a3ed-885f-4d0a-ac6a-b657f8c38ef7"
        },
        "item": {
          "id": "c301ee4a-ab95-4f4b-9cb0-799245055b3d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "26fd987b-2054-4785-85f1-f1aeb1b91c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3cfdbf-fe58-4734-963f-6438381fe74e",
        "cursor": {
          "ref": "6b5b1769-4ee1-472e-b30c-4cbc61039dc0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3834e679-28c7-4d70-9a7f-c702c7f48703"
        },
        "item": {
          "id": "cf3cfdbf-fe58-4734-963f-6438381fe74e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5b4478dd-3113-4190-bec9-462ddb451b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b3d129-bef0-460a-bc66-908f5eab5f96",
        "cursor": {
          "ref": "158ae252-382d-4dfa-a8ca-3b628f4210e0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2c24c816-59d0-46f8-bdea-9529427612a0"
        },
        "item": {
          "id": "98b3d129-bef0-460a-bc66-908f5eab5f96",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1b34d5bd-26fc-4289-a543-ab54cf72273f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dbb2dd-26a1-4a78-b316-a84198f250fd",
        "cursor": {
          "ref": "6bae3442-553d-49c0-b1d0-c8d5aaf1d096",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1c6f36cf-6410-4db1-93e0-46b5afcf0128"
        },
        "item": {
          "id": "30dbb2dd-26a1-4a78-b316-a84198f250fd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "10ad108e-bd66-4df8-9156-46e975752515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1d2647-346a-4c56-baec-68a221ff18b1",
        "cursor": {
          "ref": "2faf77f3-3355-4758-abf8-f3208a45bb4f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e0cae172-6f80-4f37-8b0f-2d34b5409a98"
        },
        "item": {
          "id": "9b1d2647-346a-4c56-baec-68a221ff18b1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0d74fcd0-6b91-42f9-ae1e-e4e34041c418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086cfaac-989b-4e43-a9c4-fff18050ca20",
        "cursor": {
          "ref": "8f22d6b1-4278-4132-82aa-4f21b9a7fb4f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7c8c9b7c-b29f-4aec-a5cd-bbd6888d2a72"
        },
        "item": {
          "id": "086cfaac-989b-4e43-a9c4-fff18050ca20",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "293cb7be-f7af-4ed7-8d08-9d5b92b76eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1804d32-41d7-4f3e-9429-12f201c76281",
        "cursor": {
          "ref": "68ebf7c0-8d50-4905-b755-ea813c9bae90",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b7a79372-c9ef-4eda-857d-7dbfae5adf6f"
        },
        "item": {
          "id": "f1804d32-41d7-4f3e-9429-12f201c76281",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "70f9f77f-26d9-4744-9eaf-43f29e996b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2697139e-577c-4629-82cd-05912f1ba9c1",
        "cursor": {
          "ref": "f8c422a4-6bb3-4ce6-baa6-3027cf07ebb8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50a6b18c-f05f-45f2-9928-bace5e4546af"
        },
        "item": {
          "id": "2697139e-577c-4629-82cd-05912f1ba9c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8bf033d7-2e75-48f7-b075-6d557203f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158994f9-e202-4ce7-9067-54c4d21cf814",
        "cursor": {
          "ref": "da7c453b-3a26-4fe4-935c-1b3b55dee6d3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "13881416-b6cf-4892-bb00-5aa83fea074c"
        },
        "item": {
          "id": "158994f9-e202-4ce7-9067-54c4d21cf814",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f659db9-d7f7-4974-b1db-855b671527ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dbe2f1-c798-4649-8daf-5397afc7b35c",
        "cursor": {
          "ref": "604ab205-19fb-405f-ae0a-6d951ac15996",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7fea96e-6a18-43ba-86c9-c87297bbc21f"
        },
        "item": {
          "id": "a6dbe2f1-c798-4649-8daf-5397afc7b35c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c388beb6-0579-4909-b48d-31e00dc27413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07d36f4-2bb9-4c30-9975-7e256a38fec5",
        "cursor": {
          "ref": "984354c2-3afa-4231-9952-4c6c8e86bfb3",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cb3a8665-ff49-45d6-8c76-0753c50bbc7e"
        },
        "item": {
          "id": "a07d36f4-2bb9-4c30-9975-7e256a38fec5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3eee0e12-9322-4f75-bd0d-62ccd8981a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e675c9-7eef-4486-a569-1b10bf9ceb87",
        "cursor": {
          "ref": "eb5f8810-260c-44e4-b04e-8b388de48446",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57d39f63-0325-49b4-a38a-89a2f8bb788e"
        },
        "item": {
          "id": "d2e675c9-7eef-4486-a569-1b10bf9ceb87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b80c2f65-074a-486d-b753-3b2e4f3edfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe994e-7b2c-4862-af84-78b36467d291",
        "cursor": {
          "ref": "ab90a259-4db6-4b77-adf2-57807ef59546",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9ab44648-fe9a-445f-a076-68a2ecefc006"
        },
        "item": {
          "id": "25fe994e-7b2c-4862-af84-78b36467d291",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "016e6ac1-c639-46ef-870b-50795756040d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97044c4-b6d7-44a9-b72f-e63d3792b59c",
        "cursor": {
          "ref": "1014d96d-7950-4864-8517-d0ffe33c04bf",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c1c7b36-056e-41bd-a528-419446196d45"
        },
        "item": {
          "id": "a97044c4-b6d7-44a9-b72f-e63d3792b59c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5dff10b6-29b2-4e1d-876d-fa33bb5bbf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4721a6d8-a349-48bf-88da-34b67aa44146",
        "cursor": {
          "ref": "86f44f32-d957-45f7-9eb7-30dd9c5f9ab4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "19ea33f3-1a89-490e-9a53-9c81798f6934"
        },
        "item": {
          "id": "4721a6d8-a349-48bf-88da-34b67aa44146",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5970b53a-5a3f-458f-8866-f5b3ac13c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6cfe43-e4c8-44a3-8853-eb7f7edf814c",
        "cursor": {
          "ref": "b56681a1-3a5f-4680-8124-d0a07ac73d7d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b69be1f3-6f93-4780-97b7-a6f2b15c37a3"
        },
        "item": {
          "id": "3f6cfe43-e4c8-44a3-8853-eb7f7edf814c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b783152e-ff58-4334-9a89-d3b03fc44b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a7fb2-d158-4fe9-8058-3bc122164c30",
        "cursor": {
          "ref": "59767c9c-e63b-44a3-9f45-982760b3de61",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d55b6c96-b4d8-4f27-8987-ac004330b284"
        },
        "item": {
          "id": "032a7fb2-d158-4fe9-8058-3bc122164c30",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "be289390-7726-4f42-95b8-461ac89881d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c52933-ebd1-47b6-8961-00f8e41c824d",
        "cursor": {
          "ref": "1775535f-c86d-49ec-9202-5aa3afe47c66",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "21c307f7-e6d8-4af2-ae9f-743c56d2505d"
        },
        "item": {
          "id": "61c52933-ebd1-47b6-8961-00f8e41c824d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d8cf197-346b-4af1-bd14-683bf134c212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91ed1cb-6f61-47e3-9ed2-2ea968d5a634",
        "cursor": {
          "ref": "ef2f5b10-a661-4041-a8b3-308a14341544",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "181ed67d-c3af-4e72-a539-c9fab41ef2ff"
        },
        "item": {
          "id": "c91ed1cb-6f61-47e3-9ed2-2ea968d5a634",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "59bcbb96-2cf7-468f-8c9c-86d40ae471d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372a910f-bb37-4e0a-a1e8-3b6e148e7abe",
        "cursor": {
          "ref": "6a89469a-4d68-479c-aabf-08882d8d990d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "88b06589-1f56-4ca1-845c-212dc11f9669"
        },
        "item": {
          "id": "372a910f-bb37-4e0a-a1e8-3b6e148e7abe",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f9157f06-d5c4-4f9f-9d2e-8ae890a40ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76dfed-8a66-4a07-8eb7-00bc8b2f4d8b",
        "cursor": {
          "ref": "fd79ab24-3fd3-48bf-8303-284c124d1ae3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cd63d8e4-eb85-4cb9-ac8a-aa4fe131ce95"
        },
        "item": {
          "id": "dc76dfed-8a66-4a07-8eb7-00bc8b2f4d8b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3983f46d-d0c1-454e-8683-12a4f3d5dc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9707c8-af24-4cca-87f3-9edc3f7317f8",
        "cursor": {
          "ref": "fc48dc1e-e915-4b87-9a46-0138ef074b4e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7e01ce7d-9444-40af-b6ea-74ba98fdb809"
        },
        "item": {
          "id": "af9707c8-af24-4cca-87f3-9edc3f7317f8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0942d01a-d761-403f-bd64-91b4575ed59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdd7093-4eb6-4daa-9ffe-eadd59e0d89b",
        "cursor": {
          "ref": "01d5c656-581b-4347-8ade-a65751173853",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17ceeeee-9ade-495f-a491-66a16a6d3275"
        },
        "item": {
          "id": "3cdd7093-4eb6-4daa-9ffe-eadd59e0d89b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "57370f3b-ae73-46e8-800d-b1ab5fd0e783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37127fe-e8bc-4a7d-893e-af9d550eed52",
        "cursor": {
          "ref": "4fd7eb45-6f06-4ff1-b564-356561da90c7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3562fcaf-ab33-4cf3-9572-30fbd37640c6"
        },
        "item": {
          "id": "b37127fe-e8bc-4a7d-893e-af9d550eed52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3b920dc2-9baa-4137-9c91-63c699d07a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ee4a6-b797-44e4-96b3-30fb92c86cf0",
        "cursor": {
          "ref": "3c0b1fa3-e05e-45ca-9288-a3dc9ce2c182",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "57c747f0-445d-4867-8099-1d146819dcc5"
        },
        "item": {
          "id": "b68ee4a6-b797-44e4-96b3-30fb92c86cf0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "38deab63-da82-49eb-8737-f1cc87a10fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2834089-521c-4989-a313-da8d94cd35c2",
        "cursor": {
          "ref": "e3cb036a-d1c6-49ae-8380-12c30e2ca2e5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9c318880-54eb-42ce-93e7-b5997f5aa8a8"
        },
        "item": {
          "id": "c2834089-521c-4989-a313-da8d94cd35c2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "960758bb-8795-4eee-b245-8afb5cd18f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b303f20-5030-4427-a8f0-b7c74d30d388",
        "cursor": {
          "ref": "be1330ee-b544-4f1d-aa7d-b167fdc53be1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d594c83d-8e9c-4b02-8f63-3236b1755c65"
        },
        "item": {
          "id": "1b303f20-5030-4427-a8f0-b7c74d30d388",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4251ce23-0765-4841-acba-226b388ba61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec61ebb4-64db-460a-9a15-f54a085ff09c",
        "cursor": {
          "ref": "3c22e442-d740-49f1-aa0f-0916d79dffaa",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3b681d82-2703-479e-8141-5c980ef97db1"
        },
        "item": {
          "id": "ec61ebb4-64db-460a-9a15-f54a085ff09c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "67f55475-e090-4568-9713-15307a69c114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14a03bf-74fd-47f9-a41e-ce12f3d1cc68",
        "cursor": {
          "ref": "bc6261d1-1f17-43aa-8df9-ae6f108f041a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f260aa85-5db8-42db-9ca6-a36439684607"
        },
        "item": {
          "id": "d14a03bf-74fd-47f9-a41e-ce12f3d1cc68",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae33d641-0fde-4a9b-b335-ceffa46bf71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b51b7b-191d-41e6-881b-bb221b557f3f",
        "cursor": {
          "ref": "4605b822-463b-4a47-b597-3d8972e294e2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "06a982d0-85e5-4a7f-b481-304261700b9a"
        },
        "item": {
          "id": "c4b51b7b-191d-41e6-881b-bb221b557f3f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e297c717-1131-419b-9983-becad239d398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8f982-96a1-4894-abeb-c152da4d4a1a",
        "cursor": {
          "ref": "7d3abed9-11fa-4fb2-b1e8-54b3b44733f2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2ef2bee7-1b4f-4b4b-9361-860561b363a3"
        },
        "item": {
          "id": "68a8f982-96a1-4894-abeb-c152da4d4a1a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a752e89f-b416-45ef-be71-21f2d6b1f39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5af0ed2-cc69-4eb3-a4bd-afff2c9ee50f",
        "cursor": {
          "ref": "88663258-b0d9-4976-9b07-ea84f9daa3eb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "04876128-2341-4a49-a9ac-cf4d0ca83385"
        },
        "item": {
          "id": "b5af0ed2-cc69-4eb3-a4bd-afff2c9ee50f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff8674a0-1391-4deb-a285-0fe2a3c109ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d3a99-fec5-4eee-a6a6-f51b8fc2c4ae",
        "cursor": {
          "ref": "9d67221d-d9d0-49c5-ae65-e9d13be805e8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20e567bd-443c-4cba-bd3b-95fc28ab8250"
        },
        "item": {
          "id": "981d3a99-fec5-4eee-a6a6-f51b8fc2c4ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dea6213f-cf59-4ef3-ba11-edf01fcca39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed004fa8-e7b3-4f1f-a89d-d6d75b012eee",
        "cursor": {
          "ref": "9dafa7fd-cfb6-45c0-9b36-b26c3d20a47e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "748540b0-26a4-4cd7-95d4-888605c1cee3"
        },
        "item": {
          "id": "ed004fa8-e7b3-4f1f-a89d-d6d75b012eee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ec66d020-798f-422f-88bd-e55c3d932f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f6134d-c88f-4e5f-a6de-ae5884a12edb",
        "cursor": {
          "ref": "1c04503d-81a5-4f7b-898c-6556a0e452d6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f4548044-d4cb-46ac-925d-8676d386124d"
        },
        "item": {
          "id": "a2f6134d-c88f-4e5f-a6de-ae5884a12edb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4f4c6f7c-cec1-43ce-ac98-dedd0028252d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a666b6bb-9351-4bb9-a734-585b69671644",
        "cursor": {
          "ref": "5601b255-0e81-4e30-9a5b-cb3d67bbe65a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "de0ce102-b1a7-4cb1-ad4e-748df16cc200"
        },
        "item": {
          "id": "a666b6bb-9351-4bb9-a734-585b69671644",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6daef603-a05c-4f7f-825e-725e7c1669e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e890e0-7305-4f32-97b0-d08655cdae9c",
        "cursor": {
          "ref": "416c3998-2297-4d9c-b3dd-7a8d8a6f7ca7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "944977a2-4807-4208-96dd-31feed41dd83"
        },
        "item": {
          "id": "b2e890e0-7305-4f32-97b0-d08655cdae9c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f2032ffd-d9e4-4524-a553-e9a33c71e37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2514b0-7150-4369-bc4b-311bcd707d9b",
        "cursor": {
          "ref": "dc5cf371-2c4c-4fe2-a8b7-6957f114af33",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "9d69f9ee-96a1-4ddd-8703-4ad13124e5d1"
        },
        "item": {
          "id": "4c2514b0-7150-4369-bc4b-311bcd707d9b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e93271d9-ae1b-4542-8899-421418788dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2e4c1e-cdef-4764-900b-1b29063c4a33",
        "cursor": {
          "ref": "9e9d8442-0c7f-440e-80a3-9ca8eacea346",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0df290a0-0762-497b-b8cb-52b3ee9f17b2"
        },
        "item": {
          "id": "4b2e4c1e-cdef-4764-900b-1b29063c4a33",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "84b331b1-2e3e-4445-afe0-d6e01ecd8447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00108629-dde3-47b4-9115-bfdcd6c37dc4",
        "cursor": {
          "ref": "6c9da16e-f3b8-453a-bfd1-a01800935c44",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7f65b7da-52a8-423a-ac38-1b92615e5dc6"
        },
        "item": {
          "id": "00108629-dde3-47b4-9115-bfdcd6c37dc4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a2723d06-7f63-427b-b9f7-c6bc0b9c53a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a3062-a378-4d7b-962b-68dc6a445903",
        "cursor": {
          "ref": "556f4267-dc79-4474-b547-2990dd741591",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4a8370c5-5a19-4c5e-a4d1-a9020d5eb1b8"
        },
        "item": {
          "id": "707a3062-a378-4d7b-962b-68dc6a445903",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e103fc9b-fc70-4a85-9866-acac5afc1c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b54c2-9af7-4a75-9c72-b680a1a849c2",
        "cursor": {
          "ref": "0bf37bf7-528a-47eb-8c23-bcea302e80d3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fcbd7c39-c1b2-4060-a126-180900ef385e"
        },
        "item": {
          "id": "712b54c2-9af7-4a75-9c72-b680a1a849c2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2245701a-82fc-4114-977d-ddf4bef64977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2817b8-39be-41c6-94dc-ca933d03f45d",
        "cursor": {
          "ref": "88e1e1f8-73da-469d-a985-91fb873fb7ca",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7f876b2e-6216-4801-a906-99ca7cd5559c"
        },
        "item": {
          "id": "aa2817b8-39be-41c6-94dc-ca933d03f45d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "48e90020-0da9-46ea-bcd7-7c8b0b1a1f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f5bf6e-ce8a-44c3-acb6-a35a955a9be1",
        "cursor": {
          "ref": "aeb7037a-826c-4d9d-8df7-1c0fac7d1e73",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ad1685ea-67b7-40ab-abf7-8954274c9373"
        },
        "item": {
          "id": "d0f5bf6e-ce8a-44c3-acb6-a35a955a9be1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b2630e98-4aef-43c9-81dc-580fe636b7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec364eb0-47ea-4771-8328-89081d80cb39",
        "cursor": {
          "ref": "294b5ac5-81c8-45e9-a819-13110fbab3d9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "40638e84-d34d-4b1a-84ec-56bb0dd22438"
        },
        "item": {
          "id": "ec364eb0-47ea-4771-8328-89081d80cb39",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80c81dac-384b-46b0-9763-d8d68be0f9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6447f-c66d-4c64-9d52-47eb32a8e894",
        "cursor": {
          "ref": "55096511-0117-429b-8086-860cb90101a0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a2a35644-0149-4968-9c46-7c632c53ddb9"
        },
        "item": {
          "id": "33b6447f-c66d-4c64-9d52-47eb32a8e894",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1ac8ed30-49b6-44ea-b2bf-ce6655c94d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dc4773-2a42-4763-a438-cdf5b61d8330",
        "cursor": {
          "ref": "9ecaa786-98ec-4298-918e-956dc8c6db23",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c0ab92b3-7a91-4f7e-833e-d6537504ed5f"
        },
        "item": {
          "id": "56dc4773-2a42-4763-a438-cdf5b61d8330",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7068983d-0a3e-43bb-b240-424293921508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290799e0-919d-4ed4-babe-075e36060c52",
        "cursor": {
          "ref": "ba40bb51-8574-48b0-8402-33f54f1fec3b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "99d5f9da-5599-482b-8cd1-112933477f86"
        },
        "item": {
          "id": "290799e0-919d-4ed4-babe-075e36060c52",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ebceb143-0dd9-4049-9d6f-01ab08edd2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c59b761-429f-4e3b-87c4-be1a4f7ff9c0",
        "cursor": {
          "ref": "977411b6-ed2b-41a7-9565-519432ffe584",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "43ce5425-185b-4c48-8071-f1be3d6894a3"
        },
        "item": {
          "id": "8c59b761-429f-4e3b-87c4-be1a4f7ff9c0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6e4e361c-5c2e-40b9-83ac-e95617382f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ebce2b-d159-4e95-8032-dbde4c6a73b2",
        "cursor": {
          "ref": "2aef38f0-618c-4382-a42d-62f68ea023aa",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d2f96668-959d-4f5e-b32a-44f16c1267a9"
        },
        "item": {
          "id": "b4ebce2b-d159-4e95-8032-dbde4c6a73b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae7c1ffb-d1de-4a6c-8328-bcfec87d0f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be67f391-061a-45f8-8496-de8aff47a215",
        "cursor": {
          "ref": "1af7de9b-15a6-43a5-a6eb-cb86ebc6b076",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "34b71703-16ab-43d1-980f-ce273bf9305a"
        },
        "item": {
          "id": "be67f391-061a-45f8-8496-de8aff47a215",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f50f9841-8fec-4e02-8a60-48ff4d98fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a21aa5-01ae-4611-82de-e0ed3d34464b",
        "cursor": {
          "ref": "86b2307e-302f-43e3-b480-95f942adbfb9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5cb2adec-80db-4ca3-9568-ec7e5ef497e4"
        },
        "item": {
          "id": "40a21aa5-01ae-4611-82de-e0ed3d34464b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1d7adc0d-ff6c-48d2-8cb3-50344cfe8451",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f0e5e8-9cce-4ce5-bb8b-6d33f63f5adc",
        "cursor": {
          "ref": "c224811e-4bfd-4414-9663-37239ed5b2f4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0a40f897-a0c4-48fb-8482-7b7a18880b66"
        },
        "item": {
          "id": "54f0e5e8-9cce-4ce5-bb8b-6d33f63f5adc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dccc67c5-4543-49cd-9d91-9d0dda608f40",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a737f32d-3059-47b8-983d-8c2ca03fc92f",
        "cursor": {
          "ref": "17132b7a-9914-4614-91bc-36dae6baefee",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a8b81d66-595b-4996-abed-f5f4a122fd30"
        },
        "item": {
          "id": "a737f32d-3059-47b8-983d-8c2ca03fc92f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c32ff95-df1c-4353-a6bf-fb385a8d595f",
          "status": "OK",
          "code": 200,
          "responseTime": 3145,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc9c9b3-1c50-4c01-90c1-da7c30c5ce51",
        "cursor": {
          "ref": "1028d031-84cc-48ea-8ba3-b35a13fc96c6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "494430c4-1403-42fa-a78d-6757e7af9577"
        },
        "item": {
          "id": "ddc9c9b3-1c50-4c01-90c1-da7c30c5ce51",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a9a10ce2-5919-4225-858b-ab28f400c01c",
          "status": "OK",
          "code": 200,
          "responseTime": 2651,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "164e1ce5-e784-4a23-a353-2b56f660732f",
        "cursor": {
          "ref": "92400f84-d6d1-4421-b3c3-71559e118a6b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cc67abe9-61df-4f6f-9c68-014c3c72dceb"
        },
        "item": {
          "id": "164e1ce5-e784-4a23-a353-2b56f660732f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52361697-4543-4dd9-92c5-d7a43d530e1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164e1ce5-e784-4a23-a353-2b56f660732f",
        "cursor": {
          "ref": "92400f84-d6d1-4421-b3c3-71559e118a6b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cc67abe9-61df-4f6f-9c68-014c3c72dceb"
        },
        "item": {
          "id": "164e1ce5-e784-4a23-a353-2b56f660732f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52361697-4543-4dd9-92c5-d7a43d530e1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06760aae-940e-487a-b2cb-73f7264697f1",
        "cursor": {
          "ref": "cb0ab0a9-8eb4-45c0-9109-ce5dfec7ce2a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "630de11b-d102-4f1d-8c90-857677217468"
        },
        "item": {
          "id": "06760aae-940e-487a-b2cb-73f7264697f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "25ef9ea4-db35-467a-92f3-3cbaa8c76788",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc76bf7-83ce-4c2d-acdd-12e1dffc0cd6",
        "cursor": {
          "ref": "abb77fb2-4fe4-400e-a29d-a5172cd1754e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "79d04d4e-eea5-4ba5-9cc8-1804fc85900f"
        },
        "item": {
          "id": "dfc76bf7-83ce-4c2d-acdd-12e1dffc0cd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6d5fb7d-6dee-45b7-8424-24237674ef33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}