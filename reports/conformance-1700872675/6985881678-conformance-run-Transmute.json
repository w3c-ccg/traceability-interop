{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cb4f868a-ce87-4f8f-abe1-9a4d9a1ca46c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6003a02c-f282-4223-ad18-0612499ce534",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05c85552-408e-4faf-b366-7114b46d2807",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab0bf8e8-2f36-4928-ba72-27fdd6ca33cd"
                }
              }
            ]
          },
          {
            "id": "8542e540-80c4-4a9f-b8d4-b668fe50010c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "568135e1-e9de-4260-93ae-a24872932611",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da8037c2-48b3-47cf-aee9-9bca3c5fee92"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "885b66a6-802a-45f8-8af3-79fa9d27e350",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8af96b9f-70cc-413d-bde4-fb1eba499a25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "210f1ca4-034f-4970-9e9a-dbc9aaf5aa0a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8270cec6-337a-476b-a959-54c987fd7050",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "383cb12b-caa1-4016-90ab-bab8c2b135a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40c3bbec-bb79-4ba8-87d3-f3fc9016fc02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d617f89-f453-4d30-baa0-31ef2caf84e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f1a5743-fdd5-4926-8618-c3353502a18b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d15dfe0-11fd-4cea-9163-eb3a13cf531e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aa3e5ca-baf2-454b-980b-3c5fab88c74b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "683e5d9b-4ba2-46a4-9dc8-c98c76e8f615"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e383543-51b6-4e18-9b8f-7778cd29bb84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15a02109-c828-4903-b99a-892ba27cedf6"
            }
          }
        ]
      },
      {
        "id": "71361770-4ab7-4c0c-a688-05daa3348180",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "04869341-fcb1-43dc-9452-6a99af1706cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "261b0e97-3880-486a-b5cd-e51eea8cf763",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0802b0f7-f645-4941-a3ad-57b28417f2f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e9bcf0-94de-49be-8ca8-14afc9446dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f6deba9-c504-45e8-a525-6f986321e104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd9c30-d431-4719-93be-2e61d175313a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa283422-e075-4977-b492-2d4a4428bc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63e1f476-5f8a-4c5f-a5fb-ed270115ed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22329559-111d-4a62-96c9-e913896a103f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c88410-3fa4-467b-ac7d-95da5c38454e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13a49b0d-9daa-4af2-a64e-4e08e6f8b6a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e60bd613-51a6-44ac-a917-e5d00d1ff718",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a79456-7d61-4995-971d-3b265c1f8153",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5c6515-fef7-43e1-bc03-433f5c3e1899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87c9c73d-9bac-400f-9686-add36f9991e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b58597-05f8-467f-a7c7-8f8227175626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe99022-0ab0-4799-9693-45c4772756ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9cb9b510-ea1f-408c-9815-cf65ba94738d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b94bad8-d231-4edd-86ea-ac640367d93c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "912c6fd9-9687-4159-ad65-b10339b0fefa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "590b7402-2163-4a63-b8f7-2992050a808b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b63869f-fd4e-4f01-9809-39b7d7b5441d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f0c8cb16-b099-4907-b025-9fc4a488f866"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "366c4e64-fad1-4ebd-b123-192df3963be8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1338f29-eba3-4623-aef7-191136ae3e57"
            }
          }
        ]
      },
      {
        "id": "ef78f1d4-76eb-4716-8a3d-1ed2f3067d60",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c505fc79-e511-4a81-a547-468fd15c15f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75b4e2c5-98f4-4e17-b700-8d9c9ecb2203",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f85f64e6-06e3-458c-b978-d00c909e78fc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05932baf-d373-4e4a-a0f5-5966e8b59851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e791f040-5568-40b9-a462-10c4ea5bf69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc67527b-14ff-4a11-8f9d-bf0c31ab1dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4300c9-fec9-4019-83e2-b761e36901c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78db2dc-a552-4f13-a8aa-d2b5977822b0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d809e4-20d4-444f-8c20-2c694f00cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6115f03-b8e1-4a49-a2c0-8993909a1f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67b3724-9ab5-4fc6-a753-25aeb99b8e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5193c2fd-79af-41b4-80da-63b797874135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2539cc7-456a-4e9f-9233-3ad93de4a351",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5206950a-a49f-461e-b822-264c634bf22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef23222-310d-4117-87d2-e0ef78cbf6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eed19a-90b6-4f8f-970d-34ce6edd565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16fcdb7a-5921-425c-a877-2f46433b149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e5641b-437f-4d51-ae59-0ce384f97f12",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e795ba8-877f-4d7f-988b-fef5c1b12779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca76653-2dfe-4b04-ac32-15601bac946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76569188-671c-47a5-8e56-b7b8fe4385ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ed31ec8-05b6-47c2-871a-ab071a8572b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da534c3a-88a5-4982-b6f9-874f1388d455",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062963fc-e339-4344-aa48-17c6c5dc2b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c647f0-324a-4db9-9274-c46f9f08ee51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ae256c-fa0e-4615-bc01-6030d674a92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b0f2c2a-9797-43ee-a9f5-026375ddd2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ed72b6-fc9e-4234-a733-e58b7771879a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ba4f8-4029-41f6-8d4a-ebef8c43e97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e60a1ab-444f-4a00-aa14-7ac3b0a4d83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b7e95-547c-4c4e-9e65-dbf3f59bf492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ea3c1b1-0a37-4fde-a768-88571bb7a148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61babfc1-2b74-4ddc-803a-3ede18494309",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91f1518-73da-4b10-a25f-f3e8d5d08fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11b03bd-8cea-482f-bbdb-778e855e2099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f64c7eb-8d5a-472f-af50-fc1835b9d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62a82508-acb5-46d1-9137-0e039e0433b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc0a280-4eb4-442c-bb98-664332d55bf1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9664c82-3bf9-4286-b7ac-9c8c973d7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60df29ed-5f43-45af-a686-9b76673a5166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d780858-0b90-45f6-b44f-21001fca3c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbc351f2-9011-4191-a007-96fbb1ab1853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d86b7b-7c68-4066-b610-31f4ffed958f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50ec669-e970-4145-a0f5-a2add56574fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2a5135-5ec6-4cf2-80a6-18d1809611aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1992018-983e-4e9d-a115-7c82841cff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffb861d7-c839-4234-b5f8-889efd61fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883ef317-691d-4e17-97ff-1f932a5b52b3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673dcf7e-555c-4ed1-8cac-fada964ed1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787be309-5736-4704-9395-0cb0e423b79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e8fa2e-6c90-40b4-b9b6-71b274c9a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8919a1b8-1823-4acb-a876-a4e0ccae8962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1f3ff5-1143-4537-9687-092865f05b28",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ca5f73-ae79-4eb5-8750-2a3132aeae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0baff6-95c5-407a-8ac6-eacd312acdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a9f0b9-f5e0-4a02-aba2-5e34587f04f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d6d6012-9703-4d43-89b7-df9b683c112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b781cc2-ee2f-4254-a570-7da907317a85",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50513aae-24e3-4005-8297-98f985b1da4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f6bc43-5681-45fb-8ba5-b4c2c0c7c778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2d77da-e565-424d-b223-cd132711cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64a9002e-3b76-4dff-9e1e-a75ba62035f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae26f97-c4d7-4112-8bce-cae06f669b5b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816c8d3b-446f-4410-b896-385fb6c65409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957ec99b-a3cb-432c-bfdb-6c99796c3bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb13b2-032c-47ea-bf91-a96984e394eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d915bb4-3154-4b62-a13a-ec43117bb6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff48693e-e60d-4ce2-b7ff-7f42ad5e8c11",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8c2b2e-3551-4e72-a12c-12a84bc20103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48664d49-dd88-4ff7-a29c-5b83f3dfdbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b9ed91-d8e4-4c38-8773-d121d63f5ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f2fbf0-1c34-42c0-b832-d4aeb298779d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35a68c-be95-44cf-87bf-8cfa4b844a85",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9644a4-46bf-4686-92f7-0d25523c62e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb7a0ba-22fb-4e1e-ab30-8a359589dc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10ff9f0-d43c-4467-8c83-1d953b73b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1061e39-b7bb-4b88-bd6a-bb0b0a08fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a35822-2ca4-4c62-8e99-95d002dd3a77",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857dc75a-010b-431e-9119-773fa0d8659a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abc2b15-7c1a-4b6a-a72a-5d53ac964d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5170b44-b719-49d4-ac74-ecb626ee5480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d50fdb0-1b00-4dcf-aa80-a1237515d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb2cb53-e2ce-4f22-9c38-3029b44a3269",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1aaa4b-251c-406b-b7f0-abf26de585be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b75459-8741-4b78-8927-d20e1caf1fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4edc59e-902d-49d3-9169-7e87b562ea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8502aa3a-a9e3-422c-9098-2b0467b93c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f52899-a659-4330-9efd-e3723bd83859",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf428e1d-9b58-4ece-81b3-58f7f401ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75a87c8-19aa-400b-86f7-63a3c8a947b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d73538-42fa-4c97-b8d0-8a60792096b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1124e9d9-583d-4961-ba47-3fc663def04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dbc654-7b65-4a81-b715-64da3b95381b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049a5b27-ac3e-42ea-a743-100bb9e13f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe02de3-44a6-4b04-b1b2-9c912c40b45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7ef8bf-ddb6-49c0-b571-d6b570fee78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de2fbe1-3829-4d34-a61e-02c1c4cbe659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb370130-83a0-4f83-9c40-56fdc8bc57da",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcde7bd-fae5-48a8-98e9-7e9e313a9720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f65c94d-d98d-4521-b06e-a48afb82fcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124dfa72-200c-4fb8-8464-70261f63747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "442d225a-6673-4655-82c9-07dc5553305a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6695de-9fa1-43e4-94b3-73f15dda21a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67679a31-5259-4315-b5fe-ba38f338da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15531ed3-4ad3-411e-8625-1200f4c5cc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1b0379-4ff7-4339-8f2b-3328b6238f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae92eca-7b3d-48bd-bbff-3f9ce90dfb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f124f0c3-d3a2-43b8-a659-65a75a958c98",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70340023-3879-4a02-bb03-4be94d676985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2496d3-f5bc-40e2-8c58-ee968ff4dcfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46adc10e-3462-4c06-91c3-976abd19faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45b0f877-8880-4793-a273-d3b45adcd327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926925ad-4cd5-431e-b085-f003b8ece182",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a59ab9-9bf7-485d-a8c3-af0388447c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acdd965-f8f4-48dd-b28d-af67ab3d708d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886ce73c-8728-4b19-8433-d9f94a8c3305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "958d61b7-a1bf-42ff-a8fd-dcede2d4b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a89ba1b-d448-4ed8-b228-704f5bcbb6d9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8929f72-0888-4871-9799-dbeb8c097598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32ebb9a-304e-41ea-8eec-d1a2cb8cf1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a6561d-2786-4970-848f-b30d2b96e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf36975-2689-4739-b56c-628e0d675fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327b9cc3-07e6-4c43-919a-08dd3d8630b7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1c3910-6000-44ef-a246-2504251de131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214632e1-39c9-43a6-a28c-542c3dc68912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efca5ccb-0a12-42c1-aecb-94987150ba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8d8a23-7632-4729-b4a4-3a5dca9536a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13b38ff-386b-4aab-83f0-e82f51c0264c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302ff905-a660-423c-a039-b26ce2f290b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c2b127-47a2-401a-aadb-018d1ff79d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1524255-87e3-43cf-9d4e-899e06ee2942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab5df87-dc5a-4772-ba7b-a3b8d8c48d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2724389-4d32-4285-ae19-aa1ef14d0bc8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22308799-0eef-4e95-887d-db25eea4e372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3db9530-8370-4991-90e9-c15beeb33724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e41434a-49e4-464e-983f-ec75bf69a98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5765ca4c-b075-4902-85a0-d31fb27d3ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12a0817-33a3-408f-a9f8-a75337772e43",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16060c5c-cc5c-4ae0-a307-28e875ca1f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3628c353-6df1-49df-a315-878874a07811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb84e84-fe59-4ad0-bf12-1304578e00aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a488ff-874b-482e-8afe-d3ea906bf24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88392daa-1bea-4dd1-8412-9cddcd6cadb7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f943a63-b7d6-47ff-9323-4f40a9df82b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050f87a4-cc27-45bc-b0c4-f9d77ccd341c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3717a7a1-6c3d-4731-a609-20e26ea73ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eecfd2f1-9490-4118-854c-69a4a9b95c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d294ca5-a872-46bc-b9c8-edae271ad72d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7ffe8c-2ec9-41d0-81a9-44a00c17ce84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfe38c6-5adc-43f9-9ef1-c1a788b50285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a158ddbb-f58d-41d0-9736-fdb9fe83a3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f318753-896a-4b07-8e71-06dab5ac3101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911ae7bb-6955-482b-9f2a-b7e5607c21d7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38423077-9795-45a5-845a-29a4b1c08d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e58e97-8743-4b84-a0b7-1a05c7f192e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409dbad7-9a4d-4b5a-85d3-a4bf8e76952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d97806-01ec-484f-b0ee-b89cbc5abd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c196a5f4-9282-48af-ade5-a7dc42c8afc9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbae1c78-6ec6-43ef-88d9-4df7d734f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e8bdc5-8eb9-4fea-8a2f-056856305cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e5b075-2896-4c1f-adac-e744559acb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5c592c-1fe1-4ff2-9893-b069f222f274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3daceb35-1e8d-49cc-96c1-271a6cdedf65",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9406d9-2e97-4e4b-9984-c1de9744a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8da4a2e-a2ad-4a4f-a211-c8c72048ef81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f869c6-eb76-446e-accf-785534c18bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c099035a-6b63-4127-85cb-4d5f704c10a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcb5ee4-3da3-4965-a66a-16b18c810818",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe0cd3-41fb-42aa-a45e-841e8de12d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628925a8-ccb8-40b1-8f1b-6b9421159c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02989a3a-1fdf-41dd-91ac-bfa594712f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d991c425-397d-4502-9096-653fc3b36929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d5c064-0da4-4367-90f9-cb604e947d8a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59abb0b-f866-4ec0-b6ea-f73ce1b6fb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fde29d5-36c8-475c-99c9-b70836c76ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a312e-6279-4b09-a362-35af2d553f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6c798585-f393-4df1-adfd-2288f5bd7a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff85d74-d049-423f-a4b0-e11475eefeb8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254d79d8-5b3c-4f07-bc3e-04deba037863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3378a11-342b-4c85-9b51-21625c5943f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d26741a-fa96-495a-94f9-71e2a56e9cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb128de3-6ad8-4244-a5c6-5ea7d6255886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423319fa-4001-4559-a4b8-25d9d4af3b63",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9508e8f1-893b-468d-9ce4-647b354e1f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0970f87f-651c-46ac-9a34-667f322ff632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42427c4f-be72-478c-8e39-d4e40ba47169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d37bba2f-c680-43fc-aa8b-c0e7bda3d2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f407e1-bcee-416e-8ef8-e6f1242253f8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0896a6-47c5-48a3-a8d1-b343c6843dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721eb756-f4cd-4a33-a910-a990ab3b12cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2694c9cf-7df8-4254-a227-f64d4540e11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc178cd-4bec-4bea-8d56-3c91f4b36b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5620c35-aac0-46a8-81ba-6e29a4ebd8d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a03f343-2cfd-43d7-8e86-93e67c107761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325316e8-b325-47ea-b9d8-3cc76b0da197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3d97c9-8356-4307-9955-33f126c93c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a59cfe10-4474-4eab-af54-6a495db9e7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc6301d-8173-4d10-9ead-7088bf5cf111",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acb5a0b-1814-4b5f-bd77-c0be6cca86ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dbf930-57cb-49cd-9444-0693bbcc8072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53006428-c5e5-4942-b2ff-a337e5ea1e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "986d6765-1774-47a2-9c55-8b1e0133fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9141ad44-07a6-4d64-ad4f-d4d12a50f5b8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7495c2a-329e-4d94-a28c-953aa5cb2115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42074c21-3321-499c-b028-d16a146fd2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479059ff-af20-4065-a03d-60713928fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb26d75-cd03-428b-89a4-50216788bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75991550-ddbc-42dc-a48e-6b5908bb7c4b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b98b75f-f8c6-4629-ba37-f7d5a824596f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1429ba-9e53-48f6-95ea-b7a3d18b156e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fffba3-1ed8-4eec-8668-f3bcd66dc892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "abfc2c95-2c92-45c3-8ad7-3a7156de94e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f943b-718b-4a07-a214-2611d4a5f2eb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855831e9-b7fe-44bb-bee6-82c01db2f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6aa9e90-f63e-4740-b3ae-ac1fad2290ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5756a12-0588-4a0e-a435-f1acd2ace2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42ef35c6-2aba-43c4-9847-df6a6d7a92b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8784bfd0-0858-4eba-9c9a-12cecb8876c3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace64a5b-eb39-424b-b958-403895cfb887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e20a7f4-ec61-480c-95b2-ef238902d9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bd3fdf-0592-4964-8fa0-ad21895f7382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "490941c6-d6eb-4ced-8f16-4a982c0c2f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c0f92f-b26f-4c4d-8cfc-f77ae1a46f3d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557e2884-682f-46ed-a132-45c2099ad6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a80238-e391-4f6f-ae19-a21aead9a4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ad6ce-cf2b-41a2-b533-88d1d9e8dad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afbce38-5ef2-424d-b7d4-03450567f7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b162136b-faca-4407-a023-63182af6d8e3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843ea23a-a5ab-4e3c-b080-21caf75b8a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4780a9-644e-4353-94f8-b86caae8fde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be792439-7d0f-454b-af0c-ef4e0ff31850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b590198-e2ee-4280-bef4-25574ab4ce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b97771b-4f26-40b7-b7af-62ffb6f96008",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960cc654-c6f2-48ca-ba88-e463f421f186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcaf497-e124-4cee-8691-09b4150c2417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48839978-eaee-48c9-8ec5-d51f0e451db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fe98aa-6012-4079-afb1-36cb6aa7b7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35026fe-c216-4b99-91ec-cbcb896527fa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba7c89-d275-42e6-b19b-0c33f892042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf616ad0-845c-453e-84cd-433f3a8d0658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb8dacb-7792-4bff-8af7-5ee0d36a0125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50671a6c-1d37-462a-96b3-907f112075a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa495c3-f360-4417-b443-1e824eaf9b39",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eef76ca-ef50-4c01-8d64-e2664fc6e9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573ed8bb-cf5e-4c44-b18e-902a622483ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73340fd-4079-44c4-8cf8-1af08f23fbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d796213b-fe49-4483-b397-3c15ec1ae8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca0429b-3276-4760-b54b-10843d663b9e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fe02ee-e9e8-410f-bdc2-00f704b5d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5982b53e-92a8-443c-a68d-0aba8d3985a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612bc9c8-2dbf-4908-907f-10c92b8ade7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8e4ccc-f565-43ab-ab98-01af1eb0f4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23d76ab-18b3-457e-9a66-173b5155377f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67032326-f573-400c-a887-11c668e1fcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056180d1-524d-44c8-962e-e2b3813f1797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b437c52-0243-4353-967d-e2082811c526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2738db-a770-4683-9618-9f9233356efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1e5e8b-fa63-41e8-9a5c-a3d66f77a284",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa786c5-70fb-424c-8860-8235cddcc1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2a447d-a22f-4e64-844c-2edfe32d5cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58606e17-34ea-469a-973b-9380591cc33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8f61d9-1f72-4c4a-894f-d19a492136cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb965a4-dffb-4318-a720-8d2ff64a54e9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400450e8-1836-46fe-8ec7-32dd2cc2172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2851465-13f1-4b43-8141-d77561e0d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fccc4-4c02-499a-ab73-7ea2d6298144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e43c91-9ec6-466f-9e9f-514d86c5527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8a930a-8519-4290-8eb1-55df9010cb99",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b7121-63ff-4dad-8fbe-2fa46d7662d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cebba4-06ad-4608-bffa-2a2506abf6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0223f9fe-2312-45a9-9fe5-5a247f8b17a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "523f79fe-814b-4e99-985a-b4b6fb311427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2c5602-6159-409e-a24d-ca84c1eb885b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee9473-0486-4c4b-a6ce-4948251782fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c399bcbe-d7e8-46e6-a356-da07402fbd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d53984-f196-44ae-851d-38d9f8d7d907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "721bf255-6474-4246-ae16-1395680bd122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a748e0c8-857c-422b-a14e-01e3792a511a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07ca311-cc89-4496-b948-2ba481c932ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bfa5af-f112-4120-a1a0-0e5acfc14a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf6216-629a-4950-9598-4b5748ef13bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1037e3f7-4e82-4164-9abe-518ffcad93ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c042dcd0-209a-44b2-944d-47d0f323c574",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6488aedf-5ab3-4c07-8012-e86dedd94f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aab55bd-959e-4d42-b856-398915dfd993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77798074-f4e7-4f61-b6f0-12160f18d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a23ae42-3b42-4d92-9f7d-8ec6a7697031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab8f29e-1773-4725-91b6-b533d351d7ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b367ccb3-c43e-4af0-95f8-cd9a944d1187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02537e35-8754-4103-b2eb-8e0d3208ef09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1367ef54-4424-44e9-9bf9-152f0be04432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35a29fb9-995b-48ef-b41e-fd5addb1871d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b70094b-a1c9-46bf-b7b8-3d36e8761b6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029cf479-7fbf-4dee-86e6-566836e1b1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159e9497-8762-43b7-9767-53a011e11ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcec2490-ad4c-4acb-886e-9e5436d4d822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "569909d3-7977-45cd-9f3f-6641b208d0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc1048c-6fdf-4e12-8575-a94978fba1e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0b2763-02d3-492e-91e1-b41c91a4bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7041cc7d-503d-4e12-b8ad-77e638c7dd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb751c1f-27f9-42ee-816a-c1df45da2729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3faf47ec-7357-46a1-aae6-c4870edfed4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9deca-c7c5-4df5-bc4e-faa24255f705",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3781a-9f2c-41c7-b6d4-eee8b90c5dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd129dc-9784-4001-b136-55a3de17a301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867009ad-a41b-411f-a09a-adaa6f7d1a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9cf7ba-32b1-4f03-8e67-264fe9b4b341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd376e-a182-4c4a-a22d-c948641f897d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a998e8-daa3-419d-9631-dc62bbf7a926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4db0b4-7987-465c-ac8d-818461ef3866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f044ff2-b692-4620-932e-e64f3a64ef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c62a2aef-2c28-4781-bc81-08d8986f6b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1671073-4e8e-4cbf-a6b3-c671d0185759",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d4ce0c-d784-44ea-818d-67f8208171af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808ea585-ac7f-43fa-b35a-5876aa7875f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6c0ed3-9c8d-40a0-b134-3ef269530792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6c7e8e-e998-403b-a1b6-4f8c80e2e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ba65bf-ed4f-4c4a-84ca-2c0e4f1cc1b4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20753bb-af04-4018-bdff-dd7464a4df0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86c337a-f9e5-4264-a769-5f99dcf327fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7270a448-9982-4933-b5ef-31e5306c833f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82209e45-7714-4fb9-9824-d4eb8a5d3748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2998d4c-11dd-4d2c-afbc-4632f9d2486c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797ae73a-5eac-41d5-939c-62974ad36b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b84cbc2-c3fb-417e-9a82-f480d6fc3905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dddb59-aaa3-43b8-9201-4cb341f05d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e7f307-bc0b-41de-909f-24e8ed9eb09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12174b75-c09f-4175-8399-18787d2971ed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c94837-fdff-4946-9e7a-b9a97951e68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ec9391-5c52-4029-868e-5df69774766b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4f77b1-2659-43cc-9530-c663d26fc979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3803173b-d9d1-40a3-a045-1a13e402f228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88c4180-da24-47fa-9b69-90b309ff10f9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7c010-6b2d-4219-bc86-8be7b0c00507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779acdf2-58eb-4797-8c36-7eb3568ac1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d11f81-bd60-401a-9dbe-0bcba7ca7519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db2c2e94-cb2d-47e1-9377-b4e7ea70c624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e7751d-de9d-47b3-8e3e-b8134b01cd80",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ea43e4-f1fd-4ce6-8899-c0bf4e923b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfcce84-22c2-4f22-8819-2c8104761b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa02fff2-d33a-4020-9399-ec5bce76f3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9060526a-991f-42fd-b947-accf1dfb9a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20026c53-1a85-44c0-b34e-a33772540ab3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a38c32-7002-42b3-a22a-6c1c1ae82f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9aa098-9c47-4556-b0b6-5e7b491fb5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fd2611-0482-44cb-b05b-053676ffe4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e873f68-08d9-4057-bc7c-dadce3d22f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278cb7fb-d9c1-46e9-95ae-c89e7f100110",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8178cb-fb6e-4bd6-b0b1-16ff393e37c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d3e3b6-c37c-4f50-928a-d4019788670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d16a033-9f61-4035-9462-1b590cc7d18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd9d69b-25a3-4710-b661-a680fdc1c0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da24e74-d83b-4c48-8821-667b748262f9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e88123d-56b7-493f-b50b-ff7228ea6172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ced6ef9-327c-41a3-bea0-41bc432efe14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1ef395-1e9b-4e9a-91f6-5166e74a2135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8b9039-4d9c-4b6d-afcc-45892bc22843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbab051-34d4-4cb1-96d8-ff41df589a12",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a6494b-cc5f-470e-8e80-2c12012628c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50e1a87-771d-48db-b863-ee1a72eb36fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f1e4aa-6978-4aef-9020-4679f69e7a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7484bda-1d35-4731-af68-aed3f960c567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d8f670-b49d-45e1-9a64-8d1cbcbc7182",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaa714d-a02d-472e-90ab-ba1d6cebe854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726aaf44-3a4f-4030-984b-70bfe485251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de67e6d-8486-4c1c-a4f2-a66519da30a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66ff2d2d-d193-4f2c-93c2-bbd70b2913b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474daa96-2235-487d-a832-4499f238a6a5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3580e13-4680-43dc-92eb-b673d3d711c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff90e187-f754-4050-b6cf-b253ce6efbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa36ca-3ed8-4fc7-b3a9-a9c0e8f9bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42e904b4-a7e0-4ea2-817e-20930fe04035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8592bd8-f666-452d-ba25-fc2842899a4c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a99f5d4-4392-41fa-8c6c-a7f1bb37a369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4f3dac-34b3-439f-9581-ede5f1603c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd433e-8e53-46b4-95db-b67c919eb5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a4eb6b-3ece-42ac-8a07-663f835d1fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdbce06-e2d1-4e92-aa9c-676a452775d6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5689b1ea-334a-4652-bd4e-0bde0e7db413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5394fd2-0d89-4fa6-b5f0-de320f70f8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9aa286-e78c-4e6e-8d2c-143befa3a19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "743e19a0-1573-4f0e-8194-bb919001da5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc8611-4846-4698-a345-0eea6d77845d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c6c49a-fc5c-4692-bd31-e60a6a373c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d02461-a01b-4232-8388-24cdf2cf67e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32afe6a0-6bc5-402e-8f9d-456682a52723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d96af89-cd99-41d3-8472-6b87566fdaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25c3c67-138d-4ca4-b2a0-1c24bdecad57",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06678a32-8fa6-49f2-b7aa-f56be4f22d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ed158c-b840-449f-89be-c2c6a809611b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4652e3-b853-44c5-aa8c-32a54041d50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "878b4a3c-16db-4942-bd89-bdc0d1c33189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6850f5d3-8eba-4888-b549-fd5dfee020e8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df6fdb0-1af2-4db8-aa1c-976a3111f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29bcd4c-6028-4111-8725-bb6a0a93501b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024f1c52-c035-4b71-ad59-5761b992a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b0ab51-0980-46b8-a0be-bf936ac2e7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3e5c95-4723-4ff1-9437-6653a9f0bad4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e379af-1064-4136-b7f9-9a8e0975b9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b242ad7-1868-4101-898c-cec5b384b282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed39aca-2dcf-454f-a4d8-e926a5cc0644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26917dae-3179-4a8d-aed5-6c5c7baa8ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16b2b4b-61b4-4a7a-84a1-b56afebd8f70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36e4e5-5bca-4082-b1e4-cd8537ffc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee7b326-b2cf-4ee7-9fb2-b1b8e1f8caf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e572cfe-5c95-48a2-b8d3-8795eb268197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7666dbed-27d3-4d28-a169-5306e19bccf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba38fb6f-7290-4389-946f-85dcf4f5fc2d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9274cc-d243-4328-b00a-4fb8f01c4e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79de4a5-aef2-4bbe-a673-17a9f0de52da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4088736f-e427-4764-9e22-8f172898dde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c65bf13-14c2-4e77-a1b7-20ac50143afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb8cf6a-fd6d-4104-9fba-ddc900625fcb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ff9bbf-66a2-4b00-8eb4-518ceb5a8bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4a0366-6aa0-43f2-bee0-615603dcd2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0542e0c-05dd-4de5-ae15-ad2d93f84e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eea8c41-40c5-43c4-9e93-3b40adc5152e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0492861f-25cf-42a2-bd1d-ce4bf4d6e3e9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6471ae-614c-441c-8e7c-91c66d3b313e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e427fd-dbe2-4d6c-a114-3a7810400ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ec4704-6dae-4514-a5e9-7521939d7846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e657ab0-6f60-4310-8f50-61675ec94528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adb35e4-7498-44d8-8589-25d8c3756178",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbdfad7-b7a2-41de-81b8-3ef42f45ddba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a756171c-92b3-469e-b84b-3198246fd27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e50df-6899-4f62-9a0b-b2d028560a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b93c29a-ed32-4e32-9842-417e23f504d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c0308c-66e4-4ea0-892c-4ff82b4fc17b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59ec0eb-606a-4675-ae5b-e535e4ea008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35177e7-66b3-4527-8dca-fdad4d52eca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a3a085-e928-40fc-be88-b4aa170b9498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "123f68c4-c0c7-499d-bce7-6b7f26c9fa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894b5c40-b2ef-45bb-b676-5b353fc3a99a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a26ee-b975-40a2-b234-ee3259a1687d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cdeb94-21c0-4d6d-9e81-efbc10516371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728a096b-8cf0-40bd-8cf9-3ea78329db68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40159a9c-25d0-4412-92a1-baec6d62634e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0e0479-0563-4eda-9d2c-19dae46ab6d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af5e228-af2b-4a98-b5c2-6aaf38b5e8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c43272-09f1-4552-88e2-5cb094af9d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcec2d8-e5ce-478d-9be7-e33a7d36bbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e0d9d0-f0ba-40ea-a0a0-4387e178fb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4eb9c6-df86-420d-959c-3ea9c8a670ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e02726-c854-4d0c-ac18-329bd33dff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcca0b9-bf51-4d84-aceb-cbe9cab12e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d033231-0f76-48af-af3e-ee0c274dd379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e19738c-1399-4ae5-b63a-8b487b874490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4439d9ba-ffca-4970-9f86-4cec486ebb1e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82556288-0274-4cac-bbd9-5fcf9a056291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f38c66a-4af0-4912-9c09-586e17d6f3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a5adae-f0b9-4a35-b1f6-ef3e080c5156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bebb9b34-525f-46af-9560-e6a6e7602f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5315c150-f6af-4dd7-b6f9-5dd0044222d9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ca1ba8-1856-435a-b4c9-d768797f23a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2070e8a5-9ad7-431a-8a7d-8f56d48645c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5dbbb0-7479-46e0-861a-16e4eddfe2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "470c4097-4fc1-4363-9b17-f828796f8684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e748586f-4f40-40b6-81f8-6fff5ec46ddb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e2fa36-0709-45ee-b01e-236a4ff9bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "240c3a38-96d5-401a-b6e7-61d5871855d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d78cc6f-8d41-4021-acca-b3b584e03e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f78baf-55c1-4b53-898e-765a081eb344"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea63ae76-bcc0-46de-bd53-4105ced3f3ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77e90e83-18c7-465b-9e7c-70fde1f12740",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d29461-ab40-4f05-85fa-04d4ee762519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef3e7e7a-05ea-4b0c-8040-8c8397515392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e6eea0-59ae-4c2d-9b54-38527beb17b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca74a851-440a-4a78-a6d7-ca09b1260d47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78aead26-2b49-42f7-8a75-d6182f0219da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ce2eb10-468f-4013-8367-f39f7411e9fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9a98fd9-4913-49e4-aa4a-a46976d6fc80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1182c456-850d-430e-9f0d-9a31f800cad8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "123bd52a-9c5f-4088-bf10-785408f56bac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1039852a-b1e0-4bf6-b5f1-9a0c5f602189"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6df85c3-780a-4b17-a3eb-9d786fdfa7d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90d4440b-5179-4dbf-8527-d715694480b2"
                }
              }
            ]
          },
          {
            "id": "af702c0e-49ec-4f6d-8f5a-cc136e3a347c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3415ac5d-4da4-43b7-86ba-9b2bf6c8729a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "de88cebc-f79a-40ff-b06b-e4dbdaddd654",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05edb86-023c-48ae-bfc6-96e004258ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2089c321-e624-48ce-9204-a0d65fd30b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42582c30-27a9-44fb-a0f0-d174ce468b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a97911-3706-4cd6-b24a-debd20ed7e69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "100f4d78-ef53-4096-9eeb-f0010ddbc311",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c459413-d541-42f3-86e5-7805b6b8b9f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc898aee-9f4c-4aaa-b0af-2d220d3299c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29343018-7260-4cd3-9125-21807c1eb90a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e763eae7-ff46-4389-90cd-cf83ffbdf774"
                    }
                  }
                ]
              },
              {
                "id": "40f0ec8c-ad87-4e7e-bfc1-a083c7c63a87",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a628ea0-9e84-4bd6-9d76-da02fd612449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16545f2f-f075-488d-b384-0f29d085715a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe999c63-ddeb-47fc-9298-fef3f3758fa2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b0f5a9e-b0dc-46c9-9f68-2e2394f373ce"
                    }
                  }
                ]
              },
              {
                "id": "78d11c77-45e3-45fb-a790-3c7bf89bbbc7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05825778-d695-40b8-8f66-a5a0060b43d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3530324-1b2b-4213-b620-c3b1df70e634"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a122518-7c7a-4a6e-bac1-038c59e335e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1e902f2-f724-4119-896c-f913def621b2"
                    }
                  }
                ]
              },
              {
                "id": "66d9d53b-29b1-4681-af1e-f0ee92267d4e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "555343ef-4442-49b4-9af6-03485575034a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "997de1db-31c6-4101-94b1-7d0e62e9cb6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2d25dd2-0246-42bd-b108-0c57040d9445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f4b44f4d-5189-4750-b10e-35d5b6bf24a0"
                    }
                  }
                ]
              },
              {
                "id": "3e026ddb-74f7-494b-93a5-606219a87f3a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ca8d81a-83b6-46dc-b01d-8167743ea156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e99f62d-7e4f-4fe5-856e-a7f90e40c0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c67890eb-a00a-47c9-8b58-95a54d3989da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8dc7371c-f89a-420f-a75a-5b957d295fe9"
                    }
                  }
                ]
              },
              {
                "id": "9f5ee9f4-529e-4afa-9e7b-f4c6230e6501",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6932ff7-51f0-4bd2-a309-7eaa8b11afc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd96878e-0d08-439c-8b5b-9d4a0f46205f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d153d930-a2e5-4760-9c56-9a2331f0194d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "093d6c9d-c97d-4caa-82f1-ab0d2017b296"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d892496-5a23-4be4-811c-7287faf4e96e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "120f5ee4-888a-42a4-bdd6-8066ead31779"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60285352-a235-4da8-809c-b63a563b5f38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c1ba282-10d4-4845-bb07-103eaf0a3e2d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6e20b0c-f834-4c22-8f66-5d0b1e1587bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f1316d9-3fec-44c9-bab7-b95d1b398b2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74c5a6cd-4b95-4492-949e-fb2aafd2eec4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b845ddd-d5ec-418d-9496-bfdef8cca211"
            }
          }
        ]
      },
      {
        "id": "5535e3df-2853-4ed2-a82b-768c7ab993cc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4358232d-e4a6-48e6-8f48-c76556e6482e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "880e9033-9012-4bb2-a9bc-4a652796ac06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ac77f9b-078b-4397-a1a1-1e27de695996",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63aa96f-89ef-4fa4-90d0-83dbe6029f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d455d94-8cee-4426-b918-50a7b4544fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e86b92-a366-4e7e-bf2c-dc097d4957ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "142f10cb-40b3-440b-bb12-a408428ebb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44698d38-4952-4621-841b-05aad80f4fcf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fb6f35-6b43-437c-b96b-39dc23b7704e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5299d6b-afda-4a22-b818-042d0f460130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27d6eba-e1df-45ae-946e-6ec67b9ce276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0938090-96b7-4a14-86de-1f02b508e906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b834920-7c1e-4be7-926a-b88b29319df0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7db8259-5d22-4191-9212-4f71c26ff932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ef43ba-f4cd-4977-8dd3-c366c62703ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6800ebb8-e9f7-418f-96a2-5ae572d5a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44905a7c-dd72-45e2-a631-e1a80fccc0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e2cb95-baa9-49a4-99b1-d221baa114dc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac7bc1d-db5e-4913-8386-2cd2a5cce632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484b1c35-8892-47e3-a25d-38bfb6d9f3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1cf3d1-4c3c-4ae8-82be-a06b2cb90a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae0539c-eb13-40b5-b832-f35272404939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ffb242-bffd-406f-a321-8f912b61f050",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304ba2ad-3291-4c6c-93d4-fa9f5ee47a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb3adae-3ad6-4a6f-a1c6-bb068a498500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a158c-95cd-4158-8963-e2b5e2a24160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "949a73d8-2c89-4414-b1d4-c314bbc9e2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff14387-1a58-4b04-a640-330b5f60b3f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bed9a3-5c75-4427-9b11-6e0049f81b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143a532e-3c21-4747-9137-00cc28ea53a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e22a349-6dd0-4700-9f2a-1d9a8c3fbd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc6020e-2bad-4710-b734-03caed72d08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a059572b-5dbd-41b2-be66-c68b567c03bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5436e2b9-48a2-48f3-b5b3-b07f1d2a44e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeec82bc-2b1d-4dc0-bf45-767b3a2eed64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e19e2d-b962-4cd6-947b-63b0691af2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c173e845-8623-4546-97cf-01000ed09d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b0515d-d2b3-47fa-a63a-44ced9390ab6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c5f7fe-414c-43cb-a68c-c6b058fa4754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f8b84f-7498-4d31-83b6-25aeb1d3533c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a5b43c-eaf2-487f-b6a7-bf5446e7a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca566cb-7507-4309-91cc-59c8d433392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a4f64-e049-42f1-a6c0-8593cd9133f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64daca0-d51d-4b08-b853-600a6c55ba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c020dfe4-6c06-4793-a986-a61580309dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22348a0-2e93-41b8-8a6f-c9845f52fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdfb4a3-dff6-4761-a3ea-16b08cff2a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5371cc2c-c845-4079-b038-332f26e2dcc9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372b3ce7-f456-4072-89b4-48750783e95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4231d54-98a6-4819-997f-128a94866f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3df8e62-aeed-483a-b5fa-c9a469b606fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6625b0cb-39d5-4972-b2b2-c5b1ab3e91df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40590c63-d744-4bdf-9359-a641b722498b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b9eeb3-3964-482d-8917-d1e43df12336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227e7352-dd0d-4fdd-ae1c-61f90ca0b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f236e08d-fdd5-4bc7-801b-456cca6dd160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fcc777-8ec4-47c3-b25e-b8cb773eaaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825db314-5b01-4598-98a6-d7012f6c5826",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4871010-184b-4e3a-93ba-601d5061017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a71a40-5b36-4e81-a90e-b5974c5d1152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d7542-1aba-40db-ba28-3b22c65b5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfe40fc-9e95-469e-ad96-71251e458713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fe3269-b077-48c2-834d-4bfb1d2d4fab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d8682-e51b-4105-acf5-5bf0b1c67bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41763c15-7ee7-4b46-b8ae-8223fc46a68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24773bb9-e5d9-41e5-a49d-3a6008c7fae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c676450-ea2a-4cce-82f0-2e2ae77fe63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff890e1-70e7-4720-a7cd-dc6de5fe8a4e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a9d905-0483-425a-8ce1-ccf1527343b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49abf6b3-9449-402a-b394-f60cbefe5d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf80aa0-26b5-4311-80ce-896f733fdb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c58dd0-820e-4860-b41b-a8e5380adbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebbb507-2d03-4677-a829-b26dc7f0a74e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4fcb94-a44a-420d-9d54-053ec8fabb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914d4b33-20d0-4445-9c1a-bb247ed51af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf5c2b1-c453-4855-9115-ed0233f1dbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b30849-8bf2-47da-8e49-a8a8e312f2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30238444-acd0-4c88-a455-ccbe1917db72",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68b42a0-1a6b-40b6-b325-61e1d93d0480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b7a041-1c70-45f5-8173-698fb8665255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fcfa3a-e17f-4d0c-bf99-f88dba79bc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f4bc75-d00c-4a24-ab98-3506f3b1a67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bb768c-baf8-4033-bdc4-5558b735e027",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e356b24-79c7-4074-a8ff-b5a5b398d796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ea11e4-29fb-426e-af51-521bbb0d454f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f56df69-5b06-46af-88be-d8f853dcb3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8ee206-e910-4d9e-ba52-9088c3da2324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdfcbf4-67a5-46b9-b505-9cdec32b3bc4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898dea13-a177-40b1-a483-0913be8f2d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535205bf-2971-4ab6-b0bd-6da375effa3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d770efd2-6ab1-45b1-a6e2-dc35cf2da2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8255161-c836-404d-9443-f2959c748602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c4f4c0-c9fb-49ad-97d2-d92719052140",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cacc3c-8ba4-4f6d-970f-f308f58ee731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24df2cf-8986-435b-bbe4-0e5ba328248f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a686e19d-0126-4177-9da5-9a1f7d5a2fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd91f80-2897-46c0-8538-93f6b9f099a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba0765-4f6f-44c0-950c-cd388c8719de",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735e74a4-fcc6-4272-a449-29e3d414c940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94b5249-af97-45e3-930c-21cb144393ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1b2d15-52c6-458e-b3bc-a432faf974e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c389fd2-57ae-4280-9e53-3861f0b3c6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07345b9c-2a42-4270-9693-3c539ad8321a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ee3865-6d11-4635-ab85-90170e0370ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124e9426-481d-490d-8b31-6eb1e34bfbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5817c533-0a61-4ae8-af26-220bed6ab91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0764d1-c209-41b2-ad7a-a50537bd1231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ea274e-d33e-472d-8777-08744899f6f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04415df8-acbd-44a4-bc0f-f37633e3c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668af69d-9132-4d25-8566-b86f16aeae99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510639ff-8235-48b4-93a8-a98f4358bcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49c6ea7-1d96-4125-9191-a0789edf4690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdcf86e-7ffd-4f91-a5c6-d090ebb5ea74",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af1e580-9a22-4a32-848a-4840ea74c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db2fa03-16b1-41f2-b663-d305fee1fc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17080971-0e84-40f2-baa4-fe75fc7046f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12666806-0f91-471f-ae75-45a767dc898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0b147-45a2-455c-a8d7-b1b7dd99515e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c19c4fe-2f27-4441-92e8-276e136b9f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686833ec-2d8e-4f27-9077-f4f4b7cd32c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7464e7-0953-426e-98aa-dd937a1eb888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ab32c2-d86a-4471-9340-9c460eb5f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e9f87f-fd45-4524-8daf-4212a2bc3707",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ea03ae-130c-476f-9b5d-d143583ad137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ed8980-52eb-4a43-b1ab-8a3bb28c45f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3475f31-4379-4c58-8646-194e63f02005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "535937ca-ce01-4330-abca-ec43c9b7fdd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301424ca-6380-4cf3-9c4b-36e5771477c3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51797565-14ce-4834-9f4a-1410a8298a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50c75ae-3dde-452b-b873-0cc9841e9004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be785692-ba15-463c-bd2b-d0f7f423514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d47a9da3-a609-4114-b4f9-bfbb5e7e88fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41215042-9e72-467d-a9cc-40a8ab925d9c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6071028f-32a7-43a7-b4e8-e6e58ee34a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6133e31b-759a-4021-90c1-e9756037dccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d215f641-7a0c-4285-ac1e-fa8a6c249f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d92580-e778-450f-9b98-36f6f65f72e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d9977c-332f-4d52-86ce-cd58c8d3dd4e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea439ec-323f-46b1-a830-ee9c4000bb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2095e98-2605-43b8-a056-2b3b30e8513e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bc62ed-4ad5-4a90-8544-7c1736351f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0fd85-98a1-4bfa-bf12-43f5bf55b3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0144b88d-9d0d-487d-afea-aa02700ca5ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b5ce92-02f3-4096-8863-f9b5d2acc662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a6c01-0b7a-4b3f-b736-1d7fff1c6c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcac018-e019-4362-b222-a325432d1da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82ab97d-2fb8-4c72-91f4-cb6b02979546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8f9466-9ea8-4ec6-a6c2-6d6d455df048",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275a68c0-2e1b-44d7-b4f0-05f50ead6c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94e1d72-0f4c-4df2-8f5d-a2176485d889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411cfb9e-1300-4d59-9d2c-51666bb5a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a289980f-df4b-4675-acec-c2f18b21a34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff0feca-1438-4122-8f39-a4fc7ba2a3c9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a783a70f-85eb-4f33-9d30-01f5203d6f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4de5790-e84b-49d6-9eab-359699bf98c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b3b0f4-042f-4044-a736-bfdaf97fb919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb54ab31-87eb-420c-b4f0-f8ea8c56f66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef30014-e77a-4bd6-8d67-7b4c78ca5b19",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daff012-89f8-421a-9f67-12aa9e8f103d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a17d22b-9a40-4406-9970-a85bacbcb36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a020c87-76cb-4709-98a2-80cf01358bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c003a3-8409-4a0f-af7d-988013c5c632"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "357eff45-76aa-4a20-b674-0dfd83ca1e41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fdf70d2-e6b4-43fc-a1ec-91e1e4ac3a20",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a1ee5c-57c2-408c-a540-6a33c08db29b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "659e003c-edd0-4e15-b0de-5b99b485d3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57986194-dd37-47c2-bce3-41f2c9a8dc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f348128e-415b-4b8a-bf96-66b963f5356d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a265c13c-fc9f-41f4-b75a-25556bb49766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92dd761f-ef5c-4f76-affd-f33113496b9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57665178-9b11-4ea0-be39-02536de87d43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3df95c64-f3e9-4e53-b35d-b19552b732ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fb602be-5df7-41d5-9aca-2fc6bf2fabff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72dd2afc-244d-4968-a7a2-71c09e8d6898"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "050e6e54-7a4c-4a35-9f4a-b9f88ce97969",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b65ae4c-e413-4cfd-a1a9-712732a905ed"
            }
          }
        ]
      },
      {
        "id": "1fbf3989-8b8b-4e92-8f82-22533d8d12df",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d0cf122e-fffc-4776-87b2-353724b7339f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcadd3a7-c684-4c74-8f63-ba25d6416a0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16427a21-91f3-4e92-9b7b-d0eab531c92d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2742df-9598-4454-86de-99ace89f2503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc46f9b2-dd64-4eaf-b2bc-e34e3d76b653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337a15ef-02ff-4d70-922f-900f95b911ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c23078d8-caed-43a8-9977-fa73ae51897b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f49fcf-8bb5-48e2-b110-a900e354df09",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f05e2f-d4cd-4312-b212-1ab65ad9a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac50d178-5f13-4515-85d4-76b9d6dcb6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7468a27-a220-4101-9159-fbce85a28916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65147d3f-f2a9-4597-999d-a94a96f5f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703973c3-45a6-4267-94ce-bf63c7bfe362",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c25833f-e92e-4e7a-bdc0-01707e8dc11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98627ebe-dd9e-4de3-a745-b94490139a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffecf02-4030-4694-850b-ed2f9ef0826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94fa78e-3edd-46f5-9be9-567e39f24703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36d8457-12f1-4205-97d6-869cb92debf6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c28dee-f5e4-41d3-85e0-8ceace6508f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f110cccd-e26c-4bca-918f-7ac6c891aba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4265a6c9-0608-440e-8edc-96ed9fae1f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a39481a-8773-4b17-a0a8-504097351d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b4d5aa-d138-4dc0-bbe9-8d07e224b193",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f3a8f5-f60e-4411-9ecd-285a6bd9b55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c13156-335e-40c8-9abd-b58f227f6eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e3423a-7e91-4cfe-b53c-855e2683442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dea158a-bc4a-40a9-afb4-b600cea09d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46057118-2207-4bff-bbca-80af359c7572",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba17763a-a198-4524-879a-16543d3ebd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271725af-e453-47c3-92b2-da4c3834dffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01531676-7f9a-4f16-aeb7-40ab5e51cf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8250c86-e555-43db-a336-1950aa88f84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d234be08-41a4-434e-82dd-8d16e8d7890a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df0b13-7811-4531-b924-697d53ab920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f6ea0a-023d-4abb-a6af-9712499f7e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90342a5b-b627-4736-83f4-319a9b033e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebf1425-4be7-4875-94f3-506a7e055744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00673f33-3e33-4aaf-9335-f776175fb451",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dee7af2-3258-407a-852f-bc2e06f42aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fd16d3-34ab-4932-bb2b-6ef8bc918d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a98cea7-c48b-4858-ae1b-dbb6c7804ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68733ac1-e161-4f3e-b726-f70cc111b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e36bd2-fc9b-4ab0-8dce-69ed6d4d18fc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49942f8b-551f-4bcf-af4d-55a65d6c3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e3d26b-a525-4113-bbbe-98c706b5e4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24621198-9c78-4132-abf1-af8902664560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "465e44b3-60eb-47ca-a232-72d67132c9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee952483-f3dc-4152-b87c-ed164cd34b66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5afd67-916b-41f7-8465-3d84c0930e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b14398e-7a98-456f-a84c-d0c0cb0dd116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8d63b1-822d-4bed-9e23-6e9a5307317e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa24ffe7-4310-4fcb-a43d-a67b9a06f32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838a7103-ec6a-4e34-8b2d-6e78079f9069",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd6b7a-5a8f-4f13-94db-beb6cd1b1c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e16100-969d-4cda-816d-f729db47cb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c68ed65-41b6-4ec8-ab55-d95f20364294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b57439c6-6974-4b58-a5f9-7ed59003a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59b68f5-aa90-42dc-bf0d-cce8e1af1819",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53194fd-748f-4560-b8e5-87b1d574d88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466af462-135c-4c56-9bf7-353cef97cf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3d1f51-1a60-460c-9dd5-f6fc26430d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e569db4f-0656-4751-806b-845e66999e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc2dfbe-41e0-42b8-957d-e7d5aaef5015",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f335d8c-17ea-4d6a-8b1e-6d68579d1282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea84f3d6-edb1-46e4-818a-8b26df1257d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf533ffa-91b2-4d40-9392-f6874345d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca96ac80-9e12-4d3e-ad4a-ea64b00f6b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a51753-311e-4ef6-be75-970685f16f79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e929e3d-5e5d-4f78-8637-f536b9037f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9ba0ad-3663-434b-a8d0-72d3ee9eb052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60231d5-8671-4ce8-a10b-7a9c78c5b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1227d7f-49d7-4b9a-bd27-51f77c3c3409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a19c39b-46e5-4bca-b033-daef7ecff642",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315adf10-9d50-4c01-82b8-137c83fd141e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4f8a4c-a452-4073-ad5e-061318dba357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a07ff-b443-4e25-a4c7-8dd4e777fe83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9a2827-223e-4f67-b52a-068bf09e6fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2840cf-6b8b-4bf9-a0a8-014f60b5e5ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540893fe-9f31-42a2-b8ee-0c6d9117e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc18954-7806-4fdb-ad3c-8adf6c717a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6327d1-00d3-475c-b0f6-19b3d2fdad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "837942d3-916e-45a8-a335-dd74506190b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0a3a82-8660-4a5c-994c-e4c9a4cf3893",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d50ba6-1e21-47df-897c-0a68817f2658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebf09a5-56ea-40c9-b02d-ec4043df4bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acd7d1b-bee5-4dff-ac94-6d40df38b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "391abe10-2bf4-4df0-b69f-d3d93f87d608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaee4fd6-89f4-4f8f-bdec-04391f33d3aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e661b-0b83-46eb-8dda-fe8e99b58307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff30753-aae8-457d-aab5-90a23d54ea22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9099a02a-a404-40fb-a7b5-54f3788a2ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b504b3-44e0-4c95-8b48-0d69c1bf0ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9f4a1c-b941-47e4-a01b-15d015693f8a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c823d4-f69e-4bbb-a65e-cf5373c93764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9f3341-683b-4b5a-93e0-2fcd2de0355b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1464f45-85e6-48a0-bd4e-74c628a25ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d930230f-b892-4144-94a4-dcd6afdc5502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845f7372-0388-4439-8b6f-373a90bc4ea4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9ce0ec-782a-4052-aadf-d95c6115f478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3479ec9f-2608-4cd8-95d0-5055ac3e646e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c024b0e6-6fa2-45b7-b9d5-5ae3c64b96f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7151b34a-df9a-45e2-834d-06c132fb723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b6e218-fa7f-4a7b-a340-08c276c1a734",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bf8244-524d-47e3-9920-9e956f3bc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f11096-8953-4efd-a24d-7457c54c9270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61adafba-ab38-41eb-bf33-214fdbdb222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fb6433-b24d-4f6e-92b7-c99b67eef27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d08d440-a2d7-4ef2-8d7d-ef951ae8fd72",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1bccd0-aa0f-44a3-9006-a62217823c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f833fea4-461a-4b17-b303-851c2200d7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0a5051-e902-4158-a577-0a32ea5c3bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7f9ad7-4b59-4f35-8180-48da287d996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac59fc5-03f5-4e47-b745-d74c84ed5a70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cab96d5-98bc-4415-b5c0-009e74d3b687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd7ba34-47af-470c-9cf3-40ee379f2f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064ea489-46aa-4c98-aa18-81d755fa5523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dab5616-b982-4c71-ba89-b9a9d83b6410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbe5c31-f373-48e3-8466-4cd7d983021c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c64c3-caea-40ce-8cfe-eca790f31811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0362d1c9-db70-40c1-8a3d-588bcbc7e863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ffdaf5-ea38-4f58-bb4b-7b2e0dd228b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07b6230-44ca-4bbf-b54c-0d76ec346291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4998b6ce-5de3-4835-8f5a-e4dd971cc2fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc799ec-150b-4003-b825-a54cca96c9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1081ee3d-d313-4034-9846-4d902892b1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6065818-eb3a-4c5b-bca2-e2beb4386e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e46269-203a-41bf-9cff-73dbd1eafa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3215075a-4737-4f95-973b-79162b82a943",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafbc19a-67cc-4906-9ffe-49d8078bf4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3182c7f-3068-48ca-bc28-370e435cf831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d1169-2e4a-4d80-9541-08371a93eeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb0dcef-a8fd-4197-8f4a-65075f7e6856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a3b8d0-51f7-4c9c-a6a6-cdcc601fce1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e0616e-3634-44c2-9d5a-1fa93bbde740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414f4df9-85a7-4097-a1bc-d0e6e90ae2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c80b01-128a-43d5-996c-4db6aad6449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d09359-856f-4814-8687-f62f56c04b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3f5fcc-4157-4b77-9535-3aa9f3581da3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5946be51-ab1a-4606-9fb6-4bb8d0845eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68e013e-c698-448e-ae29-67540acbfe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e4615-994f-4061-9beb-ea2dc68a6b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bad577-e3a1-4893-b96c-475fcfbcb82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892615f9-f332-437f-9d64-6a7218b666f9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a1a254-79f6-4f3f-acb0-1b122ce8806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04446cb8-f926-4bc9-a76b-41336e09a4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b30dd83-8862-4780-b087-0de2f36e91bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85836fbb-0765-4525-813d-a4128bcc0b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf96260b-71f6-4f0b-b504-7e1325fdbe02",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6680e4-75de-473b-aa9d-0ac5b2a5539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f2b21-7ff2-4fed-abcb-e134fee49132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dbf4e6-8da5-479a-bc4e-c31670c0e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f00a7d-bbff-4023-8101-acfa9f616567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6e186e-b544-46f8-a584-2490e43602c8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457fa00-afc9-449e-8564-c4f674cc27e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7259fc3e-ab83-4a46-9825-dd14a9068109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a58406-eb8b-4a10-99f1-c2716068f613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21cdc78-eb1a-4fb5-b892-25ab397e012f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a0031c-c3b9-4556-a6c6-cd655879b0fa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a783df-295f-4ace-8eb4-b2e5c2f88f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d057932f-301d-423c-a1a6-741e509adde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5067bd35-64b0-42a0-9157-65a278171b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d3ebac-2409-47bb-b03f-280daf0867d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d39c83-faf1-43cb-aeaf-f8d506ac69f8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed4e84-0982-4253-87d9-bd154c536467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d400a908-8bbf-4222-a5f8-ad18d8e92d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664b29c7-9526-4878-9d55-e22f03289e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "206ab664-744f-4686-b067-739b722d8bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8365da73-ad9c-4504-a4a3-7e41243c7110",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfded0a5-a48f-4814-a65e-97b37fc3e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc10702b-95b4-4d64-a1db-4e1f254f118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945ea09c-7ff4-4801-a91e-d4a4fb55c66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ebd506-e937-4324-a70a-f47e118dcc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5732e812-4275-4947-a5b8-66e0b5942802",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb84dfad-bb99-41d8-b451-8aea20386e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cd19da-11a0-4904-ac77-4ff58ac241d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef93da1-278f-4a4a-940b-92c0df20fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7449e0-018e-491b-97a2-6b7fd98f8755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20949ab9-b580-4237-b786-014f76ea0987",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6084a4-9df3-4a57-918e-6f74e7cb1280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2898372d-ba1b-4612-be34-cba9a6ed4cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7107c3e-1648-4785-9a96-8c9b4d875baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ebac30-9b12-4683-a57a-7e18b1543b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f287e20-a56c-42cc-9a0d-eec67bd2c112",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeb3ef4-5844-4f36-a440-e056109f7b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cec208-a69a-4dcb-9d76-09d1cd035958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f15427-62e8-4545-a5f3-62ff945a744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae13f563-8872-4614-982e-e8849c3f8899"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cabec8eb-1979-40d6-bfd4-b608825224c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ffd6cdd-7016-41be-a840-ac3d50aa23e6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b731b1ea-9707-4e91-a0a1-6c4158783967",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60297462-5f65-42cc-84ab-87d563202cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322733d3-22e5-45f8-8bd8-e91bc7baa4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba7f6717-6fcb-46d9-8085-12fe5bb9e25d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2c999e3-45c8-4b68-83dd-4bef395be8fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81d8fad3-ccd3-47ba-a15b-551256bc1211"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ac02669-8fda-4460-b18c-3e19dfd55665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98cb7ef5-a827-4bdb-bdad-622b90b09de4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "975e9c09-17ae-460d-9990-d8884169e3f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6232021-f989-4619-b11c-7ed99d998192"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd3c037b-fbdf-4e92-80d9-c105f2bc9f0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a470f2d3-2af3-4ea9-af49-2b37a29cedb5"
            }
          }
        ]
      },
      {
        "id": "0cacd099-f589-4bdd-8234-90b8b710b77c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d892c2af-ee08-4f21-b916-f1c78e852cfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65e8c2c2-cc6a-4489-af52-e571881a4ef5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97394aef-89fa-4c08-9cc4-4137f237f04e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f58bfd-7392-42b0-ac70-27315f1ea7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de2425-421b-4f43-8c35-9cdb56fecb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c218b5db-71c5-45ed-9d97-51a29ed963ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f63b24-dad2-459d-b462-5928773279c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1309d8-c064-4e90-9799-f8b0fe3adc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c151683d-678e-4014-9b0f-8f4f5cd29de9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c3e72c-f52f-4a96-9b8b-36247407aeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686394ce-caa6-4a35-b9d3-b0dccbc416c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6db8ee-7919-4205-a345-094af72756d4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc10d91-70eb-4195-90c3-ff4ea0fa6b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b3df63-f773-47f8-a18e-b8dc2b9d6928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8599fe0f-5ceb-4bf4-8c54-f68efeba79fd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d36a1c-d59d-42d9-a4dc-08e3e7aec3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604d8e46-61fe-408b-9157-d1676c1ff66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ebfbf6-427c-4285-ab39-e66af18f4181",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714cb121-e716-4a88-abe1-100049bf2131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8764565-408e-4cb8-a08f-50bf9c35890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efed4fcb-98d7-4fad-8d99-d803c81de705",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c4b343-8f67-4e8d-8ee2-498c4d207046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472ca010-60f2-41a4-97ea-d62162146d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24befdcc-1cdb-4a4e-b26f-d9b3033e77c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599325cd-4577-4ced-8a2f-08bd6711da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f85916-7d3c-49a8-b38b-0bebbb415c66",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1796fa5-bf79-40a7-8164-88b51958ecb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c721fdfa-1741-4d49-ab5b-fea17ca1afaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09dbb2-1e19-464d-a0ef-a7d684d0826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94349d21-6d68-462f-ba4c-682c549324dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d39c853-b481-48d2-b3e3-96d43220b960",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ea7baf-1059-48a7-95c9-302ddf7533e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbc7a6b-8938-4711-bcb9-fd0e12092c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545f816f-9ef8-4790-be6f-a5fb229c3e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f36c481-294c-4645-b74c-f15255f147a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5a1307-1929-4a99-8b23-a2cef8cf8d29",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5201b71-ba52-4363-a3c3-d80e17701ab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170eb37a-8858-4985-b71f-5c172dd6d7a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf853234-fb27-4c02-9a11-1bc24fb22ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fc6b3d-865e-4534-8b9a-19e14ac255b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4433ee7-9692-477e-aafa-bff58150c56f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b2e53a-ad50-41ed-ae0e-3609bdee6ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85a9fe5-ec9b-47cb-90cc-e5938f1af126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad39372-929e-4f2a-b3cb-fff40eb1398f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f878adf6-d945-4202-955a-b5155665d9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d051dcb4-6ae9-445b-bf7d-efb3a07bb775",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c90fe4-0c46-4082-be17-7acd4292b9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233bb717-6ab0-4642-9599-548b6a75ca15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114bfc8-0fad-4dbf-ba94-e028885d4425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a6ad8c-3ae5-4fd4-b3ad-b248ece9c960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b09b5-d006-473c-b06e-7a10346b8028",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256eb79b-43a9-4c83-b2fd-4a15cccdd2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d748edc-3ae3-4af6-8766-bd29a195b835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d346609a-7e58-4caf-b2dc-3ee71d0b39a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8904a88-38a3-45da-bbe1-da8b888bbfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece6dd67-4784-4b28-bb22-67e701410264",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5900e4-b91e-4c4b-84ff-ae07e2fdf5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2d40dc-e3ed-42ae-a10b-1198dbce1ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955d6c41-40ee-41d1-84b1-e7dba7cc7cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4da7288-3a22-489d-b9d1-be7ed24e50d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ae2755-9f41-4024-b2d4-f23f5ff43a2e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0f7d1e-87e6-4730-9ca1-8956ca5a6110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22c676c-2eb4-40af-916f-2db57a249021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584916c2-bf79-40b9-a836-a8b19e100969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9bc84c-8e13-4bf6-8409-5beba2372a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e95241d-6531-4364-b637-b20877355d39",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1762d765-cc08-4e91-8aee-060d12940f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea3f7cf-7be5-49b6-8911-c0b0f98736fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d493a495-28af-4c1a-aaf9-13e463c9da2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701dc76f-51d2-469d-810a-a43d71aba542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e789a2f-9023-42cf-8ff2-2fe2c77aef31",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfbf5c1-e5d6-4e30-bcd1-4db738b85854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530b1db3-29ff-49f3-8a92-2fc84fe8b0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af0b5b-0ce3-43a1-9593-ea324a49c6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5b8215-c6bb-4ac7-8623-e9501669b609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb3004-cd56-4aba-a420-2d74893a0feb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea297d12-2b02-4bcc-998e-e511e2834150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5231ed9c-98c4-44ba-979b-9a477782fc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45bb00c-e3a5-4e58-a70f-52247fa9b120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f895bf2-8f65-42e6-a67d-38a5b0a10258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a58a887-2a48-4477-a751-4eb9d3f86df7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745aaea1-706f-4543-aece-bc265d2f0c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5437628e-3de1-4103-ab8b-d4d662d0ec30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbac9d9-7714-4bce-8ab5-b8d8ecb090e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775c6670-a09e-43d6-aaf6-22d6ecc8da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8362ad50-7687-4870-9df1-f8d5523fb7fa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd47104-42f8-4035-83d1-579c70aaf821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b7cd94-3c02-4319-8042-eb268b57a8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8155f0ec-e4da-45bf-923e-b7734c01ce8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e86a382-b2a4-449a-a2bd-2767c11f1347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dbfaa6-2c08-4052-8fc4-6f2449f6519f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e31479-3fff-4bd6-93e1-d75ce7d12231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ab500b-0e99-4317-952a-7b4bbe037142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70186c7-25e2-47b6-bdb5-259f11255259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1f9878-54fb-4671-abe3-41cfaeafd883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002fcb4b-973f-4922-9498-18ae8cb10663",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966826a6-29d2-43e2-b39e-252292f836ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193d9a1f-2623-4eff-b5d8-8f634234533b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb96ae0-7e2f-497a-abea-fe585667b487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c79ab5-59c8-4bf2-888d-c211762b7629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0e525b-c886-40d7-95d8-ade270db658f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3819aeb-8ce1-437a-95fc-e7df959bdb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f90687-c33d-4a52-833e-e529e81c514f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eda94ce-9ad7-4254-9a2d-f4540446b63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5338fd30-a823-49c1-855c-9db0233b98f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd771be0-ff10-4801-a348-d32285ae9943",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b657246c-c6b1-46f4-81c0-2cce9ba36588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ba0875-a5bf-4822-8541-0d7982d6bf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b2479c-212f-4841-b663-008c49c70b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19236a11-e9ee-4065-a76b-3c7f2336186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c92eb1-c832-4242-a2cb-66ca7927273e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67570a2e-2e24-48f2-8c0f-ee11e596fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fc1d0e-d819-48ed-a590-92592601b70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553396bf-f5cf-4d8f-83d6-7c79cbe1232e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b976a0-2691-4b12-9d80-3899e6b1e08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd579b2-fcf6-4be4-868c-8cd8ff43555d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158adfc2-8332-4dee-a87b-292244d1d115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f010c0-d0a1-49ff-9d0d-0b973a296ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aeb045-bdbb-4905-bb96-2ef66d844d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00db9195-dc13-4c1a-9153-5d241a20e565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61669a94-be74-4166-9b20-d1f92b58ada7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fedbde-139a-4776-85f6-ae04fd585f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "963822a9-8887-4433-ae87-011e8278bb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1aca11-f0e3-430b-afd5-e82466c68c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e707957-8cb6-405f-ba55-6a1a78c92ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb1c72e-7105-4810-b12a-14c2442a7026",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d14c3b4-2628-4021-aeec-4a014dd605fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21309adf-09be-45e6-8c07-a98cad9dd8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3416bd29-1895-40c0-95f8-2bbdc4aaf727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0b9db2-7859-43f4-8b8e-ce2c6cbfc355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef084a7-aa92-41e6-b680-f9a03d3f2155",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb76c78-ba03-4437-8632-44916876d985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7373821-90b3-487e-b98c-2bb23c0ac25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bea2f0-b7ac-41aa-835e-214114bd31e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ec8d38-9d5f-42ba-ac1e-c7c4f51edc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf8c08f-c2d7-4d2f-a5d9-890d9c65bcea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151cef82-6878-43a6-9773-9359425a5c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79c4d92-eb31-415c-ab6c-380f7a0ecc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6d34b-8b25-42ec-a358-fb6f49d5febc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2487d85-84d3-4822-af22-8ea8b7b6cedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85965cd-c7c4-4b0a-b80b-858a4425a296",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e12d7a-c10e-4fcc-8104-99e3b92a3719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b5a3b3-08ff-4d25-b24a-c0fa1dde98b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b509399-9c93-4d21-a44a-84f2071c1e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7dd902-2fa9-485d-b769-87ef298f7dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec65671-554c-464a-b8c2-3e097c2ebc64",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d33f4-a1a5-46e9-a0eb-54b649362147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c24bbe-2dac-459f-92ef-8062c88ef8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5093185-5e09-45f6-a22f-5804c8edddd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26ca7f8-31c2-4f79-9ed4-784065af0803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e66317b-f875-4aa1-86c7-69d553da08b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ab9a3-4b08-4162-95e8-c10a0bfab86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92679c66-fcb4-475d-9b64-dd72821e2776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eec1d5-c524-46fa-9da8-375e9138410f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387c26d4-887a-44c8-9666-187c3c831658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73e5049-0097-4f64-a745-0407219503b4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726b99be-31fa-4618-807a-1e283541e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120f16d8-9dde-4fe9-be5d-25e82ba58b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13087df-9703-4594-89ac-db225e8351c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caac9ee1-a85d-4a31-9c62-96650fdfc1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceceb328-933b-42f4-a74b-03c204d5d787",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c72066-886a-40e9-936b-8b48edd3b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef04788-c3c3-43de-b38b-3009225cf29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b2e38e-6ca5-4096-89fa-d65a3ff3b365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7bb41-5639-46a4-9354-49144fec2d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa1a9c-41f1-4312-9ded-1e150969e92b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cbfc90-ac01-464e-878d-bb4a42ad0709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7437145e-3b9f-4391-9fa6-3913e039605e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705220d9-51e8-4ee0-b10b-778d95731843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c9c94-59eb-427d-bcdf-07df7e237b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7994ac86-e72d-482d-ba40-c64fa32a3b47",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b0b6c4-68b9-42e1-93bc-89bd59af5487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37065f67-397f-4b23-bfec-7e5e07deb361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0863ddf6-3ab1-40a1-8ecc-3bf0519899c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213f8ea4-22fd-4afd-b185-c3e64a913000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082f5bcc-c37c-4dcd-a83f-736e245fac09",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80faa266-1c64-4ba7-95a5-aff3c60882a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db467f2-a71c-4839-adab-35659213d901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598dcdd7-4912-4d14-8b65-2636279786ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e1e3b5-3eb4-49c8-9aa5-eb9cf19b5ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2bf3cc-738a-44bd-a822-e140ee2e7e08",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bfe345-9c18-44c2-9fb8-ffeccabbfc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b5ebe3-3e91-4608-89f0-b3eac8c22dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c35821-4287-4c64-a20d-10e835776d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d3fbba-4207-4ee7-ac49-8e8a72aa796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820d3888-1193-4a76-91c5-0dda18035257",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b27173-520e-4e3b-99b9-589117c8d18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3c3d07-c443-47f1-b462-9c470a9f6891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dfc097-787b-4ce7-9ec8-22a5a31c7963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f92356-af3f-4977-b1ec-c6ce7b5012e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cb76e9-20b4-42bc-b334-cf70a089c71f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33598bcb-fd51-4f49-8562-c8ba5b71c92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078d1a2f-f5b1-47ea-afb8-11c25526485d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d869db4e-c55b-4783-ba46-fa46d983092d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b10faac-a237-43d0-b502-33e0a81c0a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9c3999-3992-4633-b710-08a09e1d4c50",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d9a0c0-2327-4768-a462-d8dc4549ee4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc2d345-53a4-45e1-86d7-a3c3d0e40473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fca681-d54c-4e44-9df3-af66b99d6f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaea5c9-f486-46ac-b18d-3f1af6fd648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7850044f-7f8a-4ac3-9f15-ff5b0b65cdc6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e26db0-96d3-45aa-b0be-4072caad7b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ad0548-9de3-47b4-9893-6482a5400cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64859fcd-89a5-4b5c-bcd1-c0a23a8f2baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020a60b4-ed14-4db9-9e59-1aa0e80b9785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94c357a-eee8-4016-afd4-e13df8f6a961",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f7bae-204b-4e84-8cae-b041c6d35130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f255ec5-c8a4-4693-a846-f0a2e13e8b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd5523e-b463-4557-ad19-352b2c7d9070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75af71c5-a836-4c92-b655-e2b1fa00e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a861967e-b92f-4b7f-8ef0-2aa514501d62",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad94e85-960c-4a45-b667-28910ed7624f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096c3a76-002a-433a-a2f2-e6b3fe151501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a00973-1e75-4fea-843b-aa511f7c38db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fa11a1-f472-4778-aca4-8560cea57549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1685e9-8536-4136-8cd4-920c7e622536",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c993a49-26a3-41c0-948c-1e3f1c4818ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f171b1-fe1c-4d91-94b6-96f99c5de634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21dce3e-c682-4b6e-adb8-32d3e5b8f17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6cc28e-8046-4b0b-9804-c4d58c9cebea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67ba7ed-6709-45b3-969b-8e838fa6631e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c8828a-8283-4778-934e-721162f08031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac12f99b-4cc0-4f31-86a7-8083b1151b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c827cb94-12ba-4948-ac7d-b3d79fd2c3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5119e9cf-91f1-48e9-ad54-14f794d9244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b7dc52-4399-4009-a672-09afb7542640",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71996201-a140-463f-b919-a080a0131823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96813e70-db17-4b9f-bd31-f35892283b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32d9cd5-3d3e-4ca0-8191-56ab7f2ce78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a496dca-90e0-4a4f-a107-ea802f3973c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da82f1c5-48a8-43f9-b479-38bb0d009606",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb52807-298c-4cbe-875a-a9aa1b53afd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0baad581-a7eb-494d-98eb-973ef9cb9031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f33ab7c-66bc-4a9d-8118-f4f2bcda2069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de86f7c6-2e6a-433f-a7ca-5472fdeb4d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc25804-9c87-498b-a5ca-9149056ec9b5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345e821a-6e64-4424-ac02-f6f7887029dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f25ce90-655a-4501-86eb-1a9b4e2d61b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9cbc01-ff4c-4eac-8edc-f9ffea5d40ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050c9567-459e-47cd-b9a0-dd4286417b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad1fffa-5ac8-4b2e-8a49-0cd928793424",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ac1a74-b63b-407a-ab73-791ae25fc667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dde92b9-6ed6-49a9-9055-68def9817756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91a60c2-9399-448e-96d4-c80d27ceaad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b36001b-6000-4b0c-9854-b526bb63ecaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c5b447-d893-4ebb-b5b3-073fa9c6d1ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db254d45-4be0-4857-9061-c9ed401b14dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18249209-4bf7-4f29-8002-2ce6722df6f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f899c647-df5a-4993-ae8f-0ce4cf0d1245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05ba209-d53d-46c7-8def-6330e67d1cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb49171-9252-43e4-9cd8-d987a20354da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4412df1f-d835-44b8-9f33-bf218e76c32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c638fb78-c36c-48be-87dd-ead6a45fcb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e9328b-dd74-48f6-863a-d2dd5be8a4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c2497d-ccf5-4026-b694-4d7c48d658cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c8ac32-3654-4699-ae25-e9f061bd42e0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0989c0-d82d-4c33-87b2-a5981b5bd2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f205ae0d-b666-4a20-a006-eee564c3f720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aec1dbf-fece-45e5-a91e-04f864426bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543bfbc2-4fe6-4143-894a-043c0b118e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f3ef15-9dd3-4d2e-b20c-b380d86f5194",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece981d9-5604-4d50-8dcb-e4636d4bc894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fb6725-0ed4-4d2e-a421-231d1d30289b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9852f333-baf6-4195-bca1-8a2a3822aa87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0d740f-34b8-47c3-8b02-8b45f8d771d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f913fb-bddc-460b-a5ed-b9e077710b13",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e453fd28-51b5-4cea-a0e4-b72161e55b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c26422-32e8-4eae-a2a8-0833dbfa147c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026294bc-4abe-4f77-ae2e-761b6cab0c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af93f51-3c0c-456d-819e-2c59523c02f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b65a0-d99e-46b8-a25c-a5379df214f1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77908f46-e287-4e1d-bfb5-b6d9485a9085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4262ffd-5704-4faa-8f1a-b7b030771ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ff6f81-bc24-4426-a6a7-32e735e00975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccd2d40-7dae-414d-b6dc-a7f6ee8dcde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231976ef-b800-466b-8f18-7c03e7efa454",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc1002e-0e4c-47f4-8bfa-019c16790a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4aeb20-5fdc-422d-ad74-575bbe76c4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635bfbdb-168f-4250-be04-c20237a9ee78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35231a8d-ee19-4d9d-aee9-c94a0a6e16d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11129853-befe-41d7-add0-2b48e40c04f3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6b0db9-cc4d-4068-8673-240deef62abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c4599d-a32a-48c2-b787-fea9623c3a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e9e116-a32b-417a-a176-b78e2a34182e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0939e8f0-4934-4211-9235-07f6c82f24a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95edf107-bdd7-45fd-958e-ac0a7b164296",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c1709-81b7-48ab-b815-6eef7a29f3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be6035b-a2db-497f-be20-becca862a7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0438b4a2-89b7-4070-b8d2-99ba17db0adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79980042-b8d2-40d0-b005-f27c9fbfd00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2077193a-b6be-42b1-9af0-ecdf63657cd9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081d209f-b62c-449b-95f7-d70dd000f0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f1c791-38b5-4376-9c82-f0b7484c896d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c306195-030b-45d6-9824-4aa573f043f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4611ead2-f956-4d4e-9a05-d811921a17be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86cd770-4d38-479d-8440-6d54aa225d55",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4ad6dc-921b-447b-8568-4d3dbc581ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a48d9de-898c-4b70-83d2-d9a566a32297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacd3bde-97fd-45f5-bb0a-b4da29642266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63383cce-c695-444d-bef0-90667c1f9690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1aa6a4a-29b0-4dfa-8b4f-608a524b5ad8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c3e2c1-cc9e-43d6-9761-ac2e306a3335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988dfcdc-3a13-4388-874e-a0972de1d25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084d50d7-85aa-4a16-98e2-5daf42d35a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7ba6c6-1f2c-48c0-9023-f612bcfc7d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ba6874-cc34-4d28-9276-e637e4ab3723",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de4c1e-86f4-4ead-8a9f-6294cdbdaca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa970ce-464e-4f13-a067-e4c4f8970153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288e85f5-0db4-42f2-966f-3daf32d0d591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c408fa0e-fc18-48c2-b433-5c5b691305e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f9ff7-5ba3-4e61-80b2-b25987b5bb6f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5f674f-fa12-4bb8-9f79-a4eaf4ccd805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7421a5e6-f7e3-4186-aecd-5de15aead96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83168665-c230-4d7a-904c-b42a20814f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5927b1bc-f741-4c75-ba34-a3cfe15f22f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fc1bcb-c88e-4bd2-8892-2b4107e036de",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518699b1-6812-43bd-81ae-3daba807954a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f87ec9a8-2e92-4b18-bbd0-c96ad88cfcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8958e052-6d93-4d31-9087-85aac6709438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80a7dd3-917f-4176-be7b-43e84ef49acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079147e4-af8a-40d0-b0fb-2da7e9f72dfb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c9b958-8ca6-40f4-99b8-e97d441605b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4687f18-e2ca-4d2a-8bf3-4683834496ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d412ad1-ee62-45e8-b85b-ee98c06f5c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018e9aba-4d3f-4d4c-8e12-4519d2aa7bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e2379c-355a-47f9-a0eb-5e58b432902d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3338aa-d457-478c-94fe-58b301fba4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196416f5-7103-4efa-a350-50985f2d5e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19364d0e-a68a-48a7-98de-4cb256f8ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0c9cb9-ef31-41ff-b1c8-bb157b0e476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdb9ffd-3ffa-4d67-8767-2cd39f7674fc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6249acd9-f55c-4c6b-b31e-8f507f7405e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7fb5e4-222f-4e36-aeda-281ded54f2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44fdd7-5272-497f-b932-f64cb1c0d4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ceea73-b274-45c9-8cd9-395202cfc6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90a8028-2c26-44fa-aa8c-e286228b6985",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca93f14-463b-496a-847c-a4fa2900b882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f66f6f-a3de-4bc6-a11f-8bf7a560aa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90363e98-c828-4884-8604-0ed1feea6ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fb7d46-7a78-47e2-973e-2a97b6e9d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d75f87-e012-4ac3-839b-4599ac9af87a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bc8b01-81eb-41fc-b9b9-84e095ea77c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd2c5ce-83ad-48d8-a550-3cad42a82855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379ace9a-627d-4627-b586-d8e847ee6945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2feaefe3-dadf-4816-b340-1018c025a3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f27efb-754c-4854-83e5-65330efb1159",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f176e105-e945-4a87-997f-2c386c3cadae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8449bd6d-46a0-4870-b2b4-f091bed45b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e378816e-1419-4538-af30-634b71b5c145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4cd851-179e-4382-93f7-b861f8d7f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6d2c72-3094-49cf-895f-c9419e352b99",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3e5206-f904-460c-a0db-69a9d5f05dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bc5cd7-b6e0-47a7-8c1e-56bfeb8a307f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5975ac-ef47-479c-bf49-78e1a7d7a6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c71f0e-346d-439b-8179-9ca99f82a5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d7827d-5fd9-4473-b5e3-3bb37bd620ca",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da02e92-d4cc-4d80-9ce9-e95f6a5787c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e460b7ff-0e6e-4d5b-848f-423b39a679a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb975d2-c5ba-4583-8bee-42ec4bba48e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d91e4e-30cc-4607-b1c5-bb035e55a3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b229e91-1132-4054-a5d1-dfdb0430e6a2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046bd35b-f51a-4b02-a95b-b0e982af4460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978db71c-b3f9-4e93-bc5a-c631aae04209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce3fa10-10c1-472d-8d60-92a3ed949fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9d50d8-ad51-41db-8833-4a24c64c921a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ab3817-7a12-44f1-b73a-8381472bde72",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b9f0e6-5ada-4431-9788-b10fe7e85764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2324dcac-42e2-44a9-a51a-0606b17df5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e22490c-5a5a-4ff5-894d-e7daf1a12114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a78e550-2ea4-4b5d-9625-54df3fddf43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e21acf-7ac0-46b8-aedb-a996fcd3bbb0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b592841f-02b2-4d81-be9a-7e842180bf33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc2f857-5d29-4e39-9d06-4891a6b9fea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f669132a-0bd9-498b-bed4-07e8ee4cf055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0678ab7a-ebd5-44a6-a194-a35d26719f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6ec6cd-3931-480a-8dbd-9d7b4da09024",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c030f94f-ea6a-4cc5-aecd-e5bf940307c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36dee97f-8bd3-4b75-beaa-6b10d4dd1298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e8d443-12fa-4468-9e34-0fbf5860587e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba291636-0669-40ee-8453-01f11311123a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d80659f-4bac-480d-9ee0-ef26ed75b727",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d66974-e413-48e9-b504-942026e53c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a2c124-56eb-4a69-b32f-89e9542b0af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0e9ae4-784a-4e23-b16e-35128206e141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e8beef-aeaa-4d1f-977c-cf4bac5a5fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208b09ba-692b-4b55-b63e-1b8d435f61cc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5ba940-8894-4294-a3d2-15051d24c85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6a0e56-ab81-45f0-bb23-a874fa3f25d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a259701a-2bd9-4ab5-a537-f8e251244895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a801fe30-c9d2-4432-bc08-e1cfea64cc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2a12f4-6f8c-4b45-bed8-db254c85dce2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8d8b07-102f-4274-9e7e-7343c090fcc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21b91aa0-7716-4183-ae54-42309109056f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067843d2-989e-4eb2-804c-7d29ede54907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb78759e-3573-47cb-a917-a04d2271af76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4e78b-ba27-4259-9f58-ad5222c55487",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0e2fc-07af-4062-8754-b864f4cf38ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81984e17-f972-417d-815e-ac2442810a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f46620c-19f2-42ef-9dff-100f18b918a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3043efab-1d7d-44dc-9086-d758a74efd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd729be-64d1-4c1f-b931-0e0752232b0f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d512a980-a0fc-4b94-afc6-054cd8b26cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0108990-8b0b-41bf-85b3-8667385265c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08097ff-75c4-4a04-ba6f-239760a0a147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe460f2-040e-4a07-a9ae-eb4e52c1bfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e63143-4e32-46a9-9593-d7a84437a908",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d8475-0e46-4be8-9490-6b31a21f35b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d62542-9113-4f7e-8b3c-decf944b853b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec286987-8b5b-4161-8db6-79897bbf4c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ce32d2-c8f9-459f-a5f9-a2d1606ba927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c7bfc8-4f02-4344-b834-c5a6a60236aa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5378d9ec-e242-4b14-8527-60dd5477d98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83fb8cae-12a9-4ce2-97cf-db317fb13bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37005d8c-11ec-46ae-afde-5a5fb105438f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba5440d-b64b-4b21-bf18-7f31f1553d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cd702e-105c-4e99-851c-5f00bc25e192",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69462e3-f9fb-43f1-bc7a-4331cb844420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f27d43a-d006-4518-8d4d-504613b04841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7629a9ae-48a5-4feb-aac8-67ffddc9c204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89da415e-beca-4f34-b746-207524b6d2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3d6795-90b2-447e-987f-69ca5a935205",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc866779-e8ba-4e4f-9e88-f68d1d201366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39472347-73cb-4967-9fd9-d57cdc50bc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e751f17-451b-4462-9952-14a3c58acf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b025c4f7-da7a-4278-8075-e0840d98ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5185274b-53cc-4f5d-bba2-85d97f1cc3f8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbdbaba-a062-47ee-8815-5ec9e17bc0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97028bb-1084-4f4a-9cab-1690a7186cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa825c64-6457-4ba8-adbd-6fb8635a9df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe8381-6675-4e8b-b887-e19767fa860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc76fb38-53ec-44a4-8c7f-6b4345185a4b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d024b-4af1-4503-a40f-58aeca01b347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ea268d-8adc-4d3f-8a84-5f46f100252e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d8bb9-52ef-4032-93ef-2cde5bf8e9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b177100b-de9d-430c-ac6c-d20fbf0b27a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3905b17-0ecb-4166-b140-052083da252b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad41ae9-f5a2-47fd-952b-9df9487a19f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd5c7594-1988-40b0-85fa-0ab1761ed208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff83c983-5370-4921-8b40-1f070a5b4d3d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683def0f-22cf-4b3f-af2a-901588f3522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9472ba65-89f5-4620-b664-d8a119cc9aa6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcbab08-0a2d-41a5-a3d6-9fa1abb03b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c3d1d16-fdff-4785-be66-acb92a3dc440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4670495d-32a6-4906-8314-7bbe64ecce20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97e85f1-d37f-4265-af67-dd55057a56a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52377d5-b073-46b5-908b-7cfa2b7b2e71",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7132b0b2-ee06-4b5d-8345-9136f67749f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a2a5e3-ecaa-40b8-a05b-84eea7a3fe15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de57955-5406-408e-baa8-5e025d99eced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb218a9a-cb0d-4cfe-8da1-2924be0505ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d6f576-bea0-4460-ba0b-e9535269bb8b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a45ba09-2431-46d3-9d57-af0753cbf344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7a96cf-a6ce-4e54-b34f-40f7fcc2fba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c99c4e-c786-48fc-b588-0661963deab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bf5240-dc71-48fb-94bf-d26ba5874554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474f70bf-8392-4452-916e-b40f4d6ea319",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75701ed3-569b-4527-841b-42956b2919a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7077f83c-eff9-408b-b152-8239fd292955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceafd045-a046-4d78-b00a-534d641a2ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daef5bab-37c0-481a-8ff0-432b12334ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8f250-4476-4996-a0b1-189dd4ba2c65",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43fbf11-d871-4d66-bfcb-1338327efd4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8154912e-2008-4234-8b74-527e8e84def4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071e7bff-633b-4e79-a3f2-2559603b8cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8bdca5-6969-4e76-91c4-427d31ec7550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7cdf4-8645-41c3-a4ae-65ddfd29ff19",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d34c4f0-d69a-406e-a716-50eaa1441527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f362818-4def-4e5f-9c07-17f73f667c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d05d4be-f525-4517-9408-f79b7f576bab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8668d955-86cb-43f5-b667-b3adb226bf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8803844e-8a36-4d8f-a71a-9cb805f9ddc0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f52c88-b176-4cf0-a6f3-36e374f8fd3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dbaa9e-083c-48d1-b70f-270ec889290e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a970f44d-d6b5-4315-9bae-edec475ff0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4193c1e6-58e8-4e48-8089-f6562f804ef4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "890a68fd-3f13-4b17-a5e1-99164be5cf1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a5cad77-6931-4853-91e1-a49a6eae4262"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "400f6d0c-c0aa-46e1-9b68-78e6e28905ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7420e1b-88fe-4c67-a060-3d90dfebcc85"
                    }
                  }
                ]
              },
              {
                "id": "07e8cb3f-2ae8-47b4-a255-dc53485c8224",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e22b155d-bad0-4e5c-8e77-3ff5f6ae2a95",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e1c8a4-d341-4ba4-a7cf-bb7c1a0e446f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b69a851e-7910-4b29-8b7a-f23bb05b57ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205530f7-583a-4a9a-a850-6bc2f96cdc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c922cb62-1c77-4524-ab60-af1324d01f02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d9c526c-9344-41c0-a614-bccfc35c8459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec57fe21-03ac-4397-873e-7ce352f185a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78eee66e-5e89-4109-9337-9cf5cf29f1d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be0dc34a-fc45-4e67-8c13-837ae7be1998"
                    }
                  }
                ]
              },
              {
                "id": "60bf16f7-fe62-4725-a5c0-795a1b2bb195",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab84df60-3084-41a1-8a79-00897e246fa3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c92464f-94e6-4ff1-b8da-9e6e5d99ac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "916383ec-4bb4-4197-8833-3f1ec6d2a068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ac88ff-45cd-46f1-9968-96471c383fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829ff279-1eda-4f47-ab4c-bfbac4c60b98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21713ed1-4303-4c8a-a580-535e5f9061e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d02dab73-440a-4e46-b111-b5c0809c91ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a01e0405-5825-4b5e-9edd-97e6279d03f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a1a1cfb-beef-4db1-88cf-3829d40e56bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6be5d7da-bc7d-4e04-ae29-7e57382e5140",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88b95918-4b00-4bbb-9e0d-6d36c04efdc2"
                    }
                  }
                ]
              },
              {
                "id": "db81918c-5477-4206-9c64-d53f68bd5309",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5590aae-9fd0-4ea5-ab4f-97208499c54f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8399de5f-bd4d-4df7-b47e-f7711059ae6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b35df19e-eeff-41c7-a741-1fdb0e29a990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d006d7df-f5e2-4abc-8279-8e6f66262008"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34b1bce6-135d-4ff0-b50f-e4a705bbe954",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d5cb7e9-5c38-4930-800c-4e2bb7adc9ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "129b1a7f-3f85-48ff-acaa-d50d150f017f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d34164a-4db3-4d05-a77c-9505a22f1511"
            }
          }
        ]
      },
      {
        "id": "42d9fb2c-17c9-4cdd-80c6-8044d6858b5b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "74ba6e19-c5e5-4e6b-823a-16a5bc7d06fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a52c5c1-fcfe-4a58-a386-a75b32af5ada",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78c2a2a1-da1f-49fc-b60f-a9f9d0fea694",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f32488-c17f-4e41-8344-315cb1533357",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3a7aa668-872f-4698-b50f-544f63105c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f298c1b-9e28-4d23-8379-52c44af856ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c79a9e1-ede4-4e22-baf1-c19759212bae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f25116da-a624-4e8e-9b2d-ad94f0933e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d5cfa11-a7cb-436b-8882-81e253ea6780"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde1a096-6dae-4e80-90e4-60cb91d27ee5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51eacd66-6757-49a6-913b-c2e77202c0e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "115240ea-6583-4ce8-a513-058b86f7893b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a434ae7f-d1d5-4fd8-9484-88e5a2aab255"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbb3b842-2372-4194-917b-159c3ca68e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eea5bc94-7860-464a-b783-f4866f2536d1"
            }
          }
        ]
      },
      {
        "id": "6ece9294-1d31-4406-aceb-c135818536a7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a82ec2a2-8226-4327-b130-dfa2c77459b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e556093-2ed8-4add-b329-3965789a466f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc7c2f77-1e14-4f73-bd52-c0d7585de81e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e78098-4ecd-4185-9823-525f38d0e867",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a58b9d0-1713-42f7-8508-5074baf3b4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b1a59-5335-49a4-a81c-be8eb31277b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b25a923-2bff-41dd-9129-dd6f76dea75f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b49d31d-90ad-4ebb-a3c1-ce145d5e571f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c75775d-2f2b-4299-aa96-6859b886fd53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5b85179-cc3e-4aa2-a48f-37b43c290059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617cb806-b306-491b-a6a2-af19800ec07f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ce6d1dd-d28f-476a-875c-69d78717bc36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "858f39a7-cc2d-45f2-b2a9-89485ef658ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcad0314-cd16-479b-8ff5-e8924d6a7664",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "370c9ef3-b82c-4233-a9ba-cd4b2ee0c9d4"
            }
          }
        ]
      },
      {
        "id": "1fe536f8-a42a-4a16-8db4-46ceb24e6f1e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9c11cbf4-8108-4b1d-9300-a824035876e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e43c7e47-e59b-4841-9180-1016537a7bb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df784cf4-749b-4d3a-83c0-01acb595a234",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5833e5bc-7d51-41de-a0c2-12ca45e47e06",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3e6aebb-d65c-4050-828d-528be091c409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907988b8-7703-4eac-a17d-1d774a133eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88e5aebb-9d07-4057-8efb-230639c974fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbf8130b-6d74-47fd-92ce-74c0b8aef973",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f2a9fb9-2582-4a8f-b9f5-6347ebba2c00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d928144-3b45-4899-9c6c-1e60d3d9f9d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbc2de72-86e9-457d-8e86-8d3de7dbaa27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4113f024-759b-4d2c-ac47-3a48e8268a4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "704689b3-f011-4cd5-b5f7-5dbc8450637c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86d05fd9-f452-4cd9-90a4-fb596016a78f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28b5776e-e75c-4afc-a9e1-11f421171a06"
            }
          }
        ]
      },
      {
        "id": "a88b3439-d0ba-415b-b100-b37fecfdaf13",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e5cfc84-5184-45ba-8ab9-b6a78e0c6f3c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "905c828a-d1a6-4551-b4ef-b9c5c79d3dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f2e305a8-f8ea-4cfc-8a8a-31328839d284",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cd538e7-aa8c-40a7-a71d-920d61030c20",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9959baee-4188-4ae0-85bc-63ddc54a7668",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 275.14035087719316,
      "responseMin": 5,
      "responseMax": 9332,
      "responseSd": 1163.6708438958224,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700872430874,
      "completed": 1700872518677
    },
    "executions": [
      {
        "id": "6003a02c-f282-4223-ad18-0612499ce534",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f6ca591d-621f-46df-9f31-d5f14adb8ddb",
          "httpRequestId": "fd0b83de-5e91-4c26-a489-f1e32d2fda65"
        },
        "item": {
          "id": "6003a02c-f282-4223-ad18-0612499ce534",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8f014762-98e0-469e-99ae-64bfef565b1b",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "8542e540-80c4-4a9f-b8d4-b668fe50010c",
        "cursor": {
          "ref": "70c6d81f-29a5-45b7-bf4d-50fc2be25db2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf689931-ec05-4303-bb37-e785a4067878"
        },
        "item": {
          "id": "8542e540-80c4-4a9f-b8d4-b668fe50010c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8b18d8c9-932c-4c14-8a76-d54c014e877a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "210f1ca4-034f-4970-9e9a-dbc9aaf5aa0a",
        "cursor": {
          "ref": "94278cd8-0c04-4627-922e-32fc4f20ec09",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4759bdb3-0a0b-42d7-8879-c65706a6d947"
        },
        "item": {
          "id": "210f1ca4-034f-4970-9e9a-dbc9aaf5aa0a",
          "name": "did_json"
        },
        "response": {
          "id": "102feb6c-7c90-468d-a9ec-b95a86882c85",
          "status": "OK",
          "code": 200,
          "responseTime": 1841,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802b0f7-f645-4941-a3ad-57b28417f2f5",
        "cursor": {
          "ref": "f2aa4627-7536-4285-a39a-4cea9ba44acf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c579cb0c-5f68-4a73-bc8d-9c5c9e96f257"
        },
        "item": {
          "id": "0802b0f7-f645-4941-a3ad-57b28417f2f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1b61e2f-ff76-4239-94e9-a11de5ef2fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802b0f7-f645-4941-a3ad-57b28417f2f5",
        "cursor": {
          "ref": "f2aa4627-7536-4285-a39a-4cea9ba44acf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c579cb0c-5f68-4a73-bc8d-9c5c9e96f257"
        },
        "item": {
          "id": "0802b0f7-f645-4941-a3ad-57b28417f2f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1b61e2f-ff76-4239-94e9-a11de5ef2fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd9c30-d431-4719-93be-2e61d175313a",
        "cursor": {
          "ref": "12d89ba7-25a5-4bd5-b947-d0ac8cf929d2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7ee3cf60-077f-43fd-a86b-e92427588f74"
        },
        "item": {
          "id": "4cbd9c30-d431-4719-93be-2e61d175313a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9497ddb9-c710-4f5f-bbb8-28aec2f102bb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 148,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22329559-111d-4a62-96c9-e913896a103f",
        "cursor": {
          "ref": "aa426a85-5765-456c-bf4e-f3b05beb382c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2add226c-79c5-4439-b402-43765c909fdf"
        },
        "item": {
          "id": "22329559-111d-4a62-96c9-e913896a103f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cb30c137-741e-409b-affb-43fc050cff39",
          "status": "Not Found",
          "code": 404,
          "responseTime": 81,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a79456-7d61-4995-971d-3b265c1f8153",
        "cursor": {
          "ref": "6d9944d5-f70a-4351-9034-c99dfc573ca5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4764d714-56a4-4215-a11b-c2a8126bc831"
        },
        "item": {
          "id": "f5a79456-7d61-4995-971d-3b265c1f8153",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bcff8013-b3e1-4503-8b07-98625a296fba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b94bad8-d231-4edd-86ea-ac640367d93c",
        "cursor": {
          "ref": "ba8d670e-0f3a-4ae6-a2c7-9701d3c08439",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "46269e1f-7f36-4a39-84f8-0398e7d51c73"
        },
        "item": {
          "id": "6b94bad8-d231-4edd-86ea-ac640367d93c",
          "name": "identifiers"
        },
        "response": {
          "id": "31efffa2-ee10-4e45-bf3e-1a2c2263f11b",
          "status": "OK",
          "code": 200,
          "responseTime": 1289,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f64e6-06e3-458c-b978-d00c909e78fc",
        "cursor": {
          "ref": "a103d52e-1f14-468e-b7ac-2ba653f83487",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5f4ba8ea-fb55-49a7-af55-b80e7a115ff9"
        },
        "item": {
          "id": "f85f64e6-06e3-458c-b978-d00c909e78fc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "abc0b7c6-b0eb-4cf9-b979-1d9839488835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78db2dc-a552-4f13-a8aa-d2b5977822b0",
        "cursor": {
          "ref": "f712d01a-1f32-4bb1-984c-00ef9c41ffdd",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "11a26320-c791-4a31-a88f-602a693642da"
        },
        "item": {
          "id": "e78db2dc-a552-4f13-a8aa-d2b5977822b0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb13c3c6-0aad-40e0-b54d-72e71bc9257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2539cc7-456a-4e9f-9233-3ad93de4a351",
        "cursor": {
          "ref": "d927c9c7-9a83-460a-8271-f8000e54a47f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "95bfa33c-052a-4fe9-80ee-591d3b196ff6"
        },
        "item": {
          "id": "c2539cc7-456a-4e9f-9233-3ad93de4a351",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a9fe42f-437d-4d8e-8022-2597d2e45c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e5641b-437f-4d51-ae59-0ce384f97f12",
        "cursor": {
          "ref": "83aed62e-3766-479e-9dc0-3f821a8b733c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42bc59a7-3203-464f-a5d6-55f44cee9ebb"
        },
        "item": {
          "id": "14e5641b-437f-4d51-ae59-0ce384f97f12",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "060d4ef4-2562-423b-bf3d-4e6363a77e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da534c3a-88a5-4982-b6f9-874f1388d455",
        "cursor": {
          "ref": "a30f14e6-11ce-4684-b8bb-7e7c1b353601",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3aecc2d7-6f8f-40ab-890a-6438f09b3e80"
        },
        "item": {
          "id": "da534c3a-88a5-4982-b6f9-874f1388d455",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b9150954-9616-418a-9e30-5890eff714ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ed72b6-fc9e-4234-a733-e58b7771879a",
        "cursor": {
          "ref": "91e727f7-b49c-434e-af68-ac9c01028056",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "26b551b2-9629-4426-b210-cd05197fa783"
        },
        "item": {
          "id": "f5ed72b6-fc9e-4234-a733-e58b7771879a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a2eaa55d-e2aa-46dd-8763-458a5938d6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61babfc1-2b74-4ddc-803a-3ede18494309",
        "cursor": {
          "ref": "e9f11c48-a9c2-4ec9-a820-95863b4c3718",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f3427b7a-714d-41cc-b8e5-b67b78e33455"
        },
        "item": {
          "id": "61babfc1-2b74-4ddc-803a-3ede18494309",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "28fe087c-3345-4315-b809-95dc37999c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc0a280-4eb4-442c-bb98-664332d55bf1",
        "cursor": {
          "ref": "3bc2e98b-e8d6-4378-879b-13628c3a6fe1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "919190b0-07b5-4845-bd5b-0995e2c23b13"
        },
        "item": {
          "id": "efc0a280-4eb4-442c-bb98-664332d55bf1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5140f341-2bf0-412a-bb2d-45b3eb7b056e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d86b7b-7c68-4066-b610-31f4ffed958f",
        "cursor": {
          "ref": "a25a0740-0c3d-469f-beda-c2debed502aa",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d63f23ff-6b7e-47d7-a90c-0050e49e0a3c"
        },
        "item": {
          "id": "02d86b7b-7c68-4066-b610-31f4ffed958f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b5a791af-38cf-4c15-8259-19bbbab63986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883ef317-691d-4e17-97ff-1f932a5b52b3",
        "cursor": {
          "ref": "fb28b1f0-ebf5-45c9-a762-73f718662703",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6b0846cd-8b6f-49b1-a194-3fb5e1c84db6"
        },
        "item": {
          "id": "883ef317-691d-4e17-97ff-1f932a5b52b3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e86d3b62-a751-4ee8-bfb3-fe832d507e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1f3ff5-1143-4537-9687-092865f05b28",
        "cursor": {
          "ref": "1ea0895e-3365-475d-8683-d9df3570253e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3848f1c5-744e-4246-844b-1ffeba118149"
        },
        "item": {
          "id": "7d1f3ff5-1143-4537-9687-092865f05b28",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e7e6888e-8745-4b7b-a21f-ea1ef5a7c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b781cc2-ee2f-4254-a570-7da907317a85",
        "cursor": {
          "ref": "47255f33-5401-4f59-9172-3751fd233924",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "71c5dbf8-74d9-4f8a-b6db-826c0026c050"
        },
        "item": {
          "id": "3b781cc2-ee2f-4254-a570-7da907317a85",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "013a7aca-01d7-4037-b62d-fd7f1ffc8ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae26f97-c4d7-4112-8bce-cae06f669b5b",
        "cursor": {
          "ref": "0c846a62-2be1-43d4-8e4e-9c23e390e915",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6161653f-594e-415d-9fa5-36eded734197"
        },
        "item": {
          "id": "0ae26f97-c4d7-4112-8bce-cae06f669b5b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "de69b477-0998-4ce3-9a8f-9d1a310fac04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff48693e-e60d-4ce2-b7ff-7f42ad5e8c11",
        "cursor": {
          "ref": "74d39787-4c01-4624-9429-5be875cf7da8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9f4676f5-2aa5-43ad-88f1-7a7d576f1135"
        },
        "item": {
          "id": "ff48693e-e60d-4ce2-b7ff-7f42ad5e8c11",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f621d6c3-761c-4f0b-a8d9-755e21f8ee73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35a68c-be95-44cf-87bf-8cfa4b844a85",
        "cursor": {
          "ref": "c03cacda-8d7f-4986-9b7c-56dc3c302aae",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eff7a6ce-5ffc-4b45-86e8-fe844a4b53e2"
        },
        "item": {
          "id": "5c35a68c-be95-44cf-87bf-8cfa4b844a85",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cc6b957a-ac90-4940-b5e4-4f3e6d618bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a35822-2ca4-4c62-8e99-95d002dd3a77",
        "cursor": {
          "ref": "39e23ee7-001c-4e3d-b18a-cb13be08eb2c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b139f0e7-4d12-42e4-9def-6a893ee07b9b"
        },
        "item": {
          "id": "67a35822-2ca4-4c62-8e99-95d002dd3a77",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "29cdd0d9-2dfd-436a-a968-586fef576b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb2cb53-e2ce-4f22-9c38-3029b44a3269",
        "cursor": {
          "ref": "1bddba78-ed2a-4047-a910-cf49cbeb960d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "94ab2f8b-7cda-4a09-9875-6589b285fce9"
        },
        "item": {
          "id": "cbb2cb53-e2ce-4f22-9c38-3029b44a3269",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cea3ca5a-d7fb-4e7e-9034-1407f34ddfd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f52899-a659-4330-9efd-e3723bd83859",
        "cursor": {
          "ref": "9e27ce01-3d8c-49dc-a677-29ae5ec4f699",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e351edb-8273-4fb3-b088-74800f56289a"
        },
        "item": {
          "id": "86f52899-a659-4330-9efd-e3723bd83859",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d6277051-3e43-47d2-8351-265d0242eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dbc654-7b65-4a81-b715-64da3b95381b",
        "cursor": {
          "ref": "cbfc5c46-3951-4e85-a468-11b15d3057e9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0a86241f-bc97-4aec-bfc6-33937e18a09a"
        },
        "item": {
          "id": "00dbc654-7b65-4a81-b715-64da3b95381b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "980c0841-d1fd-4419-950f-c0efb707b574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb370130-83a0-4f83-9c40-56fdc8bc57da",
        "cursor": {
          "ref": "0a52d597-2aae-4497-b161-2f94e394300c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "34a5c993-05d0-4b3b-aa6d-5de529a012bd"
        },
        "item": {
          "id": "bb370130-83a0-4f83-9c40-56fdc8bc57da",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d33d230e-ff4f-49a1-9c0b-74f4878836cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6695de-9fa1-43e4-94b3-73f15dda21a6",
        "cursor": {
          "ref": "0d4e2e32-2783-4a87-9880-1c9754b962c0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a85adfc7-a13d-4082-8a85-123eeb1e6f6f"
        },
        "item": {
          "id": "8a6695de-9fa1-43e4-94b3-73f15dda21a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e000f27-531f-4836-ad7e-37a6230b2da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f124f0c3-d3a2-43b8-a659-65a75a958c98",
        "cursor": {
          "ref": "1598ddbb-a912-495f-8e27-26f8b6659ed9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eb3f08d9-ec26-4a05-b445-3f43d9adc60d"
        },
        "item": {
          "id": "f124f0c3-d3a2-43b8-a659-65a75a958c98",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "97a1750d-be41-4cd9-9b3c-51132278ba02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926925ad-4cd5-431e-b085-f003b8ece182",
        "cursor": {
          "ref": "fa23189a-41d0-4cdc-89db-a75b91373330",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bc19bf98-97b8-4772-8d84-209104593e12"
        },
        "item": {
          "id": "926925ad-4cd5-431e-b085-f003b8ece182",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cce40378-2e08-4738-943a-adf543c1d27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a89ba1b-d448-4ed8-b228-704f5bcbb6d9",
        "cursor": {
          "ref": "b66d470c-b32e-4b1f-b7b2-c88d18d4b506",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "09809b3d-5de2-4634-a194-01001585a494"
        },
        "item": {
          "id": "3a89ba1b-d448-4ed8-b228-704f5bcbb6d9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "04d89389-5c44-43f0-8d6e-38720c994b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327b9cc3-07e6-4c43-919a-08dd3d8630b7",
        "cursor": {
          "ref": "cc31cd9b-7e92-4571-a14a-d717fe4ccfb2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee238a87-2bc5-4073-bd44-06497bc5c591"
        },
        "item": {
          "id": "327b9cc3-07e6-4c43-919a-08dd3d8630b7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "156d3039-2f8e-4826-9116-b4b3408f84de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13b38ff-386b-4aab-83f0-e82f51c0264c",
        "cursor": {
          "ref": "9de0022f-a6f6-4fa7-88a6-a87cd8e07103",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7f3dfc54-07b8-407e-9d24-0c5bfe29ff85"
        },
        "item": {
          "id": "e13b38ff-386b-4aab-83f0-e82f51c0264c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "504c81fa-fd98-4b57-93bd-851acb0d4b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2724389-4d32-4285-ae19-aa1ef14d0bc8",
        "cursor": {
          "ref": "0a7e0e1b-624e-4d61-b3ae-cd2547843750",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e2797cdc-f200-4707-b7ca-dd261d31b539"
        },
        "item": {
          "id": "a2724389-4d32-4285-ae19-aa1ef14d0bc8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b4d72237-40b8-494b-8888-e21f1099bb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12a0817-33a3-408f-a9f8-a75337772e43",
        "cursor": {
          "ref": "1c3dca49-323d-4b38-a2ea-0d28c467c86a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "38f46efb-3350-4ca0-9c17-1c7f11a4a582"
        },
        "item": {
          "id": "b12a0817-33a3-408f-a9f8-a75337772e43",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac4ed4a2-246a-426e-a981-75426d4d99ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88392daa-1bea-4dd1-8412-9cddcd6cadb7",
        "cursor": {
          "ref": "64ee3ef7-4aa4-4bd2-a686-6f424c1bb492",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bd2763d0-18b5-421b-b820-01b4f4765a18"
        },
        "item": {
          "id": "88392daa-1bea-4dd1-8412-9cddcd6cadb7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3f9e3200-ad15-41f5-878e-b63ee2f6a5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d294ca5-a872-46bc-b9c8-edae271ad72d",
        "cursor": {
          "ref": "fd83a224-3642-4911-bb51-07a87c1baf89",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d157e88f-1be2-40af-b7e3-aaa3de245186"
        },
        "item": {
          "id": "2d294ca5-a872-46bc-b9c8-edae271ad72d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd0c98f9-a2cf-48fe-b8d3-ac4dcf1f94d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911ae7bb-6955-482b-9f2a-b7e5607c21d7",
        "cursor": {
          "ref": "c3b553a2-3d60-4197-acb3-a822b3609ec2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2280bccd-6df3-422a-81be-70bb0b9bfd54"
        },
        "item": {
          "id": "911ae7bb-6955-482b-9f2a-b7e5607c21d7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2ec31c0b-23e8-40f3-bca5-d9eea55b00ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c196a5f4-9282-48af-ade5-a7dc42c8afc9",
        "cursor": {
          "ref": "a158072a-2a5f-414e-8f85-a0357ec5d5ec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b9cba156-13a2-4280-8717-d58bdb2996ac"
        },
        "item": {
          "id": "c196a5f4-9282-48af-ade5-a7dc42c8afc9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a55ae428-40ba-421b-8c23-c3404383f3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3daceb35-1e8d-49cc-96c1-271a6cdedf65",
        "cursor": {
          "ref": "80b8ea0c-ba15-48f4-8e07-a836e4676c8b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8159bac7-9066-484d-beff-bd1637220317"
        },
        "item": {
          "id": "3daceb35-1e8d-49cc-96c1-271a6cdedf65",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c40c496-4110-45a7-96e4-981d56e27b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcb5ee4-3da3-4965-a66a-16b18c810818",
        "cursor": {
          "ref": "b88bba03-963b-48e8-a928-94b2a9009edd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1105c9fe-6ebd-40d6-9cdc-7cdf84707b17"
        },
        "item": {
          "id": "7dcb5ee4-3da3-4965-a66a-16b18c810818",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8f47629a-65a3-4b88-9878-022dfd9854c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d5c064-0da4-4367-90f9-cb604e947d8a",
        "cursor": {
          "ref": "8b9c217c-fad2-4238-bf33-48449f549075",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb49e984-4d00-4df9-b567-ff4bff7a908c"
        },
        "item": {
          "id": "57d5c064-0da4-4367-90f9-cb604e947d8a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "da42dff5-d4af-48b1-8114-10deee9481c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff85d74-d049-423f-a4b0-e11475eefeb8",
        "cursor": {
          "ref": "f7748b08-b692-4d9d-945b-61ce4f0bc27d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "59c8a51c-f945-4a3a-8977-b546a8d24f3e"
        },
        "item": {
          "id": "aff85d74-d049-423f-a4b0-e11475eefeb8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "00d3eef3-702e-4947-8336-5fa55feb3d3c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1533,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423319fa-4001-4559-a4b8-25d9d4af3b63",
        "cursor": {
          "ref": "1e41cbf0-1217-44d5-afbf-dfe8ff0cd196",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a6a84b8a-44e3-4d14-8d8b-48abf3e5301c"
        },
        "item": {
          "id": "423319fa-4001-4559-a4b8-25d9d4af3b63",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "05e8607f-9050-4498-9a38-14641bab260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f407e1-bcee-416e-8ef8-e6f1242253f8",
        "cursor": {
          "ref": "8725e6d9-cd86-4018-8cd2-bbc882acd6be",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5fedca53-b2b5-4723-ae0a-256772f0d924"
        },
        "item": {
          "id": "42f407e1-bcee-416e-8ef8-e6f1242253f8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b79cbb2-063b-4094-8881-d0de91f55e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5620c35-aac0-46a8-81ba-6e29a4ebd8d6",
        "cursor": {
          "ref": "5f24919f-dfd9-4aa7-870f-40684ff80ac6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "af3590dd-9369-4904-90d0-7f07665e68e3"
        },
        "item": {
          "id": "d5620c35-aac0-46a8-81ba-6e29a4ebd8d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e43d0e1d-f1e1-4ce5-9ece-6ad94fe53c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc6301d-8173-4d10-9ead-7088bf5cf111",
        "cursor": {
          "ref": "1cd4b0dd-80ce-4f84-921e-ccb779e8be93",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "25cedccc-3e4a-479d-8a4d-6af359acb679"
        },
        "item": {
          "id": "fcc6301d-8173-4d10-9ead-7088bf5cf111",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8ec21451-4226-4d4a-b59f-fdfed4a557b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9141ad44-07a6-4d64-ad4f-d4d12a50f5b8",
        "cursor": {
          "ref": "5fe8a631-7c87-4b2e-97ac-39eaf8980ebb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0ab90dab-0588-413b-8cc7-dccb66bdfe11"
        },
        "item": {
          "id": "9141ad44-07a6-4d64-ad4f-d4d12a50f5b8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d4059c54-4d56-4c62-b874-dfa7b7b3e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75991550-ddbc-42dc-a48e-6b5908bb7c4b",
        "cursor": {
          "ref": "3be7096c-6131-4db5-9366-556cce86fc3b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c870802-3f30-4ce0-8287-d645a9e593d3"
        },
        "item": {
          "id": "75991550-ddbc-42dc-a48e-6b5908bb7c4b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8ba3ca2a-29f5-42d6-bfae-e572a5c48b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f943b-718b-4a07-a214-2611d4a5f2eb",
        "cursor": {
          "ref": "5f47fe44-48d2-46c4-8847-f93905317970",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "048b5e34-1b95-48f9-a6e8-ef81f8a7d017"
        },
        "item": {
          "id": "5d9f943b-718b-4a07-a214-2611d4a5f2eb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "89183a56-73c7-4d53-b933-0b01c2909104",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1566,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8784bfd0-0858-4eba-9c9a-12cecb8876c3",
        "cursor": {
          "ref": "62191810-b88d-4cf0-a9aa-8e81a67f5b13",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "87732813-1220-4e6e-bd3d-bd4d96e4d6b4"
        },
        "item": {
          "id": "8784bfd0-0858-4eba-9c9a-12cecb8876c3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e89f279-8035-4351-bc92-4af1cf119bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c0f92f-b26f-4c4d-8cfc-f77ae1a46f3d",
        "cursor": {
          "ref": "6ba62faf-a7ef-4f4d-8c1a-3baedf48e715",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "35b3c46c-83a0-4842-92aa-c57de57ef245"
        },
        "item": {
          "id": "96c0f92f-b26f-4c4d-8cfc-f77ae1a46f3d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "129c70ba-8ed9-443a-8fbc-9d482393ddbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b162136b-faca-4407-a023-63182af6d8e3",
        "cursor": {
          "ref": "a062697b-3803-4b4a-b47c-4e7341701125",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4edfcc3d-499f-4944-a1c4-2750719c0f91"
        },
        "item": {
          "id": "b162136b-faca-4407-a023-63182af6d8e3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "26acf71e-431f-4070-8516-43f658a0a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b97771b-4f26-40b7-b7af-62ffb6f96008",
        "cursor": {
          "ref": "41bc8bc4-23fa-403f-85a1-3b45c2424ebb",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8fe41c9c-3543-47a3-bfbf-cdb502c669dd"
        },
        "item": {
          "id": "8b97771b-4f26-40b7-b7af-62ffb6f96008",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c7cc135-047d-490c-9171-1996a62161a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35026fe-c216-4b99-91ec-cbcb896527fa",
        "cursor": {
          "ref": "c649bb9b-cbae-4023-a897-42d0e9b001fa",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5da64027-5c9d-406b-b66e-d39f37573388"
        },
        "item": {
          "id": "f35026fe-c216-4b99-91ec-cbcb896527fa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ec43690e-bf43-4198-93ae-52b7c0888245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa495c3-f360-4417-b443-1e824eaf9b39",
        "cursor": {
          "ref": "70a4036e-b1b2-40ae-8a0c-b41b6cb832a1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a2232d35-4c24-4a1f-ac77-e4d3946630f4"
        },
        "item": {
          "id": "efa495c3-f360-4417-b443-1e824eaf9b39",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bd60f3a1-11d2-4be0-a965-ea836e1ab865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca0429b-3276-4760-b54b-10843d663b9e",
        "cursor": {
          "ref": "2eff5fd8-0088-48bd-84f5-8bcc1c5fa9a8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e8211c94-a256-4efe-ab66-aaa8f6456606"
        },
        "item": {
          "id": "fca0429b-3276-4760-b54b-10843d663b9e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1e41b636-fced-4d5f-ac95-0f43cb3a5159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23d76ab-18b3-457e-9a66-173b5155377f",
        "cursor": {
          "ref": "4a9cd63c-4521-4456-8ce1-c97b838732e8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "79c897ae-65b2-4c4b-a059-0996af13c21e"
        },
        "item": {
          "id": "f23d76ab-18b3-457e-9a66-173b5155377f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c5bea0c0-b0ab-4c40-890b-e65a17ee8f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1e5e8b-fa63-41e8-9a5c-a3d66f77a284",
        "cursor": {
          "ref": "f4dfaca9-1413-4247-810f-e48f8b07d28b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c5fabe65-47a0-4eac-a8c0-3b3b13b19e4f"
        },
        "item": {
          "id": "de1e5e8b-fa63-41e8-9a5c-a3d66f77a284",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c69367a1-7328-4410-99a4-66e43978c124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb965a4-dffb-4318-a720-8d2ff64a54e9",
        "cursor": {
          "ref": "9c2fc6c3-9682-4d1e-a490-40855f75fda4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "991efb03-0c3d-4243-b0c8-0706d91834b0"
        },
        "item": {
          "id": "9fb965a4-dffb-4318-a720-8d2ff64a54e9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b31b91df-4c74-48c2-9280-e75c19c6002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8a930a-8519-4290-8eb1-55df9010cb99",
        "cursor": {
          "ref": "e8c17309-c2f8-4da6-8021-42ae4fdb9a3c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "db7a49f2-6988-46af-9c4a-d399ac84b236"
        },
        "item": {
          "id": "ba8a930a-8519-4290-8eb1-55df9010cb99",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c6cd097a-9880-4f9d-aec8-b1b4e0eaa50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2c5602-6159-409e-a24d-ca84c1eb885b",
        "cursor": {
          "ref": "561ddb0d-196f-4acc-8ad3-e2ae5f21b3e4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2fe77a0b-2d1f-4286-94cf-36991b4340f1"
        },
        "item": {
          "id": "df2c5602-6159-409e-a24d-ca84c1eb885b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6947c38e-d0ce-4dff-b4a1-3743e6437dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a748e0c8-857c-422b-a14e-01e3792a511a",
        "cursor": {
          "ref": "096bb8d4-b451-4e92-a5c5-ff6bcf1ed0dc",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8574728d-381d-499b-bda2-0e1347526aa7"
        },
        "item": {
          "id": "a748e0c8-857c-422b-a14e-01e3792a511a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "21dce39e-9bd1-4748-ae59-29187eb42f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c042dcd0-209a-44b2-944d-47d0f323c574",
        "cursor": {
          "ref": "80734f27-06f1-450c-b388-3f08cef70eed",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f485a59f-576d-4e1d-b91d-d83df8eafb03"
        },
        "item": {
          "id": "c042dcd0-209a-44b2-944d-47d0f323c574",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e0b9e8e6-d238-418d-a59c-4b1bd53d98a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab8f29e-1773-4725-91b6-b533d351d7ea",
        "cursor": {
          "ref": "24e17e3f-c189-4192-aebc-d63f921e4a25",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fa99d534-e97e-499f-8169-6ac7bd2e2b79"
        },
        "item": {
          "id": "8ab8f29e-1773-4725-91b6-b533d351d7ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4f1e9ae1-05a7-49b8-bdf5-22cff153027f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b70094b-a1c9-46bf-b7b8-3d36e8761b6c",
        "cursor": {
          "ref": "372ea729-e5b8-41fb-b2b3-c82ae582a0dd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c9c9431-e560-476c-858a-1fdeca3f999e"
        },
        "item": {
          "id": "6b70094b-a1c9-46bf-b7b8-3d36e8761b6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5567fb2-5fe5-4837-8745-d35931496851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc1048c-6fdf-4e12-8575-a94978fba1e5",
        "cursor": {
          "ref": "5399c144-8193-4407-9f73-833d71d6ded3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6b43a3a3-018a-4b20-97c1-6200991a65ff"
        },
        "item": {
          "id": "adc1048c-6fdf-4e12-8575-a94978fba1e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "38b42836-d3c9-4468-b682-1cac9081fbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9deca-c7c5-4df5-bc4e-faa24255f705",
        "cursor": {
          "ref": "3fe06ab6-7930-4b1c-9910-10aa2cccc7d4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d806db3-7453-4585-be51-fece683fbc8f"
        },
        "item": {
          "id": "b3e9deca-c7c5-4df5-bc4e-faa24255f705",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ac979870-2ba5-4748-96ad-e7d45d916090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd376e-a182-4c4a-a22d-c948641f897d",
        "cursor": {
          "ref": "d73ccf7b-f95f-439a-85a1-e3d8569984ab",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7ddb6c23-9fec-49c3-a4ef-21ec2a6a7b5c"
        },
        "item": {
          "id": "5ebd376e-a182-4c4a-a22d-c948641f897d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6050f03-a8fc-4a3e-af72-35e3df27c935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1671073-4e8e-4cbf-a6b3-c671d0185759",
        "cursor": {
          "ref": "91735668-6d20-429f-9425-bc955a8f7512",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f376e1bf-59a4-4624-857e-f6655d756374"
        },
        "item": {
          "id": "b1671073-4e8e-4cbf-a6b3-c671d0185759",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "648d1908-9bc7-42da-93fa-7ef220a6729e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ba65bf-ed4f-4c4a-84ca-2c0e4f1cc1b4",
        "cursor": {
          "ref": "93c9cfc4-0118-4548-b440-1570c4aa7bdf",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f2fa54b-f3f0-4b86-a9be-c9babc1ee569"
        },
        "item": {
          "id": "b4ba65bf-ed4f-4c4a-84ca-2c0e4f1cc1b4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "350d5565-4449-4e80-927f-42d82dbb5952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2998d4c-11dd-4d2c-afbc-4632f9d2486c",
        "cursor": {
          "ref": "12e76aea-38c2-49de-86a9-bc83ee6f82df",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "057cfcd8-a6a1-4f46-844c-983db05099bb"
        },
        "item": {
          "id": "c2998d4c-11dd-4d2c-afbc-4632f9d2486c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bdc1cf25-4134-4a5f-bb1f-b627f0e632cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12174b75-c09f-4175-8399-18787d2971ed",
        "cursor": {
          "ref": "734c58b5-03db-4618-ac87-f7c9839e917a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9e83271-bdaf-4a84-ad1f-7f329c047aed"
        },
        "item": {
          "id": "12174b75-c09f-4175-8399-18787d2971ed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "40e01878-53a4-413f-abc5-e6e3bad36f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88c4180-da24-47fa-9b69-90b309ff10f9",
        "cursor": {
          "ref": "4043e5f2-7957-450d-b91f-dd13dc5353e3",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7a1ca57d-be85-4810-ae23-c9fd891425fd"
        },
        "item": {
          "id": "a88c4180-da24-47fa-9b69-90b309ff10f9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e8f0b84e-2c82-40bb-9c18-1882a3af1883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e7751d-de9d-47b3-8e3e-b8134b01cd80",
        "cursor": {
          "ref": "4522436c-4247-4d8d-ae49-3f4f24c861c4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8f38264c-8ced-41f7-9b68-27b0c84cd46a"
        },
        "item": {
          "id": "f6e7751d-de9d-47b3-8e3e-b8134b01cd80",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "687a6e30-8500-4224-aa4f-4980851eb4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20026c53-1a85-44c0-b34e-a33772540ab3",
        "cursor": {
          "ref": "657dd8b5-a7e7-4dd8-8f3e-ec81f5c843a9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1b17ee8a-dd37-4877-833c-ce45a465c466"
        },
        "item": {
          "id": "20026c53-1a85-44c0-b34e-a33772540ab3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "db3fe01c-a6d3-49c8-8b62-85e5e4158384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278cb7fb-d9c1-46e9-95ae-c89e7f100110",
        "cursor": {
          "ref": "ff025ef3-5026-48d2-8029-88f91af5c715",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f41fbca3-ddc1-4582-96b1-97738b888465"
        },
        "item": {
          "id": "278cb7fb-d9c1-46e9-95ae-c89e7f100110",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e81ed890-1959-492e-8098-bd0f594ab319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da24e74-d83b-4c48-8821-667b748262f9",
        "cursor": {
          "ref": "40944912-9306-4596-8ae1-cf86f5fb2436",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8108e3d1-3aab-4eb6-b850-5825e828227e"
        },
        "item": {
          "id": "0da24e74-d83b-4c48-8821-667b748262f9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e20274ad-f63f-4405-b2ec-77d7fea9f7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbab051-34d4-4cb1-96d8-ff41df589a12",
        "cursor": {
          "ref": "005b82f5-9ecd-4b08-a53c-ca94b07b60b1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b74c6d95-d66d-4c93-b3a6-aa9f3590c28e"
        },
        "item": {
          "id": "0cbab051-34d4-4cb1-96d8-ff41df589a12",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a668b4a0-573c-45c9-890b-8ffcea8134aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d8f670-b49d-45e1-9a64-8d1cbcbc7182",
        "cursor": {
          "ref": "6468c7b2-c04e-4cb2-9f81-18ae59397fac",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a8a4381b-0c34-4309-b699-607a0c8c2206"
        },
        "item": {
          "id": "49d8f670-b49d-45e1-9a64-8d1cbcbc7182",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3829709e-48ea-42b8-bf2c-480adea7ee91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474daa96-2235-487d-a832-4499f238a6a5",
        "cursor": {
          "ref": "e9b9eb58-7a2d-4cf2-a62c-4034cbea4dee",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0b37a479-070f-411f-9ba8-8a1611711404"
        },
        "item": {
          "id": "474daa96-2235-487d-a832-4499f238a6a5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f4f54ec7-5fbf-4cf7-95ba-80de86d561d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8592bd8-f666-452d-ba25-fc2842899a4c",
        "cursor": {
          "ref": "e078f61a-9bfd-4f46-ad80-c772a3fdcbc5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4fcaf2ec-c727-4185-94a1-89c5bc9c1e77"
        },
        "item": {
          "id": "e8592bd8-f666-452d-ba25-fc2842899a4c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3a182a8a-a2fb-4701-b1c3-90900e814c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdbce06-e2d1-4e92-aa9c-676a452775d6",
        "cursor": {
          "ref": "514975f7-e5f5-4509-b6a1-70b9845b337b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5e1e3936-3fe7-4787-a0a7-cfa89af9ae2d"
        },
        "item": {
          "id": "2cdbce06-e2d1-4e92-aa9c-676a452775d6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4db208a1-c8ee-45b0-9ab1-ee8aba6a1008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc8611-4846-4698-a345-0eea6d77845d",
        "cursor": {
          "ref": "1b7ab6e7-a98a-4c8f-89f3-8f34bbf32172",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b298bf96-ec45-47a1-8c81-33c41e5064a9"
        },
        "item": {
          "id": "0cfc8611-4846-4698-a345-0eea6d77845d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "10abddb8-d3e1-4db8-b00a-be0fd7ed3562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25c3c67-138d-4ca4-b2a0-1c24bdecad57",
        "cursor": {
          "ref": "e0889c7b-9b3a-4489-adc2-8251be55cf93",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3653692-a2be-42c0-8cbd-61cc5be7c59b"
        },
        "item": {
          "id": "b25c3c67-138d-4ca4-b2a0-1c24bdecad57",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cad9110e-8008-43ac-a356-038a56235908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6850f5d3-8eba-4888-b549-fd5dfee020e8",
        "cursor": {
          "ref": "53db5a83-dbf7-4170-89f1-ca3b969b68d9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "159b11ea-c645-4200-a7b2-c517d00b752a"
        },
        "item": {
          "id": "6850f5d3-8eba-4888-b549-fd5dfee020e8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cefb7433-dcaa-4ca6-8aac-9ecc60d68785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3e5c95-4723-4ff1-9437-6653a9f0bad4",
        "cursor": {
          "ref": "1473c4ec-14a5-4518-a18f-17d028a377df",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d92fb5ed-3c1d-4620-8915-0cc872faa5c2"
        },
        "item": {
          "id": "ad3e5c95-4723-4ff1-9437-6653a9f0bad4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1dbbe302-5b0c-49e6-853f-c8be8d4466c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16b2b4b-61b4-4a7a-84a1-b56afebd8f70",
        "cursor": {
          "ref": "320fd3a9-7e4b-44e9-93a2-12b3c99356b1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1829857f-22c6-437e-a6fb-141fdc342d29"
        },
        "item": {
          "id": "f16b2b4b-61b4-4a7a-84a1-b56afebd8f70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "10a7f6f8-e1da-4e0e-8306-a185fa3fe3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba38fb6f-7290-4389-946f-85dcf4f5fc2d",
        "cursor": {
          "ref": "5ac37d94-58f1-4770-90dc-25d09a4617eb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "867d8263-ff26-4fc6-bf03-c6834c24d487"
        },
        "item": {
          "id": "ba38fb6f-7290-4389-946f-85dcf4f5fc2d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "12e29009-eeaf-47e3-8381-92c4143cbef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb8cf6a-fd6d-4104-9fba-ddc900625fcb",
        "cursor": {
          "ref": "70315b2f-998b-4228-ab67-8ce64a3c8222",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "427eacba-180d-4353-94cf-3990fbb72c88"
        },
        "item": {
          "id": "8fb8cf6a-fd6d-4104-9fba-ddc900625fcb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a10d73e5-9cb7-40f6-a918-a9a2d05297ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0492861f-25cf-42a2-bd1d-ce4bf4d6e3e9",
        "cursor": {
          "ref": "6b1d0db1-3289-473b-814b-dfa243c270e8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "67f87434-8327-495f-9169-6909e917f793"
        },
        "item": {
          "id": "0492861f-25cf-42a2-bd1d-ce4bf4d6e3e9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "02871fda-c565-4c94-b539-609ecebddea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adb35e4-7498-44d8-8589-25d8c3756178",
        "cursor": {
          "ref": "e3e552dd-362a-4b06-adbb-de21af8d565f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "47b6a837-fffb-47ef-a587-e843ae9fda6a"
        },
        "item": {
          "id": "1adb35e4-7498-44d8-8589-25d8c3756178",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c8787e54-4bac-4c2e-81f6-62a2f1453de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c0308c-66e4-4ea0-892c-4ff82b4fc17b",
        "cursor": {
          "ref": "aaba9eb4-3f22-4647-822a-ab89293a413f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4d9b0c63-ddd1-47b2-b174-19097d4f5bb0"
        },
        "item": {
          "id": "29c0308c-66e4-4ea0-892c-4ff82b4fc17b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8394a003-bdd0-4a49-adf0-76365ef18b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894b5c40-b2ef-45bb-b676-5b353fc3a99a",
        "cursor": {
          "ref": "72a6a98e-d7c7-490f-89d8-b62fc69ec2c2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "252f57e1-a3c4-4153-b6d0-784208293733"
        },
        "item": {
          "id": "894b5c40-b2ef-45bb-b676-5b353fc3a99a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8df56ebb-c7aa-4a99-9336-5ca00c19fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e0479-0563-4eda-9d2c-19dae46ab6d6",
        "cursor": {
          "ref": "ef0a782e-05cc-493a-a8e3-1d92ad227289",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "49eb3dd2-c3c4-461b-877b-0f26461ea1c2"
        },
        "item": {
          "id": "6e0e0479-0563-4eda-9d2c-19dae46ab6d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "baa1342c-9190-4293-9ad0-ebb8b75bc1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4eb9c6-df86-420d-959c-3ea9c8a670ea",
        "cursor": {
          "ref": "40dc6f08-65ad-424c-b0a7-95edf78e3906",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e185c066-30ad-4ddf-80cf-553a196d079c"
        },
        "item": {
          "id": "9c4eb9c6-df86-420d-959c-3ea9c8a670ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "249b5d5e-b664-4285-a7db-362556b1a043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4439d9ba-ffca-4970-9f86-4cec486ebb1e",
        "cursor": {
          "ref": "8c8393e1-a043-4ceb-9deb-0f47f9587779",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55b36d1d-ede8-4769-998c-9cbafebcf1ad"
        },
        "item": {
          "id": "4439d9ba-ffca-4970-9f86-4cec486ebb1e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "edeafba7-8c15-4eb5-b911-227bbbd809c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5315c150-f6af-4dd7-b6f9-5dd0044222d9",
        "cursor": {
          "ref": "7119a93d-bcdb-4729-8ed8-e6f1970ad5f3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e9a30fc3-f18b-4da1-afb7-09dc831c26a0"
        },
        "item": {
          "id": "5315c150-f6af-4dd7-b6f9-5dd0044222d9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3417e05d-64a7-474e-86f6-192f42f475ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e748586f-4f40-40b6-81f8-6fff5ec46ddb",
        "cursor": {
          "ref": "19ad944d-bac6-4b13-88cd-2480dfedcd0f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1eb06e84-8c23-47e5-808a-4cf99292d5cd"
        },
        "item": {
          "id": "e748586f-4f40-40b6-81f8-6fff5ec46ddb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "601949c0-3098-47dc-bd0b-6acead35df89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e90e83-18c7-465b-9e7c-70fde1f12740",
        "cursor": {
          "ref": "268aee67-521b-47e7-b7ba-106fe0dbfda9",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "598f9c5d-0b35-4f64-bae3-a19814c2bef0"
        },
        "item": {
          "id": "77e90e83-18c7-465b-9e7c-70fde1f12740",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "61e68bf5-66b7-4cbe-940c-3d6b74e8bdb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de88cebc-f79a-40ff-b06b-e4dbdaddd654",
        "cursor": {
          "ref": "6068f083-757f-4e7d-a5cd-bcd668e5d355",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a7abc041-d8af-4716-a746-be484fe69c94"
        },
        "item": {
          "id": "de88cebc-f79a-40ff-b06b-e4dbdaddd654",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f8e34fac-b69d-4912-9687-89b89f3969c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "100f4d78-ef53-4096-9eeb-f0010ddbc311",
        "cursor": {
          "ref": "da0964af-317a-495c-8b01-a9768cc485fb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a0d2ae23-d938-49af-8925-d32b6eeb3ba5"
        },
        "item": {
          "id": "100f4d78-ef53-4096-9eeb-f0010ddbc311",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9be73311-5032-4cc5-9e30-1b019626fe13",
          "status": "Created",
          "code": 201,
          "responseTime": 9012,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f0ec8c-ad87-4e7e-bfc1-a083c7c63a87",
        "cursor": {
          "ref": "193ce34a-3bfb-41fb-833d-baf46c45bbff",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2486aba3-d27a-4529-8a21-aa9760250326"
        },
        "item": {
          "id": "40f0ec8c-ad87-4e7e-bfc1-a083c7c63a87",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e0ddba0b-329c-442c-8c65-178e9741bdbe",
          "status": "Created",
          "code": 201,
          "responseTime": 8520,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d11c77-45e3-45fb-a790-3c7bf89bbbc7",
        "cursor": {
          "ref": "6dc03f94-f3f2-4a81-ace6-cae65bf619b7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a6e32c0-9e03-45c8-8e78-6bc4d747d141"
        },
        "item": {
          "id": "78d11c77-45e3-45fb-a790-3c7bf89bbbc7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c2f7ff7f-b470-442b-943d-b9485f1d3850",
          "status": "Created",
          "code": 201,
          "responseTime": 9332,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d9d53b-29b1-4681-af1e-f0ee92267d4e",
        "cursor": {
          "ref": "4d519c3a-b912-4d9c-b080-5d2cc321f8c7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ba277c01-9051-4394-b7a2-664b3955ac75"
        },
        "item": {
          "id": "66d9d53b-29b1-4681-af1e-f0ee92267d4e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "addca4b2-b3ea-4d37-b40a-66cb997d230c",
          "status": "Created",
          "code": 201,
          "responseTime": 8524,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e026ddb-74f7-494b-93a5-606219a87f3a",
        "cursor": {
          "ref": "c0f8effd-fb00-4960-ae57-7a739adaa954",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "47404069-71e2-4d28-8aaf-6a466979af1a"
        },
        "item": {
          "id": "3e026ddb-74f7-494b-93a5-606219a87f3a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d316e381-8690-46f2-a38d-b07b17fedabf",
          "status": "Created",
          "code": 201,
          "responseTime": 8577,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5ee9f4-529e-4afa-9e7b-f4c6230e6501",
        "cursor": {
          "ref": "f6da5bea-f548-422e-a436-e0d742c26b7d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4bd4eeb3-4529-4052-9031-2c69fd9340f7"
        },
        "item": {
          "id": "9f5ee9f4-529e-4afa-9e7b-f4c6230e6501",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bf4d855e-92fd-4734-b7e5-aa3c68d27936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2ac77f9b-078b-4397-a1a1-1e27de695996",
        "cursor": {
          "ref": "933be3d1-34b0-4b86-b277-bbd7f5c55b4d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ef7a0dff-efbb-4404-947e-166a9c0911cc"
        },
        "item": {
          "id": "2ac77f9b-078b-4397-a1a1-1e27de695996",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b528bf2a-2aec-44e5-af06-ab3c3249ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44698d38-4952-4621-841b-05aad80f4fcf",
        "cursor": {
          "ref": "89b3fc6c-524c-4f85-91ad-a71c61d5c269",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00324f0d-cffb-43d9-9229-03d5aaa7668e"
        },
        "item": {
          "id": "44698d38-4952-4621-841b-05aad80f4fcf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "855e5ba4-1bad-442e-a764-1c8e18055507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b834920-7c1e-4be7-926a-b88b29319df0",
        "cursor": {
          "ref": "6cbba287-9fdb-4949-ad3b-3df46d5c0426",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a30a661b-13ac-4158-b99e-e732e8c5b24e"
        },
        "item": {
          "id": "8b834920-7c1e-4be7-926a-b88b29319df0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ecafa1e-93c9-4e88-8c35-235cd9c57d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e2cb95-baa9-49a4-99b1-d221baa114dc",
        "cursor": {
          "ref": "e58948f9-79af-4b64-8122-3d5d657bed03",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8b896834-ec39-42c2-8699-d4e8e3c38bd0"
        },
        "item": {
          "id": "77e2cb95-baa9-49a4-99b1-d221baa114dc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7aac2c60-bcb0-465d-a423-e4579da98f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ffb242-bffd-406f-a321-8f912b61f050",
        "cursor": {
          "ref": "e498d3ae-b033-4114-8a20-7c3ed5ede034",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "02e13b48-70a1-4cbd-966d-c8d0beb96d88"
        },
        "item": {
          "id": "21ffb242-bffd-406f-a321-8f912b61f050",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fbdcaaaf-fe28-4123-9235-f4f57c397e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff14387-1a58-4b04-a640-330b5f60b3f7",
        "cursor": {
          "ref": "794508b3-fd60-4076-af8f-2e381ca7b560",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb267f4c-4bae-4580-8375-944447c7cd1e"
        },
        "item": {
          "id": "5ff14387-1a58-4b04-a640-330b5f60b3f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74a354e2-df02-481d-8816-f1cff5c2c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059572b-5dbd-41b2-be66-c68b567c03bf",
        "cursor": {
          "ref": "a4f34a3f-cc9d-4b0d-9d38-3d59a1d2e9fd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "97ebd000-8e94-495b-9471-08841e91d949"
        },
        "item": {
          "id": "a059572b-5dbd-41b2-be66-c68b567c03bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2021dfd2-b827-497d-84af-f3cdc8ff0742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b0515d-d2b3-47fa-a63a-44ced9390ab6",
        "cursor": {
          "ref": "799c9d21-2891-45b0-8a47-42d679e23b55",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ce31b416-a6c2-4aab-b489-65ee6afa56bf"
        },
        "item": {
          "id": "28b0515d-d2b3-47fa-a63a-44ced9390ab6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16173c43-58a7-4032-bb03-e21a361cc5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a4f64-e049-42f1-a6c0-8593cd9133f0",
        "cursor": {
          "ref": "acc28bba-9953-4394-b90c-67ba57a50d9d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d27e0bc-c3f9-48ed-9331-0500fa5612f3"
        },
        "item": {
          "id": "ea6a4f64-e049-42f1-a6c0-8593cd9133f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "35333819-30b2-4641-904f-3f60a4d7d861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5371cc2c-c845-4079-b038-332f26e2dcc9",
        "cursor": {
          "ref": "82b1716b-72cc-4a79-995a-da01371be30c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c19a00db-785f-43f6-a097-244cdcb3b1ae"
        },
        "item": {
          "id": "5371cc2c-c845-4079-b038-332f26e2dcc9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ae19c064-0546-4bb5-9a82-a14a8fcb9aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40590c63-d744-4bdf-9359-a641b722498b",
        "cursor": {
          "ref": "c952ddea-5b6b-4100-98a3-99e91215110c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c6fe7c9c-f7a9-4709-86d5-cf2fdf1e309a"
        },
        "item": {
          "id": "40590c63-d744-4bdf-9359-a641b722498b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "880d5d01-6bdf-4155-8be3-9e9e99801a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825db314-5b01-4598-98a6-d7012f6c5826",
        "cursor": {
          "ref": "04190fac-a4f0-426a-ae6c-5fa7080ecf6a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b33665a0-d94a-4086-bff3-dce7d1eac31c"
        },
        "item": {
          "id": "825db314-5b01-4598-98a6-d7012f6c5826",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9447b5cd-a5e5-4409-8d76-63c63880578a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fe3269-b077-48c2-834d-4bfb1d2d4fab",
        "cursor": {
          "ref": "8cce5c45-7596-4d9e-a1c1-93def70b553c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8d38e76e-4b06-41e8-b313-a4160ff7f9f5"
        },
        "item": {
          "id": "c7fe3269-b077-48c2-834d-4bfb1d2d4fab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f7c97268-41e5-40ec-a621-ff9935f48539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff890e1-70e7-4720-a7cd-dc6de5fe8a4e",
        "cursor": {
          "ref": "b899c73a-0c2c-48f2-96b8-0a1a21316d0c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a6baa31a-7433-419d-b3d7-a09cff070f17"
        },
        "item": {
          "id": "5ff890e1-70e7-4720-a7cd-dc6de5fe8a4e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c049a5fe-76c7-428a-a5c5-5afa2b3abc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebbb507-2d03-4677-a829-b26dc7f0a74e",
        "cursor": {
          "ref": "5a60b308-05aa-4261-987e-c08bf20bef6c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e78c00f9-b1a3-4a04-a246-74c2fa7dbf25"
        },
        "item": {
          "id": "cebbb507-2d03-4677-a829-b26dc7f0a74e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5b962184-af5b-4db4-8198-82d7e8d33207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30238444-acd0-4c88-a455-ccbe1917db72",
        "cursor": {
          "ref": "a9404b83-153c-41e6-8da6-b21904b6fbbf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f8bd2419-5db2-40be-b16c-0a6af5044a47"
        },
        "item": {
          "id": "30238444-acd0-4c88-a455-ccbe1917db72",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7d5dcb2b-c217-4b59-8606-b568edddabdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bb768c-baf8-4033-bdc4-5558b735e027",
        "cursor": {
          "ref": "354c0287-5f49-4a27-9cf7-30d83da9e649",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "08b7e70e-a5a5-48c8-8c8a-38c3a9b59ec8"
        },
        "item": {
          "id": "39bb768c-baf8-4033-bdc4-5558b735e027",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d9e087cd-ad86-4f52-aa6f-a2cdc03c68fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdfcbf4-67a5-46b9-b505-9cdec32b3bc4",
        "cursor": {
          "ref": "824d9ba0-49e3-4758-9bc4-9c7165a671fd",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5cb8b43-fb40-4268-92f1-35a2960fc900"
        },
        "item": {
          "id": "9cdfcbf4-67a5-46b9-b505-9cdec32b3bc4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c3fb90a-d128-41e3-82ab-8c0f8a99a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c4f4c0-c9fb-49ad-97d2-d92719052140",
        "cursor": {
          "ref": "29ed269b-e35e-4f85-9109-0e1f2fb30b07",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "92d06a99-65a2-455a-9d95-f001de101289"
        },
        "item": {
          "id": "c3c4f4c0-c9fb-49ad-97d2-d92719052140",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "57a161ce-63d3-40a3-965e-38e7ab0f90fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba0765-4f6f-44c0-950c-cd388c8719de",
        "cursor": {
          "ref": "db49b803-badd-4956-9f75-7478bf07b681",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e31c2e0e-a979-4bd8-a2bb-c0d657cc88d6"
        },
        "item": {
          "id": "97ba0765-4f6f-44c0-950c-cd388c8719de",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3e94ff25-908d-4f9a-83b0-1a3b74c4af1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07345b9c-2a42-4270-9693-3c539ad8321a",
        "cursor": {
          "ref": "449aab42-5905-48d8-ba78-6530765c8f7d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0b73663-cb12-4bf0-b647-a757412b1fc1"
        },
        "item": {
          "id": "07345b9c-2a42-4270-9693-3c539ad8321a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "224cbd95-c37e-487a-8a98-2eb05abfe454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ea274e-d33e-472d-8777-08744899f6f6",
        "cursor": {
          "ref": "a121b4cc-0f43-4e7f-8c54-fe2daf42bd93",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "403fa49f-0106-4db8-8724-56bf948c587b"
        },
        "item": {
          "id": "37ea274e-d33e-472d-8777-08744899f6f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8f3fb8a6-9bc2-41b4-aa84-0ff3cfc67627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdcf86e-7ffd-4f91-a5c6-d090ebb5ea74",
        "cursor": {
          "ref": "bf56b93f-c353-4f26-b2b1-93c5c8341fbc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2dee9ab9-4ba4-48eb-b307-7ee014b1577b"
        },
        "item": {
          "id": "efdcf86e-7ffd-4f91-a5c6-d090ebb5ea74",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6dad47b4-3185-40d6-8898-1529bf837760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0b147-45a2-455c-a8d7-b1b7dd99515e",
        "cursor": {
          "ref": "6f0d22c0-4ff9-4b67-87ce-14e35545c241",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bdd8fbdf-31df-485b-bb40-a1dc95cd65dc"
        },
        "item": {
          "id": "12f0b147-45a2-455c-a8d7-b1b7dd99515e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "69145be3-faf5-49b4-a6c1-a11a6f2527da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e9f87f-fd45-4524-8daf-4212a2bc3707",
        "cursor": {
          "ref": "edefb7bd-5ce0-40c3-8a0d-6381044474a6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3e03e6a4-98c1-45f0-a9b8-02bb402bf058"
        },
        "item": {
          "id": "90e9f87f-fd45-4524-8daf-4212a2bc3707",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6042736e-5f8e-4d3b-95a8-e351ffb0cedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301424ca-6380-4cf3-9c4b-36e5771477c3",
        "cursor": {
          "ref": "ee9b2ba7-530e-42ae-aca5-cf1edc98c228",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a65838eb-3ab0-4e53-b29b-25cbc618bf0d"
        },
        "item": {
          "id": "301424ca-6380-4cf3-9c4b-36e5771477c3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ca043d4b-e349-43b1-b2c4-81110739588d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41215042-9e72-467d-a9cc-40a8ab925d9c",
        "cursor": {
          "ref": "573a03a7-5d04-4b9c-a7d3-622742c00bc2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f9098f06-9cd9-425c-be9b-89168c319d9e"
        },
        "item": {
          "id": "41215042-9e72-467d-a9cc-40a8ab925d9c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8bd64272-047a-4313-bc75-e2b671f5e3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d9977c-332f-4d52-86ce-cd58c8d3dd4e",
        "cursor": {
          "ref": "5f414a01-8816-4252-a130-b2c01fe28ed4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6d102629-1c43-4a76-a2f3-65416713bfde"
        },
        "item": {
          "id": "80d9977c-332f-4d52-86ce-cd58c8d3dd4e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c1c02fe-8ee5-4997-a5d5-268f81184ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0144b88d-9d0d-487d-afea-aa02700ca5ec",
        "cursor": {
          "ref": "30a89c76-f3d4-4232-833b-df96a26a8951",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9b6714c7-9d36-45d6-a799-c2025bc978ff"
        },
        "item": {
          "id": "0144b88d-9d0d-487d-afea-aa02700ca5ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6a2ad14c-cbf9-44f1-a6ad-8f3af8b8732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8f9466-9ea8-4ec6-a6c2-6d6d455df048",
        "cursor": {
          "ref": "2e4f75e5-ce90-4277-8a1d-ded73244c102",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c02e486-9f6e-403c-b06b-b12b87f53515"
        },
        "item": {
          "id": "6c8f9466-9ea8-4ec6-a6c2-6d6d455df048",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0ad92de2-b55d-445c-9ed7-9a73b0d13be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff0feca-1438-4122-8f39-a4fc7ba2a3c9",
        "cursor": {
          "ref": "26cff00a-acbb-49ee-adc5-be0906a6ecf4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ab1db4a1-a14f-41ac-b5c8-4d184b1c0404"
        },
        "item": {
          "id": "3ff0feca-1438-4122-8f39-a4fc7ba2a3c9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d02c9ca0-cf3c-469e-9a77-7c0f6de0504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef30014-e77a-4bd6-8d67-7b4c78ca5b19",
        "cursor": {
          "ref": "a8f785e7-4fc0-498e-a3e3-2f1515854674",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4844918c-718d-4a55-820a-23df7781d013"
        },
        "item": {
          "id": "2ef30014-e77a-4bd6-8d67-7b4c78ca5b19",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7d5e80f3-77cf-48c2-9d22-bfbd4e98707a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf70d2-e6b4-43fc-a1ec-91e1e4ac3a20",
        "cursor": {
          "ref": "1c493317-14d2-428b-a004-192a5f390bd5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5ad79a79-2a03-43e8-a073-c2e4e81f3e44"
        },
        "item": {
          "id": "4fdf70d2-e6b4-43fc-a1ec-91e1e4ac3a20",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f6eca655-7afa-4787-a4b0-ad4c4ad4dc82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16427a21-91f3-4e92-9b7b-d0eab531c92d",
        "cursor": {
          "ref": "4c72bc1f-b780-43e5-b6f5-bc28f7275d3a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17f813fd-552e-45ef-aa6e-696d5e65e87e"
        },
        "item": {
          "id": "16427a21-91f3-4e92-9b7b-d0eab531c92d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27ff8d60-a03e-4afe-aa88-98a83a31da0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f49fcf-8bb5-48e2-b110-a900e354df09",
        "cursor": {
          "ref": "4a5d49d2-d8a6-4896-8fb0-36086cde4ffb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b5e84250-4585-4e9e-99af-bbd2e817169c"
        },
        "item": {
          "id": "55f49fcf-8bb5-48e2-b110-a900e354df09",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "91952bca-ace0-4f9c-9e45-6cc881d73e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703973c3-45a6-4267-94ce-bf63c7bfe362",
        "cursor": {
          "ref": "1436449d-4fc6-4d71-bdc5-9fae21480393",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2481f47a-37b6-4d0c-b064-96bf46a11a4a"
        },
        "item": {
          "id": "703973c3-45a6-4267-94ce-bf63c7bfe362",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ac24110b-c18e-48c8-8cc9-53242bcaa692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36d8457-12f1-4205-97d6-869cb92debf6",
        "cursor": {
          "ref": "680d34ef-db7c-485d-96a8-049d1da4a3a2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e6857db1-f563-484b-a6e6-29eafae32fab"
        },
        "item": {
          "id": "f36d8457-12f1-4205-97d6-869cb92debf6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6ad21edf-899e-45d4-99f9-baf329408299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b4d5aa-d138-4dc0-bbe9-8d07e224b193",
        "cursor": {
          "ref": "f82acecd-e8b9-45a9-ab1f-8110f258c542",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ce67a20c-763c-49ba-8e3a-5f57d2820470"
        },
        "item": {
          "id": "08b4d5aa-d138-4dc0-bbe9-8d07e224b193",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d91ae06-cbe2-4d9a-8eb5-1cd816a3e144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46057118-2207-4bff-bbca-80af359c7572",
        "cursor": {
          "ref": "b8765afa-3d73-4fff-8f4c-7b9383891da8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "05852318-7c66-4e52-909c-f4e52e52a43e"
        },
        "item": {
          "id": "46057118-2207-4bff-bbca-80af359c7572",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ba47c86-aa8d-4155-b46f-e532fa148821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d234be08-41a4-434e-82dd-8d16e8d7890a",
        "cursor": {
          "ref": "c49429d3-2360-4de1-8a80-ccb6e3cb0ed0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "94f3b9ec-7a41-4d69-a35d-29d4ff9ad3a4"
        },
        "item": {
          "id": "d234be08-41a4-434e-82dd-8d16e8d7890a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e8b43e47-472c-427a-8ff1-4ef944086a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00673f33-3e33-4aaf-9335-f776175fb451",
        "cursor": {
          "ref": "40a156d7-6666-4b7f-a072-70542fb06aab",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bbb9fd51-526b-437f-bc8c-c4a64a94494f"
        },
        "item": {
          "id": "00673f33-3e33-4aaf-9335-f776175fb451",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2245256-3ca5-47f5-a315-19cae996e08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e36bd2-fc9b-4ab0-8dce-69ed6d4d18fc",
        "cursor": {
          "ref": "3febf475-f7e6-444f-a080-191f97ac42c9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "952b160a-847f-48bd-a7ca-e08071c5d8f2"
        },
        "item": {
          "id": "66e36bd2-fc9b-4ab0-8dce-69ed6d4d18fc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "141fe449-6aae-4845-a734-d368851c7904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee952483-f3dc-4152-b87c-ed164cd34b66",
        "cursor": {
          "ref": "09eb4847-5855-40d1-88e3-10c85590e2f8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "93144c2f-c9ce-40ae-82fe-e3c9aadc985a"
        },
        "item": {
          "id": "ee952483-f3dc-4152-b87c-ed164cd34b66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e40a6831-4a6a-4320-b0bd-18f4bc5a6366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a7103-ec6a-4e34-8b2d-6e78079f9069",
        "cursor": {
          "ref": "68a44b22-f0bb-40b7-9c68-00f15d54aaa4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e93515d2-b049-4f62-b258-fc81c9e0fca1"
        },
        "item": {
          "id": "838a7103-ec6a-4e34-8b2d-6e78079f9069",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46bbfb25-2e95-430f-8aeb-ef1a9feaf3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59b68f5-aa90-42dc-bf0d-cce8e1af1819",
        "cursor": {
          "ref": "67d50197-a2ad-481c-9180-65fe63d0eeaf",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f34f0684-15db-4af3-a83d-fbb7cc1693c0"
        },
        "item": {
          "id": "a59b68f5-aa90-42dc-bf0d-cce8e1af1819",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8e9a18d9-d1d7-4b97-aaa9-cc6d6df5babb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc2dfbe-41e0-42b8-957d-e7d5aaef5015",
        "cursor": {
          "ref": "a37409a5-b301-48c0-a487-b693a2cb9022",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ea234c1a-9068-41cf-b5b7-b720361a5dd1"
        },
        "item": {
          "id": "adc2dfbe-41e0-42b8-957d-e7d5aaef5015",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c9c9d7cb-688e-413a-aecc-c6edca109c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a51753-311e-4ef6-be75-970685f16f79",
        "cursor": {
          "ref": "128c2aad-038a-4cd5-8632-dcfc4da8e10b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9be95179-8583-4984-9a3b-7f67a6268112"
        },
        "item": {
          "id": "a3a51753-311e-4ef6-be75-970685f16f79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a1ca1ba-688e-4f65-9d51-a76a0da4bfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a19c39b-46e5-4bca-b033-daef7ecff642",
        "cursor": {
          "ref": "43384c6d-eff0-4b19-961d-53a8a629cc60",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe8a7d86-c94f-4701-ad00-adbe12d4e19d"
        },
        "item": {
          "id": "7a19c39b-46e5-4bca-b033-daef7ecff642",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d033cedd-ad24-4c3c-95cd-32303955345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2840cf-6b8b-4bf9-a0a8-014f60b5e5ac",
        "cursor": {
          "ref": "e8b9bdc8-8e93-45f9-ba21-bac336c8ab19",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "32ab893c-50e1-4b02-8e73-2b69f3c44b10"
        },
        "item": {
          "id": "7d2840cf-6b8b-4bf9-a0a8-014f60b5e5ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e473d963-3469-4fbd-bb8d-910d89d0d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0a3a82-8660-4a5c-994c-e4c9a4cf3893",
        "cursor": {
          "ref": "e0823a64-63f9-4d81-a37b-03cc1aa90bc8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9af47b27-5346-4060-a917-e576c5f24b7d"
        },
        "item": {
          "id": "4f0a3a82-8660-4a5c-994c-e4c9a4cf3893",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c5ddcd97-7faf-4155-9c9d-55211352fc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaee4fd6-89f4-4f8f-bdec-04391f33d3aa",
        "cursor": {
          "ref": "b35b46c5-d25f-4dfb-8614-7011d91f0a4a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3b8f17de-3a71-4972-ba75-c23974df5606"
        },
        "item": {
          "id": "aaee4fd6-89f4-4f8f-bdec-04391f33d3aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00da5386-9527-4675-a5b4-2e6e66a45bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9f4a1c-b941-47e4-a01b-15d015693f8a",
        "cursor": {
          "ref": "b9a21543-ad70-4ac3-96a1-b24335ff7d7c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b58862a2-f9db-416b-9539-8a7393ba7b56"
        },
        "item": {
          "id": "cb9f4a1c-b941-47e4-a01b-15d015693f8a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20dd7049-6ca5-4dff-9465-941e547b988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845f7372-0388-4439-8b6f-373a90bc4ea4",
        "cursor": {
          "ref": "ee5bae52-4ce3-4cdb-9ea3-92eeb6fbac90",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "31919393-2b41-4d4d-8e2c-fd2053c1ed75"
        },
        "item": {
          "id": "845f7372-0388-4439-8b6f-373a90bc4ea4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a3def0a-9855-4240-bb80-34a437384305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b6e218-fa7f-4a7b-a340-08c276c1a734",
        "cursor": {
          "ref": "dcab8126-3e4d-45a9-8d1c-e734f79bad6f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c77323a5-ea55-41ba-9f9b-147fe3fea07f"
        },
        "item": {
          "id": "55b6e218-fa7f-4a7b-a340-08c276c1a734",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eace20b6-8f50-469a-a0c0-8aa8b1fb9b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d08d440-a2d7-4ef2-8d7d-ef951ae8fd72",
        "cursor": {
          "ref": "08d0d497-cd43-457d-800c-6ef486d10005",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8debf411-988c-43b2-92fa-7344faa3f3f9"
        },
        "item": {
          "id": "5d08d440-a2d7-4ef2-8d7d-ef951ae8fd72",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a7df4a67-a6ff-4cfa-aaa0-0221b0620df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac59fc5-03f5-4e47-b745-d74c84ed5a70",
        "cursor": {
          "ref": "55281f08-fda7-419e-9a8b-cfe7e7ff3193",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d2b0bfa6-c9a2-4460-aa4c-2360456f9102"
        },
        "item": {
          "id": "eac59fc5-03f5-4e47-b745-d74c84ed5a70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f3ea172f-0715-4858-88e6-4a1a58887dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbe5c31-f373-48e3-8466-4cd7d983021c",
        "cursor": {
          "ref": "8fe29070-40f6-4209-ad7f-c3244c6dcf25",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "00eb75a8-c4c4-4000-8d7c-a284851db675"
        },
        "item": {
          "id": "0bbe5c31-f373-48e3-8466-4cd7d983021c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "841e18ff-670b-4845-b9fd-9d115e0738a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4998b6ce-5de3-4835-8f5a-e4dd971cc2fb",
        "cursor": {
          "ref": "505a65f1-a705-4baa-84f7-742a8a5c3c92",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2888f049-a68a-4822-ae7e-67d150a1c0be"
        },
        "item": {
          "id": "4998b6ce-5de3-4835-8f5a-e4dd971cc2fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ada53dcc-d62b-49ee-a152-264ef1fd011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3215075a-4737-4f95-973b-79162b82a943",
        "cursor": {
          "ref": "13642278-da7e-4283-aa38-7727090481c2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a8f4ddb-e0c2-4ab3-ae9b-e10178164fbd"
        },
        "item": {
          "id": "3215075a-4737-4f95-973b-79162b82a943",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b216cca-0fde-4207-bdb5-65010a10258b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a3b8d0-51f7-4c9c-a6a6-cdcc601fce1e",
        "cursor": {
          "ref": "9b6e797f-4e22-47eb-99ec-62453933e87b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f14b8915-72bf-4335-afbb-2b2450bfb94d"
        },
        "item": {
          "id": "d2a3b8d0-51f7-4c9c-a6a6-cdcc601fce1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c071c7b9-69c5-4a05-9e5e-db3e2a0ed88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3f5fcc-4157-4b77-9535-3aa9f3581da3",
        "cursor": {
          "ref": "c7f01b9c-0948-42f3-af4d-2bae2fb46077",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2e05e0e7-d210-4be2-a508-977ffacbe1c4"
        },
        "item": {
          "id": "8c3f5fcc-4157-4b77-9535-3aa9f3581da3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d45e9914-983a-42dc-97e2-5c64a6d4208f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892615f9-f332-437f-9d64-6a7218b666f9",
        "cursor": {
          "ref": "23bca30e-097e-43b8-9618-3ae78525f968",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "87dc2ca2-d837-42c4-aa89-0f13b92e3b72"
        },
        "item": {
          "id": "892615f9-f332-437f-9d64-6a7218b666f9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b1b031c4-15c3-4e4c-81b7-64338ed008c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf96260b-71f6-4f0b-b504-7e1325fdbe02",
        "cursor": {
          "ref": "6e36050b-892b-4d44-9a84-1c607e844a57",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e97eeb9e-ea89-4e10-9678-c3dcf4e23f87"
        },
        "item": {
          "id": "cf96260b-71f6-4f0b-b504-7e1325fdbe02",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ae25d2e5-99a2-492f-ad72-edbeb6892e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6e186e-b544-46f8-a584-2490e43602c8",
        "cursor": {
          "ref": "704fde84-458b-414e-99f5-ef325e45fbd6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bbf32b85-a6ae-44cf-8db7-03a996096701"
        },
        "item": {
          "id": "6b6e186e-b544-46f8-a584-2490e43602c8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83c9bff7-27a6-4c18-aaae-21c33b0c8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a0031c-c3b9-4556-a6c6-cd655879b0fa",
        "cursor": {
          "ref": "f1fdf24b-1ec3-4672-a582-15b56b057ad8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1a01419a-4eae-4e6b-ab65-15bfb263d1ba"
        },
        "item": {
          "id": "46a0031c-c3b9-4556-a6c6-cd655879b0fa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7f4b5c7d-70d7-423f-9057-3c525b9c5fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d39c83-faf1-43cb-aeaf-f8d506ac69f8",
        "cursor": {
          "ref": "be6f340d-4aa2-45ea-9944-ca8e1effb5e8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6a38c248-e7f9-4196-a1fd-e8742829f131"
        },
        "item": {
          "id": "e4d39c83-faf1-43cb-aeaf-f8d506ac69f8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5eaca74f-0e4b-4caa-a917-80ddaa495db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8365da73-ad9c-4504-a4a3-7e41243c7110",
        "cursor": {
          "ref": "9c00ccc2-e305-4e00-9270-161f927d82c0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a57a1ebe-e736-4c51-b40f-df5cb9800c6e"
        },
        "item": {
          "id": "8365da73-ad9c-4504-a4a3-7e41243c7110",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6dc98c6e-eb8c-4142-9119-dfd9f906f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5732e812-4275-4947-a5b8-66e0b5942802",
        "cursor": {
          "ref": "3218053c-23d3-4296-80e0-cc0af2adba85",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85dfe673-6aea-4c34-a90b-fcc2dfd43715"
        },
        "item": {
          "id": "5732e812-4275-4947-a5b8-66e0b5942802",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b0c98343-8c35-430d-97dd-76ca671b5f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20949ab9-b580-4237-b786-014f76ea0987",
        "cursor": {
          "ref": "53ff16de-6c4b-4fd2-877b-91ef6db71e67",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c18af2ed-004b-4b89-b53d-1f54bda0a4c5"
        },
        "item": {
          "id": "20949ab9-b580-4237-b786-014f76ea0987",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d680a4c-ea84-4721-b7a7-fea321886946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f287e20-a56c-42cc-9a0d-eec67bd2c112",
        "cursor": {
          "ref": "b105d6bf-5afc-4c97-8930-a9127f49b356",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e25f862c-1f70-4a87-97e5-02132154c6ce"
        },
        "item": {
          "id": "5f287e20-a56c-42cc-9a0d-eec67bd2c112",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "122ed4a5-2524-465a-909d-84dc43a0baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffd6cdd-7016-41be-a840-ac3d50aa23e6",
        "cursor": {
          "ref": "73fe8bd4-c404-4707-8cba-88be2f5867a8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2d73a19b-fe56-44e1-907a-2b0f6b1a9b3c"
        },
        "item": {
          "id": "5ffd6cdd-7016-41be-a840-ac3d50aa23e6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c3061bf7-3b39-4532-bc34-ba8f8447401b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97394aef-89fa-4c08-9cc4-4137f237f04e",
        "cursor": {
          "ref": "315fa80a-4951-4cbe-be60-2a1cadb33d26",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52d6b143-6f11-4340-8df2-4b7c4c8187b5"
        },
        "item": {
          "id": "97394aef-89fa-4c08-9cc4-4137f237f04e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "13bb7c31-bff8-4d10-82ce-8677813afc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c218b5db-71c5-45ed-9d97-51a29ed963ba",
        "cursor": {
          "ref": "427f3ecb-fc33-4e53-b9ae-8f40684be15c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e60565c9-4640-466b-a6e6-ed7bf24c90c3"
        },
        "item": {
          "id": "c218b5db-71c5-45ed-9d97-51a29ed963ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b093db6c-d8bc-4b8b-831c-459457f96311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c151683d-678e-4014-9b0f-8f4f5cd29de9",
        "cursor": {
          "ref": "356c608b-feca-4c87-8679-efb9a3e31739",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ef182b08-40c9-4a49-bf95-4b422a258007"
        },
        "item": {
          "id": "c151683d-678e-4014-9b0f-8f4f5cd29de9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6134e904-daa0-4783-abda-bc14352ebf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6db8ee-7919-4205-a345-094af72756d4",
        "cursor": {
          "ref": "86d947d9-4746-4020-a13b-137259bdd410",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "725ab029-0efe-4448-b2ee-04af6487ea24"
        },
        "item": {
          "id": "ba6db8ee-7919-4205-a345-094af72756d4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "96c218c5-435d-4c88-8c88-a7bdc5cf2d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8599fe0f-5ceb-4bf4-8c54-f68efeba79fd",
        "cursor": {
          "ref": "141cddce-7e80-4a4b-9541-b9fdbd5075ad",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cd7322be-ed32-46a1-a9a2-8427c7297d3b"
        },
        "item": {
          "id": "8599fe0f-5ceb-4bf4-8c54-f68efeba79fd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "adfd7f45-8f64-41d9-8763-713f9bbedc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ebfbf6-427c-4285-ab39-e66af18f4181",
        "cursor": {
          "ref": "4fe05ffa-5685-4edb-998a-9129c3342f5c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dce0fd36-b606-4f58-b3d0-cc2192c02bc7"
        },
        "item": {
          "id": "c7ebfbf6-427c-4285-ab39-e66af18f4181",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0e56a9b5-9bdd-497d-b744-6ac92b795e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efed4fcb-98d7-4fad-8d99-d803c81de705",
        "cursor": {
          "ref": "07fd7d1d-314a-481c-9002-c651226ef8ce",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "66852455-35e9-40fe-9f5d-189a21a1f437"
        },
        "item": {
          "id": "efed4fcb-98d7-4fad-8d99-d803c81de705",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f46619fa-d8e8-4eae-86cf-dbd3de972340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f85916-7d3c-49a8-b38b-0bebbb415c66",
        "cursor": {
          "ref": "d59a97e1-0a34-4874-b947-9a86d37b9b11",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fdf405aa-b198-45a4-8a69-bb1a5f3fd360"
        },
        "item": {
          "id": "16f85916-7d3c-49a8-b38b-0bebbb415c66",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d686e4c6-4425-4905-8108-587bb82828f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d39c853-b481-48d2-b3e3-96d43220b960",
        "cursor": {
          "ref": "f53d03c3-f440-4234-a778-47658d4682ae",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9c529fde-0387-4abf-acd2-976d71174e85"
        },
        "item": {
          "id": "1d39c853-b481-48d2-b3e3-96d43220b960",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7351344c-a320-48df-b9a4-1fbd201b85d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5a1307-1929-4a99-8b23-a2cef8cf8d29",
        "cursor": {
          "ref": "c8f5cce4-582e-4b61-ae4f-4d8caafd3541",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb442890-1e93-4cdd-bc0d-6718a3fe8036"
        },
        "item": {
          "id": "5f5a1307-1929-4a99-8b23-a2cef8cf8d29",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "129a82f2-6ee4-4c4f-8709-c82d1ad5ef47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4433ee7-9692-477e-aafa-bff58150c56f",
        "cursor": {
          "ref": "df56d130-d93b-4fb5-9204-53e23153af5f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f488ea2e-cb0c-48b5-bc1a-ebe224b3bd5c"
        },
        "item": {
          "id": "c4433ee7-9692-477e-aafa-bff58150c56f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "071aa6e9-5a0d-4dcb-af5f-0a55be2c6b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d051dcb4-6ae9-445b-bf7d-efb3a07bb775",
        "cursor": {
          "ref": "55c45071-edfd-4f41-b376-f1969ead2de2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5f9d71d6-c60d-4d50-8076-be9e42002d67"
        },
        "item": {
          "id": "d051dcb4-6ae9-445b-bf7d-efb3a07bb775",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "37871063-26ef-4965-9578-1497e3163f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b09b5-d006-473c-b06e-7a10346b8028",
        "cursor": {
          "ref": "2ef22288-171a-4539-94ef-2d793e620a69",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8f64b9d0-4de9-4c3e-91d9-4c73ca921f12"
        },
        "item": {
          "id": "ce3b09b5-d006-473c-b06e-7a10346b8028",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6c318abb-7f33-42dc-b660-7c0e9cfa3130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece6dd67-4784-4b28-bb22-67e701410264",
        "cursor": {
          "ref": "7d9a0331-0087-4a34-80f7-a17446cfb575",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "212acb90-3094-48f3-84e8-95d876b675e0"
        },
        "item": {
          "id": "ece6dd67-4784-4b28-bb22-67e701410264",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2bef0e85-3ed7-4b6c-873b-aa359f525b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ae2755-9f41-4024-b2d4-f23f5ff43a2e",
        "cursor": {
          "ref": "38519caf-3b9a-4db2-afb1-44533db6489c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b8157ff5-df02-4a1b-ae32-6c58ae3355a0"
        },
        "item": {
          "id": "a6ae2755-9f41-4024-b2d4-f23f5ff43a2e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8a0291de-80cf-471f-9f7e-0153d392de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e95241d-6531-4364-b637-b20877355d39",
        "cursor": {
          "ref": "5dbbe4c9-7322-45d8-be3c-22b7bed8a029",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e770ae05-a351-4443-aa99-4485835e79ec"
        },
        "item": {
          "id": "9e95241d-6531-4364-b637-b20877355d39",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0731248c-7d45-4be2-ae43-5bb26af2b0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e789a2f-9023-42cf-8ff2-2fe2c77aef31",
        "cursor": {
          "ref": "a37a179b-7fb4-4945-b27a-b4167ec3efd8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c95bc788-abce-421c-b6d0-0fbc43aa07f1"
        },
        "item": {
          "id": "6e789a2f-9023-42cf-8ff2-2fe2c77aef31",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e4638a6e-4c92-4c0a-b824-2154c8bb1acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb3004-cd56-4aba-a420-2d74893a0feb",
        "cursor": {
          "ref": "446a2e4f-65b5-4e25-8dbf-7251c53f1a0d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "10ebe54d-092c-4e7d-855c-4954629a54f1"
        },
        "item": {
          "id": "4cdb3004-cd56-4aba-a420-2d74893a0feb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ca38b7d9-261f-4cc3-8369-01e71987e079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a58a887-2a48-4477-a751-4eb9d3f86df7",
        "cursor": {
          "ref": "8cea8dcc-955f-4252-9732-94e91dd1791e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c5705191-dd70-4de8-bd98-865a4a4cb64a"
        },
        "item": {
          "id": "4a58a887-2a48-4477-a751-4eb9d3f86df7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cdcf7d26-a717-4cb1-aeb3-bd1338834a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8362ad50-7687-4870-9df1-f8d5523fb7fa",
        "cursor": {
          "ref": "d2cb8640-8758-441a-9e84-f7c64cfdd111",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6a7b0f57-d9bf-4d68-9604-ac6b19619b97"
        },
        "item": {
          "id": "8362ad50-7687-4870-9df1-f8d5523fb7fa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf6084b1-4df7-45fb-927a-94bc0a5dca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dbfaa6-2c08-4052-8fc4-6f2449f6519f",
        "cursor": {
          "ref": "e12cb4c1-829f-45c3-9c6b-0947d424ffc1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f1dc0f66-8945-4dd8-910c-e3b8301b4fa7"
        },
        "item": {
          "id": "34dbfaa6-2c08-4052-8fc4-6f2449f6519f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f847178c-ded8-4d23-85d4-bd1c65008bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002fcb4b-973f-4922-9498-18ae8cb10663",
        "cursor": {
          "ref": "3abecfd3-9396-4ba8-b799-1b065446336c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "789210d6-ffae-4ce4-a85f-c9ae1782cacb"
        },
        "item": {
          "id": "002fcb4b-973f-4922-9498-18ae8cb10663",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "741afddb-4a84-4962-9196-247cf3a1ab0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0e525b-c886-40d7-95d8-ade270db658f",
        "cursor": {
          "ref": "616766d2-1cca-48cb-8d35-07102eae962a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d08c58b6-9bdd-42c3-bcfa-f6856be7d793"
        },
        "item": {
          "id": "9b0e525b-c886-40d7-95d8-ade270db658f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fbbde900-102c-4d0d-b241-e8c70e362035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd771be0-ff10-4801-a348-d32285ae9943",
        "cursor": {
          "ref": "0f9bbdd1-a4c9-430f-a9a9-452df0f69aa4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9524bf2b-24bf-411e-ab4c-e6bdcb69b79c"
        },
        "item": {
          "id": "bd771be0-ff10-4801-a348-d32285ae9943",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d0e16dc0-53f5-4cb1-bf6d-84b2d89e9a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c92eb1-c832-4242-a2cb-66ca7927273e",
        "cursor": {
          "ref": "46259f74-e637-457d-bba2-9969f6d864b6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c2800eb7-a1a7-45ae-82f6-54e6a26a905e"
        },
        "item": {
          "id": "75c92eb1-c832-4242-a2cb-66ca7927273e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8aa3339f-9677-440f-be5f-fda7fb8fe97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd579b2-fcf6-4be4-868c-8cd8ff43555d",
        "cursor": {
          "ref": "5c306e39-46ef-40fb-823c-309f0a199fdb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "afda0a2f-6116-46af-9f5a-1910260a3697"
        },
        "item": {
          "id": "3dd579b2-fcf6-4be4-868c-8cd8ff43555d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "79baf132-4482-4a15-9e57-8799131eebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61669a94-be74-4166-9b20-d1f92b58ada7",
        "cursor": {
          "ref": "5a2c798d-5e42-434a-b6cc-66ec81b963a6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f4f5eccb-cdbf-40c1-b2aa-9250c9a3fc0f"
        },
        "item": {
          "id": "61669a94-be74-4166-9b20-d1f92b58ada7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "63e0e8c7-dd19-428d-80a5-2962ac360f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb1c72e-7105-4810-b12a-14c2442a7026",
        "cursor": {
          "ref": "94f89959-89fb-401c-901a-9453761a837d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3d4c6fc8-be71-49dc-b2a0-01e028d0e098"
        },
        "item": {
          "id": "ffb1c72e-7105-4810-b12a-14c2442a7026",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "aefd16c9-0512-4725-9b92-da1fc8fa11f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef084a7-aa92-41e6-b680-f9a03d3f2155",
        "cursor": {
          "ref": "7a450dfa-04cf-4114-83c7-d209f89d475e",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7317c86d-025b-41ff-a39f-c91dc904bb87"
        },
        "item": {
          "id": "2ef084a7-aa92-41e6-b680-f9a03d3f2155",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f83a7b28-1320-4520-a948-b60ce109ea79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf8c08f-c2d7-4d2f-a5d9-890d9c65bcea",
        "cursor": {
          "ref": "aaee9ea9-bee5-461f-b356-cc76d2c348b8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1e485a87-b432-4a3b-9358-3cc8a7b60b85"
        },
        "item": {
          "id": "caf8c08f-c2d7-4d2f-a5d9-890d9c65bcea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c0ed5c2c-89cb-4b36-a263-170ec100279e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85965cd-c7c4-4b0a-b80b-858a4425a296",
        "cursor": {
          "ref": "f80c80c9-26a4-4cb3-b103-38a8d9d4e135",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b71dcc89-106e-4b31-97fe-1492359dcbc1"
        },
        "item": {
          "id": "b85965cd-c7c4-4b0a-b80b-858a4425a296",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "895350b9-d1c1-4700-a331-1eb9348e5ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec65671-554c-464a-b8c2-3e097c2ebc64",
        "cursor": {
          "ref": "0b1aa4fc-4b46-4e71-873e-8464a4e8ca5c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "79d56fbe-6c4c-4e05-b318-e0f20d8aa9fe"
        },
        "item": {
          "id": "5ec65671-554c-464a-b8c2-3e097c2ebc64",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3c98b6d1-9749-4ced-8b90-89b515b7f252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e66317b-f875-4aa1-86c7-69d553da08b4",
        "cursor": {
          "ref": "08bc2c02-5cb8-41cb-9d7d-11d9b916676e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9191a774-607a-4a3d-9ca2-0018d2eb0e8f"
        },
        "item": {
          "id": "1e66317b-f875-4aa1-86c7-69d553da08b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb568434-85de-44a7-9dc2-18b6aab8d0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e5049-0097-4f64-a745-0407219503b4",
        "cursor": {
          "ref": "5f953e4f-fb3e-4bf5-ab0b-f44f0059c696",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2425244-93e8-47d6-8d42-61cb5ca126a4"
        },
        "item": {
          "id": "f73e5049-0097-4f64-a745-0407219503b4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6838bcf5-356a-48a9-96ae-2a8631b545a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceceb328-933b-42f4-a74b-03c204d5d787",
        "cursor": {
          "ref": "7ffe122e-59f2-43a7-9468-f02983a3f2c4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4621e22b-8a21-456c-8dcd-13e90377805a"
        },
        "item": {
          "id": "ceceb328-933b-42f4-a74b-03c204d5d787",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7db48d2e-4747-40bd-8edf-8ca099584037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa1a9c-41f1-4312-9ded-1e150969e92b",
        "cursor": {
          "ref": "277e3b51-615c-48df-b8c5-c5deffa59b7d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "747f7bb1-aa9a-4f63-b1cf-61b458956984"
        },
        "item": {
          "id": "dbaa1a9c-41f1-4312-9ded-1e150969e92b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3f292b33-8f46-4801-bbee-1ffcfc5168d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7994ac86-e72d-482d-ba40-c64fa32a3b47",
        "cursor": {
          "ref": "2d13e8c6-e8a3-41c3-82b3-2cca6dd54e9e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3326a047-ca95-47cd-b64b-09bddd42d2c5"
        },
        "item": {
          "id": "7994ac86-e72d-482d-ba40-c64fa32a3b47",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b634f93d-77c1-4110-a9eb-167757813552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082f5bcc-c37c-4dcd-a83f-736e245fac09",
        "cursor": {
          "ref": "ebbd92fe-1e40-4282-8d4b-bd704c175f70",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e3500193-c6c3-4a07-80ea-fa0cd3dc0a9a"
        },
        "item": {
          "id": "082f5bcc-c37c-4dcd-a83f-736e245fac09",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a056327f-9ac4-470c-bba7-77c513d58113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2bf3cc-738a-44bd-a822-e140ee2e7e08",
        "cursor": {
          "ref": "4eccdb1c-d1a7-413e-94d7-03040b8fbd96",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc47102f-9920-4b91-a7ac-34d94b16fb2d"
        },
        "item": {
          "id": "ee2bf3cc-738a-44bd-a822-e140ee2e7e08",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5d0aa3e2-32e7-4bc8-809b-274af645d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820d3888-1193-4a76-91c5-0dda18035257",
        "cursor": {
          "ref": "b4923ac4-9d01-42ab-a947-84ec2bd451e1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a8543db6-329c-4b2f-bedd-7e7402e8bfe1"
        },
        "item": {
          "id": "820d3888-1193-4a76-91c5-0dda18035257",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "53983c73-8834-43dc-889d-bb71bf3854de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cb76e9-20b4-42bc-b334-cf70a089c71f",
        "cursor": {
          "ref": "ddceb6fa-955e-493e-a9ca-c36ed66dd94e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d7beae52-2082-4ea8-a17d-eb1e23dacfdd"
        },
        "item": {
          "id": "75cb76e9-20b4-42bc-b334-cf70a089c71f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2d3046e9-5e6c-4086-ba45-33ecde78df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9c3999-3992-4633-b710-08a09e1d4c50",
        "cursor": {
          "ref": "91f45443-4f1b-4d74-be46-30341649ab47",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7601e3dd-cac4-4abe-a985-26cf7b14c79e"
        },
        "item": {
          "id": "aa9c3999-3992-4633-b710-08a09e1d4c50",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "863e20ef-cb62-4d79-af17-86c8dec4655a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7850044f-7f8a-4ac3-9f15-ff5b0b65cdc6",
        "cursor": {
          "ref": "5f1dda30-b93e-42ef-9a56-88896cfef0ea",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "36189f1c-c562-4e5d-8e76-3cf5bcb75169"
        },
        "item": {
          "id": "7850044f-7f8a-4ac3-9f15-ff5b0b65cdc6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "24e91e22-e678-4ff8-8d20-1c33b74f7356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94c357a-eee8-4016-afd4-e13df8f6a961",
        "cursor": {
          "ref": "972d829e-222f-4f83-afd0-6dab96d8df7b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "daa3d1be-bfd9-413f-86b4-d3ade9d44aa6"
        },
        "item": {
          "id": "f94c357a-eee8-4016-afd4-e13df8f6a961",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f5e56a67-8081-4927-b7a0-e2387205f39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a861967e-b92f-4b7f-8ef0-2aa514501d62",
        "cursor": {
          "ref": "5f83978a-fe1b-480d-9706-e7ccd22b4d44",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0b6fa600-6ffd-4cbc-b162-cabda6005657"
        },
        "item": {
          "id": "a861967e-b92f-4b7f-8ef0-2aa514501d62",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8ab76339-3c66-40f7-b2b8-cc60d14a007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1685e9-8536-4136-8cd4-920c7e622536",
        "cursor": {
          "ref": "48a2e1b8-682d-4a0a-aaef-ae8a31fd11fb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a16ff958-21f5-4b7a-90ce-d7366331864d"
        },
        "item": {
          "id": "4f1685e9-8536-4136-8cd4-920c7e622536",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ebe3125f-ad7e-4f16-af62-9143d7128de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67ba7ed-6709-45b3-969b-8e838fa6631e",
        "cursor": {
          "ref": "879a274b-fffc-43cf-974f-b28d64c22db3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f44511c9-810b-444f-b6db-d0205a020130"
        },
        "item": {
          "id": "e67ba7ed-6709-45b3-969b-8e838fa6631e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9a78f074-62c9-45e2-9ca6-659bd3b5e3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b7dc52-4399-4009-a672-09afb7542640",
        "cursor": {
          "ref": "fd94bc57-5253-4875-9f84-b8e9ae8fa159",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f93c60e4-0cd1-4cac-a51e-137cda2c3ccc"
        },
        "item": {
          "id": "d8b7dc52-4399-4009-a672-09afb7542640",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "12fb8439-0ca2-4cb6-b534-6a922d0251c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da82f1c5-48a8-43f9-b479-38bb0d009606",
        "cursor": {
          "ref": "3f063c9d-3169-467e-b214-10533d3d6130",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9b689ca9-4767-4ec1-bfc2-86024a316474"
        },
        "item": {
          "id": "da82f1c5-48a8-43f9-b479-38bb0d009606",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ef4977f9-eeb1-4205-b0b2-555e7be8b0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc25804-9c87-498b-a5ca-9149056ec9b5",
        "cursor": {
          "ref": "e654330a-37a6-4fdd-b7e3-9fe91802cd43",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "52a49296-6569-4155-bdac-d24b391c9b87"
        },
        "item": {
          "id": "efc25804-9c87-498b-a5ca-9149056ec9b5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "548287eb-a0bf-4c92-bf96-12eb5915fd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad1fffa-5ac8-4b2e-8a49-0cd928793424",
        "cursor": {
          "ref": "743de2ed-933f-421f-9a5a-7368f507bb9b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1ffb1128-e6ed-450f-a1f2-d701746d58d9"
        },
        "item": {
          "id": "aad1fffa-5ac8-4b2e-8a49-0cd928793424",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b0f08260-ee2a-48b9-89ed-ddf995b81665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c5b447-d893-4ebb-b5b3-073fa9c6d1ac",
        "cursor": {
          "ref": "3d76ef72-da9b-4f9f-a719-90a06bed982b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e31367bd-2971-4146-a593-5c88ef5fb2c0"
        },
        "item": {
          "id": "56c5b447-d893-4ebb-b5b3-073fa9c6d1ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eace122c-6bce-4866-8aff-4050360035d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb49171-9252-43e4-9cd8-d987a20354da",
        "cursor": {
          "ref": "c87714c3-af7c-4719-bcde-2463e35935c8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fdba77c0-8b26-4a9f-8b39-08c271659138"
        },
        "item": {
          "id": "5cb49171-9252-43e4-9cd8-d987a20354da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3118ba7e-64d8-498b-8e76-a14042f59802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c8ac32-3654-4699-ae25-e9f061bd42e0",
        "cursor": {
          "ref": "a8b6e3cf-f7c3-4b2e-a268-82ed3e710520",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d22b39cb-b074-4e94-bc0a-f4bf1b57fc3f"
        },
        "item": {
          "id": "76c8ac32-3654-4699-ae25-e9f061bd42e0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f8e2c299-b69a-4baf-ba69-cb258cd28d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f3ef15-9dd3-4d2e-b20c-b380d86f5194",
        "cursor": {
          "ref": "48687ff2-231a-49cf-ac53-3a14dcfca142",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "259362a0-ff35-484d-bb8a-ba096b64edc2"
        },
        "item": {
          "id": "12f3ef15-9dd3-4d2e-b20c-b380d86f5194",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41555145-24e6-4b19-8714-3b059055e4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f913fb-bddc-460b-a5ed-b9e077710b13",
        "cursor": {
          "ref": "631d496f-c757-420a-81dd-9c0cc5c2fa15",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a9cec12a-4e07-4c77-a682-f36542bef064"
        },
        "item": {
          "id": "a3f913fb-bddc-460b-a5ed-b9e077710b13",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0c46238-77ce-4405-aff2-229b4beb8075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b65a0-d99e-46b8-a25c-a5379df214f1",
        "cursor": {
          "ref": "c630f46a-30ff-4b70-a717-ebaba3b840dd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fd4f4ab9-404e-4efa-bbd8-c832f155611d"
        },
        "item": {
          "id": "443b65a0-d99e-46b8-a25c-a5379df214f1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "07ffd781-1084-49d7-89cb-ee069ba46781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231976ef-b800-466b-8f18-7c03e7efa454",
        "cursor": {
          "ref": "54f8caf4-a2d9-4f1f-b7f7-ca23935d52d0",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f71d386d-d1b1-431c-a301-335f0d6e693a"
        },
        "item": {
          "id": "231976ef-b800-466b-8f18-7c03e7efa454",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1a5c2aad-c03e-48d5-a828-2addc1df3e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11129853-befe-41d7-add0-2b48e40c04f3",
        "cursor": {
          "ref": "c15c7526-38c5-4c28-a6b5-4eec0ca35684",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0aa965b9-8853-4a67-b3cf-f47314e149fb"
        },
        "item": {
          "id": "11129853-befe-41d7-add0-2b48e40c04f3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6e1d9f4-07b6-409f-98c3-da5b1e6f40fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95edf107-bdd7-45fd-958e-ac0a7b164296",
        "cursor": {
          "ref": "442eed11-c599-4ad6-9026-6e312a9f2bbd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f1cf48c0-962d-4d38-996d-9e4955e70bcf"
        },
        "item": {
          "id": "95edf107-bdd7-45fd-958e-ac0a7b164296",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "23f2bfab-45eb-41b4-a4a4-4868f58dc407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2077193a-b6be-42b1-9af0-ecdf63657cd9",
        "cursor": {
          "ref": "236915a6-e2bd-4607-8840-3e894e980b04",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40b5949a-7195-4d2c-9003-b93cadd3d439"
        },
        "item": {
          "id": "2077193a-b6be-42b1-9af0-ecdf63657cd9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f547712-e687-4e3e-a017-fc4dea1f7245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86cd770-4d38-479d-8440-6d54aa225d55",
        "cursor": {
          "ref": "f9f93531-ce61-4864-b78c-ef0e92a4632c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6bbaa0e7-efe8-4a32-a9a6-1a122b8838af"
        },
        "item": {
          "id": "f86cd770-4d38-479d-8440-6d54aa225d55",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "58379960-14ef-41f2-a754-81b90f98e63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1aa6a4a-29b0-4dfa-8b4f-608a524b5ad8",
        "cursor": {
          "ref": "bd47ff56-732c-4abd-8852-20c465e0b803",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1be1319a-b6a1-4366-8d57-6f22fb49c6e3"
        },
        "item": {
          "id": "c1aa6a4a-29b0-4dfa-8b4f-608a524b5ad8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "24563fda-a355-4d78-aee1-f658e76ce047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ba6874-cc34-4d28-9276-e637e4ab3723",
        "cursor": {
          "ref": "ad126a9f-2955-40ed-a6d9-c77fbcebd9df",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ab710c8d-ef6a-424c-a1ad-3a6a6489ddd0"
        },
        "item": {
          "id": "23ba6874-cc34-4d28-9276-e637e4ab3723",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "52bc0f68-2d72-4ca8-ab8b-1a5984e5889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f9ff7-5ba3-4e61-80b2-b25987b5bb6f",
        "cursor": {
          "ref": "392e40a4-6d54-4179-9bb7-46be2b1e802e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7a2e4deb-e828-4e12-bc70-64493a2984f4"
        },
        "item": {
          "id": "668f9ff7-5ba3-4e61-80b2-b25987b5bb6f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "94bd72c4-920f-4bec-b8b9-33248f468d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fc1bcb-c88e-4bd2-8892-2b4107e036de",
        "cursor": {
          "ref": "3e583e37-3207-4d1e-8b40-b3c2f04235ed",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e16a848-a92d-44d2-b0b7-3b8ad4fc8790"
        },
        "item": {
          "id": "06fc1bcb-c88e-4bd2-8892-2b4107e036de",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f81bd831-f407-4f3e-96c1-b8e80c09aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079147e4-af8a-40d0-b0fb-2da7e9f72dfb",
        "cursor": {
          "ref": "a3a591d1-cd7e-47ad-82f2-9492315b2bd7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3ff1d89f-28c0-4c01-86fb-e9b131a0980d"
        },
        "item": {
          "id": "079147e4-af8a-40d0-b0fb-2da7e9f72dfb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "17414836-0506-4874-ad96-bc8f91da1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e2379c-355a-47f9-a0eb-5e58b432902d",
        "cursor": {
          "ref": "13e45a37-0980-47a5-aab1-634f1324818c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "16947e43-3614-44db-89db-aa5265da429e"
        },
        "item": {
          "id": "81e2379c-355a-47f9-a0eb-5e58b432902d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94112053-cbf7-4299-adf1-0604572aeb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdb9ffd-3ffa-4d67-8767-2cd39f7674fc",
        "cursor": {
          "ref": "4be62598-9c56-42f2-9d51-ba95dc223df5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88363688-f578-4b42-b62a-f9309029eb0e"
        },
        "item": {
          "id": "7fdb9ffd-3ffa-4d67-8767-2cd39f7674fc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d9e70330-ec5f-465e-9b48-53a7c1614967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90a8028-2c26-44fa-aa8c-e286228b6985",
        "cursor": {
          "ref": "d5fe3731-e519-4033-a901-63fdba81e890",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f98d986-4195-4c4d-93d0-f5ecb66e9c29"
        },
        "item": {
          "id": "d90a8028-2c26-44fa-aa8c-e286228b6985",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1ed1155a-4894-43cb-8aef-2e91fa1b11da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d75f87-e012-4ac3-839b-4599ac9af87a",
        "cursor": {
          "ref": "d7c4c091-b3f7-4296-93a6-0280be764476",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf574e32-a1dd-47b5-8e9b-a648d13d3692"
        },
        "item": {
          "id": "b6d75f87-e012-4ac3-839b-4599ac9af87a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "108bef35-fce8-4578-8a69-75fd980efe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f27efb-754c-4854-83e5-65330efb1159",
        "cursor": {
          "ref": "e3a09a95-0ef0-4d94-8434-3091d71e639d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e470c577-7cd3-4795-90eb-1808c53e6ba2"
        },
        "item": {
          "id": "16f27efb-754c-4854-83e5-65330efb1159",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8526bedb-4eee-42cc-97ca-970375eb7f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6d2c72-3094-49cf-895f-c9419e352b99",
        "cursor": {
          "ref": "eb41a654-00a1-48f1-8702-40765deb72bd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "460fbf0f-9706-4057-bf5a-1e91f8aef94b"
        },
        "item": {
          "id": "bf6d2c72-3094-49cf-895f-c9419e352b99",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31bf8519-001c-4902-ad14-3da1861b7f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d7827d-5fd9-4473-b5e3-3bb37bd620ca",
        "cursor": {
          "ref": "42a2dd37-2c4b-4d15-af9f-2fe64716f653",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a3659b55-783e-4d26-902c-3ae82cda557a"
        },
        "item": {
          "id": "d9d7827d-5fd9-4473-b5e3-3bb37bd620ca",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "088844e6-22e7-428d-815e-fe3b81b51b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b229e91-1132-4054-a5d1-dfdb0430e6a2",
        "cursor": {
          "ref": "4cf02208-87e3-484c-897a-7f79f24d1647",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b50da703-43b6-45f6-9882-0cb33f7b9fbd"
        },
        "item": {
          "id": "5b229e91-1132-4054-a5d1-dfdb0430e6a2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ca516fca-1c89-46fe-85d6-d7fae676aa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ab3817-7a12-44f1-b73a-8381472bde72",
        "cursor": {
          "ref": "c79f6b65-e9ba-47e8-b0c0-5f22ec462015",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4cc4bca9-7fa1-413b-b354-1084d1175c7b"
        },
        "item": {
          "id": "09ab3817-7a12-44f1-b73a-8381472bde72",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bb991583-3c91-4b97-b362-04ec0662f670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e21acf-7ac0-46b8-aedb-a996fcd3bbb0",
        "cursor": {
          "ref": "db0f84ad-3869-48a9-9c24-8c85a2ff81fb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4e20f32c-f267-474e-8bac-84fc347928f6"
        },
        "item": {
          "id": "b6e21acf-7ac0-46b8-aedb-a996fcd3bbb0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b204db90-0461-44fe-b0df-acef407368a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6ec6cd-3931-480a-8dbd-9d7b4da09024",
        "cursor": {
          "ref": "28482d90-0819-4e45-a521-e3394e67f722",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "35b6ee72-7d1a-46f8-a57d-733014e00072"
        },
        "item": {
          "id": "0e6ec6cd-3931-480a-8dbd-9d7b4da09024",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "47c30188-6ccf-4097-b08a-f32a5a2015ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d80659f-4bac-480d-9ee0-ef26ed75b727",
        "cursor": {
          "ref": "96885a10-99d6-45f2-a1cf-795dda3511dd",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2a557a39-3aa6-44a3-9558-4d19e3a5e836"
        },
        "item": {
          "id": "5d80659f-4bac-480d-9ee0-ef26ed75b727",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c414198d-cc85-4c8e-b15b-c0de79e51231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208b09ba-692b-4b55-b63e-1b8d435f61cc",
        "cursor": {
          "ref": "ea0e12e7-9a30-488c-b093-5a56b0cfaa74",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b4bdf8ae-df95-41d8-9b74-97f7a4613066"
        },
        "item": {
          "id": "208b09ba-692b-4b55-b63e-1b8d435f61cc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "712c1627-ec8a-4eba-b379-a9194e529f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2a12f4-6f8c-4b45-bed8-db254c85dce2",
        "cursor": {
          "ref": "5dde4f77-9432-4e52-97e4-5bccff024e21",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "53f4722c-3d45-44a0-b739-60fe5c1af2bb"
        },
        "item": {
          "id": "fc2a12f4-6f8c-4b45-bed8-db254c85dce2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6056034f-6261-4ff6-b17c-ca2d5202bda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4e78b-ba27-4259-9f58-ad5222c55487",
        "cursor": {
          "ref": "a52430f6-1ccb-4537-b155-27b3209e75d4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "32517145-da9c-4b67-81e3-945ddd339d33"
        },
        "item": {
          "id": "a4a4e78b-ba27-4259-9f58-ad5222c55487",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dc859e7d-3dcc-4aad-99cb-3956ae5348ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd729be-64d1-4c1f-b931-0e0752232b0f",
        "cursor": {
          "ref": "748c3936-9f2d-407e-9556-a7f8e70f55f4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "91c0480f-b560-410d-bb78-9c0289376cda"
        },
        "item": {
          "id": "0cd729be-64d1-4c1f-b931-0e0752232b0f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d87955af-285c-44c1-90bd-cfb6ba5238e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e63143-4e32-46a9-9593-d7a84437a908",
        "cursor": {
          "ref": "ceaefe4c-a0e4-4dfd-86c9-fcc9293af577",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "503bad4e-27ce-4c0a-986e-e708ef9209c3"
        },
        "item": {
          "id": "27e63143-4e32-46a9-9593-d7a84437a908",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "18721ccd-331c-4230-9a5e-245417803310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c7bfc8-4f02-4344-b834-c5a6a60236aa",
        "cursor": {
          "ref": "2089537b-3e96-4085-b91b-6dff3573ebc4",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "13eb8752-6e0c-4d28-ac6e-59b261503240"
        },
        "item": {
          "id": "c3c7bfc8-4f02-4344-b834-c5a6a60236aa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ab31ee4e-aa8b-4019-8d13-1a4f479f79c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cd702e-105c-4e99-851c-5f00bc25e192",
        "cursor": {
          "ref": "3c682054-5ec3-46d8-83ed-bbe55436e4aa",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "541fe923-8201-4275-80c1-40d670a5c89b"
        },
        "item": {
          "id": "e4cd702e-105c-4e99-851c-5f00bc25e192",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef51add7-8ea3-4207-b411-47e20101a35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3d6795-90b2-447e-987f-69ca5a935205",
        "cursor": {
          "ref": "cd193ee3-d340-40f5-8cb5-fcc9b1132e46",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "97d84657-ecce-4f55-a0a2-95aa4337b8bc"
        },
        "item": {
          "id": "bf3d6795-90b2-447e-987f-69ca5a935205",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d64b7add-5472-468b-9ae8-28e195ce1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5185274b-53cc-4f5d-bba2-85d97f1cc3f8",
        "cursor": {
          "ref": "9d31f5de-92e4-48c0-9e8f-380532ef2273",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7b066b64-de14-4f6c-a646-c3c542fb9bef"
        },
        "item": {
          "id": "5185274b-53cc-4f5d-bba2-85d97f1cc3f8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "38c53abe-b3c3-4a7f-8b14-03bbb616ce1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc76fb38-53ec-44a4-8c7f-6b4345185a4b",
        "cursor": {
          "ref": "3760889d-f673-460d-97dd-c68adf10ab51",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0a9b56b9-8c23-4c97-931e-4625301185b0"
        },
        "item": {
          "id": "bc76fb38-53ec-44a4-8c7f-6b4345185a4b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c3a824a8-06be-4b6a-ad22-56faf175d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3905b17-0ecb-4166-b140-052083da252b",
        "cursor": {
          "ref": "bb1a791a-17ca-4a65-9d1d-b6c649534225",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "23bd2798-13e3-4a56-845f-5f96b7769c06"
        },
        "item": {
          "id": "d3905b17-0ecb-4166-b140-052083da252b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c74a53d2-c437-4010-9029-e04ccecfd6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9472ba65-89f5-4620-b664-d8a119cc9aa6",
        "cursor": {
          "ref": "a7810f27-d209-4878-9141-30f5ba2757e6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "177748e2-e679-47ce-aafb-ba732a812b45"
        },
        "item": {
          "id": "9472ba65-89f5-4620-b664-d8a119cc9aa6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a5116711-9e87-4100-93b3-5acc130111b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52377d5-b073-46b5-908b-7cfa2b7b2e71",
        "cursor": {
          "ref": "c372d078-c2b3-478a-8597-2632f97fe9c7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e09d1aab-8733-40c1-b4b4-6736ae67a280"
        },
        "item": {
          "id": "e52377d5-b073-46b5-908b-7cfa2b7b2e71",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa5ed011-df1f-456d-9052-192b59a0dc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d6f576-bea0-4460-ba0b-e9535269bb8b",
        "cursor": {
          "ref": "72a22882-84b0-468c-9782-74e40fde0218",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "52c6ffc9-c44f-45ca-9023-7f73e77be778"
        },
        "item": {
          "id": "06d6f576-bea0-4460-ba0b-e9535269bb8b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "314f360c-a239-4fbb-95ab-9a5595b55c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474f70bf-8392-4452-916e-b40f4d6ea319",
        "cursor": {
          "ref": "79616e50-cfe7-4541-ac69-65c802c6cff4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "894ffd53-74cb-4ec6-a341-18d92c14abd7"
        },
        "item": {
          "id": "474f70bf-8392-4452-916e-b40f4d6ea319",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ceceb013-4d91-41d8-937d-84e608f17317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8f250-4476-4996-a0b1-189dd4ba2c65",
        "cursor": {
          "ref": "56d38d46-1b64-42fe-bb73-e907fd0ee591",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0e8e9466-9a78-4573-9324-56bd3bcaa396"
        },
        "item": {
          "id": "08b8f250-4476-4996-a0b1-189dd4ba2c65",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4391f99e-4891-4b6b-9170-605140c839c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7cdf4-8645-41c3-a4ae-65ddfd29ff19",
        "cursor": {
          "ref": "d35e924e-aedf-4604-8780-8c9ee6388272",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e0d44885-6fab-4b2c-8041-e5696cfd3d73"
        },
        "item": {
          "id": "8bf7cdf4-8645-41c3-a4ae-65ddfd29ff19",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "242e6529-7a74-4d02-b14e-c01bbfbe1d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8803844e-8a36-4d8f-a71a-9cb805f9ddc0",
        "cursor": {
          "ref": "d0894e3a-e762-4157-b8ca-03bc9671d53e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6a3f626c-fe1b-44b8-8ae9-f59c50e69876"
        },
        "item": {
          "id": "8803844e-8a36-4d8f-a71a-9cb805f9ddc0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cfec0b16-fc6a-4ecf-95b7-66643a42fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22b155d-bad0-4e5c-8e77-3ff5f6ae2a95",
        "cursor": {
          "ref": "1cce44d7-1257-4fee-a895-5662df8bfe97",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "88e91fb1-1522-498f-ba52-c27d8ba648cc"
        },
        "item": {
          "id": "e22b155d-bad0-4e5c-8e77-3ff5f6ae2a95",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a5c506d7-e4dd-4178-9c04-c67c310c5d75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab84df60-3084-41a1-8a79-00897e246fa3",
        "cursor": {
          "ref": "0ecf80f9-fa3d-4388-93c5-9be54b899d67",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e914feb3-c8bb-4ebb-83bb-0ef76e17d550"
        },
        "item": {
          "id": "ab84df60-3084-41a1-8a79-00897e246fa3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55099a6c-5c85-46dd-a64e-ba8da103be7e",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02dab73-440a-4e46-b111-b5c0809c91ec",
        "cursor": {
          "ref": "a9e4b6cd-17d7-4b91-b794-79d370f46217",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "407c478b-3343-4681-bdb3-3aae278e3881"
        },
        "item": {
          "id": "d02dab73-440a-4e46-b111-b5c0809c91ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cc20c6fa-0396-456c-84b5-f95a78997c13",
          "status": "OK",
          "code": 200,
          "responseTime": 1563,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81918c-5477-4206-9c64-d53f68bd5309",
        "cursor": {
          "ref": "df332f03-a908-4652-b527-fd6a1caa6b61",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "086eadc4-777d-4712-a280-62fa63ce41cb"
        },
        "item": {
          "id": "db81918c-5477-4206-9c64-d53f68bd5309",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e76fa2e6-e0cc-4f6d-a0f4-0e19cc7c16a1",
          "status": "OK",
          "code": 200,
          "responseTime": 1445,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c2a2a1-da1f-49fc-b60f-a9f9d0fea694",
        "cursor": {
          "ref": "220bea23-9a5e-4a08-8759-b5b234cb8c52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf886013-dd3d-473d-a9b8-93c5b2f2183c"
        },
        "item": {
          "id": "78c2a2a1-da1f-49fc-b60f-a9f9d0fea694",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afce5236-b789-4e88-b2ab-c7e2c3ed79d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c2a2a1-da1f-49fc-b60f-a9f9d0fea694",
        "cursor": {
          "ref": "220bea23-9a5e-4a08-8759-b5b234cb8c52",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf886013-dd3d-473d-a9b8-93c5b2f2183c"
        },
        "item": {
          "id": "78c2a2a1-da1f-49fc-b60f-a9f9d0fea694",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afce5236-b789-4e88-b2ab-c7e2c3ed79d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7c2f77-1e14-4f73-bd52-c0d7585de81e",
        "cursor": {
          "ref": "6a6e4d73-4cfd-43f7-8c30-b9f79bde1146",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "945eb0c7-15cd-4e67-aa5e-27b3e17a5f49"
        },
        "item": {
          "id": "fc7c2f77-1e14-4f73-bd52-c0d7585de81e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cffe69d4-2777-42b1-b717-5e7d7411754c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df784cf4-749b-4d3a-83c0-01acb595a234",
        "cursor": {
          "ref": "3bd665bf-878d-43a8-bec3-1e072802b987",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f2e022a2-2ac7-4050-b9b3-6eac29190750"
        },
        "item": {
          "id": "df784cf4-749b-4d3a-83c0-01acb595a234",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "916e364a-0f70-429d-be2e-7542cf9e3475",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}