{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a1f338cf-0164-4a93-86fe-0b94d527453b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d4e1dcf-fd6d-483d-a237-700a7a8ffb65",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37d94985-c5d6-4c6e-8fe1-acf79859f589",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca7253c9-d9b1-4fb2-b618-d0f098bc35a2"
                }
              }
            ]
          },
          {
            "id": "164cead5-ad10-48ae-a22e-968a48ed8ff8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0d229051-1d30-4ebc-a01b-b609502a6366",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "467df591-226f-4424-ab6a-6efdb5e976a7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b56ef329-cfbf-43e5-9104-61444ecacc73",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7977f8af-9b37-45bd-90cd-838e795d71da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07a3a7ea-e22a-43eb-bc70-80859d0e8fa7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b2f9a54-fbe7-4c62-9c53-439a396ec799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf07fcd6-82f6-498a-a19a-3e679b57dd6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7f53b6e-a534-4243-a4ba-034f6543ee8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "febb785c-4ab6-444d-a726-07548225a09f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff753ed5-b449-4cc7-a9f2-217c96b70677",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94d02348-a2b9-4a9f-b0c6-07ce3fbc0873"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21d79eb0-723b-4c27-9091-a093e5801b8f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a47f1c97-1ea9-4acb-a4aa-d26aada9cb1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec85c8b2-1490-402b-9a3e-a30df743fe25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77fc5c70-ce4f-4273-ba5f-e411ace999b7"
            }
          }
        ]
      },
      {
        "id": "20e207ba-ad03-4ce9-a119-988b366ef8bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "652ad04e-ef36-4ff2-9b16-55cd13225ec6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22c3dfd6-ba98-4b44-9db4-cc15440efaa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1db55265-f990-4e65-8857-15d2de8d1d5d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e2b65-7768-472b-b56b-c6078c9d694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd5775b2-4984-4e21-8356-aec964bece8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8b1ee5-0a06-401d-b1e1-7384b2073389",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf5c3c1-54dd-433d-aed5-e27a1cbe7373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4691bb9d-ad49-442b-9ded-a4a7a25e4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2b9dd6-2ab4-41e7-8521-1a395c5c546f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65bdb4e-b682-470b-b1de-42c611be8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfa02c46-f516-4d99-9f04-fe66544adb3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c2c23eb3-e317-4821-a342-1ecf79d7ff58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d5d13c2-f481-46a5-969c-573bc3925131",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc095427-c735-4ca4-9400-00f30f528388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3dd5bfd-2866-4b89-b931-4dbe5e26346a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91c07fc-3f29-4c8b-8cce-c081c4bff48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa0501c-c892-490d-89bf-a60e04d75a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ce07b5-6348-49fd-ae15-df750b8a7b8d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6520c6-cb53-470a-8d95-d760dbc3b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b76a2966-2ff9-4075-ba12-992dbfc018e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73373b24-306e-421d-a611-a00957432c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c08bdd59-9aab-4700-8709-6d4525b992ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4164f0af-3fec-42df-9ad7-dabb5b2c1a63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "537c77a7-cfc3-44e7-ab40-72cc97c03a35",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eab3629f-4dc3-4881-8eab-b51659e40063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3e105537-52df-4aed-90b8-3f83057551e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37c3e27b-4b00-4bd1-94cf-a7f03f9d812d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "93f1823c-1080-4b0a-9a5c-a63b2d237344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce134e42-79b9-408d-9973-8e73c1aecb67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f25f3e0-c6e9-4512-8175-64339452dc5b"
            }
          }
        ]
      },
      {
        "id": "df61c723-0ede-4f16-9beb-b028fa7edad1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eab55514-6899-4177-ac36-a82f5e388de4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fae22f8-595e-4d6f-b3b0-94c69296a461",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3a6f97ed-0590-46bd-8927-855d530e1093",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7752b10-658e-4b1a-b3e5-3c64cb2656e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dee9dc-b737-4fb2-8bcc-c676c19462d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10cb4ae-f89c-47af-86f9-bd9fb4af043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc124732-9bd6-4f44-ac84-8281ffa6ee2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d556db-1379-4cc2-af27-3b49b0ce0972",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d27311f-8da7-496a-b985-0636f954e9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398b30dd-0492-475f-88b4-f997e33d5c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd3a51-139a-4bdb-a61a-7b3762a6b9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c000907c-e954-4a4c-b8b4-8d2f099cff47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed2bcac-0505-44e0-8647-b617fddf5c42",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c6191a-aee1-497a-a051-37b420f3b77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ff5350-30ad-4135-98f0-45a21e078148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c7eb60-2674-4c25-a3c2-d655d0aec03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d12c59f6-9cd1-4a89-9a7d-78abc47b3cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6272035c-a43f-41ab-a797-805c78f960ed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a11a3e-3677-44f9-8e25-d4b5a0b1bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b5b283-43bd-4dec-bea1-eb169c36162e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131df2fb-9b98-4dce-9d5f-96692871b233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0061dda2-301a-4b89-bafb-391d5574ce57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c10b9-fb28-4c81-ae57-840c3c16c538",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fff7c4-8694-486c-914e-f165c386640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8c1779-66f8-4fdd-aff8-5bb9498621c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd166f90-abe0-462a-911a-7d2a8665893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc45f045-d1e3-40e0-a81f-dd767e3998a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a0ebe6-6dc2-4fa9-bd1f-f1a6b061f972",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3152bf7-c3ae-422e-94e4-701cdc5a49ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2f4730-8275-40e4-a71c-c7b9f36d34db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02666b8b-5893-45ba-a5c6-7c42ad1ef7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490a5cc6-f929-4514-b4a3-a00abcc99a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341f0c98-2172-47b6-903d-84bc509282ac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02b3cce-8e02-4a5c-9cd6-6b4c3e97fcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79324263-b6ba-49f8-9921-da6671cbf7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dda7bd-62d4-42bd-a7bb-332517613fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65a740de-24c3-4ac8-979e-46de2a2df48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291cba1d-8ec1-4690-a3f6-1f669a3cfdcf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8477a8-dd26-4667-b2d3-f633875ef631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf12a15f-91a0-4a86-8676-6d2195f86379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9915700-9697-4494-9f52-92dc19d25460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71492046-02dd-4854-b16f-b8dc5f20d1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebae4f9-3ae1-4e9a-870b-8ce7f7c4aabc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff9860-9541-4ba8-b737-3523eeba3801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69b8b2d-daf3-4c11-9d8c-472df36ac041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635db0b9-b51a-4e1f-a8a4-9bb3883a3b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d3e2d17-5ad2-47a7-9fbb-42cba5b49c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff2f77-2987-407d-91f1-58cf28df6dfb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834d51d-b746-405c-a3b9-741f139f5d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cda3c7-82b5-45c1-8669-5d5b948573a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f3a19e-1e97-4330-8825-56e91f679832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2fa78f5-f205-4417-9b40-b2379207ff50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29997a7e-69e2-4d03-b610-cab72b6df7a9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39cf2ea-b7a5-43bf-a4ba-35bc1bc80f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c713698d-7f0d-4c13-aab8-d82c14bb9143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d77f768-1adf-4b80-ac50-75917b7db426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61fcd4bb-2390-49e1-818e-17ab54d079f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d516b-ef93-4588-a75b-c99b33809601",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7eb9d2-88a0-4540-abe1-cd5831e0ff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6435c8bb-143e-44ed-816a-983322ed2395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7909bfe8-d810-47a4-a234-5b2d109aaef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "756c59c2-9de6-4409-b068-9706675fc0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e193192a-db62-4a5e-857b-b8676b248c79",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa657d6-6b97-4b1e-aec6-3b2742d4a74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f697a161-75db-4e7f-838e-3afba0cc3842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92816746-42f4-4460-bc9e-7cf4166d996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d14e92c-27b8-4092-8f53-1b3cc5539149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304d127d-94c2-4f3f-8cb2-ad962bcf5bd1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523c105-4b63-441c-ac24-ac17c7130856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9883818d-0f59-4d3d-9ac7-67365b7f5fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe88ec6d-4d8f-4e59-b15c-02876f90d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70dcf721-91e4-4141-997c-942aae6458a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0c5e01-3836-4a9b-bd2e-feabad5c8736",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83ab09d-ea1e-45b7-873c-8192a913cb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2a85f6-2c68-4c8d-80c1-149149b06e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f986c83-6968-4fd7-b7db-6f81779ca376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "463da368-a215-4ea8-a6b7-586eb0053117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61c60e5-ec17-427e-90a5-3525b5b79211",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2024679-6314-4fcc-82f9-5c03dcf4283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909e5b8f-e3d4-4332-8611-a27339ea79d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321258d-eeab-4ab1-99ef-1dafd0b42dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e281632f-9874-4ead-a8cf-10199bd1f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a02072-80d7-4809-b044-6942d427d241",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a191a-296f-47d4-ac6f-b9c3a83ba11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fa9801-299d-44a1-9a45-2408543dbbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0f0e75-7330-44c0-9b4d-c89d4cdd2b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09a5bebe-7bca-4956-9cdc-ad7c97e353dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f15d3f-b261-4a6b-bb3c-8e2761ba10f2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ece7dd-881e-4716-b1e6-767be6f991c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46afef4-1443-4fd4-a79d-3e05c8e88a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920ca5a9-3842-4eb6-b323-a6469fc1903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "73657a1d-a30a-44ef-a9fd-0a5715fdef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3d4de1-6613-4aab-8bf8-20e9198d0529",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7792d8b1-dec9-48b2-ae77-4f7e25d19771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2454db-5f4b-465e-b023-c292b3c2f7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cc7660-29ce-4b4d-82d2-8d7ca87d2fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "630600f2-db2a-4074-b4b6-5206c2135b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a3a0c-f7ff-4383-9371-47632ec0fb95",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1087ef6d-cf38-484d-bd25-34c00cd6bcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1847eb-a518-4262-8e06-547981a1f207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb0c4c3-90b3-468f-a615-f2e45a378f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d0e63c-9ab1-4e19-91f6-d9a83ab4d47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce595d7-bd07-4d60-a0b0-d6d6f7c21d69",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbd1bed-502d-4aa3-8b7b-d9688a762d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d692ea35-cf1a-4454-961f-bc579faa9e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905fc02f-0987-47da-a198-98522f2238c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f78a84f7-5cf6-4ac9-955f-73477609d8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d12b8f-b809-4500-9a9e-7bce3df13ece",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d35f20-b8b9-4b7c-9c4a-ddff7bfd718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32abd43a-83b6-45e3-86e5-28a41ebc7860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dd0ecd-9795-4531-a459-66958df47cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ce71fa-3ec5-47c5-aabc-fdfd8fbfea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0333d0-cf17-4ae2-a581-1389f8a5cb09",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33edeb54-a81d-4032-9fdb-987ba3de8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cd0104-03c2-4208-9d78-b71c4050df1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aa702b-aa11-45de-adce-891765e79656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41a2f494-02af-4a69-a095-40e59cc84a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57fefcb-d1ef-427b-8e48-a38c0220a654",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbd1dd0-de8e-4e99-a4f1-c5edda26e6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1943dee-db06-4489-932f-e75e3010342b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e298502-35a7-4172-8db5-180064a32ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7184440a-5f55-48e2-8965-efda3e94ab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8598152c-62c6-4af2-adaf-e64aa344fec6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3fab5b-c9f6-4736-877d-f02dde32c374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c15da11-bb01-4a84-9618-aaa9d8d6af18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8cc87d-53b8-40b6-ac1e-0175b8a9a7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd78b97-4330-44a5-9cd0-f7e62dc9d175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1319a157-db75-47fc-8bcb-d64e52bec9c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f562226-e6ff-4b16-a8cd-91192dc8f2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d756b2ae-ddfa-468b-bfb7-3ccd667515a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a69b96-48a1-48e4-86a6-43d5c6c5ba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e913feb0-97b0-43d2-beae-64e2f63704c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6808b5-c823-4855-91f0-e798c5a1635d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5089fec-5b7f-4de0-9be4-d842cc99b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f51589-3c30-4832-ab32-3f88629d530b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f192b60-e18a-4098-87d7-db91bf4cc156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79082528-dfd6-481d-99f1-0e8d62b07639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5597d2b8-3c03-4a4a-bd31-0cab8c242ea2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ea328-f3cb-489a-83fe-61bd2c6f3733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0664b9ff-d38c-4662-a298-85f8cc2d700d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b77cf8-c878-4053-a34a-9545f45dbd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f15089-6e34-45a1-8e4c-acf9eb97f032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3f5045-6faa-444d-8727-aa37574bb37f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4285bd6-00eb-419e-947b-8df519248dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9d65e8-769b-4d19-a56c-9b2e07def808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa9ae7-fef7-4ee7-8da5-0384c2d694b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04401f7-2ee1-4ac0-a904-595119adae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59543dd1-8167-41e6-968b-128f0839d6ac",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2330982-59b2-4896-8b36-a78e8e75d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b041d1-ba99-4448-8922-d72aef2a4419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99678055-bb0b-4e6f-adcd-656a4683779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad2f483-4469-4436-acbb-321e716b80b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d77a1b5-a171-4438-bf9f-f27ea32d5e33",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b77f43-00ad-4380-9b11-1a3209b7cc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e29121e-2049-49fc-b681-1788614c5a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749eb031-2129-4b14-a7e5-ae19fe6769bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc0ee13-f4ac-4274-b937-0e8f89cd068c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b35421-788d-4210-bc7f-d41de864e4c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f464b638-fdcc-4676-8eda-4344c00359f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42c6b70-8ce5-471a-acc3-b8cc1c749d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace0b83-cde5-46bc-a262-0f4423554940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b672ca-b379-463d-806b-bc3e15412682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c33c94-db94-4b83-af22-9677cddb6517",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31adf5e2-6b4b-48a0-80d5-ccc29aa2b3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b022843-43c3-4912-bd67-e77dcd125886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d44e9ef-ac53-4fa6-8843-90908d8183a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0085f5d7-4cac-412b-a4b1-4072dbee780a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4edb25-e0fa-433f-b6a6-3d80e1f178dd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a207a877-3c47-4202-89ee-52be1b8d9ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5620736-6a35-4f5a-8fd1-fa2577fb8578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a904a1e-ff3e-44cd-a46a-2665f7a4843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "119bb6eb-6405-4a52-8f51-2332eb04f7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c372f-9b15-4692-8566-f651c5642d19",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdcef63-0c23-4ca3-a63b-9234bafbd75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5944601a-d4a7-427a-9a57-279a8bc1d829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bee42-a853-45f2-89fc-b9de579ec3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "94492f44-d848-44d0-8470-a9959c5b8160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0dda5d-a56b-467f-8e10-7f63df296c4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99d4962-41ab-478c-bf2f-392c331eaa39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72ed6109-9660-495c-9ad3-f97025d0fac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d240d8-07c8-4f52-8947-eda194e5c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0dfa84-fc7f-40b7-8780-c82123e46e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730e589-ae04-40fc-a482-5e4a011bd061",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d34074-baca-407a-aca1-20506bd00996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5e115a-b01d-48f2-97ed-a4e28c928a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ca431-e4aa-4554-8f86-f394d945cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5368a486-58d0-4453-9092-1de8014b15d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b51324-07c8-48d4-8f6d-f158e49e8334",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3c5405-21ca-4421-9e1a-4203d3e38977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8497322c-4b91-459c-b70b-8b9477594a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02698482-8307-4a9a-a1e4-c003a6ec9b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbe7b23-c04a-4ca5-925b-3143030d12ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03dc8d9-2419-4544-a1a7-348850bace09",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aaf5c4-797c-411e-af5d-938fdd05ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59db954-e08d-4692-88c1-cf8398d7e44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe5075c-0d38-4092-a255-548713700547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8ca6b2-5cc1-4e47-890d-1abf5c5f200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb12e36-148a-4f2a-b477-43a1e1e11b9a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1539f9-30e6-4198-ac0a-fcf5c7167001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b13740d-78f9-4e3e-9cfb-e18fca39db01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2480dd35-c706-4fca-b070-04a03d9d361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4607e4ac-9952-48ec-b138-0e1c26918a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e093177f-638d-4af1-9819-9ac836b306cf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e6aa01-ac44-4a2e-a9dc-7466f7a23854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f8cb57-dd40-4ca7-9db8-e74b92bac79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f05a5b7-6578-4692-b950-dc60171701ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dcf48c-de84-4a5f-957e-d6037912eda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609a8797-bc82-4afc-88cf-70368753f79d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6b4df2-b45e-43f7-a7c6-7c27bb27adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349d79ef-26eb-4cdf-9ad6-6447e82ef83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2b9e24-1df5-429a-80ca-860bf2114c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f1534376-75f3-4664-9ae1-ad5e35bf61e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf9c1aa-c0c0-484a-9fce-44a568b7b874",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a0e22b-e13b-4d4b-8f10-842f8a76584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71486f1-a271-47be-bb2e-57a2e21b2214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c723f8-36eb-440e-8b84-368e3589dddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "224f00c1-dfc7-460d-a57c-609ecef81652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341819be-8867-4df3-be86-ca606ba703c5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d851b0b-49bc-4f69-9a37-8e791ba216ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a08e6e4-dad0-45e5-b453-2ae6843ef68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19211c50-c9d5-4995-9023-10b1749cedf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2b8e38-a5fe-416b-9c17-828d028d9c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c79cbb-f69d-471b-9f90-a12ef032fec4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3937451d-d1a3-48ad-88d3-808cb9ef7f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09d9c0f-9b18-4c77-bb54-14d74418c177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695e6c75-7152-4543-beae-be8a735428d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6093b87-3ca5-40b1-8bbc-ac1b0124858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d09e5a2-3b80-43c0-9e33-a4cc21b52ed0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac21077-9cd8-46fa-960c-1456e183d690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dbafddc-1d3d-4872-bead-c58f0b4395bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b44517c-b0ec-499b-8830-cdad80a2a94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "953bd2b3-01b3-4c1c-b883-ec9e631ee0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa4a454-2847-4b8a-990d-4b185305c757",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7fcbe8-b2ac-4c7c-a996-fcbb42f07efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661e2a77-d852-4d5f-a968-74d165f236fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b11365-5876-4b9f-91d3-8b20199ac4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fca05f-e543-4454-9cb8-ed6c39614f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf0d8f3-dd22-40ed-ba06-16a123fa337f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77afdcc1-799b-499b-81b1-d07e66402934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca77a5b-17d0-4a9c-a4c1-5eb1c5cdb3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b97ec0-5340-49ee-b215-d5d159c992f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c6e13f-c925-4e9e-b7e8-fd79a61199f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d37a3d-42c8-44a5-b6e7-ae61d1964c35",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f2f362-4a58-439d-a48a-88e72601927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46497f91-4cee-4e33-a9a5-d55c8d99f9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d001d841-ee23-4bd0-8d4b-cec6ac3c1eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5ad05d-83b5-4e71-80ed-add11d5bc6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16278d0c-726c-4a23-8eba-a00d9178f737",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a48137-ee88-4de8-91ad-f36c1d82ae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d527d2-1f27-4b99-aa89-0148f4c509b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6299c7b-0bd7-4239-8424-ffcb4d816005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a98bacd-12d5-4ff7-83ee-761cfd8036b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f285ef-a05e-4ec5-97cd-ef2bafe1b93d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308bbf6c-5ee4-4624-bf6b-9c2a7ec756a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e317ecf1-3b6f-4c4e-9492-4db0f8b74054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa294f6c-b429-4f2f-b77b-90cc83a3bffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1149cd3-87e0-4c95-9f3b-1061603a6097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee175e-6336-4de7-9d56-677b39021cea",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d3395f-e9fa-47ed-866e-37b829d4f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acf4cb1-0876-4bad-b9f0-fc2789bd5e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85af355-a841-4cfe-9abf-e67e1d8b67d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "298a5b27-6294-4156-ab54-005ad5d46ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92befb8-fc14-4144-9f82-25ede3a81bdc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2137724e-e6c9-476d-8b6d-689cbca4ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61881e1-1566-4a97-ae93-0695c0ef602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c574ce11-766d-4f5d-a8f2-5e72e2c1a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "259d4b51-dbe2-46ed-a0c2-e62ad500fd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7de9e40-1956-4c84-8ec2-7367eac670ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83c517e-3ef8-4c91-ba2d-c6db2ce6e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3471b1-6342-499b-b1b0-61f407957c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc429e-3643-416f-a124-6ee6bb9885e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f18874-cffb-49f4-889f-0abbe3873f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff4e7de-a6b8-40ac-bdff-26a51950702e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d992434f-1f32-45e2-87bd-9a77a283da7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ee0d83-3dde-4a44-a20a-c826decc745d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d89da5-da3d-42a0-a6e5-092a0aa1d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f79c9b1-5100-43a2-9e78-e9890cbedb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057ccad2-1d42-4824-b857-ecf4045be1c9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d37472-4e6c-4311-be4a-1483ab1b2310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72066552-4606-440d-9f0e-333dab4684bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be13aaf-0a3d-4fb5-a013-6d96966c8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f8610405-e49a-4c4c-85f5-ff514ab8c744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f053a4a-dd31-4b1b-9043-bad9ec270800",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c806d9-77a7-4ff3-8b66-446d8def6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2054fa-fbd2-4a30-979a-68a5c24fe7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1bf65d-5f9b-4c87-883e-cf4860ac7a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6490d8bb-3736-4720-ac64-3e2f5433c423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0de7b63-ed06-4d83-bb51-1f5f9c031acb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eff0f3f-f3e7-4b58-b8bc-a74ee8be4f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0eff06-58fa-4863-a43f-ea6d7eae0fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5341d255-8585-4ad1-8d45-9d926117a226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f039ea76-4675-4d51-84b5-d8ac9d5dae90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89984366-2d1d-4e20-88de-e51a3abce73d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e06027-0cf1-4b75-964b-a88442a2f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b226fd74-00eb-4cd7-ad47-9dc2f5685492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28c9844-964e-47de-9751-3e6362295105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcb1b12-3cce-4100-8064-ebaf0a1b2933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b27d6d8-8de2-4525-ab5f-ac525f4845d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad9955d-911a-4182-90bd-044309ba8955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8135c8-3a6c-4a03-88be-37663bf98a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bff484-652e-415f-b266-a2f47486fedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74b5445-254c-4e5b-b1e2-317eebe6ef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b377576a-a5c1-4021-8f91-e2fe18f6d90d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b404d1-98eb-42d2-b969-e565c4bd3b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49e3b83-841f-45bb-a0b4-fb7dccb1ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccef151-3178-4ed4-84c4-b2254ab28eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c631e59-7ddb-4dbf-bc7b-742a68a4ca71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf1de85-1ea7-4d0b-852a-00422fed276d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba79367-a585-4464-9904-deba9959763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ee4024-eb97-4296-b469-bea9675ba573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b896fd-e9ca-4545-87b5-7f1a89231778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6586583e-14ec-4572-a71d-033805fee7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2df50e-2cb5-40b4-b3d4-dbcd87c16088",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d766a4-18b9-4797-bd2c-130313997a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057567fd-3012-4924-a25d-5e88f56119e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d703a5df-c051-4783-9e03-0036858e7ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7763864-e75b-4cc8-858e-ac46f326b7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a440a5f-06a8-4bca-930c-b40c9dcf69e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d7fd3-fd8e-44d9-834d-2da052838575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361a0497-cf05-49ef-a678-e1ca655e1bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7fabf1-04d5-4c0b-bab0-9ead8f089917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0800a281-ac50-4ecd-b4f6-01f3d4711cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c2725c-777e-47ea-ba90-62a8c44d4369",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262c5cc9-dd6d-4300-88dd-9d215f47ed4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a06fce-fd9b-4b40-a1af-737d0ff15464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b75269-cae8-4fd0-b8e1-67442a66416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70183516-b90f-490c-a1d9-3d6aa942b858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e6f467-95ff-4f7d-9705-6b5761e32fab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd403603-0d31-4a65-b563-3d3b69c7487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7c759f-b233-4af6-bb67-ef2c2b899c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40260176-dd67-4d03-92b1-31fa596a216b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c3a5bc-cccf-42c1-801a-61f4b697e1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf913edb-8425-4000-b99a-5f70a86b9e2b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2350e162-246f-4368-b080-e8060c3b0498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4088fde-c163-44e6-b73a-d01436187cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41578df-e2e6-490d-9c11-4743420e08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e25231-2932-4b32-b2f3-cab29ad31eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e61649-afe9-4ba6-9920-2b42a5e6cc02",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3284f5e2-9bb9-422a-9dc9-042f9a5671f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce26dce-b6c0-4093-bdec-a8a801a36c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91394a37-bbe7-4c3b-aba8-fac6c8aa4991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d13220-e6f7-4905-98f0-01c4667723fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81b592b-d666-42bf-a825-8651f41c2548",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a744775-db2b-4cbd-9970-f55119897f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cb6b4b-48c6-4246-bdc5-163a1440a2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86fee0-d9a4-49af-9fc5-191822e72006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71153e14-4278-4ac6-89e2-ac45934196c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06111f47-be31-492d-b3aa-af4d89caf932",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514b56f0-5273-420d-a160-877fdfe41cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93696456-bcc9-4d15-939c-b9c0a87fd749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978785c0-1ae7-4bbd-a3d8-0f61b5eeb623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ccf035-74e6-41d8-b12d-0f750a77b8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e901ee-4d4c-4f26-9dd7-079b24287c52",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc9168e-e7a8-44af-bd08-1afad15b2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71ec637-442e-4a7d-a979-82979b4a5322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d8267-d2cc-4bb8-abd2-7a84f9390f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f74bd99-8411-4eec-bf76-3e92037a8aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b820aef7-f29b-4b3e-992b-bd913ec5135f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38f0c2-3076-4647-b124-aa4829395768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e72ce0d-8dbf-4cf7-be86-285ee84bf228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e371da-1863-4383-8791-1cefd1518097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f43ec9b-529c-410d-8d99-0f7ca30e6307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba3986-00b9-4676-9ab0-9bb1a744588a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b2ba7-0f89-45c7-8191-8908d51f71d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025542ca-419b-4e48-80aa-40d3b91097d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64980009-f05e-421c-8ac6-ab2d04f5d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b15bfea-75a7-4486-b830-d472f804ef7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71911ff-b472-479b-a30f-82c7eceb52af",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf362db-cea8-4fb1-b92b-3277014ffb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42532e29-40cd-4627-aa42-535343ec4841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd1ebef-e067-4f2c-83fa-bbacefbd4dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d90a6db4-f72c-4115-b0d8-53a749720a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964a90ca-28b6-486e-bed1-576091c24765",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66ec8d-4e31-405e-8dd1-ffb5a37034bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa0aec8-5034-4aa1-894a-305a450f26fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399faa41-079d-4f9a-9cce-a9d57068430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0cbddf-8952-464e-85d0-1f30ee90a784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2fa0bc-db77-42c0-ac01-29d7426da080",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d343a-8ede-44ee-a407-f551dd52c308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e0ef04-b2fd-49fb-8f26-1050974ca873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29256371-9004-4dd0-b658-f1a988221db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5834a321-346e-4f8c-9aee-5a0eb8ed8f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff70cc9-6a2b-48fa-9eae-f81618c3c982",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645326d7-2929-426f-863a-b5cda7174119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd11eeff-cb66-4add-b245-bdebd54fc99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bddaa7-a624-4c33-b791-b8fe37047479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c0fee2-bc79-4dbe-b5c1-fa02ebea09ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6927bbcb-3da7-4f94-a1a8-478061eeafd7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea4834-1266-4ae7-b006-c0a8ddd5850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8772ec31-8c6b-4689-bc2d-a70de25e4396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ea1c1b-af7c-4be0-ac3c-4a823882f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f280bd51-739a-4143-ab73-a053983f6f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678127eb-e3ad-4da9-9352-55b8511e7dfb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffbb9e-92d1-44ea-81c3-9d2937cbaec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc3db64-2857-44b7-a822-b03c70410d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f548d35-4d9a-47ad-b8d5-5fb7a1a0a3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e4720a-ab04-402d-af87-3628a46a4518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208699e1-fba1-4e69-9482-324ab49236d4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec14612-2de7-4ce8-a783-6e5ffc500dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dda2feb-f1da-467f-890f-ea2cc8320a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9558e-b610-4883-8388-b44e12a30ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d97e9c7b-24f2-4917-983d-a7bc9cb3eb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a2d319-178a-4459-859e-865fe411b24b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50e1885-f847-4bf6-822a-cf3f3e8f4012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d3ec2c-991a-4990-8db2-a58187b03af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbca314d-99cb-45e9-99a8-4d971c0ac902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e402f3e-61e5-405e-9ea8-00540effc1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e29f45-fed3-46d8-a912-c84b2db2b5fc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6dfcc0-1c45-4f77-9512-00b488cf5837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cd5862-9677-40ff-88df-aa680ea2fe5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666b7bac-2674-417d-8edd-bf6a5058ea26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f650596-fda0-4e68-87d9-72c7e105d067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ab3ad8-fe23-4183-824b-07a0ce0a2585",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6229b0ed-737e-4f6b-bf36-7b581305708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcc87b1-51bb-497d-ad3d-98c98cf48283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5649bb13-6229-40b1-8ab7-1545b50c8462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e8ebbb-ab6e-46ab-bfc3-f7e83f86f9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb81810-667a-4b67-a0ef-67114a2ec255",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fae6b4-6900-4e83-9892-ccb9ca577df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e4f274-78b9-47a1-824d-421f0cbbcd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5491eba4-eb79-4a75-a488-670edd816675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31699472-8dd6-4429-86d3-0febabf4dd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9517512c-7b7c-48f9-8437-77584abb141b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7197db5b-121d-409b-a1be-8112de4e7247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d26ba0-0a5f-4ae7-b86a-50f1d0c31d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc55800-f178-4b74-9e77-45754778f65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4f68b2-19e7-472c-9594-9021b95843e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a118831-bd53-4393-aa9b-09e45e0cd5f1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599b731b-c6d8-4efe-8120-3d7bcbf4246d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824b47df-aacf-41fe-9d0c-7074df6de35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d327f8-0caa-4c0f-975f-9686352a8a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "705a8caf-86cd-4dcc-bcf8-27f9bf6a6de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4cc65-53e8-4917-b6f6-30e3d406631c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a477166-d45a-44ec-bc34-4d2cf8342d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff43c9c-870b-492a-a6af-c2c344bf12c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bcb35c-306e-49a1-ad72-9e9b54645957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0116f0e-d4b6-4362-98d4-85cd83028c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f58112-7bc2-4825-a634-326658ceb0ec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba78e4-898d-4b82-bc10-e7f50b18fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30e04b1-1c75-47bf-bd60-3f31cdd5a1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5231f4-04b8-4443-84b7-2ba3e82646f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eaf5bfe-9ecf-4f28-a98e-74a35b4a805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f61fde6-21e9-421b-8384-6e8ca571eef9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f455e759-00af-4f52-a3c5-dbee1b46aa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5d7376-dbb9-4b23-8c26-608347a230a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48d8ae6-0003-48d2-815a-66bf663f7c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aace1d0e-f755-4e98-b69b-b17e529d6223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7754edb4-0f57-4d22-a9aa-d09e58cc9c84",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba9fc09-9df4-4d31-b217-44828ef9ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e215cb3-aad3-43a8-a095-b936990812b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b67329-8bbf-4062-8f00-2a188960756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "297c3959-e3ba-436b-9da1-c16c93d231dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6475386e-a338-4432-a239-90278f53e10b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9baccb-25c0-4d41-bda7-def1bd4e2c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82196471-b7e9-4fd6-b66a-b6772f5afc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9f4f1-2e4c-4c9b-901f-0f4f9c0d3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5832ad20-0cc0-4edf-bead-4f1271807afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af732482-855d-4734-ba19-2ba07fcc0587",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c81700-bd5b-4320-bcc6-9a3a4aa18ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9705f0a-fbfe-4754-80b9-d8b2bef76cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00745d2e-8708-47f1-a3e7-837c1529db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f51397-ce04-4042-bb0b-90bae7f8db3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c4f125b-ae58-44cb-8675-b1fc6cb9999d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72c9899a-689f-4658-9352-db49da30d3ce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0931aa20-1163-4bd9-aab1-c0bf6349c58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe01a9b6-2385-4e04-ae51-972e444b9b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca63c69-102e-471a-a964-9b19e74237b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9382470a-ea1b-4dc9-8a12-dc8a83b52b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3967b886-fabc-4b3d-a035-a06042f3fa91",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc38128-b342-4a4d-b78b-c9d73f93d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba41216f-d224-48fe-b332-b94dcd00eab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93185520-c250-4909-98ca-f81bc775201b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "956ca599-e3c4-4cdd-8abf-107fd96f285c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f2ab47c-3c78-477d-9fc9-5c346917d7c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59db86a7-f549-47f1-bc95-d7d388c0433c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9421e665-4412-418b-80c9-2d40fa8c551e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e288e81c-8fec-4262-9603-32733f1ee712"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "450aac8f-405d-4bba-b45f-31e0ca8a8ee3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34dff8da-71e8-4bfc-9f83-e8536f5579be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0632625-21ab-4208-9def-7d1765f56543",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "266132bd-be30-4c4a-b94a-e9e8c5529730"
                }
              }
            ]
          },
          {
            "id": "8c53de88-d271-4104-9155-60d83eabb1ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8eda426a-6549-4843-82c4-b12d0a0aae2f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e41d23a-9215-4140-b9d7-19ba9427929d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6df21cc5-c9b5-42cb-b84d-842fce83b9dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2721e26-a6bd-42de-828d-da12950d5f9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ebfd7c3-7d4f-443e-93dd-0bda097c1445"
                    }
                  }
                ]
              },
              {
                "id": "d913b626-59e6-48fb-87b8-e72b451c4dc9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a19cc56-dfc4-4bc3-883e-71eb5bbc2404",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0017f63a-1798-452a-abed-97c64c8d0b06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee5e18a-b310-4764-b728-e017e2623778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2552cf85-3e4f-4e73-b49a-168ef5c94fc7"
                    }
                  }
                ]
              },
              {
                "id": "e74e33b5-cb2d-4ac9-8905-3c70cd8e4058",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85c405e0-6696-4a17-8116-18f8cf070efc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b03ed37e-ed66-41cb-a624-3d164236640e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2317f53f-7ebb-4dcd-8a24-d2bef3c2bf23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a527d78-971a-44fd-a475-acf44afc622f"
                    }
                  }
                ]
              },
              {
                "id": "247859fe-890c-446e-830c-2a74b2238725",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52477a7b-610b-4355-b442-2c66818b1221",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9aab17c-29a4-45f0-9516-9d398623bcb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0e4170a-651c-4e97-8a35-875675df4f66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62080122-e698-4e0f-b8b8-167dba541bf0"
                    }
                  }
                ]
              },
              {
                "id": "c509c803-0eac-4c66-be84-f0987795a698",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ef564b-2620-4747-b657-fc04c3a6c18f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ed5ab68-34f0-4804-9c1f-74d6de76a2b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "389479e4-c4ff-4ccc-ab33-5435e2a9dcb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e4accef-d439-428c-a228-7671291dfdbc"
                    }
                  }
                ]
              },
              {
                "id": "46a667f1-63e6-41c0-8a69-ae683735178e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f85d6cef-f400-4838-ba21-2aa5b0e32f92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b10dda2-7823-4cc0-b9a5-15683de9ba5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a203d03-f89c-4298-849a-7a8b9c06d303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eec70567-14e2-45f3-9a0f-2146aa9f7469"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3c5a765-6749-44e3-bfad-d19849635fdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c7d43a4-0e92-4022-8bc9-e6670c222d6c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ba39bcdc-8d79-4298-b6c6-3dec9bbb5850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "199e8628-846d-4151-bce4-277f36e24a8e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "036b7f0d-b9fc-40ac-84a7-694fdf398df3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8b6f57df-134d-4332-a552-de8dd1f03fc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572433b1-fc00-416b-9925-ce1c6224a1ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08e19cef-4236-4826-8960-a5b95f51ea52"
            }
          }
        ]
      },
      {
        "id": "70442dca-e30e-4831-92d7-de5e8138c359",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2612ce7a-cb57-44cd-8a1c-8094c4fe6986",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ecf811e-1e00-4acb-9766-56dad46c2782",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17f5d5bd-75df-4034-92f2-fec294aefdfe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc835ef-2c1f-42fc-93b5-cd808b066eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a737ff-74e8-4671-b23e-6d41ec394736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a71a010-eb2b-48a6-b968-743d83abfd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad363ce9-e747-44b7-add1-6ea21ca09eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffac9d50-7674-4360-b93c-95d0cdc52050",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa212c8b-849f-4291-bc00-5b63aded643a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25891e8-9882-494c-a75d-62d3fbe3725b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02916c1-58c3-47b7-a0fe-05a8caed9745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "367421de-167a-46d9-be30-c5c9be6cd924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1daddd7-b258-4d4a-a919-3f24366d379b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722412f-600b-4dae-a21b-2ac6853ac11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a43808-e340-4483-8576-5ba9011da576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2c1e0-f057-4d60-8a08-a4204823f39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf99646-be58-4efc-82e1-d8c79e9fa82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c41368-dacb-491c-9266-63f962d3103c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6298eba7-18dd-4a92-be4e-e8d93a8ccf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd52c6e8-0f67-4b57-bbfe-6c94f8e79c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503f56af-19e1-4f4b-9f4b-ce41df3c9876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aebc43-ee45-46be-a80b-f0d8a580a565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1d1b79-8ad2-4e57-9161-dc59a347733f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ae8cd-aa86-4663-a3b5-b96fc2e585cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8709966-b623-4fab-996e-c8bcf723cb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e774cde7-4a22-4b5a-9137-5ec90798e02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "226dbb68-28a9-420f-a74a-92a91b7c6810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c309989-25e9-445e-abae-2b5fb05e25fa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1215793-4af2-4781-b9e0-8a3966143f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4844619e-d42f-4517-90d3-25fb99eadd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0ffde2-05fb-4f65-89e5-6eb85a7e29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5446102-5ac3-44f7-8fdb-b593d961890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bf1ac1-52de-4355-9166-68cc82e0f03c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933f118-0e47-47b6-a6b5-f31be7fc0687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25af4b9-12ce-49a3-8475-7d3c00b13cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907792d-290c-44da-9420-7933ac892a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8be5b8-67a4-48df-8469-6045692d9ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f53a16-d6c0-4e35-b045-aa9d7a09fd33",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f662fe6-0483-4e1d-adbf-aabce3f920f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f3fbe6-4085-4ee5-a105-7e81be277a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2affbaf-a2ac-4f0f-8ab5-6cc16dec15bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ed1532-67d9-48da-bcf1-45c7db9e806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8f1881-0d04-42f0-81b5-c68206612d9e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866fc2ff-2da8-4803-9ad0-d13b5b4cb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65eb0594-df08-4340-99a4-07e342bb45d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d97b00-0053-4b1d-8fd1-e5832c6eb180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb3cf53-604e-4d93-a300-eef6543d25fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0cd3d6-dca7-4d1d-98cf-32442c63ad72",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25016511-a78a-48c3-a785-0fde2cd66d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457c0fc-92fc-41a1-be93-fd89fcffcf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7d8227-e915-4e61-818a-c45aa57d666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f3c9ce-a5cd-429e-a17d-e74f121abb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b401c33-96ff-4af2-9b69-6f3e90b9576b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4505949b-14dd-499c-b549-fab78c6ec387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07332198-8c69-49bb-b2a5-8dbc706a03c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11d4831-75c6-4aea-a6c2-820d672365ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4c60e910-50d1-45c2-812c-3db61dcd3c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318afae3-88c2-4b2e-8922-70b6e206fc1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078fc257-8735-429e-b000-fbebb5934715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b5d0e1-4962-4dcc-8827-f1e452272bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe7d701-af47-4612-96a6-ff36a8af3305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce70dfe-88c6-450f-a80c-2f4b47020173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f30f11-e2e9-43e8-9991-f13e7f9943fb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384fa164-7e83-4ede-9c2b-0e6b2cc60ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29d2dc5-2e84-4f23-8725-2311319dd53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500a2324-da1d-40be-b7cf-2575e0cd8e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "215995c4-e038-495d-98be-32920dd668d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc2dcd7-0f47-429c-aece-db416b233d05",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd7dc7-3e1e-4cb8-9827-1841ab037340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8657320-8d1a-46f7-8c25-3c26d6a485bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dead19cd-6017-4f18-ab0e-6b34ed2fe318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64773b64-588c-4893-9cfd-beb4244d3564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc059cea-74f1-4991-a92e-23a2af233681",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8924784-213c-4feb-9a78-a4783a5b0e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a94bda-5ff7-4a71-98f2-1abaeb101f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34bd8bf-8b6c-40bc-9691-69a5eef189e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d983b0b1-3bfb-47c4-833b-331273ea86aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaa28e4-fb72-4128-a3b0-70b1a4daf7c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8428e2-61bf-47d4-a7c9-1dbf8bd0e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cd098e-4b82-4761-ba49-4e1780638d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e66b5c-fead-48bb-820d-0c1d2fa8b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3b88ac-3c5f-4b4f-8e16-d9f7e9e06cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275ea605-f3e9-4e82-8f52-e770027b0965",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9a177c-8d41-4f24-b68c-a66562d3b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d3c384-5ba4-4a43-9cde-099e00937296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f0751d-ead5-4550-8690-a625ae2a7f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a999ed9-3766-4fe5-8004-6bc171d64477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d5fea-d5c5-4392-aa1e-36a8bb1d3ed7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2271bacb-c3bb-4040-977d-5b209e652f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869cf3fb-5b81-46eb-96ef-aa7e8520624e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf9dfbf-83b6-4fb9-9dc5-6c658f97e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee5a140-7481-416a-9049-1e2ba354aee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21d61bf-65d1-4002-b529-c10b26408ef3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb11d79-828a-4aaf-afcf-5739ccbafbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba7ba84-47f3-47df-b6d6-eda2416d75f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed68b5f5-6a48-40a7-a422-ec7c838b7f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea222312-f847-4313-9a51-a88442bb855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86fba63-c601-4443-9db0-862acb37a37d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e91517-9410-45dd-ae91-c8c03bab8e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426e3a07-6590-4f7a-8a64-413548afc7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5b32eb-cd70-4f75-b87a-934d70fe98c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e9aafe-a25d-4c93-8bb2-b9898201c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea21119b-8a2d-4a58-8d9d-3f98374f365a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c63206-3e77-4e6b-8b4b-8d52fdc5742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e323e0b2-6c6a-47cc-9e01-1ecae8534e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42adf96a-e981-47b5-b440-1906ffcdf8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e758d878-6a08-4884-9d2a-09b534c244ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7501932-b8ab-416c-bb17-032c86cab913",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2f1169-d6fc-453f-b76b-83d6c1aba153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ead0c62-bbcb-4fd4-8de0-94dc8dbf63b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b44039-2e0e-4640-b9d8-1c338a7c54c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f704eaf7-29fb-4ee0-a023-afaa0b74e758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47790c95-daea-4f1d-ab94-72ad79bffe6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beddf69-c699-4023-9d21-20cfe84c16b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31404c0-7dd9-421b-8a70-51c4366e43ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2711eec-c7d9-4f9d-9b70-a63667bfd2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d4a8ed-ff98-481b-8e99-9ce2c262278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01f629a-1745-4180-98b4-87d2bea34f6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68b9d6b-9a07-485e-8939-2123e1dc8e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c0c22e-ecfc-45de-8893-bd8f887f571a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2649b1d0-6bb2-4a99-9e7c-c91dc7a17c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02b166a-c55b-4861-9e19-ecd0b2e5293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a416a2b-52d6-404f-bc7e-1275048d2380",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa66369c-c0d5-48f3-94f9-3e9df4bdb89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25c4e48-a53b-4702-9d61-8d615144758e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e56050-8a65-42d0-8853-163c275b67e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd00373d-0681-484b-81cb-173d981684a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d846207-4e28-48b9-bcd9-a3069d6c8e89",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec195748-9cd2-48e5-8f43-e6a0f76adc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8b3234-aa0c-40a3-9e70-a4cd7d0e1be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9fcc87-3079-4e42-b28b-748d79a2fad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdea07e-4627-451e-997e-c44951136abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e54863e-e18f-42cb-8462-c9742663ab52",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eccdb51-23eb-44aa-8a36-5fa892458895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d2d39-05d4-4b8a-b101-52550bdeb31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d92210-5e30-45ca-af3f-1037554d908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c20ef04-1f9c-40d3-aa61-751c7b74b82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a3ab5d-8006-4986-b68b-b1c7d2f7dbca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca7f5c0-e875-4888-9e73-d3094821817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c71eb4c-6cde-4af3-832b-101a9b74c6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f597288-3981-4f04-9017-638505154410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06c3184-2e5f-483b-9230-7e0a94df972a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc69f98-c25e-485e-9fa2-b324bf872aaf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dc21c1-7ad3-4d93-b52c-6046c8e19578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a61bc0-5846-4116-8622-aa68d4c8b461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b6c90e-2f41-4b6e-8219-11af93adc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a65fa6a-bb76-4f3c-ab53-c1f0a432ccea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3cc268-007f-4194-a033-fdb8155703eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138a5c8b-ffe2-40a0-87e4-e732f63e1499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b1c349-5c69-495b-bde3-daf4a25e24d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1315ab-0c66-4067-b09b-8c2b38259d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f614c350-5857-452e-81b3-03df6d7f8854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0b3850-b0c8-46a4-af0d-b14be158fdaf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b092268-a9e3-4534-9837-c52f5a0a4b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126672ba-3eea-4ce0-80da-2de9d5bb768d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7132ab41-4114-4dad-864e-258e75134f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6058396b-56ce-411e-96ee-1b7e1eb5d7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6f1bd3-ad49-4a1d-b06b-4221d062c8bf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dadb133-9294-4267-9064-e2baf0cbb9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3addd138-c943-4231-a627-0650b3f5cff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44d35ba-3f58-44dc-bc14-a56029c5282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4601cb-d89c-4ae6-b828-67486087dac9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cc0cdd4-c677-4455-a599-eb5d49740763",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4cd83dd-c983-4c94-ac8d-b2e0f8690e8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bac341-5333-409f-94df-f7778a56c819",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf1fc9d-f666-4837-ae85-d7f8020e9789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0eaf6b-9246-45a0-945f-7f742a485546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca6df01-5c82-47a1-8359-03afc67ff49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cb315-6cc3-4888-a994-50ec65521a7e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4341a525-2472-49a3-84ad-ba51f83837ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fa853324-bca3-40af-af21-2f95deae7eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7513d9-5a1c-44e1-aadf-0622ac34e73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e412248-940b-479c-9e2f-613f04f03294"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c83ae04c-29f5-470c-80bf-11f3fa9edacd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2902c50-1076-4659-920c-51b9e11f6858"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "642430d9-ddac-4fe6-a900-84361c77ed3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9175934-2732-45b0-992d-11be26237d7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f3e6c09-9dae-43ff-b7e5-f86ff5e71a01",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "272269b3-a7ba-46be-97af-bec6709740d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6eac415-3168-4fe2-a3b3-ad69463915b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca18cf39-f4b6-4c9c-ad22-f64c72db6935"
            }
          }
        ]
      },
      {
        "id": "bc5f6c48-c7c9-4169-a406-e328fae404fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf846123-f698-46c9-9818-4cb14275a21c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8f9a3b2-2094-468c-ba5a-79e49d8ec5d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1f46fcda-6aff-4914-8abd-065c472ee1b0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527effdf-4d80-4773-99e9-88add12dedac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39b0fdd-95a1-45ee-84da-b1281acca286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6accd042-748c-479f-ab7c-f2a8f201a8e3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db3f84-21f1-4ba8-9619-81364388753a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20206d14-555a-416d-93ce-32b71428afd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecd895c-a500-4fe6-9084-415cb58da494",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1268a27-0699-4a53-9e72-46577f2aa434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c319049-ff35-4bd4-8ac3-9443e4c29445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae17021-3132-416e-8f7d-2b96b64e84db",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc19ba6-3efb-4f78-8788-1a87320ff574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007c96fa-a4ce-42ba-bade-9af8a906025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb320f64-ee04-48db-8b91-4fde1cda4e39",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2434e123-2576-45f8-9b74-cff36b018a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa39ee40-6793-43de-87d7-09b293f632eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15f27c5-503e-4893-9959-5ab948970564",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0c4592-1414-4bbf-8a25-6350d1d3277b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95864fa1-491d-4e7f-b3c0-3401344e3b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e153d989-93e7-491c-ba41-32e25f03dbe1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a7600c-b0f5-4ba6-ad90-b027d604d345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e1acdc-5fe0-418a-a0aa-f547d4e2d717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2fe384-7543-4277-a7fc-6090f26bfbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f28a244-fb1d-4ea6-8ff5-b9902a7cbe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f146ab5-4325-4d12-a7c9-47d70813d249",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371976bd-f9d0-4c24-9ebc-b2c5597e335a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8f3aac-a527-48cf-8325-aef5510fcbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03738c44-90b9-4615-8a36-5afd66d9f90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64216be-f92a-499e-a8b8-e2c92434fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed656a1-5003-40e5-8a64-95ae9c5d11b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9440968-9975-476c-9848-1f1da72fd4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad72d68a-f80e-45fe-86c6-d9f6310a367c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c9c441-1f7e-41f1-849c-6675662e9bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798134bf-227e-48a2-99e5-10d29ff2d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea4eff3-9543-4e35-969d-bf455527887b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd0dd8-4a08-4d5e-b495-2f7f7732dd0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f41db1-46d1-4e97-8009-0f1b1cc99b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab20e7e-403c-450a-8271-a0b28df525e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91ce432-bc20-4ddc-a232-9f1c6d06adf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbabda3d-0667-4247-85d3-46657eafadf7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd0c8c1-7dc7-42a9-bdf8-6c861a5e1c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa8ba98-eb92-42d8-a320-4642c2d0f785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f80b3-42c1-45f2-af99-75d69bb4ce49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b7e4c4-3881-429c-b9fd-f9ac2c8d9f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c30bb28-425b-4c9e-854e-d4aed491987c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f1dea-0ba7-4fcc-971b-10167a45fcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432ffb5f-2e95-4ad0-a465-d9dd01662d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89654fe3-71a7-49a4-955b-8078ad7e6ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779e217e-9506-4b93-b264-e3990679273d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37adf56-0b30-4f26-bd16-71cbbdbf62ad",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd86446-49e0-4e35-b2a2-8dc38bfcc157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311ef62a-1621-4d7e-8a06-14f31993614a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4e6fdf-9541-42cc-80bf-6a313ce0e5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d25a603-5627-459b-b526-1e9686c508f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2257993-5048-42bd-ba4b-c52b1dacca0c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f5edca-a6fc-4c95-b89c-c4f08e32813a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a15b2f8-f6f0-4709-8d01-b7851bba9d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489ec181-df6c-469d-96c2-fb702c986956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09054581-b5a6-4ae5-bd57-0e86dde6149c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daadf13e-3cec-45c8-9fb4-dffae74df00e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273e4868-7225-498e-8071-529bbc83b52d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5865e3-0613-4b5a-82f6-ed0c2e94d68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9f5087-6e8c-4748-bc04-3c7e595d8ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bef876-a273-4b91-a27e-9767d50778aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73868e6c-fa5b-4115-800c-259e23137d66",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b252bbdd-48e3-46ff-bee3-72067974a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7372f50-b64f-40fc-8c8c-99685539a8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a214e4-5d5e-4b30-93f1-07f83da2ae12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9555533b-5a1b-4c01-ac58-3e36752873af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e5ff1e-c63f-4761-863b-e645c798cd53",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a68417-6ad9-4298-b700-ee50f6728f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32521c09-47ea-4279-ada2-588c9b82db76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d85a4-0b84-45e3-9c74-6130c91f440a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb82f0ee-61f3-4bb7-81c0-99f6d8cf678e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9477608a-32af-4978-ae14-17d4ff09f5a6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d9c0f-47c7-4395-983d-3d1f858f322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e022a9c0-13ac-499e-b6b2-41411cdcc912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5672e0f2-5602-48df-89ea-5917f6d330e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77af0d3-253c-4ec2-8a21-23a08c2a9f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a825d4-8f4b-4b86-9a6d-abbfb26e6d67",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38a0714-b012-49c8-bf81-f0e206f2ed24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022c5302-f675-4256-b4a9-3265bf0031ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5f0b4b-706a-48f2-a1f7-eab93481237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800dde69-e5f8-4d81-8848-3af350779187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d7a0db-cf5b-4873-a19e-2b95d26e2612",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49960ca9-66f0-4ef6-8640-d8d5d773390a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5e481c-f0e0-4d7d-997b-c227d3104c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0789528f-c078-42a7-9768-89ba9cc42cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55766d3c-3add-4068-8254-084d59066804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5ee165-9642-43bd-9d3c-341e751383bc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e5ad42-336c-4a20-ab4f-41683e9c4ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630b2ae7-2efc-4e58-b288-50e893ff2f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf707928-5c18-4d69-b35c-c1281cdbad40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bc5949-b180-4d71-a674-9585c4cee73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87dccbe-3a73-4fa9-bfd3-d65aae48360f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1db4aea-44fc-4297-8f7d-9bfd95b0c971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13821dd4-ee21-45ef-8858-de45d8287a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1afbf93-20bd-4f4e-b9f9-34eb485f917b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94421592-3983-4a62-afa8-5944a6ac6538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373c319-d0f7-414c-a1a8-33c488703d18",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b0f978-f5ec-4112-b286-c83744f975f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae30f0-a326-4409-bc6f-5e82a7f8dcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fe428f-7922-4aef-a74c-b4130249d36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff731596-6d7d-4291-8611-23480620efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13c16e5-398e-46e6-9b5d-82697928609e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba3cad0-624a-4f3d-9f5d-675ee205f189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0908067c-b4cc-4d1f-987d-86a31e33920f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192b3526-ff47-4c96-8b9d-90fd1ed0fb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935d931a-2f10-48fb-a655-0b814b045a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cdc097-ddc4-4dad-9069-6edfdf9d52a9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b79651-eb30-42cf-88d7-4b38e0c0efda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229b4001-d0d2-48cb-bb97-08e80f874296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaff53e9-42f4-4dc1-b363-6350643d2184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed401036-a15f-4fb7-8a45-dca25d31dc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335b92b-7732-4fa2-8b63-bc325f6ec83f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c886083a-bde7-4e3d-86f1-df74c2411e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eadc1873-4766-42f5-9b66-86cd0c0875b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95b602-6990-4973-845e-6e0907ca4cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ea95a6-f0e3-4ea3-a3c7-729ed5ad41a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ebc804-a71d-4871-82a0-3f0ff7a8c7f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1015ee-8929-40ff-92d1-0926418234db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ba1db7-6200-43ed-a0ab-2fe65f75ca49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef438b-993b-48f0-a904-e48317669b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f33816-ad29-4706-88b9-9e45eacb5107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c8dea3-dbd5-44d7-ad00-fb3b9173b1fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eacc1e-7f75-4afc-8c84-0deba777e441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26502d74-ba7e-4890-8f1b-3243425cbf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df2cbb6-50ef-42b6-b986-a8b5e81836a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2277e77d-d6b6-4184-9992-08e8bece193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88924a6-2b2e-41fd-bd62-28b8017b25cd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72836307-f21e-4b08-8a8d-800e7ce5d756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa77e40-ea70-43f0-8151-c331809f783f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acdcad4-f34d-45d6-9a71-c576f0eeee04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d41945-3aea-49d6-aa91-47165d50cecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90833a6-bdc3-494a-a3f0-ddc6239085ff",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde2d12b-7827-4a92-b360-db5998b250f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a35ffa-5380-4e19-978e-f5999010e7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fe0a36-c68d-4f17-bdde-83dd7c22e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92864216-91b0-4e2b-be66-b109cd685c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bd225e-5ae4-433f-bd92-28a269271f04",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a35e3-4910-4199-9eb1-39fe8a4d6d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160ede40-9e18-4e5e-8644-4360b2f01034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5665e950-f496-41ba-85b9-b4b7441aa36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eef715-07cd-42c5-a8ee-35e019c378e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc8e8a1-049a-4312-9548-140dbc8aaa1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5901b8-c3c7-4bea-9f86-fb81f71c688f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eb378a0-cd5d-4e19-b858-52568db2c460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5bd53b-ffe8-4355-a7a9-0184b7d09233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bde30c-fe71-492a-a877-c83641a73e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760e53ad-d5df-4cd2-ba31-855082f2f186",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc3e1ea-b456-4341-a47f-ee6ae17c6b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22999170-765f-4928-9261-2f8d8046179e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc005c2-2275-4edf-b2fd-be637bc169f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bf8221-983a-4cc9-a9be-a04bd3d4e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d999d39-4f71-4322-a97f-56efbbe7df9a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae886548-417f-49f7-baa9-41ef2d2835fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74256bc-33a5-4a07-b96a-ca7dc218d267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262abb9b-72f6-4c50-ba24-42f0c175e4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe70c41-2d25-4901-a685-08b8314ec983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa341ce-0c59-4cb3-bf42-77fc7f6efd27",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e25e81-92a4-4af6-bcbd-8b6a8588ca65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd45f59-7153-43fc-a4ba-f10f0608c0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70c1ef-9be2-42e8-b067-a40c35a1084c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef2556-0c81-4db2-8dba-3314f8423449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fc6179-ecf5-45f0-8539-bd5a043660e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddacfeb-166c-4925-8d18-e73eea59adb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8356457f-adb5-485e-8259-37395113d67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7550f7d-f920-45e2-a898-65eebf45aabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637325a9-d386-431d-aefe-bc1599120cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df773da-49fb-4978-83f3-f77c472bf1ff",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6314f733-908b-49ec-aa1f-1232552db167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675f55fa-ccfd-452f-8c0d-4c53b14721db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568d456c-7dd3-459e-8555-8182af59e990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb723d4e-865a-4335-957f-e774229db384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89341cd3-d073-4270-9012-27e3b27aab8c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fd8247-a517-4c5f-8f6a-5caa32fc5e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf3504d-ea10-4fac-8c2c-03677319c333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048af5b3-6e3c-4b26-a0eb-586238030a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c65f54a-4de5-43e1-87a1-31e1b920cf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caab5b9-11ca-4812-8e01-d268561b8c68",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9239ba0-0dd4-4dce-9e2a-74dcac20a03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a50d743-a128-4409-a98f-e71fa99b404f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfdbb2-f48d-46c8-8286-b1fc44bb894a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace555eb-ddd9-430c-9f9f-6ac8c443a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944b4a75-5eef-40f4-8e46-e43f8d02e4c5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed6b879-6e51-44de-9876-36516f9d431e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554157a2-6b5c-408a-b4bf-466f7c2fae30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215da86-91f8-447a-abb9-5df1bc81a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc325d7-bf4e-43af-a8ff-6ae3c17c4402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f3663-74e8-4829-973a-bc078f970d80",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375b2cb0-08fd-4ec7-8c65-ee39eb54fa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ae458f-c433-4320-87af-5dc1aa420bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90363605-0a02-436f-b073-30be925b1d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7588a2-7639-40de-ae18-a7cf71935573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1962e3ae-9423-4a96-9639-566ce39b42f3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b826b2-7bbc-41fa-bd5f-c2f6f49e793d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c3d8ff-98af-467e-bf82-281b8ba1721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63732e6a-8fae-408a-bc6b-f93efb8a8b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59223afd-c754-46e7-b38e-4d64427e7ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c679a0d8-1cf9-4a5a-bf9e-1463bc83d25d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a8973e-6718-4406-9691-c5788a208374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a429be-6b92-42f2-aa64-034bae59b85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afdcb95-fc95-40dd-bf12-69fe75dc3e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55ad7be-f286-4d0e-8296-31f15b744eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527eec14-86fd-47bd-85b6-9c7a2a0b6bfb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db5146a-668b-4159-9b26-39b8e468d795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9150fb-4f1d-4544-906d-26199d4b8041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4f443b-ca47-4dd0-b62a-a60b1f3790ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d54fb10-5a5c-4998-be27-e285ed3b0b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf88bd72-8d66-40ce-8e4d-9b8ca4f51f05",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488791ca-54f6-4ad4-8449-5d8c51b9d359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce7dcc2-c35c-494f-bbbd-8b4f65ee5bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e50d0-d29f-4346-a2ff-2a344ff9e403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb5f317-ebd2-4667-99ed-b9942cf1a7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ba37c7-0024-4ba2-802d-91e22c5b1b23",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafc69bf-f3b9-4e4a-a8ae-436589748fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2765b7db-d50b-4200-ba11-a5371f5e8acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a56cbf8-4ee9-4821-b7eb-a19659835ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc0fa85-5401-4723-aca2-6b9432e9ff53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18554e48-dadd-428d-a678-ef7cca862b02",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e721b32-2b63-43ba-9402-5862187ea3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc25875-f90b-4b5a-ad53-81f903e2560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8715ab-a9ed-463d-9174-fae13448177e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0796d8d2-2fb4-40cc-b4c4-4efd5586c992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f392c733-3dc8-4cd2-b52e-e31cc9ccd503",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36573d22-89f5-4071-9f37-f18977b77e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc10b87-278a-4a78-a04c-978e5c8a6e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a2b7f7-8eb6-4933-80b2-9b1dd2c63a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c630462-efe7-41ee-b497-8183b10f3c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781dccee-0a82-43d2-86f8-2070d800c348",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f651095-6c93-46b2-b83f-2c9edc9eb4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35da9690-2697-4e3a-8f36-a7f08ca21760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83fe53b-1b44-402b-ac36-7bb8b568770e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fe1963-2f50-4d57-808b-786102822a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6953a86-27f0-48f8-b2d4-ef07ad4ce091",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97187d5-cc8b-4ec4-b68d-ba563954ef89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47ba9bc-4d20-4c0f-ba63-56534d44bb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e223e91-0868-4a51-af85-518e670ec536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209f2bf1-e8e8-493c-8bbf-9916e9d02b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a983c49-f6c4-44c8-a047-08533f55e4b3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d5cd9b-0cba-490c-b89a-0665f3b1f415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe6e5b6-5f67-41e5-8595-bafec5df2696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272fb8ed-25a7-4871-901b-bb3a61a6a3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23356a38-baad-4a9c-a702-99716ea87a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810306f0-7d93-483c-9623-477c8224ed85",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bde862-341a-4875-9534-8d5e535c9c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6106b37-f3ab-49a4-a2be-2a3640fbaddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5dcb4a-7d2c-4cee-8117-d5b7d1160e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c703d7c4-21b3-4493-a763-c69a1ec78106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b040c89b-a913-4976-8c48-33e99f06f91c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05173f3-ff4d-4206-a5b7-86ef4c8e3134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ab716b-ace8-43b5-85e1-49a21c1d2748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344932c0-1ff7-44d1-9ceb-0ff695b453b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e2ecf9-b2fd-4c4b-94c5-3a84d790291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6c1002-4f7b-4945-8018-e89de1c21589",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c79da-8094-46b0-be60-4481766516e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8360a1e-6003-41dd-90d0-e44bab6257f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e9710-3321-4737-8ddc-87976a9f2c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69ecc2e-0b2f-4c6b-b4fa-e780d8bf4ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4da43-7e60-4a92-a8e2-2e54fa6d30c4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721fd77f-70e3-4c0a-8fd0-72d6ee8c297e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622c4f10-a82c-47a6-af7f-4618f7de5754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f294ab7-090d-423a-805a-0c093980cc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fbca27-5ec4-42f5-af04-4102f2ff81e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5c0072-ec07-4a33-b5a3-fc5dd485acce",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37840a5f-c616-43ac-9a96-098d72997522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c5a433-7308-436d-a623-2023e8990adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7e0678-3afa-4f55-82c7-642a4565dfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d27ad1-ca1c-45dd-88f6-1a6058647805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618ecc37-ee82-4102-83c5-7be50c79424b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac620455-946c-405d-9727-dd5bbf2e82fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5202976-b39e-4b00-a5eb-ae3b05a9a084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e70108-c030-4361-a265-fa2038be1e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f486e57-e144-4352-a1cc-fc7304b0933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9664cc9-ec08-4f8e-8e31-1f1becca958b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e41d33-8362-46d5-8900-3ed6e8035252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26cf6c87-d046-4549-9292-3825e91e4805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb616e1-1eb8-4add-98ff-0a904f95ae4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be99a0e6-ac29-4013-b9d7-ebb206f1d645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2931ccd-2ab6-4719-8f82-a27ff64b953d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176cbba3-1eba-4655-ab6c-cdfc9559c545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b627e2-5113-4e6e-bf86-141a7490b2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f678c0c5-e6d1-4913-8473-b020c798e4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88ca108-0354-4f11-9d68-46b457ec49c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6255a4e7-8c2d-42b8-a98b-f4b96421d065",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f32c7-2687-4e47-8aae-1f0ab6044161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887c2a46-7d56-43a3-ac98-41ae972d7a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f37d3c9-aa2c-4765-b417-45e8700cf49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4e7da4-4c13-4320-b54f-4975ead51dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99d0568-e107-442e-aa23-a8e73eadc972",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf070734-bc72-463a-a499-a20f23188e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297eeb97-ca1c-46c6-a8d2-900aad796ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47ee3e2-4ce7-465f-b64a-191ff76ef5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dfa219-d400-41fc-b913-ddfdaa9d068d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48413c2-f02a-44fd-9f43-1a7e13b2dbaf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4233fb3-8f7a-4a4f-9abd-b28cde6c74b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ae1965-fe3a-462f-b356-246fac3b4cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcfc0b9-4c0b-4a8a-bc96-82bca1c04f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4ec786-c93c-4644-818b-bf7f7cf428c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e26fd2-f072-449e-86ef-74dfedcc2d7d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00500f64-81d7-4d13-a5e1-372091b9f4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07df73c-a9b6-4090-94e0-376b09adfe0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef573c3-0914-4663-9231-59e99c42204d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113a90e6-f092-4900-8e04-11474f3420bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a52408-4fa5-486e-8018-5fd7db5b5ccc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7bfedd-c91e-4abf-aa88-a51d1bd8b9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa0b31c-0ea1-443b-949f-247be398f1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c80d379-3161-4095-aa07-662744909afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfdba25-0778-4d1f-b6d2-41d8706b9255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a3f145-dae6-4998-897c-98ae6c8dc0a6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1d9179-e15c-40a7-9bee-ec9926d417d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e71a36-8bc6-45dd-965a-71f8bcc6abe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e57ab-1f49-4d9f-8ceb-2f2763256483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3787d0b5-0f18-4139-afd8-bd40e61c5786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e04ffa7-8c70-44e4-ba6a-9354d126ea65",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbff2e08-c712-490c-ab17-01facc1ca715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109c973c-7330-4780-bd75-7dab4ecfd6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331bce8-6825-428a-a542-ecfa50cddc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d55883-44fd-4032-94c1-1d726610eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80ea3a9-6c80-4408-86c1-11a51e23dbfe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ce1093-5b98-431e-a7b6-260d3bf1a121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08eeeae1-55be-4937-9f11-2fbca51e0167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0c23e2-0bdd-45a1-81ee-18303a8029a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a51ea9-773e-4b64-9207-553af39d8abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86443936-e535-44b6-8a62-78ce42bf41ed",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee47f46b-12eb-43c3-9b3d-6fb13ba38fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6b1097-1817-4d80-a138-5a2d9a656732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1085f7-241f-4754-b51c-893370c8288f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7502cf27-c7f8-4093-af2f-8ae6a2ff97b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07cf2e-2d4d-41ce-8488-f943bf012381",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edef6d5-d93f-49f9-9550-dc701cdc5151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3927c6-c12a-4806-90e5-e3bdd0faf53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297640d8-da19-4a39-bc0c-75016a15881f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f716dd-3c5f-4292-a8d1-2c53b766dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4449443-dade-41a6-aa87-afb0893a1a55",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27a3c83-8db9-466a-82c6-ec0b694bf480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e62d5e-50a0-4236-a2a4-16bb70dd46f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c0d3b3-5011-41e8-a330-8f367fa71a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764fa202-88ed-4b91-80a8-2e7c246bab90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd3171d-0003-4d47-b91b-78919a34aafe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650acc8d-8b84-48dd-8415-d1f511b6c867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb5b2a8-bb8f-4ec7-894e-52c182a3f022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46b5efd-cb9b-4071-9ef3-b30fc9ed791c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc24e7c7-94aa-43a9-b3c4-04502c36408b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e5026c-0df6-480b-9d4d-becc08139b8d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfb407f-1ca4-4101-bd80-388b9109afe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4167c3f9-8d1e-4de6-b429-d567ca02d582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e1f5b8-01d9-4872-ac36-cf8354bbadc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6b9186-fca3-457b-954c-6c2bf34ac194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be80ef75-3ff2-4302-9470-6438baa39eae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea2afed-6d5f-4fe7-8e5f-0679deef4b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ce82e7-0516-4207-8056-a81fde74ecbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad14096-6ae9-45f7-9d1a-8ed91ac97e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877bc501-7a1b-4701-9253-c92e84ce10f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc21a20c-ac54-4cc8-b3b9-6f682bb740c8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae027a77-6f5a-4405-b5db-ca73404b3314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1b7a54-398d-402f-ad16-09b3dc5e15e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c06c141-e310-4998-8987-468a272cf3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb8568c-c40a-40e0-baf6-138a95bde765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8ab39-fbd9-4c88-a0ae-6313ee681a83",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bca9a7-eba1-4804-9c1f-00d2242ddc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55107232-7207-4030-8077-a8374216c882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98d3a10-92c7-48d1-b357-351e14468d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faee597d-5963-4720-80bb-abc134b0031b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9890995b-9a14-44af-a8fe-4e8dc077c11c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f369e9-c31c-4e7b-a1b2-27c7dcbc5907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e2cbd5-78d0-44c5-9ffc-b4ebf1485f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0882db65-2da6-463c-9144-5dec2ad43848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dd6a2f-4912-46f2-b211-905ca43a9a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42dd7833-2fdf-418b-b29e-1e0412c84a4e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f9560-82bf-49fe-b52e-82c66016c25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b1a048-daf0-41d9-b596-aedd24fee7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e8e173-a8d2-4f05-90ee-d57308fd4ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aaea80-9034-4698-b7e9-fa44d9268331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c62d533-0e56-4a3a-a7c0-f8c3dbcb1491",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e07a95a-3f9a-4af4-bb54-3ce0a0ee5541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2230db41-6c32-4089-becc-b7406a7771c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f6f485-37f1-49ef-93b1-2f9826d8bd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce425a7-f873-4a07-9711-463a432dd06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5dbf1b-4d4f-4a7e-b05b-0e934e3961bf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce4af5b-8a3d-4af2-94ee-02dbc57d5350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc6cf99-9778-4f18-9e72-958bc5592b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf3283d-4306-4cf5-9a5a-d86eb4dfe56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf7f534-f19f-430a-992e-80721a7fdc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90487f28-a272-48db-a86d-da211521d448",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57401a9f-5a9b-456f-a375-9edd17e46460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bb320c-622f-4aa0-aa1c-e4e2da7f3456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a21740e-6632-48bb-bf2d-20b5144b9462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d1c00b-a879-4cee-bbac-fc4ccc94740b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf0113-4e3a-451d-b95b-f93c7ccc51e0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763fd0f0-1fc3-49a2-a0e0-4e49d190ed56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822825ab-22bb-40ee-87ad-bf3cfb3736b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be34f41-6b5b-4314-8761-f2651e9c9a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d777196e-3338-4f0d-9839-7fe1ad65d76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf99db0-9fd3-4a6e-bfdf-048428dde2af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0f8346-87bc-448f-8a91-c32cd420ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eaee3f3-14e8-49da-b63e-bfc1a0792ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9430cc98-6a7e-4400-9099-482f9e4effe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0368372-8e28-40bd-ae93-769872ce070c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e043ce4-62c3-4923-9735-db991db76c85",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c169c-9758-43e4-9efc-16192a499f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5137fd3b-c912-4093-bfc2-337584b13f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e60038-60c2-45b1-bef7-c16c336cb513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f9b5b6-4b5f-48ed-90ed-9e77e73d3c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce67e86-cfca-4041-a112-de29171c913c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155033ba-e067-4a62-845c-4af217a1d148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a78ef2e9-e943-4c93-821b-a16e46992916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1551505-80ff-48db-af20-5a46643d1d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba56e543-ebfd-47b2-a85b-c6d4ecaaa48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b4bb90-0b95-49f7-9e72-bf89f453d784",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4969b839-6dfc-49c1-8246-470793454ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8601805a-daec-4de0-a08f-f087d937e946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92d9e2-a23d-42e4-b27f-f18c0e07f485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de88a728-dc8e-4edb-8a2d-5321586bc04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906ee3ce-64b2-4bb3-9eab-bf4ad830e555",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726f414a-e9dc-47f4-90ef-36fda4f11d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e6e68a-8cd4-4335-a39f-6ff9f1f5f431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888bb28-2095-4196-b1e7-e2a18e85bc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c20137-dc10-4d8e-ad5d-3edc219df6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5a1ac-f005-40bd-b614-fdf472243321",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd17fd-c9a0-4abb-813c-3a259a24d9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8082a7d1-49f0-43e4-aa64-414c6bd6366a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26be452-a2ee-4904-a370-caca678cccc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f04d26-1729-461f-93e9-929d125a713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df06f723-8b64-49a9-ba20-e4e800ca055f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accdb056-ce84-4f0e-9a6c-097aa115fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb0b12a-cb30-4c77-b350-e4fb4f151999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a515bd0c-81cc-42f3-a1eb-b45680b200a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13d8619-8a43-415c-aa13-cb0ff5d4c860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270d02d0-08f5-4429-bd02-ce935cc5106e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f5f3c9-c386-4d52-aa96-de7bce9f7aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c106a800-3ff4-47c0-bb42-7aaa0b37d3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98747fbc-b595-4263-bec5-13f95aebcb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b387b60a-9974-4eed-b9dd-1045b92ad62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68411901-88fb-4e5b-99a9-047cfa2c2891",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f16cfa2-ab7f-499f-9658-865ea830dd30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d5d94f-fc3d-438d-89a8-0a4241505bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782f07e7-8ada-4983-9f4d-06bc1f84ae42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808c82e1-c7e1-44aa-b80d-a90622f48a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936ad848-6cd7-40fb-9ead-325ed1b8bf93",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ab435-df7a-45d3-9d8f-941efe7eefec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57893889-43b9-4b62-a012-27670c95182f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fdb120-d3f1-45ef-844f-cbe5b5db065d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba69b5f-9e63-4cd4-a24b-3fe74bd185f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee4859-db71-4fcf-a9ec-93388f1810d6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd218a7a-cb92-4c93-a150-0b790b170359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a9151e-f6ed-41fe-b983-4912a740f11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c9ea45-387f-4fd4-9264-2c612bc9cda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39733625-ad48-487e-b8a0-005ba42d7e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5629a1d9-aa75-4490-b514-20f018441147",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dbf2d3-2bb2-4806-bd0a-1ee50203c95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c48e689-8fb2-4e81-8cc1-eb82badaa686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9418b7a0-26ea-4f3d-a57e-c5a78e21df21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39807e07-20b3-4d15-bb7f-5a8cc0ba4f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cf0d17-cfe8-4536-96c8-23b8c238d5de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43281474-6446-446f-914f-26017f39a288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4894ef2-5079-4c79-aba5-a74f77baaa18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04d583-8588-4e1d-bf7e-5a9b4236482a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913e6cc7-41f1-4c3a-9aa1-90d39cc85555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d157f36a-fda9-4e40-bd39-c87f3f3b7d8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd21b1-83d4-4e19-8863-a46cf1debd76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e3f136-7afc-4d62-b8ab-3dec470362de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4c7fb-4c23-417f-b838-8f72f971cc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea283fd-3e80-46d6-a275-6d8a9a330d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c8bac5-34ae-45c6-aeef-54ef39404df8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e3bc0-5aa6-4029-8542-7fcf72a5d8ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e92ec8-d89d-45c2-bfae-5e66852a5a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f14e85e-b667-466d-a688-5f4ed616b248",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85273b8d-7052-473c-8a86-b52f31ae268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3688ad01-93b2-4a4a-95f9-543ae3908704",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f80033c-8653-4cea-b70e-28254947bf1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b844d84-998d-42ef-b3a3-9cf40218de93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f316ad4-5cee-430f-b809-8c02fe760bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1d1030-e38d-4006-9f69-5590b4393ea2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "519b802a-dcc1-4982-95ef-1c4ba8fbadea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ed9833a-b80b-48e8-a49f-c0038ec161ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5777c57-b0ce-4f82-90f6-44296f8ffa2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e7cc5c6-ab23-4358-a045-daad5fbe334a"
                    }
                  }
                ]
              },
              {
                "id": "33658d61-b679-45e8-87c7-7337d2d7c86e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39e4da2a-066b-411b-bb19-f85fd144cbfd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead719e4-10c2-4cb9-8468-c1041eaf2c99",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eeb288c1-1a11-435a-b800-038dd9c5f0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26557c66-1f54-4f94-8da4-8a8c0caf3491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d21fe79-53e8-4b7b-9f38-9ea23e01e86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c46f28b-ce38-418f-8e1d-cefe8127e39d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f62961-47a8-4f29-a777-2704a3f78bb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "41a1f892-49ba-4cac-bea1-fc21be404253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd54410-3522-4f26-b72b-7ccd6a60f71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cade72c-4867-4424-80d8-11fd66addc33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc6d445e-7ab1-4abb-bf76-797ab6d919ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2fe1c7-92e4-4cee-af35-140a738eda09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0395f7f-161c-4212-a9a5-65e346daf153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "049697c0-0b42-4f55-abaa-47a4d239c937"
                    }
                  }
                ]
              },
              {
                "id": "5948871a-e170-4790-afa6-4d9c6f9015c8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f129bbc1-7a81-4d39-9e73-d4d9b3f64b26",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1be65cc-f28e-421c-8e58-795788a6f02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ec291091-4f28-4047-99a3-a6aa1c41de72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8904790d-50dd-49f3-8010-4ea79cd951d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ec3481-2404-4524-a84d-e37211969189"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07d5e7e3-7923-4d1e-9c29-c89fb8a830b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6adfc5e-7fdb-4076-b6cf-dc1400edf2c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8ffe399-6ff1-4c76-a4a9-71cf557fc1a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7b9728b-1ca6-4aa6-80de-3d32fa0c33f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "487143e4-d235-4a82-9952-7de2dee9b046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee8f8a94-9928-48ea-a1be-c13c1e0872e2"
                    }
                  }
                ]
              },
              {
                "id": "cb218915-1c5c-45ea-b533-a9008d31dfe6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c78fe6a8-be86-4622-af39-494c222cf78b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1684cab-b8d4-469e-aad1-191709397196"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcdf974a-15a7-47ed-b5df-8c4bfc6e96db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ddc92d7-717b-401c-ad56-c366270c5d04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1917decc-d484-4737-a891-252bb8e7755d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d914d7ac-699e-45a1-b929-3d7fb38f42dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b9a41c1-f5e9-4415-9a98-ad7ce5cbed1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afce1421-7fec-4c04-819e-48751ce4ba21"
            }
          }
        ]
      },
      {
        "id": "d395ecf3-f8de-4619-a013-1b3f3b000a42",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b7108dd7-acde-400c-b501-8fec11cb5445",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afad1976-7b70-40b5-b4d4-9333a67208f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "812f550b-79f3-4049-bd63-269c0f889606",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45160798-6124-4bc0-ab6f-f68ea4e9d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae0c3999-9999-4c60-b23e-8a0bcc30088a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070daa92-16ca-4433-ac18-0240643c3490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "245488ed-a89a-4d9d-9284-ed3f708f705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f301d49-9514-4303-999e-671e8c615a89",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a66d7e-3020-48a5-be18-79661084f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28dd853e-92ef-4cbd-bc6e-9b7ddaabb48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df62184-4bc9-4525-bff9-4d261ba7895b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5f48a30-3f85-4b08-be81-99c7783ebc48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8eb305fb-94e3-4ad5-b86c-d1e14e1ffbac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23dfc543-4e53-4014-9323-d733e40fb33d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "553301f1-3992-4076-bc70-78cb943ad2a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c009efdb-4973-4afe-89e4-bd5b6d510fcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "169ff17f-1075-464a-a992-adff96dcdb8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "59b14ef5-38f8-49f6-93fa-5060ba3a7f72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fab9b624-75c6-4333-b1ae-cdcb97b9273b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51ca2fce-d628-4058-bbc0-f2b88f0fcdf8"
            }
          }
        ]
      },
      {
        "id": "30bb432a-c76d-4984-b4de-cc847e25eac0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "17882fc0-6343-4772-9116-2a8268ae5f06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "097183dd-a626-4252-b7b6-8f73e6f3fe55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2606d4c5-f67a-4804-8cb9-44a3b1e10a38",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a01da5c-cd39-4f4b-9d3a-8a0a8014b865",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52d4d610-c3dd-4e3e-9af7-9baef47a43c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16be4014-a9cb-42bb-80e1-508ef436e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ac3cf0-0565-40de-a102-ef10578a3dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791c363a-76bc-43b6-a69d-8c3fa1eea3cb",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6d8838-5bec-4268-9f25-69dc3254c630",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9626fc05-0c2a-4488-8abd-480cc6ca5161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c806bd47-2693-4656-be84-40fac50fcd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39844b11-1c10-4b10-8b6b-367e2975149d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83cac181-fd3e-490f-abcd-a0a43f712a62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee6efb5a-698e-4382-8072-2cc452444b9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2e83cc7-75b9-4657-801a-571bd4076f3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "279cc6e6-59e8-469e-9947-9be06a3e2bdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a204b2c9-8357-474f-91bd-906abcda9ef4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08f36c91-c3d2-4ff2-9df1-39da4961a5fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ad6c769-2cc9-45bf-9ab1-26910b4f3228",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "137f7bf4-8940-4ec7-9d86-83b8d6df602b"
            }
          }
        ]
      },
      {
        "id": "86e6d0b2-121b-4a58-a052-2c58e05d251f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7379c087-0af6-4d0f-b422-6083f379c869",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2984fde-816d-4fd4-af65-6e5338b3978d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ec2a474-9c67-4460-82c1-4448a6a58804",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4b2208-0ef8-4012-9041-2c562bc95038",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a8cbe38-3875-4b1f-8bdb-dc6434bf8683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530bd3fd-405d-475e-bab0-ba1e090e69f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4a5f3d7-1724-4396-9a0e-09101fa1ca48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ddca88-09d0-415b-87cb-bb0ffae5067f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19165d3-592b-4246-8654-214630a0984a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae8dcd-20ab-42ee-b6f3-dd981bf6b517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2243ac-7923-45e1-9928-ff1c99d0335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4725c31c-89c8-4f26-88b1-a9bbcbaae8e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ac19493-1de2-44ad-8709-b16e2e87c260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e89efa4-9187-4616-a37e-0cc6088a2787"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cc0cc89-2fc7-4f51-b98d-47e75d37f574",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c22db6c8-af13-4049-9d1a-9ee06d5dc304"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de1fe527-41fe-466d-bbf5-2bd80faadfbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a09eb7e6-4e19-4879-b86a-0bef4e5d9d56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a34910c4-8ecf-4797-8f80-6aba56a2ebb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d8c5831-3be3-4de2-81b9-6bb3bd9d6896"
            }
          }
        ]
      },
      {
        "id": "3a74dde6-bad6-4fe8-bddb-52215ddbf3b6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "128a7eff-9485-48f6-b307-8efef2ae2a87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b03946-44bd-419b-b72a-fa6da1fb1a00",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1bb683bf-cddf-4cf5-8ced-1b0e4c89a105",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0203318d-25b7-4d17-9f8d-43a7fe2a8d9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "683ec3d3-48d0-4b23-a391-9a5308ea8dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.84999999999996,
      "responseMin": 18,
      "responseMax": 324,
      "responseSd": 40.0440694735188,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681432530359,
      "completed": 1681432552088
    },
    "executions": [
      {
        "id": "6d4e1dcf-fd6d-483d-a237-700a7a8ffb65",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f4b6fd9a-b524-405d-8527-b3299b44eb45",
          "httpRequestId": "915c8801-0582-4aa1-952d-ca3bc72f40ad"
        },
        "item": {
          "id": "6d4e1dcf-fd6d-483d-a237-700a7a8ffb65",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "181627c5-b664-4b5e-8721-88ae4e58b996",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "164cead5-ad10-48ae-a22e-968a48ed8ff8",
        "cursor": {
          "ref": "c474bbdb-6fbc-42b5-9d86-fceea7245c1e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dad0af19-bb6d-41f6-ac97-fd9e0079e3ee"
        },
        "item": {
          "id": "164cead5-ad10-48ae-a22e-968a48ed8ff8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e50e1d7d-6aa0-4fdd-8791-4287a955aa91",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "07a3a7ea-e22a-43eb-bc70-80859d0e8fa7",
        "cursor": {
          "ref": "05b99515-5bd3-4a6f-8b8a-44e476255717",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "63e619f3-ad0b-423c-8fda-16fce8c96254"
        },
        "item": {
          "id": "07a3a7ea-e22a-43eb-bc70-80859d0e8fa7",
          "name": "did_json"
        },
        "response": {
          "id": "26416083-93ba-47de-977d-968c92ebd05c",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db55265-f990-4e65-8857-15d2de8d1d5d",
        "cursor": {
          "ref": "ca8fa69d-7947-4e13-9ca2-cfef3c1d5e54",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eecfef19-c8ca-47e9-ad20-462fc84ecf95"
        },
        "item": {
          "id": "1db55265-f990-4e65-8857-15d2de8d1d5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "9c2df9e7-9333-4531-91bd-ab4516ae2346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db55265-f990-4e65-8857-15d2de8d1d5d",
        "cursor": {
          "ref": "ca8fa69d-7947-4e13-9ca2-cfef3c1d5e54",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eecfef19-c8ca-47e9-ad20-462fc84ecf95"
        },
        "item": {
          "id": "1db55265-f990-4e65-8857-15d2de8d1d5d",
          "name": "did:invalid"
        },
        "response": {
          "id": "9c2df9e7-9333-4531-91bd-ab4516ae2346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8b1ee5-0a06-401d-b1e1-7384b2073389",
        "cursor": {
          "ref": "ae04dd04-3626-423d-a7af-d2e15b55a229",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "56c250e3-c933-4fee-aacd-60ae10d54d9d"
        },
        "item": {
          "id": "3d8b1ee5-0a06-401d-b1e1-7384b2073389",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef800871-8031-44f8-bcea-9ae322d18d12",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2b9dd6-2ab4-41e7-8521-1a395c5c546f",
        "cursor": {
          "ref": "9dd2274f-b131-41b3-b33a-d810da74b373",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "14ea4ed6-98f3-4612-800e-704267f57481"
        },
        "item": {
          "id": "4f2b9dd6-2ab4-41e7-8521-1a395c5c546f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c123b705-9f71-4f98-804c-63e40d57b989",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5d13c2-f481-46a5-969c-573bc3925131",
        "cursor": {
          "ref": "7ae51bb7-3299-420d-98b2-da385a73d2ef",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8698cabe-7367-49ce-a745-e04164534529"
        },
        "item": {
          "id": "7d5d13c2-f481-46a5-969c-573bc3925131",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "066cb469-f3db-4ec2-8042-7212485283d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce07b5-6348-49fd-ae15-df750b8a7b8d",
        "cursor": {
          "ref": "f4a6f4e8-d18d-457a-8376-1585f7244ff4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bfa4f6a3-8701-48d2-ae38-0f6edf8f0fb9"
        },
        "item": {
          "id": "35ce07b5-6348-49fd-ae15-df750b8a7b8d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f95d3edb-c3f7-48dd-b645-c20a6eea81b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce07b5-6348-49fd-ae15-df750b8a7b8d",
        "cursor": {
          "ref": "f4a6f4e8-d18d-457a-8376-1585f7244ff4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bfa4f6a3-8701-48d2-ae38-0f6edf8f0fb9"
        },
        "item": {
          "id": "35ce07b5-6348-49fd-ae15-df750b8a7b8d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f95d3edb-c3f7-48dd-b645-c20a6eea81b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537c77a7-cfc3-44e7-ab40-72cc97c03a35",
        "cursor": {
          "ref": "6a179dd5-747b-43c2-8d0c-e3a7e0991efb",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bf75d9e5-ec13-46e2-b78b-7e7f1f528ccb"
        },
        "item": {
          "id": "537c77a7-cfc3-44e7-ab40-72cc97c03a35",
          "name": "identifiers"
        },
        "response": {
          "id": "66f6cbbf-dfd3-4ad1-bc24-614223e0223f",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6f97ed-0590-46bd-8927-855d530e1093",
        "cursor": {
          "ref": "fe895774-802d-486d-827d-e0541770d36b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9b82b7a-a8f0-483e-a2a0-b07d10c892a0"
        },
        "item": {
          "id": "3a6f97ed-0590-46bd-8927-855d530e1093",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e97d413-dc9a-4f72-9fc9-4aa774bc56f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6f97ed-0590-46bd-8927-855d530e1093",
        "cursor": {
          "ref": "fe895774-802d-486d-827d-e0541770d36b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b9b82b7a-a8f0-483e-a2a0-b07d10c892a0"
        },
        "item": {
          "id": "3a6f97ed-0590-46bd-8927-855d530e1093",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e97d413-dc9a-4f72-9fc9-4aa774bc56f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d556db-1379-4cc2-af27-3b49b0ce0972",
        "cursor": {
          "ref": "8259c628-314d-482c-84a5-c1ccee2a2162",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f3113d02-ea08-4600-beea-aa568cb8fa39"
        },
        "item": {
          "id": "c8d556db-1379-4cc2-af27-3b49b0ce0972",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ba15011a-719a-4251-b4ab-4cf48291a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed2bcac-0505-44e0-8647-b617fddf5c42",
        "cursor": {
          "ref": "2144762a-1424-48ba-b281-9aeb4c1367f5",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "619288e9-3e9e-4369-a310-5a46460e43a8"
        },
        "item": {
          "id": "aed2bcac-0505-44e0-8647-b617fddf5c42",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a8f80494-102a-4865-bebd-aee592a97d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6272035c-a43f-41ab-a797-805c78f960ed",
        "cursor": {
          "ref": "c0026e48-ea81-4414-b34e-48447aeb5f88",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ff0f5ee3-623f-41ec-ad46-5682fd8abfdf"
        },
        "item": {
          "id": "6272035c-a43f-41ab-a797-805c78f960ed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b81fd975-2d77-4d98-92d8-5d5289211d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c10b9-fb28-4c81-ae57-840c3c16c538",
        "cursor": {
          "ref": "6ef7b406-3746-4bd5-a48c-549d589958a4",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3230730e-7854-45bd-874e-1ab5ef9bc993"
        },
        "item": {
          "id": "3d3c10b9-fb28-4c81-ae57-840c3c16c538",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9e0c7624-d4d6-46c3-bd54-3a4c24bd288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a0ebe6-6dc2-4fa9-bd1f-f1a6b061f972",
        "cursor": {
          "ref": "b028c354-3ebc-4103-b8e1-ffd97ecf658a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "77aeb3d7-a645-4ea1-981e-70feb9ad3122"
        },
        "item": {
          "id": "85a0ebe6-6dc2-4fa9-bd1f-f1a6b061f972",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92f08401-1050-4ea9-a7ac-c766ceabea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f0c98-2172-47b6-903d-84bc509282ac",
        "cursor": {
          "ref": "513c471e-7562-423e-a2ab-2a60038e787b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7f65b020-a31d-4900-84a5-bc5aabcf91c5"
        },
        "item": {
          "id": "341f0c98-2172-47b6-903d-84bc509282ac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a99f8ff0-7247-4bfe-a4fa-3e4bb56fefce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291cba1d-8ec1-4690-a3f6-1f669a3cfdcf",
        "cursor": {
          "ref": "53473fee-92d2-418d-8873-ecc8df7ebc3e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "acea3b17-923d-493d-aede-8319dda37d17"
        },
        "item": {
          "id": "291cba1d-8ec1-4690-a3f6-1f669a3cfdcf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0541a396-4259-481c-9b1b-cdd0f712e021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebae4f9-3ae1-4e9a-870b-8ce7f7c4aabc",
        "cursor": {
          "ref": "af1582b0-9b33-4f71-a12d-710233935a0c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a23c717d-4d05-4207-bdde-469ff5d31fc2"
        },
        "item": {
          "id": "3ebae4f9-3ae1-4e9a-870b-8ce7f7c4aabc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "abecf375-f0be-4e3c-92f9-112b3c93c449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff2f77-2987-407d-91f1-58cf28df6dfb",
        "cursor": {
          "ref": "7a5daaa8-49b4-4c15-bbf9-48ab5c826ac8",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "439f5ecc-970a-4945-8149-80274d7c8ff7"
        },
        "item": {
          "id": "70ff2f77-2987-407d-91f1-58cf28df6dfb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7f6da060-4234-4fc0-b7e1-b138f2dae0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29997a7e-69e2-4d03-b610-cab72b6df7a9",
        "cursor": {
          "ref": "b4a4498a-8716-4d29-b190-dcfbb3a035ee",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1e4ffc25-33ad-4df7-b240-46bdf0564259"
        },
        "item": {
          "id": "29997a7e-69e2-4d03-b610-cab72b6df7a9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bbe1ff44-49f4-47c1-a157-cb569d7d4aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d516b-ef93-4588-a75b-c99b33809601",
        "cursor": {
          "ref": "d30eda72-221a-4869-a4c6-042649b34069",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d4ba4a30-f5aa-4b7f-a195-a4b02df8aee6"
        },
        "item": {
          "id": "2a1d516b-ef93-4588-a75b-c99b33809601",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a5b55a0f-c5db-4f0c-9d63-33c675caa4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e193192a-db62-4a5e-857b-b8676b248c79",
        "cursor": {
          "ref": "a9e5253e-16d6-4993-b872-d778b795ccfa",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "681e4c28-e325-4c38-a9cf-f1ced89ce3ae"
        },
        "item": {
          "id": "e193192a-db62-4a5e-857b-b8676b248c79",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "27dfd92d-da0a-40c6-bfef-aa7e42ab62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304d127d-94c2-4f3f-8cb2-ad962bcf5bd1",
        "cursor": {
          "ref": "65c17ae7-b452-4849-a210-f368be27ba18",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b6e39e6e-1a6c-4476-842b-92209b44e45e"
        },
        "item": {
          "id": "304d127d-94c2-4f3f-8cb2-ad962bcf5bd1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2ab3b5c1-ceb0-4fce-bfd6-e9833d0a3d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0c5e01-3836-4a9b-bd2e-feabad5c8736",
        "cursor": {
          "ref": "91ea3e9d-5ff6-46fe-82e4-3ad8b6a41807",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5f98b3d7-d641-450f-b63f-4fe230b98d27"
        },
        "item": {
          "id": "ee0c5e01-3836-4a9b-bd2e-feabad5c8736",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9ab8a770-7107-4496-b7cd-dc5c49e59c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61c60e5-ec17-427e-90a5-3525b5b79211",
        "cursor": {
          "ref": "3e15a5d6-f22c-4d8d-8a55-3cfa1bc529a6",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7bd096c7-0987-4640-8ef6-0eec5c893783"
        },
        "item": {
          "id": "e61c60e5-ec17-427e-90a5-3525b5b79211",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0bed3636-381c-4a9c-a914-4b3aa9648602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a02072-80d7-4809-b044-6942d427d241",
        "cursor": {
          "ref": "e384b202-484b-41fd-900e-892df34b204c",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "622af208-9e38-4d3b-9e94-93b3a45e246a"
        },
        "item": {
          "id": "c9a02072-80d7-4809-b044-6942d427d241",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "54358abf-f6ee-4493-a6ec-4e5c2378797c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f15d3f-b261-4a6b-bb3c-8e2761ba10f2",
        "cursor": {
          "ref": "752a2e7d-5c74-45a2-9350-c94cdc797916",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69a46ee5-0d9a-4e53-b4aa-ebb283a7c662"
        },
        "item": {
          "id": "18f15d3f-b261-4a6b-bb3c-8e2761ba10f2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f443f848-e1b1-4b5c-b42a-c708c74f9fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3d4de1-6613-4aab-8bf8-20e9198d0529",
        "cursor": {
          "ref": "e665235e-62a0-422b-bf7c-2d23de31bb43",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6b12f850-a5ae-49db-befc-6e43efb34701"
        },
        "item": {
          "id": "2f3d4de1-6613-4aab-8bf8-20e9198d0529",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ace08fa-c031-4b8e-8678-47c45b5e160c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a3a0c-f7ff-4383-9371-47632ec0fb95",
        "cursor": {
          "ref": "6278c375-b9b5-401b-ad8a-57c5bdccee80",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c0c1db7-fafe-485b-bb60-e2100bac5ac2"
        },
        "item": {
          "id": "a38a3a0c-f7ff-4383-9371-47632ec0fb95",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d7535337-ceea-4b5b-b298-25266c1a3de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce595d7-bd07-4d60-a0b0-d6d6f7c21d69",
        "cursor": {
          "ref": "875c6901-0a1b-4d1b-974e-dc2a5bbf9729",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1fb4f2e7-4e8d-441e-b91d-bb9416afe13e"
        },
        "item": {
          "id": "0ce595d7-bd07-4d60-a0b0-d6d6f7c21d69",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f4897dc-d76f-40cc-a4cc-7b1a49b66df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d12b8f-b809-4500-9a9e-7bce3df13ece",
        "cursor": {
          "ref": "c3e75195-7900-4c3f-a275-8ada20ada479",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "804de58d-9b3e-4b43-892c-6d93c54b3a79"
        },
        "item": {
          "id": "c7d12b8f-b809-4500-9a9e-7bce3df13ece",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "58adf9fc-e7a3-41d3-9abe-be6b51ca490b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0333d0-cf17-4ae2-a581-1389f8a5cb09",
        "cursor": {
          "ref": "92920e66-a985-40ae-9a83-69968dd97f9a",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51f3ecd5-39c0-49d8-963c-a5c9e9f07348"
        },
        "item": {
          "id": "2d0333d0-cf17-4ae2-a581-1389f8a5cb09",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "67400e4a-d0c6-4a98-85ac-9db1e29bc1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57fefcb-d1ef-427b-8e48-a38c0220a654",
        "cursor": {
          "ref": "a8c596eb-5303-4f16-9cc4-15625726909b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "91a8cf99-4ef4-4c19-8c1e-3185a06f8c77"
        },
        "item": {
          "id": "e57fefcb-d1ef-427b-8e48-a38c0220a654",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "538cf12c-299a-42ec-8b9b-1740e514473b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8598152c-62c6-4af2-adaf-e64aa344fec6",
        "cursor": {
          "ref": "1cea9498-44e4-46ca-aee7-cef451d816db",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1318eef-4f77-4cb9-b4f6-9de653fd2753"
        },
        "item": {
          "id": "8598152c-62c6-4af2-adaf-e64aa344fec6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "86535b30-c4dd-4222-b2a7-5d8eeea5fd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1319a157-db75-47fc-8bcb-d64e52bec9c2",
        "cursor": {
          "ref": "c7768bbf-a7b7-4569-826f-97228f451f7a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f82a84b2-de5b-4ec6-9fc3-fb7fa2998a50"
        },
        "item": {
          "id": "1319a157-db75-47fc-8bcb-d64e52bec9c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "029ad265-5654-47c9-9565-79a5cf26f4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6808b5-c823-4855-91f0-e798c5a1635d",
        "cursor": {
          "ref": "93bf93a7-a4f8-456f-bed6-14e175e10041",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f3837b5-5ba7-499e-974d-189137dc1c28"
        },
        "item": {
          "id": "1f6808b5-c823-4855-91f0-e798c5a1635d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "31e9b295-cd4b-4388-bc16-ec41b8747219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5597d2b8-3c03-4a4a-bd31-0cab8c242ea2",
        "cursor": {
          "ref": "f7089241-8d6c-4cfd-adc8-03c9392a79fa",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ed59d325-7711-46e0-8c01-f6fd48cd132f"
        },
        "item": {
          "id": "5597d2b8-3c03-4a4a-bd31-0cab8c242ea2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "feda7653-f41b-463e-b60a-156e1ba5e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3f5045-6faa-444d-8727-aa37574bb37f",
        "cursor": {
          "ref": "c44745ba-9566-4aad-a369-ca7feb669598",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd01c223-fb11-4da6-8c29-4d22f67da3c2"
        },
        "item": {
          "id": "5e3f5045-6faa-444d-8727-aa37574bb37f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35b81bbe-f528-4bb6-84cd-8fc97937d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59543dd1-8167-41e6-968b-128f0839d6ac",
        "cursor": {
          "ref": "dbaadcc6-0c6d-4b49-a0a2-7d441aa7f784",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a5a69ef9-5aa6-443a-a654-98001ba85d21"
        },
        "item": {
          "id": "59543dd1-8167-41e6-968b-128f0839d6ac",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4e9718fa-569b-47dc-81a7-07849a07bbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d77a1b5-a171-4438-bf9f-f27ea32d5e33",
        "cursor": {
          "ref": "4d02488a-a2a5-40fc-b3cb-4b321cbcd07e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b21bca54-77ce-4892-8ea4-8f0681045592"
        },
        "item": {
          "id": "4d77a1b5-a171-4438-bf9f-f27ea32d5e33",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5fb33a7f-f091-487f-b90b-3a0a0a63f4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b35421-788d-4210-bc7f-d41de864e4c0",
        "cursor": {
          "ref": "05d93614-c817-46a8-9ca5-7d9387006a2c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ba66f06e-fefa-4aa9-be9b-fc9425c6d7a8"
        },
        "item": {
          "id": "80b35421-788d-4210-bc7f-d41de864e4c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a51e9e24-adc9-4a61-b5d6-4851c0b95180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c33c94-db94-4b83-af22-9677cddb6517",
        "cursor": {
          "ref": "6b4d6693-fd05-477d-8f5b-c44a1202a620",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4eb5cf48-fb00-44fd-b8ff-f26f53ef9db3"
        },
        "item": {
          "id": "68c33c94-db94-4b83-af22-9677cddb6517",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ddb62e3a-9817-4cce-80c3-fd1a96aef99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4edb25-e0fa-433f-b6a6-3d80e1f178dd",
        "cursor": {
          "ref": "b4a5b66c-7c59-48ee-98f7-ab774aa33b77",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3205cf89-b125-4118-af55-9c60f0abc464"
        },
        "item": {
          "id": "8d4edb25-e0fa-433f-b6a6-3d80e1f178dd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "be0803ad-bd18-4a30-b3f5-687565cc48a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c372f-9b15-4692-8566-f651c5642d19",
        "cursor": {
          "ref": "383a615f-4215-44e2-8af9-d84ee04b317d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "520ea1b6-94a3-4b56-9244-739fb6d91863"
        },
        "item": {
          "id": "a97c372f-9b15-4692-8566-f651c5642d19",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "55f28b5f-a135-4824-bb7d-3e2c216cfe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0dda5d-a56b-467f-8e10-7f63df296c4e",
        "cursor": {
          "ref": "9182ef43-c2d2-46d6-8adc-c128d3d5e5c2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "28812ce7-0ddd-4dde-89dc-ab01adebd0df"
        },
        "item": {
          "id": "0f0dda5d-a56b-467f-8e10-7f63df296c4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "099ac66e-717f-4bb0-86d8-8ca4fdfead86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730e589-ae04-40fc-a482-5e4a011bd061",
        "cursor": {
          "ref": "8a697acf-5e80-401a-a10a-9b38cda075e3",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81c67f96-3d75-4b91-b6c8-a34446670fac"
        },
        "item": {
          "id": "c730e589-ae04-40fc-a482-5e4a011bd061",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "40d26f23-9c8b-4a80-a03a-a61dd9cba84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b51324-07c8-48d4-8f6d-f158e49e8334",
        "cursor": {
          "ref": "0441258e-b67d-4e68-9918-a5a3e9fb9c4e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fee1a45a-d692-4c83-b829-dcb8c29428a7"
        },
        "item": {
          "id": "59b51324-07c8-48d4-8f6d-f158e49e8334",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a7707c77-754d-4b00-ba2e-f77d088ce265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03dc8d9-2419-4544-a1a7-348850bace09",
        "cursor": {
          "ref": "291572b5-7804-4b89-b378-4f3d2c3a5a8f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "56eba9c8-b911-43b7-8eda-618da2246470"
        },
        "item": {
          "id": "d03dc8d9-2419-4544-a1a7-348850bace09",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8f3c260e-c651-41b0-8b6f-8db371c8daf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb12e36-148a-4f2a-b477-43a1e1e11b9a",
        "cursor": {
          "ref": "efe92cbd-b9a7-4d29-80c2-0ac2266c073d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce540a55-c483-4700-92f3-4fc82db6a946"
        },
        "item": {
          "id": "8bb12e36-148a-4f2a-b477-43a1e1e11b9a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f448ebe4-984b-4ff4-bc2f-c526f8d8746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e093177f-638d-4af1-9819-9ac836b306cf",
        "cursor": {
          "ref": "6d615bed-8155-4704-89f9-cb25a030e75a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8e3507b7-1aca-4cfd-8b3f-e9d76ab4055c"
        },
        "item": {
          "id": "e093177f-638d-4af1-9819-9ac836b306cf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d5df906-52f6-412f-8d2b-6a0c1c4b0304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609a8797-bc82-4afc-88cf-70368753f79d",
        "cursor": {
          "ref": "b2a51fc1-b676-49c4-bc86-b2d5951d5f8d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54929a6b-eb94-493d-a054-e8fb16aed96e"
        },
        "item": {
          "id": "609a8797-bc82-4afc-88cf-70368753f79d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ad1bb60c-fce5-48d9-bd61-e5edb5b0d9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf9c1aa-c0c0-484a-9fce-44a568b7b874",
        "cursor": {
          "ref": "9b63d407-874e-4db6-8161-e87a1ae065ac",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3320b811-ee86-4ab0-a570-6ba7b0e9ea11"
        },
        "item": {
          "id": "3cf9c1aa-c0c0-484a-9fce-44a568b7b874",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "faa064de-c3ec-4578-8a98-7b2f0b208fc1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341819be-8867-4df3-be86-ca606ba703c5",
        "cursor": {
          "ref": "1d50a293-a2bd-428b-b8b0-39c4618c2a0b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cc94a57f-24d3-4002-aa74-f288c196713f"
        },
        "item": {
          "id": "341819be-8867-4df3-be86-ca606ba703c5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "532de346-fab6-4c7d-bec8-256a959297ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c79cbb-f69d-471b-9f90-a12ef032fec4",
        "cursor": {
          "ref": "2c462644-e0f2-4fd0-89c8-fcfaf820fc72",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aa7323a2-725c-4fc6-8c2c-658e53e5099c"
        },
        "item": {
          "id": "82c79cbb-f69d-471b-9f90-a12ef032fec4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "579697f8-9766-47bc-8d51-4ee80ae142d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d09e5a2-3b80-43c0-9e33-a4cc21b52ed0",
        "cursor": {
          "ref": "28dda1a5-274c-4150-9250-767b8b4c675d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "714e8926-7f21-464b-8669-f620ff6eda60"
        },
        "item": {
          "id": "3d09e5a2-3b80-43c0-9e33-a4cc21b52ed0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1612e210-af19-4923-9a10-0ea8d773ec6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4a454-2847-4b8a-990d-4b185305c757",
        "cursor": {
          "ref": "1efd54ec-7b89-4621-8799-9730d5005c42",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d458874-11b1-4a5b-ad3c-9a636b4033c7"
        },
        "item": {
          "id": "6aa4a454-2847-4b8a-990d-4b185305c757",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2e2b1ac9-1928-4685-beac-fedc6423b23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf0d8f3-dd22-40ed-ba06-16a123fa337f",
        "cursor": {
          "ref": "4bf307af-8db5-4ac5-8138-3ebed42b6d77",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "973591e5-ed80-4253-b6c5-1b82ca75c08c"
        },
        "item": {
          "id": "fdf0d8f3-dd22-40ed-ba06-16a123fa337f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "805921c2-a6e8-4b14-a73d-3aabbd04edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d37a3d-42c8-44a5-b6e7-ae61d1964c35",
        "cursor": {
          "ref": "39d3c688-2120-4b0a-9444-356b71bdf0bc",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "296e533a-c0d8-4eb0-bfbc-739e8e7a7c5c"
        },
        "item": {
          "id": "78d37a3d-42c8-44a5-b6e7-ae61d1964c35",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e4c30818-9f00-4e33-8da0-daaa6c6a4e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16278d0c-726c-4a23-8eba-a00d9178f737",
        "cursor": {
          "ref": "f73026c4-8b28-43fd-b62b-5cd7a959dcdd",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d6a1fab5-1551-4d78-b133-b13ea6dc5bb6"
        },
        "item": {
          "id": "16278d0c-726c-4a23-8eba-a00d9178f737",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6302a0bb-41d2-4268-801c-aad323b52467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f285ef-a05e-4ec5-97cd-ef2bafe1b93d",
        "cursor": {
          "ref": "0897bafe-9ee3-4cda-a9b6-0dcba45057c5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91a0940b-6dca-4f15-a872-6ba58929b15e"
        },
        "item": {
          "id": "e6f285ef-a05e-4ec5-97cd-ef2bafe1b93d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2654599c-12c5-4196-884f-6595d0e2ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee175e-6336-4de7-9d56-677b39021cea",
        "cursor": {
          "ref": "57b5b5cf-3968-46fb-924f-061e2f69529f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "63f4af3d-a1fa-4b88-b5ba-78ff1d61c958"
        },
        "item": {
          "id": "e3ee175e-6336-4de7-9d56-677b39021cea",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c99e8725-df5e-4b5b-bef8-ee9d53d4927a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92befb8-fc14-4144-9f82-25ede3a81bdc",
        "cursor": {
          "ref": "2841ad1d-87f5-414c-a75e-2feb7036c925",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0c1f79d2-d989-4e3d-9a5c-c103508eb151"
        },
        "item": {
          "id": "b92befb8-fc14-4144-9f82-25ede3a81bdc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f39ad4fb-0424-486f-8dd7-dde61f1b64f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7de9e40-1956-4c84-8ec2-7367eac670ef",
        "cursor": {
          "ref": "13b49730-9cb7-4e5a-9bb7-96348b064009",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0674a87d-9d23-40af-8b63-807a47403717"
        },
        "item": {
          "id": "a7de9e40-1956-4c84-8ec2-7367eac670ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b8d32cf6-5c2c-4f5b-8221-3065121edec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff4e7de-a6b8-40ac-bdff-26a51950702e",
        "cursor": {
          "ref": "6ba6730f-0a44-4a94-9553-17dd1229fa22",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8ef158f2-fad8-4d15-b601-fb6c79c975ab"
        },
        "item": {
          "id": "5ff4e7de-a6b8-40ac-bdff-26a51950702e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "686e36fb-eecc-4a0e-b6b3-71ffd501fd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057ccad2-1d42-4824-b857-ecf4045be1c9",
        "cursor": {
          "ref": "3031258d-d2d3-492e-b0e8-7504f7c24aff",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "31131c70-ea60-4f1d-9c2e-081e745bb80b"
        },
        "item": {
          "id": "057ccad2-1d42-4824-b857-ecf4045be1c9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7616781b-7e1d-4d9c-ba9a-44d77a036322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f053a4a-dd31-4b1b-9043-bad9ec270800",
        "cursor": {
          "ref": "74339e9f-fca8-4f2a-a571-253249f3a578",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1ce1664-e29c-4516-8dbb-39f9f32a2661"
        },
        "item": {
          "id": "8f053a4a-dd31-4b1b-9043-bad9ec270800",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8474ecb-ca9a-4731-be84-2f9106b9ffc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0de7b63-ed06-4d83-bb51-1f5f9c031acb",
        "cursor": {
          "ref": "b80b0408-7067-4759-9ec7-7449583627db",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4fe4b0e9-91c5-413a-aa6b-afd959c04dd5"
        },
        "item": {
          "id": "a0de7b63-ed06-4d83-bb51-1f5f9c031acb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63f0e122-5a2b-4954-8b9c-bfa5bbf36056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89984366-2d1d-4e20-88de-e51a3abce73d",
        "cursor": {
          "ref": "97ab8418-5b41-4900-b6d0-3e71f783d83d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "451fdb35-cc08-49ad-a317-9d52127ba73d"
        },
        "item": {
          "id": "89984366-2d1d-4e20-88de-e51a3abce73d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a05e1faf-a69c-4ca4-9a19-80f3fa263b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b27d6d8-8de2-4525-ab5f-ac525f4845d2",
        "cursor": {
          "ref": "8401506a-4444-4788-9fe4-1be473daace1",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "34efb884-7f5a-47c6-8783-875100f76a01"
        },
        "item": {
          "id": "2b27d6d8-8de2-4525-ab5f-ac525f4845d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e9a74434-e276-47ac-bf1e-cb49f76d24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b377576a-a5c1-4021-8f91-e2fe18f6d90d",
        "cursor": {
          "ref": "f5b9f7c1-29af-4481-bfe5-7be804bb4737",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "984257ae-e244-4949-8e5f-daad1325bac3"
        },
        "item": {
          "id": "b377576a-a5c1-4021-8f91-e2fe18f6d90d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "45d55f7e-f276-48ee-a880-8f2d17b4eb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf1de85-1ea7-4d0b-852a-00422fed276d",
        "cursor": {
          "ref": "948bbbf6-8c76-418b-988c-aa8e2202c3d1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3d88685a-4b0c-4569-8dbd-d126148bf1b3"
        },
        "item": {
          "id": "8bf1de85-1ea7-4d0b-852a-00422fed276d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ed75fb9d-1361-475b-8520-bf7060d6f3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2df50e-2cb5-40b4-b3d4-dbcd87c16088",
        "cursor": {
          "ref": "49f43172-def6-43fa-b611-e7c17e573206",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e4a420ef-df1d-44d8-8bc5-c9ac70c4e006"
        },
        "item": {
          "id": "6e2df50e-2cb5-40b4-b3d4-dbcd87c16088",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "935b9095-7ec1-40ee-a215-cba140886cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a440a5f-06a8-4bca-930c-b40c9dcf69e6",
        "cursor": {
          "ref": "a9448334-97ec-40a5-9b0b-48245e7a71fa",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "931a82e6-cef5-4c03-9150-f982026810be"
        },
        "item": {
          "id": "6a440a5f-06a8-4bca-930c-b40c9dcf69e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ae68df54-aa78-475b-94d7-96eef949d0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c2725c-777e-47ea-ba90-62a8c44d4369",
        "cursor": {
          "ref": "6a095a29-8a05-4f79-8d96-863e2f0aed44",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "39e687cf-fd33-48f5-9481-972b9f275b45"
        },
        "item": {
          "id": "b2c2725c-777e-47ea-ba90-62a8c44d4369",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "04a3cc9a-b7d4-4cf5-8c92-6f89dc18483c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e6f467-95ff-4f7d-9705-6b5761e32fab",
        "cursor": {
          "ref": "32bdec37-1692-41a8-8191-6b3b9012e9e8",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d2e09107-cb90-479e-889d-e7fee97820ef"
        },
        "item": {
          "id": "72e6f467-95ff-4f7d-9705-6b5761e32fab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "05cbb69e-30e2-4c77-9bda-80aad68dae0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf913edb-8425-4000-b99a-5f70a86b9e2b",
        "cursor": {
          "ref": "e488f0ac-2153-45a6-96b4-43e92b21ad0c",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8ebad416-9cfa-47c3-883a-bca09838307a"
        },
        "item": {
          "id": "bf913edb-8425-4000-b99a-5f70a86b9e2b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5f6ec18a-dadf-4e00-ad4a-c7e04b03b8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e61649-afe9-4ba6-9920-2b42a5e6cc02",
        "cursor": {
          "ref": "6d697a75-e61a-49e4-92fd-d8efa551bf03",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "012e3f67-b2dc-4791-bf1d-f3265df9521d"
        },
        "item": {
          "id": "87e61649-afe9-4ba6-9920-2b42a5e6cc02",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0592becd-3302-4883-849c-1ea79d2298ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81b592b-d666-42bf-a825-8651f41c2548",
        "cursor": {
          "ref": "fe6b9734-b83e-44e1-92d0-05d1f56ed527",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c9ae164b-db49-42e9-856a-34044f092c39"
        },
        "item": {
          "id": "f81b592b-d666-42bf-a825-8651f41c2548",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fafc421c-54ef-4c47-bcf6-b2ba93c7dee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06111f47-be31-492d-b3aa-af4d89caf932",
        "cursor": {
          "ref": "1e832144-785b-41fd-8546-a439d4b963f5",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "427b9dcd-3521-4fad-940d-504522aaaebd"
        },
        "item": {
          "id": "06111f47-be31-492d-b3aa-af4d89caf932",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8bd1de4f-5521-459e-9091-cd367f51a11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e901ee-4d4c-4f26-9dd7-079b24287c52",
        "cursor": {
          "ref": "f4f15369-f62e-4705-b7a8-267a137be0e9",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b063f20b-f115-48ca-aa14-60788993f1d2"
        },
        "item": {
          "id": "63e901ee-4d4c-4f26-9dd7-079b24287c52",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "27fe2cfd-e0bd-44c6-8c8f-f2a37ddce4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b820aef7-f29b-4b3e-992b-bd913ec5135f",
        "cursor": {
          "ref": "d6be15f2-ad62-4272-82aa-d45f974c880a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "46f97173-a2d6-4856-8044-225ea076a7fb"
        },
        "item": {
          "id": "b820aef7-f29b-4b3e-992b-bd913ec5135f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "806c61f7-28aa-4713-9d93-5b7331581084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba3986-00b9-4676-9ab0-9bb1a744588a",
        "cursor": {
          "ref": "76bd438b-5fb6-41d5-bbc4-c034558bab77",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "101b8758-b379-4d1c-bc21-b9b580d37501"
        },
        "item": {
          "id": "88ba3986-00b9-4676-9ab0-9bb1a744588a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "18bbb949-d66d-406e-a3af-29376d2b4978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71911ff-b472-479b-a30f-82c7eceb52af",
        "cursor": {
          "ref": "201aece7-30f2-4af9-887d-8d95a539aa1d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e168d797-95ad-4c4e-968b-4485a01e4d06"
        },
        "item": {
          "id": "f71911ff-b472-479b-a30f-82c7eceb52af",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ce70cc19-676b-4016-a1f6-ae5129ec28f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964a90ca-28b6-486e-bed1-576091c24765",
        "cursor": {
          "ref": "acae9839-69cc-4603-a52c-80ee02c763ac",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1bd47a44-431c-427a-be9d-b09c70c04c07"
        },
        "item": {
          "id": "964a90ca-28b6-486e-bed1-576091c24765",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f12eb932-08f4-4f3b-99fe-b1700f5a3725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2fa0bc-db77-42c0-ac01-29d7426da080",
        "cursor": {
          "ref": "d1642ac5-ac47-4d53-88b4-0bf090113c8c",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "af30225b-a019-4a1d-8f64-0e623f6c0746"
        },
        "item": {
          "id": "8d2fa0bc-db77-42c0-ac01-29d7426da080",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "135c5d96-e399-4115-ba41-73c1168b94f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff70cc9-6a2b-48fa-9eae-f81618c3c982",
        "cursor": {
          "ref": "729afe7d-fb1b-4458-982d-7e0417c92fef",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "75f459bf-7b62-4717-a0ce-421790246cbe"
        },
        "item": {
          "id": "7ff70cc9-6a2b-48fa-9eae-f81618c3c982",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "21040df9-e3db-406f-8ed5-ae760943166c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6927bbcb-3da7-4f94-a1a8-478061eeafd7",
        "cursor": {
          "ref": "95ec1f39-41fa-404d-92f7-86e95e702259",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4783a716-8bbb-4074-a9e1-b789efe631b5"
        },
        "item": {
          "id": "6927bbcb-3da7-4f94-a1a8-478061eeafd7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "556b5948-bdc9-4802-92be-f8051679e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678127eb-e3ad-4da9-9352-55b8511e7dfb",
        "cursor": {
          "ref": "74ebd6ad-172c-4936-a700-01a691ce2fa0",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f6835bd-2ec6-47f3-88fb-80e024056183"
        },
        "item": {
          "id": "678127eb-e3ad-4da9-9352-55b8511e7dfb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0fbca371-527b-4cc7-bf86-a0deed5178df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208699e1-fba1-4e69-9482-324ab49236d4",
        "cursor": {
          "ref": "57d155dd-486e-4dd6-91a5-72148a5e50e0",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "35e3ba10-30ce-4e74-a629-d8b7730663e6"
        },
        "item": {
          "id": "208699e1-fba1-4e69-9482-324ab49236d4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "662f28af-6e29-4f6e-b8e5-e6aa52d58482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a2d319-178a-4459-859e-865fe411b24b",
        "cursor": {
          "ref": "c48628b1-f4d7-4ad0-809f-ae05c6691e5b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "29a8560c-b0b9-463a-b601-bc2202d2aa66"
        },
        "item": {
          "id": "d1a2d319-178a-4459-859e-865fe411b24b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f9267b7-e7f8-4f7d-b703-80275f1e6b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e29f45-fed3-46d8-a912-c84b2db2b5fc",
        "cursor": {
          "ref": "dce828bb-86da-4465-a11b-2ade6d88421f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "da3a5615-ab4b-4919-a475-3eaec5aacc4a"
        },
        "item": {
          "id": "86e29f45-fed3-46d8-a912-c84b2db2b5fc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b906ec7e-05c9-4ca6-8388-b0aa4615cb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ab3ad8-fe23-4183-824b-07a0ce0a2585",
        "cursor": {
          "ref": "2c76b775-bdd4-4cd6-807f-67e8e1dc0126",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5c649560-c935-4ae8-ac3f-c9cffb52f216"
        },
        "item": {
          "id": "e1ab3ad8-fe23-4183-824b-07a0ce0a2585",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b65256a1-039d-4628-870a-f4152210f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb81810-667a-4b67-a0ef-67114a2ec255",
        "cursor": {
          "ref": "d9e396a5-ccdc-4442-8290-f3ea9425c676",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6934ffe1-cef2-4e3a-b398-2ea68448ce78"
        },
        "item": {
          "id": "7eb81810-667a-4b67-a0ef-67114a2ec255",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5c33d0f9-77f9-47dc-8e0a-6db2baa4e550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9517512c-7b7c-48f9-8437-77584abb141b",
        "cursor": {
          "ref": "c0312d84-d0c1-49ca-814f-a38b29d68401",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "00e4087f-63bf-405b-bcb6-e7d19ffca4b9"
        },
        "item": {
          "id": "9517512c-7b7c-48f9-8437-77584abb141b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "534616a4-fc6b-43c7-b190-020bd020bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a118831-bd53-4393-aa9b-09e45e0cd5f1",
        "cursor": {
          "ref": "09dc7ca8-96d4-4210-ba25-34cf8ee65b71",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d4997d97-383b-4476-a9c7-3c0b8cc8f93f"
        },
        "item": {
          "id": "9a118831-bd53-4393-aa9b-09e45e0cd5f1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "557d55d3-0ff1-4312-9fb5-5384044c1471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4cc65-53e8-4917-b6f6-30e3d406631c",
        "cursor": {
          "ref": "c838e541-7ad8-4133-8248-400a11eb851a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "668eca2b-dadf-4632-86e4-35f27fea3d39"
        },
        "item": {
          "id": "5fc4cc65-53e8-4917-b6f6-30e3d406631c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "10abf968-52bc-4f5f-b996-e03ecf93b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f58112-7bc2-4825-a634-326658ceb0ec",
        "cursor": {
          "ref": "6c8eb820-f1e4-4545-9bc2-23f57f81db3f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0d40523d-47a0-4f0b-8fdf-ba08af39d423"
        },
        "item": {
          "id": "a5f58112-7bc2-4825-a634-326658ceb0ec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ad1cc55d-4094-42e6-8c76-facb0a353f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f61fde6-21e9-421b-8384-6e8ca571eef9",
        "cursor": {
          "ref": "da95f1c0-06a1-4213-b147-5b2f7e1d6a8c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17339db9-1fef-4ecf-aa6a-a7cc36870ccf"
        },
        "item": {
          "id": "5f61fde6-21e9-421b-8384-6e8ca571eef9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "38962e7e-8f7b-4f52-bd38-fbc445a88220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7754edb4-0f57-4d22-a9aa-d09e58cc9c84",
        "cursor": {
          "ref": "f3d72776-08bc-491f-9ccd-7e00e4f61d8f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5a2e2ea7-1ddd-44be-9ad3-3452bd7f0a29"
        },
        "item": {
          "id": "7754edb4-0f57-4d22-a9aa-d09e58cc9c84",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "343b8ee2-f295-4683-82ec-9083785b0e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6475386e-a338-4432-a239-90278f53e10b",
        "cursor": {
          "ref": "736b2441-7f13-43e6-8551-5f3a1a05ffb9",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "46d17509-3155-47e5-9d90-e07fd64f6b36"
        },
        "item": {
          "id": "6475386e-a338-4432-a239-90278f53e10b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "99dee3c8-f948-44f0-9100-6756b5f972b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af732482-855d-4734-ba19-2ba07fcc0587",
        "cursor": {
          "ref": "92a5972a-5d48-4a9a-9bbe-1729f8c1a034",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ff869f06-5bce-4bcd-bfea-6abfcb7a8c51"
        },
        "item": {
          "id": "af732482-855d-4734-ba19-2ba07fcc0587",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bd2e0a7d-0066-485b-920a-e0133d74b154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c9899a-689f-4658-9352-db49da30d3ce",
        "cursor": {
          "ref": "fe22f3c4-83cd-4efd-9f18-760e76924d3c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "22e26aa8-7c90-4b13-8096-21007affdd40"
        },
        "item": {
          "id": "72c9899a-689f-4658-9352-db49da30d3ce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c86e9c77-f5c5-4be9-98c7-9a285410aeee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3967b886-fabc-4b3d-a035-a06042f3fa91",
        "cursor": {
          "ref": "80fdd276-11c3-4fcd-9c27-5f6957bbcfff",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f8d3f7aa-e59d-4344-bddf-c66b3b247f14"
        },
        "item": {
          "id": "3967b886-fabc-4b3d-a035-a06042f3fa91",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0b0b7b8f-fdd9-406c-98d2-7f3fbfaa8b4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 153,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eda426a-6549-4843-82c4-b12d0a0aae2f",
        "cursor": {
          "ref": "e736ee12-9c56-4ee8-9e33-f32b5ddde091",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1648b352-1778-4165-9e19-1aae40e63028"
        },
        "item": {
          "id": "8eda426a-6549-4843-82c4-b12d0a0aae2f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "84bf7d1f-6acf-401d-b71f-7285245c08a0",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d913b626-59e6-48fb-87b8-e72b451c4dc9",
        "cursor": {
          "ref": "568cdb9a-92f1-4281-ab4f-d2a1eac150dd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ea82457-ba70-4176-8731-b6c557ee66bc"
        },
        "item": {
          "id": "d913b626-59e6-48fb-87b8-e72b451c4dc9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "68711676-d696-420c-a9bd-4de09ca4713b",
          "status": "Created",
          "code": 201,
          "responseTime": 198,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74e33b5-cb2d-4ac9-8905-3c70cd8e4058",
        "cursor": {
          "ref": "1e9a5390-db57-4328-a10f-70bfa57a230c",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "981bea2e-bec3-4fe8-9840-84d502790ef5"
        },
        "item": {
          "id": "e74e33b5-cb2d-4ac9-8905-3c70cd8e4058",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f6978bb5-d0c1-4282-81e8-2e03f63b0c04",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "247859fe-890c-446e-830c-2a74b2238725",
        "cursor": {
          "ref": "27672182-4de6-475c-9df5-f1317d218a52",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5af44b45-5698-48db-9e80-5b55df2c4c18"
        },
        "item": {
          "id": "247859fe-890c-446e-830c-2a74b2238725",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "30f1aec1-5b9a-43b0-b535-59fa8b416b81",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c509c803-0eac-4c66-be84-f0987795a698",
        "cursor": {
          "ref": "2e9a7cec-be2d-4602-aa69-5e3063bd2dbc",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cdde7cdd-2b5d-4a77-8082-6a76e856f5f4"
        },
        "item": {
          "id": "c509c803-0eac-4c66-be84-f0987795a698",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5dc56152-ae17-4996-b8c9-f13af2de9a70",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a667f1-63e6-41c0-8a69-ae683735178e",
        "cursor": {
          "ref": "e66e6517-90fc-4fd6-bd09-d4679eab7152",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b1c5712c-5587-4744-8752-203a53f45445"
        },
        "item": {
          "id": "46a667f1-63e6-41c0-8a69-ae683735178e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "aa45c69e-4416-4bf6-a803-38da13e57273",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5d5bd-75df-4034-92f2-fec294aefdfe",
        "cursor": {
          "ref": "ea480eb2-75c1-41c8-837f-3841866e0dfe",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "913a5cf7-c4d8-48ae-a3b5-d4dc832243e4"
        },
        "item": {
          "id": "17f5d5bd-75df-4034-92f2-fec294aefdfe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56466fe8-75f2-4f85-a1d1-dc97541982a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5d5bd-75df-4034-92f2-fec294aefdfe",
        "cursor": {
          "ref": "ea480eb2-75c1-41c8-837f-3841866e0dfe",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "913a5cf7-c4d8-48ae-a3b5-d4dc832243e4"
        },
        "item": {
          "id": "17f5d5bd-75df-4034-92f2-fec294aefdfe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56466fe8-75f2-4f85-a1d1-dc97541982a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffac9d50-7674-4360-b93c-95d0cdc52050",
        "cursor": {
          "ref": "bcc95575-43a6-422e-b7d4-a00ac9564981",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9a8f254f-c3ff-40e0-bb48-2f970ab86a7a"
        },
        "item": {
          "id": "ffac9d50-7674-4360-b93c-95d0cdc52050",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2afb9f1-1669-457f-96da-541405827389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1daddd7-b258-4d4a-a919-3f24366d379b",
        "cursor": {
          "ref": "1b8f6c9b-7419-45ad-a3c2-94937b27a693",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "662300d3-6226-4404-8566-0bc40d9a3c06"
        },
        "item": {
          "id": "f1daddd7-b258-4d4a-a919-3f24366d379b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d0b6c5e0-1b10-4404-8e71-0208f2f95688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c41368-dacb-491c-9266-63f962d3103c",
        "cursor": {
          "ref": "476adac8-cb18-47a4-b878-addeacc1eacf",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "117ef902-fc5e-4025-b263-b196564ea9e3"
        },
        "item": {
          "id": "31c41368-dacb-491c-9266-63f962d3103c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f77a7f51-4380-46f4-bf2d-8ea0ec6e4281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1d1b79-8ad2-4e57-9161-dc59a347733f",
        "cursor": {
          "ref": "6d0fad6b-3773-4ef5-83e8-6b70741e33f4",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5a95db79-3636-4aae-a0cc-9722929b5d03"
        },
        "item": {
          "id": "eb1d1b79-8ad2-4e57-9161-dc59a347733f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c7a105e-1677-4f1e-bd82-cff1d000281a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c309989-25e9-445e-abae-2b5fb05e25fa",
        "cursor": {
          "ref": "5d5aefc2-20a1-4959-823b-8469449e7009",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1813aa88-8448-4e0f-a0c9-e92ca4f0ef42"
        },
        "item": {
          "id": "8c309989-25e9-445e-abae-2b5fb05e25fa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e5f58989-630b-462d-a4f4-a0af3eaad8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bf1ac1-52de-4355-9166-68cc82e0f03c",
        "cursor": {
          "ref": "75b6f6fe-9493-4051-8b9f-08475fb21935",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "772428cc-da01-44fb-8d71-4b1fe276c1f4"
        },
        "item": {
          "id": "f3bf1ac1-52de-4355-9166-68cc82e0f03c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1b150f00-e5c5-45ca-b366-8b692471f439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f53a16-d6c0-4e35-b045-aa9d7a09fd33",
        "cursor": {
          "ref": "399b5f62-c12c-455f-8be4-88f201708b89",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ac2cd215-ae21-489a-a8f5-8211d096264a"
        },
        "item": {
          "id": "26f53a16-d6c0-4e35-b045-aa9d7a09fd33",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3c7d287e-48c5-48aa-a9cf-f5a9756aa42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8f1881-0d04-42f0-81b5-c68206612d9e",
        "cursor": {
          "ref": "5822002a-4eb7-4f50-a3cc-599144a0f53e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7e8d5e58-f8ed-4548-a156-53b4ba681488"
        },
        "item": {
          "id": "5e8f1881-0d04-42f0-81b5-c68206612d9e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d2f34a50-0cd2-485b-b863-69e3456e9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0cd3d6-dca7-4d1d-98cf-32442c63ad72",
        "cursor": {
          "ref": "de43c699-5432-4a13-9b65-fd64b75bf741",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bdd379d4-1fad-40ae-bd1d-8d59b07731c4"
        },
        "item": {
          "id": "8d0cd3d6-dca7-4d1d-98cf-32442c63ad72",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81bc2c9c-cd9b-4a8a-9cbc-a64478d367d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b401c33-96ff-4af2-9b69-6f3e90b9576b",
        "cursor": {
          "ref": "94532e14-18ec-4f78-909a-3ae2910cbb1b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c7e8ff9c-133e-4d9d-a25f-342325b897e9"
        },
        "item": {
          "id": "1b401c33-96ff-4af2-9b69-6f3e90b9576b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d22844ed-978a-4a74-a805-07b8dca343ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318afae3-88c2-4b2e-8922-70b6e206fc1d",
        "cursor": {
          "ref": "4c242d2b-2d51-42ee-b921-01e0027db3d5",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "35d9f18a-28eb-4585-95a1-0843ac944435"
        },
        "item": {
          "id": "318afae3-88c2-4b2e-8922-70b6e206fc1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4118ca7e-ebdf-44b6-a10d-cd5be5348b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f30f11-e2e9-43e8-9991-f13e7f9943fb",
        "cursor": {
          "ref": "39bbb17b-2f15-4e23-8def-e5c2f1fc0fb1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "489b32d2-ba4b-4b60-9da4-a9cac7bac82f"
        },
        "item": {
          "id": "85f30f11-e2e9-43e8-9991-f13e7f9943fb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4105caf3-52d0-48b0-b49f-1995925bd124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc2dcd7-0f47-429c-aece-db416b233d05",
        "cursor": {
          "ref": "9e8a13f2-71da-4467-930b-46f75bfc417f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5c967805-6b6d-4961-a852-687330c89890"
        },
        "item": {
          "id": "5cc2dcd7-0f47-429c-aece-db416b233d05",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7d224096-d84c-483c-9571-0794f66c8902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc059cea-74f1-4991-a92e-23a2af233681",
        "cursor": {
          "ref": "35709623-1345-4182-aac7-194fc2804209",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0f96824c-6683-4049-b4de-8a66c28c2128"
        },
        "item": {
          "id": "dc059cea-74f1-4991-a92e-23a2af233681",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ba722678-073c-49b1-8b54-b293242a0a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaa28e4-fb72-4128-a3b0-70b1a4daf7c3",
        "cursor": {
          "ref": "2b82799c-ddb6-4d81-b210-7efa76189c77",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa5c870a-05fc-49c4-a323-f36fb72558c0"
        },
        "item": {
          "id": "ddaa28e4-fb72-4128-a3b0-70b1a4daf7c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3bd4b279-38bb-4339-b386-6f6c599fd9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275ea605-f3e9-4e82-8f52-e770027b0965",
        "cursor": {
          "ref": "6cf43039-19fd-4031-87b1-1494c828d176",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5ae055fc-1a4e-4b3c-944b-d9e6fbfe0cb0"
        },
        "item": {
          "id": "275ea605-f3e9-4e82-8f52-e770027b0965",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb64bb80-8181-4785-a9c1-aeeb6394d43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d5fea-d5c5-4392-aa1e-36a8bb1d3ed7",
        "cursor": {
          "ref": "3a2ff76e-e3f3-446f-92c3-30889dd59e1b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "17085f13-3d52-4d0d-900b-3e6b3522f8f3"
        },
        "item": {
          "id": "7b5d5fea-d5c5-4392-aa1e-36a8bb1d3ed7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d5c4926e-0ca8-4c12-ac1d-c431fde543ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21d61bf-65d1-4002-b529-c10b26408ef3",
        "cursor": {
          "ref": "3e451216-610d-49a0-ae6b-42b5d48db8b0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca8f087b-b76a-4d21-bd90-14c32ebd3e13"
        },
        "item": {
          "id": "d21d61bf-65d1-4002-b529-c10b26408ef3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "50969096-da52-4669-8808-f1397ae9c9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86fba63-c601-4443-9db0-862acb37a37d",
        "cursor": {
          "ref": "218499bc-e21a-42c8-95f8-9332a656bdcf",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44852d16-f27a-46d5-b96c-16cf9066379a"
        },
        "item": {
          "id": "f86fba63-c601-4443-9db0-862acb37a37d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86b0bdda-bf57-4954-8c0c-9a1be6cb2d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea21119b-8a2d-4a58-8d9d-3f98374f365a",
        "cursor": {
          "ref": "257e7bf8-92fc-43ff-b6c7-66349ccf52c5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "784aa675-e100-4d0f-86e1-dafdfa7d766c"
        },
        "item": {
          "id": "ea21119b-8a2d-4a58-8d9d-3f98374f365a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "408b9dac-92e4-4172-9434-88c5729523c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7501932-b8ab-416c-bb17-032c86cab913",
        "cursor": {
          "ref": "4648173f-e23c-4070-a9de-ad77ca978260",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ed2cb766-9fb7-46cd-ad57-96fff57e5bba"
        },
        "item": {
          "id": "e7501932-b8ab-416c-bb17-032c86cab913",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4dc7510d-40cd-49d0-b55a-8f463ff3455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47790c95-daea-4f1d-ab94-72ad79bffe6a",
        "cursor": {
          "ref": "241e4f83-991a-4834-adba-10c5973f1f6e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "60e4c8dd-cf7a-4a6f-9115-5f382cc13c0a"
        },
        "item": {
          "id": "47790c95-daea-4f1d-ab94-72ad79bffe6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ae9f296a-ed5d-4f25-8041-b0287e45c326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01f629a-1745-4180-98b4-87d2bea34f6d",
        "cursor": {
          "ref": "c07b0aed-73cb-44d9-a80e-dabf5168a1f6",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1477682c-83a9-4829-9fac-a97912626fbe"
        },
        "item": {
          "id": "e01f629a-1745-4180-98b4-87d2bea34f6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "701b8c05-c1ad-4d14-a855-b13e00b01954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a416a2b-52d6-404f-bc7e-1275048d2380",
        "cursor": {
          "ref": "15c224b2-381f-4777-8cad-df3692f3b55b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c9430824-1f1d-42b1-9b51-11645215d088"
        },
        "item": {
          "id": "1a416a2b-52d6-404f-bc7e-1275048d2380",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cbdca57d-8b1f-4496-bb40-ef7e6d5dd716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d846207-4e28-48b9-bcd9-a3069d6c8e89",
        "cursor": {
          "ref": "5eafa2c9-cbf0-468a-b186-3a99d31988ff",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "404a7ce4-26c7-43ab-a63e-2b284237afa3"
        },
        "item": {
          "id": "0d846207-4e28-48b9-bcd9-a3069d6c8e89",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "178d560a-0b7a-43a2-89f7-46ece67ff3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e54863e-e18f-42cb-8462-c9742663ab52",
        "cursor": {
          "ref": "a8ec1d74-129d-4440-a75a-ce7a350afd79",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f10de7f-6555-4786-ae16-c4416b5e9e8f"
        },
        "item": {
          "id": "6e54863e-e18f-42cb-8462-c9742663ab52",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7573a8a5-4634-4a34-9e18-f73e3f1666c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a3ab5d-8006-4986-b68b-b1c7d2f7dbca",
        "cursor": {
          "ref": "cac18a82-e642-4566-b87e-4f5cf16c5654",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b9ace86-f765-446b-a103-06be14b5b975"
        },
        "item": {
          "id": "e2a3ab5d-8006-4986-b68b-b1c7d2f7dbca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d8fcd4b7-565a-41fe-b109-7a0f3c177378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc69f98-c25e-485e-9fa2-b324bf872aaf",
        "cursor": {
          "ref": "481a9224-c2bb-4a29-9d96-1b2e9a16a844",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9b0f8d7b-9250-4d8c-9db8-28b97816096a"
        },
        "item": {
          "id": "acc69f98-c25e-485e-9fa2-b324bf872aaf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8a21c323-1bbc-4c2c-a9b4-4ad1a9e424fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3cc268-007f-4194-a033-fdb8155703eb",
        "cursor": {
          "ref": "7632e1d1-00a1-4b4f-bb87-8c4f8b915a87",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ff86c2c8-4f7e-468e-9ff5-23a2427ec9bf"
        },
        "item": {
          "id": "6c3cc268-007f-4194-a033-fdb8155703eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f512c3bc-4e04-4314-8a66-64c779c9c4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0b3850-b0c8-46a4-af0d-b14be158fdaf",
        "cursor": {
          "ref": "42c1fc4b-a07f-47ff-aa27-5edb3f8a23d3",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4dda5ccc-dec9-45c5-b959-c856b812226a"
        },
        "item": {
          "id": "8d0b3850-b0c8-46a4-af0d-b14be158fdaf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "93bf28b4-3137-417e-830c-c98de02a856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6f1bd3-ad49-4a1d-b06b-4221d062c8bf",
        "cursor": {
          "ref": "1e720e7f-cf1e-43fa-901b-2881dbba4e07",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4e697f92-14eb-4215-852c-7d764e467455"
        },
        "item": {
          "id": "7b6f1bd3-ad49-4a1d-b06b-4221d062c8bf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7243514d-aada-498e-b383-d87b71f1c984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd83dd-c983-4c94-ac8d-b2e0f8690e8a",
        "cursor": {
          "ref": "b2df7308-1750-4477-8bec-a859d8259f25",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "aa954bc2-c511-4c34-bd1f-c63ed2e7ca59"
        },
        "item": {
          "id": "a4cd83dd-c983-4c94-ac8d-b2e0f8690e8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9385733-fb1d-4be1-b7b5-bb7ba64fbea9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cb315-6cc3-4888-a994-50ec65521a7e",
        "cursor": {
          "ref": "02c20dbf-b774-4d16-93e1-6235974f0c4c",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "259d2324-6949-4d4e-b460-a0d3f4cdfa1b"
        },
        "item": {
          "id": "128cb315-6cc3-4888-a994-50ec65521a7e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "08e5f529-d32b-44c2-b4f0-fb522b0401ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f46fcda-6aff-4914-8abd-065c472ee1b0",
        "cursor": {
          "ref": "d70b74e3-1392-4db4-92ee-b334acfcace4",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b31b583d-c149-4620-890b-0172e28b6684"
        },
        "item": {
          "id": "1f46fcda-6aff-4914-8abd-065c472ee1b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "da86715d-63f3-40bd-a5e9-8ca6c1e871c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f46fcda-6aff-4914-8abd-065c472ee1b0",
        "cursor": {
          "ref": "d70b74e3-1392-4db4-92ee-b334acfcace4",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b31b583d-c149-4620-890b-0172e28b6684"
        },
        "item": {
          "id": "1f46fcda-6aff-4914-8abd-065c472ee1b0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "da86715d-63f3-40bd-a5e9-8ca6c1e871c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6accd042-748c-479f-ab7c-f2a8f201a8e3",
        "cursor": {
          "ref": "bbe43210-8e60-4ef0-93d9-0ba4a5572fee",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12b25a72-9ecc-4e2f-a534-d4c7893f1e9a"
        },
        "item": {
          "id": "6accd042-748c-479f-ab7c-f2a8f201a8e3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "45d72b64-59ef-4f53-a61c-44dcf6a209a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecd895c-a500-4fe6-9084-415cb58da494",
        "cursor": {
          "ref": "f0a515b7-f88d-4796-8506-896267196501",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "93b63850-1d3f-4649-baa9-451e91f69fe0"
        },
        "item": {
          "id": "2ecd895c-a500-4fe6-9084-415cb58da494",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4d68f39-fdfc-4e11-87d8-7d50336f6f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae17021-3132-416e-8f7d-2b96b64e84db",
        "cursor": {
          "ref": "6caa12a6-7a4a-4305-bc87-b238335277eb",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2ef23080-e2ba-42a7-9a61-54fb80eed76b"
        },
        "item": {
          "id": "bae17021-3132-416e-8f7d-2b96b64e84db",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b20bc15a-e7d2-43c8-b035-f363eb985948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb320f64-ee04-48db-8b91-4fde1cda4e39",
        "cursor": {
          "ref": "4c3bdef2-550d-44b0-8616-ae992afd0022",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "99399675-f132-440a-a6b5-ed88752f86cd"
        },
        "item": {
          "id": "cb320f64-ee04-48db-8b91-4fde1cda4e39",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d600460f-1820-4c5e-9665-db111821ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15f27c5-503e-4893-9959-5ab948970564",
        "cursor": {
          "ref": "bc96ad74-2ee3-4c01-af79-48f3cadbba9d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1e7f041c-803d-4efe-8849-e3282b273e8d"
        },
        "item": {
          "id": "f15f27c5-503e-4893-9959-5ab948970564",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52e8006a-e922-475d-b4e9-7f8e624b9a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e153d989-93e7-491c-ba41-32e25f03dbe1",
        "cursor": {
          "ref": "58f89da5-60c8-4144-b3f9-675c67478987",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d63bcd80-403d-4409-885b-2f43b7285158"
        },
        "item": {
          "id": "e153d989-93e7-491c-ba41-32e25f03dbe1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9194d999-f9a8-4391-b6f9-269ca5bf157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f146ab5-4325-4d12-a7c9-47d70813d249",
        "cursor": {
          "ref": "823d12fe-c7ba-41be-9981-e2b126cbe4f7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "949b9f3a-c547-4689-a65e-fa754e623c01"
        },
        "item": {
          "id": "1f146ab5-4325-4d12-a7c9-47d70813d249",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "02b4441a-29a0-47f9-8b95-a1d95088e1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed656a1-5003-40e5-8a64-95ae9c5d11b6",
        "cursor": {
          "ref": "9d911b9c-19dc-4921-b53d-7d1dad1623c3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e030fd85-9009-461c-9114-baf7bfc7282f"
        },
        "item": {
          "id": "8ed656a1-5003-40e5-8a64-95ae9c5d11b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62597343-5cbf-4c2b-ae44-c9c157ef32dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea4eff3-9543-4e35-969d-bf455527887b",
        "cursor": {
          "ref": "ae072e0c-cac2-4f52-98bb-135d8f27bf2b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "10f69c4b-673a-428a-bb6d-9d59e49e37ab"
        },
        "item": {
          "id": "5ea4eff3-9543-4e35-969d-bf455527887b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7d9ca812-22d5-4002-bc78-fa269ca18188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbabda3d-0667-4247-85d3-46657eafadf7",
        "cursor": {
          "ref": "7d86e875-69e2-487b-b0a7-87ed3b5115cf",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "786ff050-66fb-4a4e-abc1-f3881f803447"
        },
        "item": {
          "id": "bbabda3d-0667-4247-85d3-46657eafadf7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "68cd5be2-13d6-4417-ac56-51ddf7a19902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c30bb28-425b-4c9e-854e-d4aed491987c",
        "cursor": {
          "ref": "abc4832e-e222-4450-8a54-c29697dd56c9",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dbae0693-0d5f-43cc-b67e-a220ec4da5d3"
        },
        "item": {
          "id": "0c30bb28-425b-4c9e-854e-d4aed491987c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8859b8fe-d4c1-41cb-ba39-2ca451f149a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37adf56-0b30-4f26-bd16-71cbbdbf62ad",
        "cursor": {
          "ref": "b93495db-aa4b-4f9a-a70c-36de29ee3ed1",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "40701c12-7ca2-482c-81e0-dece7615e5f3"
        },
        "item": {
          "id": "c37adf56-0b30-4f26-bd16-71cbbdbf62ad",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "67e12499-9cad-4227-b67e-62e535c1da33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2257993-5048-42bd-ba4b-c52b1dacca0c",
        "cursor": {
          "ref": "9779fc3d-ffc3-4053-b0d7-593cd5131f38",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d09819b2-20c5-4bf2-93d7-6d54ed99677a"
        },
        "item": {
          "id": "f2257993-5048-42bd-ba4b-c52b1dacca0c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "08415a86-58be-4b5e-a3b7-6aed7ec21710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daadf13e-3cec-45c8-9fb4-dffae74df00e",
        "cursor": {
          "ref": "7847fdbc-1988-47c4-87e4-21d170cde6fd",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "28c0470c-e91a-4222-9c31-1e29decf0a3c"
        },
        "item": {
          "id": "daadf13e-3cec-45c8-9fb4-dffae74df00e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8392ad5d-23f2-45a7-8004-69085d77fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73868e6c-fa5b-4115-800c-259e23137d66",
        "cursor": {
          "ref": "a651af30-8c5a-46c0-81d4-b3f6911b7954",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1edba187-2f28-4862-82e9-25848cada9a2"
        },
        "item": {
          "id": "73868e6c-fa5b-4115-800c-259e23137d66",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2da836e-b133-441a-a3e9-884e2510921e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e5ff1e-c63f-4761-863b-e645c798cd53",
        "cursor": {
          "ref": "2ce7e11f-7a14-4480-8bde-dc4e9c868a96",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d322797-f217-40a2-82b1-ad4113b251f6"
        },
        "item": {
          "id": "b6e5ff1e-c63f-4761-863b-e645c798cd53",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "47077242-1f6b-4101-98af-93c6fa7eda6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9477608a-32af-4978-ae14-17d4ff09f5a6",
        "cursor": {
          "ref": "4d4319f7-a950-46d4-a4ba-419337d170e9",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "963f5470-03c7-4dc1-bcf3-797f7c8d9e56"
        },
        "item": {
          "id": "9477608a-32af-4978-ae14-17d4ff09f5a6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e6f24693-6968-41c5-b3b7-1a94418c00e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a825d4-8f4b-4b86-9a6d-abbfb26e6d67",
        "cursor": {
          "ref": "a1b32286-5603-4cfb-a23a-983cf5934523",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb2d0bbb-386d-4ea5-9145-c631fe4f6ebc"
        },
        "item": {
          "id": "b1a825d4-8f4b-4b86-9a6d-abbfb26e6d67",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "685e4a4b-73e0-427d-bb62-2b204ae20709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d7a0db-cf5b-4873-a19e-2b95d26e2612",
        "cursor": {
          "ref": "7195a8b6-5a79-4756-8bb8-5a2b77bbca6f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3fc464d0-1f5a-44fc-814d-5aff61e130bb"
        },
        "item": {
          "id": "98d7a0db-cf5b-4873-a19e-2b95d26e2612",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aedc56c5-57aa-4c7f-a5e0-4b0d033761d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5ee165-9642-43bd-9d3c-341e751383bc",
        "cursor": {
          "ref": "8e66c68d-e601-48b4-b238-35bfe71d808d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "db07c6ea-a6ea-4734-ae47-fc4a8225ab99"
        },
        "item": {
          "id": "fb5ee165-9642-43bd-9d3c-341e751383bc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "09f16b86-ae10-4714-a8fd-14a88a3adef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87dccbe-3a73-4fa9-bfd3-d65aae48360f",
        "cursor": {
          "ref": "46d0aa75-dddd-4e7a-829f-a5f00ca81278",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0581d4f2-b7a5-4ea0-a041-8e2176b1e2a9"
        },
        "item": {
          "id": "e87dccbe-3a73-4fa9-bfd3-d65aae48360f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7220169c-00ee-4a10-9c22-380cc513df36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373c319-d0f7-414c-a1a8-33c488703d18",
        "cursor": {
          "ref": "da02a0f1-418a-4d28-8d48-0871b70a01bd",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7a72489e-dfe1-4f83-9b81-a464d7b67298"
        },
        "item": {
          "id": "7373c319-d0f7-414c-a1a8-33c488703d18",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09b358e9-8bc7-4504-acfc-f61dd7704d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13c16e5-398e-46e6-9b5d-82697928609e",
        "cursor": {
          "ref": "210dbacf-342b-4b59-9d2b-2e40d66fa97e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2c783185-2432-4c87-9139-52499080af48"
        },
        "item": {
          "id": "e13c16e5-398e-46e6-9b5d-82697928609e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ae6fe8f7-6019-4186-abc9-5352282e4286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cdc097-ddc4-4dad-9069-6edfdf9d52a9",
        "cursor": {
          "ref": "c4c886f3-7420-4429-b528-d5c31fb7ece3",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6e3eaf45-a08e-4c04-b38c-5e489d3de892"
        },
        "item": {
          "id": "71cdc097-ddc4-4dad-9069-6edfdf9d52a9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cc6af5e2-0644-4300-8cce-8df1657e20c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335b92b-7732-4fa2-8b63-bc325f6ec83f",
        "cursor": {
          "ref": "d3fe62b9-82e4-46bb-855f-7fea99ceebf4",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3cbb2737-5144-43ad-b53d-8d05fdbe846d"
        },
        "item": {
          "id": "b335b92b-7732-4fa2-8b63-bc325f6ec83f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b6102118-3941-4510-8ee4-8d8c2c21b31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ebc804-a71d-4871-82a0-3f0ff7a8c7f9",
        "cursor": {
          "ref": "a3ad9b03-664a-46c0-a424-c438e3e24f6d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "484b2f7b-7c9b-4a97-8951-4d74ba057ba5"
        },
        "item": {
          "id": "16ebc804-a71d-4871-82a0-3f0ff7a8c7f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "faa6b804-34ad-45a7-aba5-85efaa95610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c8dea3-dbd5-44d7-ad00-fb3b9173b1fd",
        "cursor": {
          "ref": "5420affb-adf0-4b84-aee5-658d1b74726d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "220e0eb7-11f6-4e30-b01f-0f3bd55f2170"
        },
        "item": {
          "id": "92c8dea3-dbd5-44d7-ad00-fb3b9173b1fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "00ea9b92-5e68-4a4e-aac6-b5a1081e7a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88924a6-2b2e-41fd-bd62-28b8017b25cd",
        "cursor": {
          "ref": "6121c0ef-a7ac-4bc9-99ef-9736aea67301",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13b9819e-08ea-43a6-a1bd-964ed2d23176"
        },
        "item": {
          "id": "d88924a6-2b2e-41fd-bd62-28b8017b25cd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9f0bb1af-1f77-4caa-8625-71b71443f3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90833a6-bdc3-494a-a3f0-ddc6239085ff",
        "cursor": {
          "ref": "2d535d73-bcf5-4ba1-bb2d-72447cebd079",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3522c892-edae-4b31-bedf-9c290cf03d4c"
        },
        "item": {
          "id": "f90833a6-bdc3-494a-a3f0-ddc6239085ff",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d78a2c4a-7e62-464a-aeff-6668e46f3137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bd225e-5ae4-433f-bd92-28a269271f04",
        "cursor": {
          "ref": "4f0c020b-1dec-4409-b364-3d0fc68d906f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4ecd9873-55ba-43f4-9125-173694e1a092"
        },
        "item": {
          "id": "a7bd225e-5ae4-433f-bd92-28a269271f04",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7e5853c9-feb8-4106-a38c-bfa18dbe1ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc8e8a1-049a-4312-9548-140dbc8aaa1b",
        "cursor": {
          "ref": "0a466d00-d925-4a56-b6a8-dd2bc0a79307",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3448018f-8145-44cf-9c32-a18c493dbb86"
        },
        "item": {
          "id": "dbc8e8a1-049a-4312-9548-140dbc8aaa1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a2c37720-49b8-4872-a377-6d46da5e7d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760e53ad-d5df-4cd2-ba31-855082f2f186",
        "cursor": {
          "ref": "db884429-1d18-4f98-8f69-9bfa307a58f0",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "acd20b84-ccf3-40c7-9e66-8532f389d7a9"
        },
        "item": {
          "id": "760e53ad-d5df-4cd2-ba31-855082f2f186",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2e9226e3-8a4c-4c96-a315-36a0a95d0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d999d39-4f71-4322-a97f-56efbbe7df9a",
        "cursor": {
          "ref": "69567149-0315-4e0e-9250-15d9abc2356d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e43a8196-301e-4bb0-af58-a244250f01b7"
        },
        "item": {
          "id": "3d999d39-4f71-4322-a97f-56efbbe7df9a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f1f9e9b0-1416-43d6-8159-9741a4662927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa341ce-0c59-4cb3-bf42-77fc7f6efd27",
        "cursor": {
          "ref": "25045ce0-18ad-4224-b1a9-706e02f13f3c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9c5e4c0d-4eca-4641-956a-ca0603243007"
        },
        "item": {
          "id": "7aa341ce-0c59-4cb3-bf42-77fc7f6efd27",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f5adf054-a1fc-4076-8605-8fd2d37fd067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fc6179-ecf5-45f0-8539-bd5a043660e0",
        "cursor": {
          "ref": "6e03b70f-ed1e-49c4-93c3-5d1d36a8228b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f019eeea-de55-44b0-9a42-b983346a2c57"
        },
        "item": {
          "id": "97fc6179-ecf5-45f0-8539-bd5a043660e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "99442aed-8f84-48cc-9d96-9adcfd1fbd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df773da-49fb-4978-83f3-f77c472bf1ff",
        "cursor": {
          "ref": "3b5ba6a0-09a5-4876-9588-088270642bb2",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "78aacc3b-dc6a-41a7-ba04-8ca06d4478c8"
        },
        "item": {
          "id": "9df773da-49fb-4978-83f3-f77c472bf1ff",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bb6fc184-dc62-41ce-8b08-207d13992c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89341cd3-d073-4270-9012-27e3b27aab8c",
        "cursor": {
          "ref": "0dc04693-e501-4d4e-ad42-1035b02db95c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "48acfed5-8271-420c-9770-dc7ef9960cc2"
        },
        "item": {
          "id": "89341cd3-d073-4270-9012-27e3b27aab8c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20daa6db-dc17-4909-ab90-136e90d27134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caab5b9-11ca-4812-8e01-d268561b8c68",
        "cursor": {
          "ref": "4dbd8e0b-c940-4371-b43a-017fce6285b1",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e888f610-c5fb-4668-bcbb-060d74d420cf"
        },
        "item": {
          "id": "2caab5b9-11ca-4812-8e01-d268561b8c68",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1ff86b95-b157-4bb1-9fbf-d03199d57a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944b4a75-5eef-40f4-8e46-e43f8d02e4c5",
        "cursor": {
          "ref": "8e55b885-6e56-4773-a6e5-28dec1ab72fa",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ed6f2fa2-6b15-4ac6-8726-a5f22af4734d"
        },
        "item": {
          "id": "944b4a75-5eef-40f4-8e46-e43f8d02e4c5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3dc86568-d3f1-49e2-8f0f-8b08f709955e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f3663-74e8-4829-973a-bc078f970d80",
        "cursor": {
          "ref": "07f7b418-a676-44e9-9b4b-9bd16dcdaa11",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "af0f3b56-c6e3-45a6-8956-fcd9a09c7c61"
        },
        "item": {
          "id": "da1f3663-74e8-4829-973a-bc078f970d80",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "886ff13f-d133-4692-9c85-30d271e0d05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962e3ae-9423-4a96-9639-566ce39b42f3",
        "cursor": {
          "ref": "a91fe363-5b20-4aee-aad3-8d77b1abd3e6",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0cdd2dc2-e9f3-4a24-b1c7-c06ed447c14e"
        },
        "item": {
          "id": "1962e3ae-9423-4a96-9639-566ce39b42f3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "370867a3-0314-4df1-ac6f-36b60a098956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c679a0d8-1cf9-4a5a-bf9e-1463bc83d25d",
        "cursor": {
          "ref": "0a006754-85d8-4239-b0c2-8bf80e60d77d",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d5b651db-94b8-429e-bac6-744c1a3112d9"
        },
        "item": {
          "id": "c679a0d8-1cf9-4a5a-bf9e-1463bc83d25d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65322f81-4353-4fa0-9831-246eac9ac452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527eec14-86fd-47bd-85b6-9c7a2a0b6bfb",
        "cursor": {
          "ref": "c983e86b-25bd-431c-b457-a540d2430b78",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3c06b609-689d-4a56-b99b-6fb76b5b9e60"
        },
        "item": {
          "id": "527eec14-86fd-47bd-85b6-9c7a2a0b6bfb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e095507-94fe-46d5-bc44-5f31adb1da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf88bd72-8d66-40ce-8e4d-9b8ca4f51f05",
        "cursor": {
          "ref": "84172d0f-3e6d-4b80-9285-eccc4f62e811",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "557402d7-5572-4975-aec9-a9887ceeb445"
        },
        "item": {
          "id": "cf88bd72-8d66-40ce-8e4d-9b8ca4f51f05",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3008a861-f010-41d5-8fbb-543e61bf40c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ba37c7-0024-4ba2-802d-91e22c5b1b23",
        "cursor": {
          "ref": "026a3d3d-2d09-4d44-8df6-7b57600aae36",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b48dced-4eb4-4d6c-8137-66330a754122"
        },
        "item": {
          "id": "92ba37c7-0024-4ba2-802d-91e22c5b1b23",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4e6c51b8-86c5-4fc1-880d-f5d2165c10f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18554e48-dadd-428d-a678-ef7cca862b02",
        "cursor": {
          "ref": "17ddbf8c-12ab-4002-a28a-c6d68bc8e4fd",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6fffadb-2e9f-460f-b973-45ffda80de84"
        },
        "item": {
          "id": "18554e48-dadd-428d-a678-ef7cca862b02",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cf17a0fd-ec1a-4732-aa8c-39d7505cfb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f392c733-3dc8-4cd2-b52e-e31cc9ccd503",
        "cursor": {
          "ref": "4c20fe61-603e-46c9-9d11-d02358336822",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f39ff184-5197-4f26-9525-7d545c38fee1"
        },
        "item": {
          "id": "f392c733-3dc8-4cd2-b52e-e31cc9ccd503",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "40d79fde-495e-418b-9682-30e44e0b68d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781dccee-0a82-43d2-86f8-2070d800c348",
        "cursor": {
          "ref": "9e024fa3-bdd7-4c7f-8472-8fce91a5efa0",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8a0a3b5e-669a-41e9-bc28-543266665a2c"
        },
        "item": {
          "id": "781dccee-0a82-43d2-86f8-2070d800c348",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71c86260-f450-4bab-a71c-52c428d0b61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6953a86-27f0-48f8-b2d4-ef07ad4ce091",
        "cursor": {
          "ref": "06f6ce6b-2011-477b-9cd5-ab3f0e700c54",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4c88fce5-9e3d-4c6d-8126-bcc77fff0194"
        },
        "item": {
          "id": "a6953a86-27f0-48f8-b2d4-ef07ad4ce091",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0fd996b7-81d4-495a-bc17-02b89ae962be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a983c49-f6c4-44c8-a047-08533f55e4b3",
        "cursor": {
          "ref": "4e3b5e4b-938d-4ff6-bec4-a05f7064b981",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "da15b1c3-679e-4126-ab2f-f280a7ee0568"
        },
        "item": {
          "id": "4a983c49-f6c4-44c8-a047-08533f55e4b3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e0f54307-72a6-4146-9715-7bc6f1460429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810306f0-7d93-483c-9623-477c8224ed85",
        "cursor": {
          "ref": "4147b4de-dce2-4a35-b0bf-5782e0d1eb96",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "80e51744-a05b-4166-921b-261ada473203"
        },
        "item": {
          "id": "810306f0-7d93-483c-9623-477c8224ed85",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4dad8d3d-56a2-40a3-bd7c-36d424348d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b040c89b-a913-4976-8c48-33e99f06f91c",
        "cursor": {
          "ref": "ead2ec26-038c-4cc0-89db-febf94ddd43c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a218ad84-92f2-4f66-8a2c-d4600b824527"
        },
        "item": {
          "id": "b040c89b-a913-4976-8c48-33e99f06f91c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f6be8439-0975-4914-ab52-d7e5c6bd12d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6c1002-4f7b-4945-8018-e89de1c21589",
        "cursor": {
          "ref": "bb0960f1-3f3c-41dc-863c-57d659308715",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "360579b1-e146-4cec-840f-708167475278"
        },
        "item": {
          "id": "bc6c1002-4f7b-4945-8018-e89de1c21589",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f825b61-073a-4c49-af6a-9c5b594dad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4da43-7e60-4a92-a8e2-2e54fa6d30c4",
        "cursor": {
          "ref": "7525c4b7-45a2-4329-8452-9772d6aa84e6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6b784cb8-478a-4e6a-8835-c4f2760193ed"
        },
        "item": {
          "id": "9db4da43-7e60-4a92-a8e2-2e54fa6d30c4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "355a4c44-f5c8-41c7-9481-0efe962bc514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5c0072-ec07-4a33-b5a3-fc5dd485acce",
        "cursor": {
          "ref": "77ad52ef-3f8d-4d85-a346-f10c5cdcec03",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dae37cea-2632-476a-a898-883d8d094fb5"
        },
        "item": {
          "id": "2c5c0072-ec07-4a33-b5a3-fc5dd485acce",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75c03b3c-2184-4af9-aa39-6ac8380e1ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618ecc37-ee82-4102-83c5-7be50c79424b",
        "cursor": {
          "ref": "a79b3694-dd68-43ca-8ccc-85971034d5cf",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e2371448-201e-4c5c-b4dd-4c211606dd29"
        },
        "item": {
          "id": "618ecc37-ee82-4102-83c5-7be50c79424b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df2c917f-bb10-4e0b-a710-de03ece525e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9664cc9-ec08-4f8e-8e31-1f1becca958b",
        "cursor": {
          "ref": "9fd1959a-5e23-4cba-9215-9f36907d43a5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9f67df8-7214-4e3b-a525-913d7c33f725"
        },
        "item": {
          "id": "f9664cc9-ec08-4f8e-8e31-1f1becca958b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "883497b0-cbc4-4d28-92f2-a728346d84a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2931ccd-2ab6-4719-8f82-a27ff64b953d",
        "cursor": {
          "ref": "75e3b22c-3814-4ca6-82e2-25f16bb8a0db",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0f077bc8-ae69-4ad4-94c2-a729d24b899b"
        },
        "item": {
          "id": "c2931ccd-2ab6-4719-8f82-a27ff64b953d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dd3ab32c-01af-4f87-b73e-aedd51d64412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6255a4e7-8c2d-42b8-a98b-f4b96421d065",
        "cursor": {
          "ref": "db3a2487-307f-4292-b89a-ab6ae50c560c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4cb3f105-46d7-4b66-b5fe-90672e6be0c6"
        },
        "item": {
          "id": "6255a4e7-8c2d-42b8-a98b-f4b96421d065",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5630cee3-0394-41dd-93c0-b6f2a77e76b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99d0568-e107-442e-aa23-a8e73eadc972",
        "cursor": {
          "ref": "ffa0e2f0-7fd3-457c-ae71-86ed1b325766",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ec31fce3-aaf5-4bf1-b490-3e4dccb411bd"
        },
        "item": {
          "id": "d99d0568-e107-442e-aa23-a8e73eadc972",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "65c8e71a-55d6-4f60-bfd1-847e39397f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48413c2-f02a-44fd-9f43-1a7e13b2dbaf",
        "cursor": {
          "ref": "2b975453-fcb1-47ce-9f90-0641b4562b9c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9cfb0baf-19e2-474d-a759-162cf68813ca"
        },
        "item": {
          "id": "c48413c2-f02a-44fd-9f43-1a7e13b2dbaf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8a182d87-c681-4f26-a669-86e56ae490dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e26fd2-f072-449e-86ef-74dfedcc2d7d",
        "cursor": {
          "ref": "373954d5-c881-48f7-a62f-a38cb5fe2092",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b973c10b-695b-4d2b-90da-1b0f5beed9a6"
        },
        "item": {
          "id": "99e26fd2-f072-449e-86ef-74dfedcc2d7d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5dbbdbda-ad07-4e39-a95a-aebd492e83cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a52408-4fa5-486e-8018-5fd7db5b5ccc",
        "cursor": {
          "ref": "f342e6a8-d791-4388-9624-186a02aeee3f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eddafe86-397c-475c-b3b4-dcecc957f68c"
        },
        "item": {
          "id": "74a52408-4fa5-486e-8018-5fd7db5b5ccc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a4e07ae9-cd74-4720-b85d-272bed5f8953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a3f145-dae6-4998-897c-98ae6c8dc0a6",
        "cursor": {
          "ref": "102539a4-d5da-4dc7-a1b5-c63ce3a6e8af",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4f1083a6-9a8d-4e0f-835f-3a4d35fd6598"
        },
        "item": {
          "id": "b3a3f145-dae6-4998-897c-98ae6c8dc0a6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9468d5b1-35f3-4c11-bd3f-bcf7bfe45c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e04ffa7-8c70-44e4-ba6a-9354d126ea65",
        "cursor": {
          "ref": "0c8ecb5c-4bd2-47c5-91b8-e580bad2cc64",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8dde4ee1-3016-4048-8895-92485dd0482b"
        },
        "item": {
          "id": "0e04ffa7-8c70-44e4-ba6a-9354d126ea65",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b2ee7afd-5c15-4cdd-b4d3-927287541594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80ea3a9-6c80-4408-86c1-11a51e23dbfe",
        "cursor": {
          "ref": "736f2284-cf0e-4b2c-8fdc-687f8c5667a3",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ff8d3f10-99e1-4990-b195-1c8930514d93"
        },
        "item": {
          "id": "b80ea3a9-6c80-4408-86c1-11a51e23dbfe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "acecf036-b710-4a66-bdbf-52885a9295e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86443936-e535-44b6-8a62-78ce42bf41ed",
        "cursor": {
          "ref": "8d8fce43-6b45-407d-acea-5be38176ee71",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "18fbdb2a-afdc-4566-b20a-4915b0591294"
        },
        "item": {
          "id": "86443936-e535-44b6-8a62-78ce42bf41ed",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cc6bd3cf-bb33-484b-815d-4356b42a10ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07cf2e-2d4d-41ce-8488-f943bf012381",
        "cursor": {
          "ref": "6236a4eb-2586-42ca-80c0-8ca9b41d16f4",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b2aefe6-81ee-4fd1-84d3-abeb9347bc93"
        },
        "item": {
          "id": "3f07cf2e-2d4d-41ce-8488-f943bf012381",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ec50d9db-cd57-4f60-a938-52ed0cfeded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4449443-dade-41a6-aa87-afb0893a1a55",
        "cursor": {
          "ref": "95fabfd9-a6f7-41a1-99b4-fd0b735e63e0",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "73f7ac12-0245-425d-b756-b9aa35fd600f"
        },
        "item": {
          "id": "a4449443-dade-41a6-aa87-afb0893a1a55",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "060e5026-cd2f-4281-b671-4e26fc4aaff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd3171d-0003-4d47-b91b-78919a34aafe",
        "cursor": {
          "ref": "5a83593e-14a3-4887-90f6-7c9cd123568a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0894e786-94dd-420f-8885-b45c01bdb967"
        },
        "item": {
          "id": "edd3171d-0003-4d47-b91b-78919a34aafe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "99b48fc5-170f-4ed7-b4e6-2263389c32ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e5026c-0df6-480b-9d4d-becc08139b8d",
        "cursor": {
          "ref": "e9f14dff-22c0-484d-94d4-e4088ce07d1f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "78c5e9e2-c9e4-4a9f-9d06-79785a3915ff"
        },
        "item": {
          "id": "66e5026c-0df6-480b-9d4d-becc08139b8d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9fbf0a42-e47d-4110-b860-6ab1328ad1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be80ef75-3ff2-4302-9470-6438baa39eae",
        "cursor": {
          "ref": "2610d871-905e-4fc8-81e6-398eac60500d",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "97a809fa-f632-46e6-897c-bf4dcf5eaccb"
        },
        "item": {
          "id": "be80ef75-3ff2-4302-9470-6438baa39eae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "310d1aee-4d35-47b9-b9f0-d903ab828862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc21a20c-ac54-4cc8-b3b9-6f682bb740c8",
        "cursor": {
          "ref": "5ba83178-c219-430a-af35-8a567e98e08f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "66c713ef-a639-4611-841a-33aa49b759f6"
        },
        "item": {
          "id": "cc21a20c-ac54-4cc8-b3b9-6f682bb740c8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9b97b72d-ba2c-4084-9b5e-9a74f68a07fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8ab39-fbd9-4c88-a0ae-6313ee681a83",
        "cursor": {
          "ref": "86bef8e6-e7af-4b3a-a2cd-e599bc88ffd5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c2ecbfc-334b-43d9-a542-73791401561f"
        },
        "item": {
          "id": "b5a8ab39-fbd9-4c88-a0ae-6313ee681a83",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "910faabc-a0bc-4003-b97a-c1cc5f3630a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9890995b-9a14-44af-a8fe-4e8dc077c11c",
        "cursor": {
          "ref": "0218d6d4-a863-47f5-90fe-e70f4adad4f1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f406867e-b420-4560-9503-e4354a355503"
        },
        "item": {
          "id": "9890995b-9a14-44af-a8fe-4e8dc077c11c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9212579-b5b5-448e-b07c-e273ad58e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42dd7833-2fdf-418b-b29e-1e0412c84a4e",
        "cursor": {
          "ref": "91050bb4-32f9-4a30-9624-b24de5cfd64b",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "477ed4ff-330e-406d-b344-280102aebe21"
        },
        "item": {
          "id": "42dd7833-2fdf-418b-b29e-1e0412c84a4e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5a67376d-b80c-4fcd-8917-5d3ebc39277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c62d533-0e56-4a3a-a7c0-f8c3dbcb1491",
        "cursor": {
          "ref": "818cd04f-730c-4d1a-b410-eb29b6394c55",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "484cc934-c953-4a30-8719-1413b00a485f"
        },
        "item": {
          "id": "9c62d533-0e56-4a3a-a7c0-f8c3dbcb1491",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b01c6a73-aa55-4214-af82-8dcc1b8e97c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5dbf1b-4d4f-4a7e-b05b-0e934e3961bf",
        "cursor": {
          "ref": "18ea374c-89bd-494e-8623-bf159fd8441d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89cbb8b4-79db-4f0f-851f-43d3c2811da1"
        },
        "item": {
          "id": "cf5dbf1b-4d4f-4a7e-b05b-0e934e3961bf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d209373e-e58a-4b64-a911-7e353ce77eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90487f28-a272-48db-a86d-da211521d448",
        "cursor": {
          "ref": "b728218a-ef35-434a-854f-e3480912d5b6",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c32f6b3-e489-41b7-9978-d93454d9f819"
        },
        "item": {
          "id": "90487f28-a272-48db-a86d-da211521d448",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8d2b6b50-f7d1-4985-89de-988156f91e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf0113-4e3a-451d-b95b-f93c7ccc51e0",
        "cursor": {
          "ref": "086c4b71-b9be-449a-b987-5a37cb5a46a5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e90805c4-000f-4db8-9075-a8d494b9b372"
        },
        "item": {
          "id": "acdf0113-4e3a-451d-b95b-f93c7ccc51e0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2087db44-c1f9-4587-8efa-4814512c180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf99db0-9fd3-4a6e-bfdf-048428dde2af",
        "cursor": {
          "ref": "02ae4769-0f2b-4beb-8fae-4aeaab91aaeb",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "431247cb-f5e2-4f17-bc8d-3fe46ab58e41"
        },
        "item": {
          "id": "ebf99db0-9fd3-4a6e-bfdf-048428dde2af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6a8d4c82-fdc5-4936-bec7-95081c1050fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e043ce4-62c3-4923-9735-db991db76c85",
        "cursor": {
          "ref": "545e17e2-3a65-429f-9a7a-d97a44fe14b2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8a00b698-3486-45e5-9b6d-bed81984484c"
        },
        "item": {
          "id": "0e043ce4-62c3-4923-9735-db991db76c85",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "033dcd03-1b42-417b-99df-df710c5e5794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce67e86-cfca-4041-a112-de29171c913c",
        "cursor": {
          "ref": "e0da4c77-211b-430c-a052-5014a33786a0",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c448d56-6376-45ea-b10b-de2d30430a5f"
        },
        "item": {
          "id": "0ce67e86-cfca-4041-a112-de29171c913c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ed1f274b-4eb3-4976-a506-1b68e1d5a6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b4bb90-0b95-49f7-9e72-bf89f453d784",
        "cursor": {
          "ref": "c1c55923-2493-482f-9454-6067f3b24765",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1ce2375d-ed0f-4468-adeb-9cd1641c418d"
        },
        "item": {
          "id": "62b4bb90-0b95-49f7-9e72-bf89f453d784",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0421989f-280c-4eb8-a872-0273d0776c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906ee3ce-64b2-4bb3-9eab-bf4ad830e555",
        "cursor": {
          "ref": "8091d1a3-9a83-4bdb-8c95-b6b8318cddf2",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7759ea0b-bce7-4a5e-b271-b99ea2393cd1"
        },
        "item": {
          "id": "906ee3ce-64b2-4bb3-9eab-bf4ad830e555",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1d95e407-67c5-467a-b059-541d451abf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5a1ac-f005-40bd-b614-fdf472243321",
        "cursor": {
          "ref": "fc05d9ee-20fb-47f1-b69a-f3ccb83264d8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f6c10cc-56d2-4ff1-a857-34994cb5a894"
        },
        "item": {
          "id": "edd5a1ac-f005-40bd-b614-fdf472243321",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "553b535c-393e-4165-be81-287c1f0892c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df06f723-8b64-49a9-ba20-e4e800ca055f",
        "cursor": {
          "ref": "4fbbc9d7-6aa8-4aa8-8d84-d45e2f081089",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "213ea7cd-aa93-4948-92c6-993f2f8e9200"
        },
        "item": {
          "id": "df06f723-8b64-49a9-ba20-e4e800ca055f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "312519b3-7e6a-4b42-bd2c-1739fe1711a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270d02d0-08f5-4429-bd02-ce935cc5106e",
        "cursor": {
          "ref": "cb63fd84-6889-41e1-b38a-47ce7e52e455",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9b6dd480-2ba0-42af-aa1b-1b2be73d5cf0"
        },
        "item": {
          "id": "270d02d0-08f5-4429-bd02-ce935cc5106e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "977687ce-2a63-4ab7-a067-a649f0490fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68411901-88fb-4e5b-99a9-047cfa2c2891",
        "cursor": {
          "ref": "6800074d-4146-4840-874a-989b91c2bdd7",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8af64fa0-7df4-4933-be17-ca1aec559010"
        },
        "item": {
          "id": "68411901-88fb-4e5b-99a9-047cfa2c2891",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "634ad481-8c7a-4895-ac65-296674112c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936ad848-6cd7-40fb-9ead-325ed1b8bf93",
        "cursor": {
          "ref": "3901e402-68ed-4ea8-b11a-c0afee439af7",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cc9c6c93-f950-4b71-80eb-17f1052af0d5"
        },
        "item": {
          "id": "936ad848-6cd7-40fb-9ead-325ed1b8bf93",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "323dd0d6-f44e-4dd9-ac35-46348c87e942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee4859-db71-4fcf-a9ec-93388f1810d6",
        "cursor": {
          "ref": "4c470287-6593-4bfb-9cc9-3fd62a08d365",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "55effc48-904b-4df9-ae64-ea349d006180"
        },
        "item": {
          "id": "24ee4859-db71-4fcf-a9ec-93388f1810d6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c491e554-4a60-408d-9dda-71afca77bc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5629a1d9-aa75-4490-b514-20f018441147",
        "cursor": {
          "ref": "e77f46eb-3acc-42aa-bc41-52c41f5ebffe",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9e23e47b-9db6-46a7-99a4-e4b5662a66d0"
        },
        "item": {
          "id": "5629a1d9-aa75-4490-b514-20f018441147",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "65cc561d-25dd-4eb2-a045-22606c6c30de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cf0d17-cfe8-4536-96c8-23b8c238d5de",
        "cursor": {
          "ref": "600df852-80ae-46d4-ba20-254b65a11c61",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2140e8d1-fd14-4be9-a1ae-ede672f313fd"
        },
        "item": {
          "id": "70cf0d17-cfe8-4536-96c8-23b8c238d5de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1f53718e-d5f9-42fa-a6c8-dba53b00c127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d157f36a-fda9-4e40-bd39-c87f3f3b7d8a",
        "cursor": {
          "ref": "a3bfd1fd-72df-4f75-998f-0399a1ca0704",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "677cce80-8d3b-416a-8e75-f4e6f352aee9"
        },
        "item": {
          "id": "d157f36a-fda9-4e40-bd39-c87f3f3b7d8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "606a9128-892b-4041-bc6c-71588abbf70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c8bac5-34ae-45c6-aeef-54ef39404df8",
        "cursor": {
          "ref": "1a86a29e-16cf-4ed4-b342-e9d5278534cb",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9f5c1f39-92ed-4aac-ac46-22e3360c9c8e"
        },
        "item": {
          "id": "a4c8bac5-34ae-45c6-aeef-54ef39404df8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "96e289ac-3584-47f9-86da-8f5eea22bdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3688ad01-93b2-4a4a-95f9-543ae3908704",
        "cursor": {
          "ref": "212228c3-5182-4126-a93e-50d87241f64f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "97e95608-9f91-4bbf-accd-702fa1e556c1"
        },
        "item": {
          "id": "3688ad01-93b2-4a4a-95f9-543ae3908704",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81f5fd8d-a147-4746-9990-571d0cc122ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e4da2a-066b-411b-bb19-f85fd144cbfd",
        "cursor": {
          "ref": "aa065293-ecc1-4c8b-b407-9bdb509eab2f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f486419c-2ce9-4f07-809d-5ec83ffd8fba"
        },
        "item": {
          "id": "39e4da2a-066b-411b-bb19-f85fd144cbfd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fbb4c26b-c823-4b40-80fa-24dce2e9b466",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c46f28b-ce38-418f-8e1d-cefe8127e39d",
        "cursor": {
          "ref": "88e414e8-76a9-4dd3-b815-7515651fda05",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8256690c-0e2e-46cd-b1ce-db8f55bf7ffb"
        },
        "item": {
          "id": "9c46f28b-ce38-418f-8e1d-cefe8127e39d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c44eb0a9-c929-4a5d-85f1-76d8db9a015c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f129bbc1-7a81-4d39-9e73-d4d9b3f64b26",
        "cursor": {
          "ref": "1fb2a058-59fd-45ef-883c-9cdefb3020c6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "350b28e2-e1d9-45b2-b5fd-cb3425ea3707"
        },
        "item": {
          "id": "f129bbc1-7a81-4d39-9e73-d4d9b3f64b26",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4b7b3e13-b92a-4283-96a8-d3ae3e41f3b1",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6adfc5e-7fdb-4076-b6cf-dc1400edf2c1",
        "cursor": {
          "ref": "bb12a12b-249d-40ae-8607-0a7adf245205",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd4574ac-825e-416a-9751-e8246ef10270"
        },
        "item": {
          "id": "f6adfc5e-7fdb-4076-b6cf-dc1400edf2c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6a35bba4-398f-42b6-ad10-6e37c4004092",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb218915-1c5c-45ea-b533-a9008d31dfe6",
        "cursor": {
          "ref": "89df50ec-ac10-4c32-b758-6cf4ef33a1ff",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5884e55a-ea59-400b-8f78-db552965144e"
        },
        "item": {
          "id": "cb218915-1c5c-45ea-b533-a9008d31dfe6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "79945680-567f-4daf-9bd6-a79c622f8dc8",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "812f550b-79f3-4049-bd63-269c0f889606",
        "cursor": {
          "ref": "9233da8e-8c6c-463a-8f75-bbd9eacd8b61",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c5bfb36-0798-49a5-8d9d-5acff2dddee2"
        },
        "item": {
          "id": "812f550b-79f3-4049-bd63-269c0f889606",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7f47a6e-9cf4-454a-a2a9-b2870cb518af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812f550b-79f3-4049-bd63-269c0f889606",
        "cursor": {
          "ref": "9233da8e-8c6c-463a-8f75-bbd9eacd8b61",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c5bfb36-0798-49a5-8d9d-5acff2dddee2"
        },
        "item": {
          "id": "812f550b-79f3-4049-bd63-269c0f889606",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7f47a6e-9cf4-454a-a2a9-b2870cb518af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812f550b-79f3-4049-bd63-269c0f889606",
        "cursor": {
          "ref": "9233da8e-8c6c-463a-8f75-bbd9eacd8b61",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c5bfb36-0798-49a5-8d9d-5acff2dddee2"
        },
        "item": {
          "id": "812f550b-79f3-4049-bd63-269c0f889606",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c7f47a6e-9cf4-454a-a2a9-b2870cb518af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f301d49-9514-4303-999e-671e8c615a89",
        "cursor": {
          "ref": "d72fd1e0-ae99-4708-8e50-7dfb381d66bb",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93d1befe-9ac7-4fbc-a98f-acc9a69982c6"
        },
        "item": {
          "id": "1f301d49-9514-4303-999e-671e8c615a89",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c0b80968-5ab3-4df4-b26c-bdfdc516fc89",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606d4c5-f67a-4804-8cb9-44a3b1e10a38",
        "cursor": {
          "ref": "13aefabb-3a01-4448-b7e2-bded733b69cd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e30ba413-9b1d-4752-89ab-ba2c11b1aaf4"
        },
        "item": {
          "id": "2606d4c5-f67a-4804-8cb9-44a3b1e10a38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eaa1bf5f-b30d-4277-a4b0-9a6f09881a36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2606d4c5-f67a-4804-8cb9-44a3b1e10a38",
        "cursor": {
          "ref": "13aefabb-3a01-4448-b7e2-bded733b69cd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e30ba413-9b1d-4752-89ab-ba2c11b1aaf4"
        },
        "item": {
          "id": "2606d4c5-f67a-4804-8cb9-44a3b1e10a38",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eaa1bf5f-b30d-4277-a4b0-9a6f09881a36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791c363a-76bc-43b6-a69d-8c3fa1eea3cb",
        "cursor": {
          "ref": "68698ca1-883e-4cfa-8ca3-accead5d765c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d63e9a80-6f60-45ac-93ad-7d9b33a707ba"
        },
        "item": {
          "id": "791c363a-76bc-43b6-a69d-8c3fa1eea3cb",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "dcb066ae-08dc-43ad-9658-350092f30e01",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec2a474-9c67-4460-82c1-4448a6a58804",
        "cursor": {
          "ref": "588f6baa-b092-4c6e-bdff-32a9766dd142",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "650f7796-3cbf-4ef4-98dd-2eb711f00fd1"
        },
        "item": {
          "id": "1ec2a474-9c67-4460-82c1-4448a6a58804",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "40cdc8f1-33b2-42e6-a929-05ad78cf63d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec2a474-9c67-4460-82c1-4448a6a58804",
        "cursor": {
          "ref": "588f6baa-b092-4c6e-bdff-32a9766dd142",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "650f7796-3cbf-4ef4-98dd-2eb711f00fd1"
        },
        "item": {
          "id": "1ec2a474-9c67-4460-82c1-4448a6a58804",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "40cdc8f1-33b2-42e6-a929-05ad78cf63d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ddca88-09d0-415b-87cb-bb0ffae5067f",
        "cursor": {
          "ref": "8543e7b7-eab6-4608-9c8e-2178d004c3d5",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e3ade17d-7f03-47d9-a9f9-2806ebbe69aa"
        },
        "item": {
          "id": "89ddca88-09d0-415b-87cb-bb0ffae5067f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "40707f6a-8108-44d1-a1ea-b789d0129d61",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}